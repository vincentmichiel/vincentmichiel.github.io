{"version":3,"sources":["../node_modules/ol/CollectionEventType.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/events/EventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/Target.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/Collection.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/has.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/TileState.js","../node_modules/ol/asserts.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/math.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/string.js","../node_modules/ol/coordinate.js","../node_modules/ol/easing.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/proj/utm.js","../node_modules/ol/proj.js","../node_modules/ol/transform.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/View.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Group.js","../node_modules/ol/render/EventType.js","../node_modules/ol/layer/Layer.js","../node_modules/rbush/rbush.min.js","../node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/rgb.js","../node_modules/color-space/hsl.js","../node_modules/color-rgba/index.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/ol/color.js","../node_modules/ol/size.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/ImageState.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/Map.js","../node_modules/ol/Tile.js","../node_modules/ol/DataTile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/TileRange.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid/WMTS.js","../node_modules/ol/tilegrid.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/style.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/Feature.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/Circle.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/geom.js","../node_modules/ol/render/Feature.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/source/Vector.js","../node_modules/ol/Overlay.js","main.js","../../../../../../../opt/homebrew/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../../../opt/homebrew/lib/node_modules/parcel-bundler/src/builtins/css-loader.js","../../../../../../../opt/homebrew/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_default","exports","default","ADD","REMOVE","PROPERTYCHANGE","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","Disposable","_classCallCheck","disposed","_createClass","key","value","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","evt","_Disposable2","_interopRequireDefault","_functions","_obj","_Event","e","__esModule","_typeof","o","Symbol","iterator","constructor","TypeError","_defineProperties","r","t","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","_setPrototypeOf","Target","_Disposable","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","keys","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_EventType","_Target","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_ObjectEventType","_Observable2","_Event2","_util","ObjectEvent","oldValue","BaseObject","_Observable","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","_CollectionEventType","_Object","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","MapEvent","map","frameState","_MapEvent2","_superPropGet","p","_get","_superPropBase","getOwnPropertyDescriptor","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","pixel","getCoordinateFromPixel","coordinate","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","window","_unused","_MapBrowserEvent","_MapBrowserEventType","_Target2","_has","_EventType2","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","IDLE","LOADING","LOADED","EMPTY","assert","assertion","errorMessage","_asserts","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_TileState","_PriorityQueue2","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","has","u","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","log","sqrt","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","j","coef","k","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","floor","ceil","wrap","range","_math","createExtent","extent","onlyCenter","smooth","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","name","from","next","done","return","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","rotation","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","wrapAndSliceX","multiWorld","isFinite","padNumber","number","precision","numberString","decimal","join","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_string","add","delta","closestOnCircle","circle","getRadius","d","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","replace","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","upAndDown","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","getType","transform","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","error","level","setLevel","_console","console","_console2","_console3","unitByCode","fromCode","code","METERS_PER_UNIT","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","_createForOfIteratorHelper","_n","F","s","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","north","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","_iterator","_step","re","match","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","forward","inverse","_coordinate","_epsg","_epsg2","_projections","_transforms","_utm","_sphere","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","sourceProj","destProj","lonLat","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","_iterator2","_step2","intermediateCode","toDestination","composeTransformFuncs","fromSource","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","setFromArray","makeScale","translate","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","invert","makeInverse","det","determinant","matrixPrecision","transformString","transform2D","destinationStride","anchor","anchorX","anchorY","_extent2","_proj","_transform","_transform2","tmpTransform","createTransform","tmpPoint","NaN","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","projTransform","_Geometry2","SimpleGeometry","_Geometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","_SimpleGeometry2","_area","_closest","_deflate","_inflate","_simplify","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","_ViewHint","_ViewProperty","_centerconstraint","_easing","_Polygon","_resolutionconstraint","_rotationconstraint","_common","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","_this$resolutions_","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","appendChild","removeChild","insertBefore","_MapEventType","Control","pointerEvents","target_","listenerKeys","render","setTarget","_this$element","getMap","setMap","_this$element2","_this$target_","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_css","_dom","_Control2","_regeneratorRuntime","asyncIterator","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","arg","GeneratorFunction","GeneratorFunctionPrototype","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","awrap","async","stop","rval","handle","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","some","_layer$getSource","getSource","getAttributionsCollapsible","setCollapsible","_updateElement_","_callee","visible","_callee$","_context","display","all","attribution","innerHTML","updateElement_","_x","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Collection","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ACTIVE","_Property","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","rootNode","activeElement","ShadowRoot","host","focusWithTabindex","tabIndexCandidate","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","_condition","_Pointer","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","getGeometry","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","_options$minArea","_options$condition","_options$boxEndCondit","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","oldMap","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_Kinetic","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","LayerProperty","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","_Base","GroupEvent","LAYERS","LayerGroup","_BaseLayer","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","_View","_readOnlyError","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","clearRenderer","getFeatures","getData","isVisible","_this3","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","inView","_this$getSource","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_colorName","parse","baseHues","cstr","parts","alpha","space","names","base","isShort","exec","dims","trim","parseFloat","endsWith","rgb","channel","alias","_rgb","hsl","t3","_colorParse","_hsl","rgba","color","raw","parsed","xyz","whitepoint","A","C","D50","D55","D65","D75","F2","F7","F11","_xyz","luv","_u","_v","xn","yn","zn","vn","yr","_luv","lchuv","hr","_colorRgba","_lchuv","NO_COLOR","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","num","hasArea","toSize","_color","_size","_parsers","_construct","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_defineProperty","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","featureId","geometryType","mapState","encoded","expectedType","colorFromString","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","message","interpolationType","JSON","stringify","interpolation","needleType","colors","parsedColors","_len2","validators","_key2","parser","computeGeometryType","substring","_expression","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","_ref","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","keyExpression","hasOwn","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","_ImageState","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","ImageState","image_","loader","getImage","getPixelRatio","requestResolution","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","finally","setImage","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","src","unlisten","handleLoad","handleError","decodeFallback","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","getImageState","ready","createPattern","setSize","maxCacheSize","colorString","shared","_Image","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","fillRect","getSrc","_unused2","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","_IconImage","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","_font$split","_font$split2","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","_colorlike","_canvas","RegularShape","_ImageStyle","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","_this$fill_","_iconImageCache$get","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","strokeStyle","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","Fill","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","_options$size","onload","imageSize","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_Circle","_Fill","_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","_this$getRenderer","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","DEFAULT_FILL_COLOR","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_cpu","_Icon","_Style","_Text","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","_rbush","_style","_Layer2","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","setDeclutter","RenderEvent","inversePixelTransform","MapRenderer","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","scheduleExpireIconCache","postRenderFunctions","expireIconCache","_BaseVector","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","container","firstChild","children_","renderedLayerStates","previousElement","layerIndex","sourceState","_MapBrowserEventHandler","_MapProperty","_TileQueue","_defaults","_defaults2","_Group","_EventType3","_Composite","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","targetRoot","targetCandidate","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","Tile","tileCoord","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","inTransition","endTransition","_Tile2","asImageLike","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","disposedError","sharedContext","toArray","defaultSize","DataTile","_Tile","loader_","data_","error_","controller_","controller","imageData","getError","abort","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","TileRange","containsTileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","u2","beginPath","moveTo","clip","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","applyMatrix","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ERROR_THRESHOLD","_reproj","_Triangulation","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceExtents","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","_this2$clipExtent_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","_ref2","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","lastIndexOf","_tileKey$substring$sp2","fromKey","hash","hashZXY","withinExtentAndZ","getFullTileRange","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","maxStaleKeys","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","loadImage","_ZIndexContext","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","_DataTile","_ImageTile","_TileRange","_LRUCache","_tilecoord","sourceKey","addTileToLookup","tilesByZ","existing","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","_CanvasLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","minZ","zDirection","tileCoordIntersectsViewport","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","allTilesIdle","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","uid","tileState","hasStaleTile","coveredByChildren","parentZ","coveredByParent","canvasScale","getInterpolate","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","_TileLayer","_BaseTile","TileLayer","_BaseTileLayer","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","_TileGrid2","WMTSTileGrid","_TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","_WMTS","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","appendParams","uri","params","keyParams","encodeURIComponent","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","pickUrl","urls","expandUrl","url","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","_uri","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","Source","_options$attributions","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","_tilegrid","_Source2","TileSource","_Source","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","gridProjection","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","_tileurlfunction","_TileEventType","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","_TileImage2","XYZ","_TileImage","_XYZ2","ATTRIBUTION","OSM","_XYZ","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","_VectorContext2","_Instruction","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","reverseHitDetectionInstructions","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","linearRingLength","perimeter","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","_length","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","_Executor","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","_loop","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","hasRenderListeners","getSquaredRenderTolerance","_frameState$declutter","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","_VectorLayer","VectorLayer","_BaseVectorLayer","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","bbox","extents","Feature","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","setCenterAndRadius","getRadiusSquared_","circleExtent","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometries","setGeometriesArray","_interpolate","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","_this$flatMidpoint_","_LineString","MultiLineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","_MultiPoint","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_GeometryCollection","_MultiLineString","_MultiPolygon","_Feature","_geom","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","_this$ends_","enableSimplifyTransformed","toGeometry","toFeature","geometryName","maxEntries","rbush_","RBush_","items_","items","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","_featureloader","_loadingstrategy","_RBush","_VectorEventType","VectorSourceEvent","VectorSource","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","_this4","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","_this5","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","_this6","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setOverlaps","ELEMENT","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","_OSM","_Vector","_Vector2","_Overlay","poiCoords","poiFeature","poiSource","poiLayer","popupElement","borderRadius","boxShadow","popupOverlay","getDistanceMeters","_coord","_coord2","lon2","toRad","dLat","dLon","userLocationSource","userLocationLayer","updateUserLocation","userLocation","geolocation","watchPosition","enableHighAccuracy","maximumAge","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","bundle","updateLink","link","newLink","cloneNode","href","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AqMAA,IAAIqxI,SAAS,GAAG,IAAI;AACpB,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,IAAI,CAACD,SAAS,EAAE;IACdA,SAAS,GAAGE,YAAY,CAAC,CAAC;EAC5B;EAEA,OAAOF,SAAS;AAClB;AAEA,SAASE,YAAYA,CAAA,EAAG;EACtB;EACA,IAAI;IACF,MAAM,IAAInkI,KAAK,CAAD,CAAC;EACjB,CAAC,CAAC,OAAOhH,GAAG,EAAE;IACZ,IAAIusF,OAAO,GAAG,CAAC,EAAE,GAAGvsF,GAAG,CAACs+B,KAAK,EAAE7N,KAAK,CAAC,+DAA+D,CAAC;IACrG,IAAI87D,OAAO,EAAE;MACX,OAAO6+C,UAAU,CAAC7+C,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF;EAEA,OAAO,GAAG;AACZ;AAEA,SAAS6+C,UAAUA,CAAC34B,GAAG,EAAE;EACvB,OAAO,CAAC,EAAE,GAAGA,GAAG,EAAE9tF,OAAO,CAAC,gFAAgF,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH;AAEA9qB,OAAO,CAACsxI,YAAY,GAAGD,kBAAkB;AACzCrxI,OAAO,CAACuxI,UAAU,GAAGA,UAAU;;AC5B/B,IAAIC,MAAM,GAAGxsI,OAAO,CAAC,cAAc,CAAC;AAEpC,SAASysI,UAAUA,CAACC,IAAI,EAAE;EACxB,IAAIC,OAAO,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC;EAC9BD,OAAO,CAACnuD,MAAM,GAAG,YAAY;IAC3BkuD,IAAI,CAAC9tI,MAAM,CAAC,CAAC;EACf,CAAC;EACD+tI,OAAO,CAACE,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAC5oH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGwnB,IAAI,CAACC,GAAG,CAAC,CAAC;EACzDghG,IAAI,CAACn2F,UAAU,CAACa,YAAY,CAACu1F,OAAO,EAAED,IAAI,CAACI,WAAW,CAAC;AACzD;AAEA,IAAIC,UAAU,GAAG,IAAI;AACrB,SAASC,SAASA,CAAA,EAAG;EACnB,IAAID,UAAU,EAAE;IACd;EACF;EAEAA,UAAU,GAAGv7H,UAAU,CAAC,YAAY;IAClC,IAAIy7H,KAAK,GAAG/3F,QAAQ,CAACg4F,gBAAgB,CAAC,wBAAwB,CAAC;IAC/D,KAAK,IAAIjvI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgvI,KAAK,CAAC1vI,MAAM,EAAEU,CAAC,EAAE,EAAE;MACrC,IAAIuuI,MAAM,CAACD,UAAU,CAACU,KAAK,CAAChvI,CAAC,CAAC,CAAC4uI,IAAI,CAAC,KAAKL,MAAM,CAACF,YAAY,CAAC,CAAC,EAAE;QAC9DG,UAAU,CAACQ,KAAK,CAAChvI,CAAC,CAAC,CAAC;MACtB;IACF;IAEA8uI,UAAU,GAAG,IAAI;EACnB,CAAC,EAAE,EAAE,CAAC;AACR;AAEAI,MAAM,CAACnyI,OAAO,GAAGgyI,SAAS;;;;;;;;;;;;AtM7B1B;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAjyI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACEC,GAAG,EAAE,KAAK;EACV;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE;AACV,CAAC;;;;;;;;ACpBD;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAJ,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACEG,cAAc,EAAE;AAClB,CAAC;AAED;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAAAL,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIe;EACb;AACF;AACA;AACA;AACA;EACEI,MAAM,EAAE,QAAQ;EAEhB;AACF;AACA;AACA;AACA;EACEC,KAAK,EAAE,OAAO;EAEdC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,aAAa;EAC1BC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE;AACT,CAAC;;;;;;;;;;;;;;ACtCD;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAIMC,UAAU;EACd,SAAAA,WAAA,EAAc;IAAAC,eAAA,OAAAD,UAAA;IACZ;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACE,QAAQ,GAAG,KAAK;EACvB;;EAEA;AACF;AACA;EAFE,OAAAC,YAAA,CAAAH,UAAA;IAAAI,GAAA;IAAAC,KAAA,EAGA,SAAAC,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACK,eAAe,CAAC,CAAC;MACxB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAH,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG,CAAC;EAAC;AAAA;AAAA,IAAA9B,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGPqB,UAAU;;;;;;;;;;;;;;;;;ACnCzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,YAAYA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAE;EACzD,IAAIC,GAAG,EAAEC,GAAG;EACZF,UAAU,GAAGA,UAAU,IAAIG,SAAS;EACpC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,IAAI,GAAGP,QAAQ,CAACQ,MAAM;EAC1B,IAAIC,KAAK,GAAG,KAAK;EAEjB,OAAOH,GAAG,GAAGC,IAAI,EAAE;IACjB;AACJ;IACIJ,GAAG,GAAGG,GAAG,IAAKC,IAAI,GAAGD,GAAG,IAAK,CAAC,CAAC;IAC/BF,GAAG,GAAG,CAACF,UAAU,CAACF,QAAQ,CAACG,GAAG,CAAC,EAAEF,MAAM,CAAC;IAExC,IAAIG,GAAG,GAAG,GAAG,EAAE;MACb;MACAE,GAAG,GAAGH,GAAG,GAAG,CAAC;IACf,CAAC,MAAM;MACL;MACAI,IAAI,GAAGJ,GAAG;MACVM,KAAK,GAAG,CAACL,GAAG;IACd;EACF;;EAEA;EACA,OAAOK,KAAK,GAAGH,GAAG,GAAG,CAACA,GAAG;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASD,SAASA,CAACK,CAAC,EAAEC,CAAC,EAAE;EAC9B,OAAOD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACF,CAAC,EAAEC,CAAC,EAAE;EAC/B,OAAOD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,iBAAiBA,CAACC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAE;EACxD,IAAIF,GAAG,CAAC,CAAC,CAAC,IAAIC,MAAM,EAAE;IACpB,OAAO,CAAC;EACV;EAEA,IAAME,CAAC,GAAGH,GAAG,CAACN,MAAM;EACpB,IAAIO,MAAM,IAAID,GAAG,CAACG,CAAC,GAAG,CAAC,CAAC,EAAE;IACxB,OAAOA,CAAC,GAAG,CAAC;EACd;EAEA,IAAI,OAAOD,SAAS,KAAK,UAAU,EAAE;IACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAE,EAAEC,CAAC,EAAE;MAC1B,IAAMC,SAAS,GAAGL,GAAG,CAACI,CAAC,CAAC;MACxB,IAAIC,SAAS,KAAKJ,MAAM,EAAE;QACxB,OAAOG,CAAC;MACV;MACA,IAAIC,SAAS,GAAGJ,MAAM,EAAE;QACtB,IAAIC,SAAS,CAACD,MAAM,EAAED,GAAG,CAACI,CAAC,GAAG,CAAC,CAAC,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE;UAChD,OAAOD,CAAC,GAAG,CAAC;QACd;QACA,OAAOA,CAAC;MACV;IACF;IACA,OAAOD,CAAC,GAAG,CAAC;EACd;EAEA,IAAID,SAAS,GAAG,CAAC,EAAE;IACjB,KAAK,IAAIE,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGD,CAAC,EAAE,EAAEC,EAAC,EAAE;MAC1B,IAAIJ,GAAG,CAACI,EAAC,CAAC,GAAGH,MAAM,EAAE;QACnB,OAAOG,EAAC,GAAG,CAAC;MACd;IACF;IACA,OAAOD,CAAC,GAAG,CAAC;EACd;EAEA,IAAID,SAAS,GAAG,CAAC,EAAE;IACjB,KAAK,IAAIE,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGD,CAAC,EAAE,EAAEC,GAAC,EAAE;MAC1B,IAAIJ,GAAG,CAACI,GAAC,CAAC,IAAIH,MAAM,EAAE;QACpB,OAAOG,GAAC;MACV;IACF;IACA,OAAOD,CAAC,GAAG,CAAC;EACd;EAEA,KAAK,IAAIC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGD,CAAC,EAAE,EAAEC,GAAC,EAAE;IAC1B,IAAIJ,GAAG,CAACI,GAAC,CAAC,IAAIH,MAAM,EAAE;MACpB,OAAOG,GAAC;IACV;IACA,IAAIJ,GAAG,CAACI,GAAC,CAAC,GAAGH,MAAM,EAAE;MACnB,IAAID,GAAG,CAACI,GAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,GAAGA,MAAM,GAAGD,GAAG,CAACI,GAAC,CAAC,EAAE;QACzC,OAAOA,GAAC,GAAG,CAAC;MACd;MACA,OAAOA,GAAC;IACV;EACF;EACA,OAAOD,CAAC,GAAG,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASG,eAAeA,CAACN,GAAG,EAAEO,KAAK,EAAEC,GAAG,EAAE;EAC/C,OAAOD,KAAK,GAAGC,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAGT,GAAG,CAACO,KAAK,CAAC;IACtBP,GAAG,CAACO,KAAK,CAAC,GAAGP,GAAG,CAACQ,GAAG,CAAC;IACrBR,GAAG,CAACQ,GAAG,CAAC,GAAGC,GAAG;IACd,EAAEF,KAAK;IACP,EAAEC,GAAG;EACP;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,MAAMA,CAACV,GAAG,EAAEW,IAAI,EAAE;EAChC,IAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;EACrD,IAAMjB,MAAM,GAAGkB,SAAS,CAAClB,MAAM;EAC/B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;IAC/BJ,GAAG,CAACA,GAAG,CAACN,MAAM,CAAC,GAAGkB,SAAS,CAACR,CAAC,CAAC;EAChC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASW,MAAMA,CAACf,GAAG,EAAEgB,GAAG,EAAE;EAC/B,IAAMZ,CAAC,GAAGJ,GAAG,CAACiB,OAAO,CAACD,GAAG,CAAC;EAC1B,IAAMrB,KAAK,GAAGS,CAAC,GAAG,CAAC,CAAC;EACpB,IAAIT,KAAK,EAAE;IACTK,GAAG,CAACkB,MAAM,CAACd,CAAC,EAAE,CAAC,CAAC;EAClB;EACA,OAAOT,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASwB,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACjC,IAAMC,IAAI,GAAGF,IAAI,CAAC1B,MAAM;EACxB,IAAI4B,IAAI,KAAKD,IAAI,CAAC3B,MAAM,EAAE;IACxB,OAAO,KAAK;EACd;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,IAAI,EAAElB,CAAC,EAAE,EAAE;IAC7B,IAAIgB,IAAI,CAAChB,CAAC,CAAC,KAAKiB,IAAI,CAACjB,CAAC,CAAC,EAAE;MACvB,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmB,UAAUA,CAACvB,GAAG,EAAEwB,UAAU,EAAE;EAC1C,IAAM9B,MAAM,GAAGM,GAAG,CAACN,MAAM;EACzB,IAAMe,GAAG,GAAGI,KAAK,CAACb,GAAG,CAACN,MAAM,CAAC;EAC7B,IAAIU,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;IAC3BK,GAAG,CAACL,CAAC,CAAC,GAAG;MAACqB,KAAK,EAAErB,CAAC;MAAEtB,KAAK,EAAEkB,GAAG,CAACI,CAAC;IAAC,CAAC;EACpC;EACAK,GAAG,CAACiB,IAAI,CAAC,UAAU9B,CAAC,EAAEC,CAAC,EAAE;IACvB,OAAO2B,UAAU,CAAC5B,CAAC,CAACd,KAAK,EAAEe,CAAC,CAACf,KAAK,CAAC,IAAIc,CAAC,CAAC6B,KAAK,GAAG5B,CAAC,CAAC4B,KAAK;EAC1D,CAAC,CAAC;EACF,KAAKrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACN,MAAM,EAAEU,CAAC,EAAE,EAAE;IAC/BJ,GAAG,CAACI,CAAC,CAAC,GAAGK,GAAG,CAACL,CAAC,CAAC,CAACtB,KAAK;EACvB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6C,QAAQA,CAAC3B,GAAG,EAAE4B,IAAI,EAAEC,MAAM,EAAE;EAC1C,IAAMC,OAAO,GAAGF,IAAI,IAAIrC,SAAS;EACjC,OAAOS,GAAG,CAAC+B,KAAK,CAAC,UAAUC,UAAU,EAAEP,KAAK,EAAE;IAC5C,IAAIA,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,IAAI;IACb;IACA,IAAMQ,GAAG,GAAGH,OAAO,CAAC9B,GAAG,CAACyB,KAAK,GAAG,CAAC,CAAC,EAAEO,UAAU,CAAC;IAC/C,OAAO,EAAEC,GAAG,GAAG,CAAC,IAAKJ,MAAM,IAAII,GAAG,KAAK,CAAE,CAAC;EAC5C,CAAC,CAAC;AACJ;;;;;;;;;;;;AC7OA,IAAAC,MAAA,GAAAC,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACO,SAASC,IAAIA,CAAA,EAAG;EACrB,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAAA,EAAG;EACtB,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,IAAIA,CAAA,EAAG,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACC,EAAE,EAAE;EAC7B;EACA,IAAIC,UAAU;;EAEd;EACA,IAAIC,QAAQ;EAEZ,IAAIC,QAAQ;;EAEZ;AACF;AACA;AACA;EACE,OAAO,YAAY;IACjB,IAAMC,QAAQ,GAAG/B,KAAK,CAACgC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;IACtD,IAAI,CAACN,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,CAAC,IAAAM,aAAW,EAACL,QAAQ,EAAEF,QAAQ,CAAC,EAAE;MACtEC,QAAQ,GAAG,IAAI;MACfD,QAAQ,GAAGE,QAAQ;MACnBH,UAAU,GAAGD,EAAE,CAACU,KAAK,CAAC,IAAI,EAAEF,SAAS,CAAC;IACxC;IACA,OAAOP,UAAU;EACnB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASU,SAASA,CAACC,MAAM,EAAE;EAChC,SAASC,aAAaA,CAAA,EAAG;IACvB,IAAIvE,KAAK;IACT,IAAI;MACFA,KAAK,GAAGsE,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;IAC5B;IACA,IAAIxE,KAAK,YAAYyE,OAAO,EAAE;MAC5B,OAAOzE,KAAK;IACd;IACA,OAAOyE,OAAO,CAACE,OAAO,CAAC3E,KAAK,CAAC;EAC/B;EACA,OAAOuE,aAAa,CAAC,CAAC;AACxB;;;;;;;;;ACjFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASK,KAAKA,CAACC,MAAM,EAAE;EAC5B,KAAK,IAAMC,QAAQ,IAAID,MAAM,EAAE;IAC7B,OAAOA,MAAM,CAACC,QAAQ,CAAC;EACzB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,OAAOA,CAACF,MAAM,EAAE;EAC9B,IAAIC,QAAQ;EACZ,KAAKA,QAAQ,IAAID,MAAM,EAAE;IACvB,OAAO,KAAK;EACd;EACA,OAAO,CAACC,QAAQ;AAClB;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUME,SAAS;EACb;AACF;AACA;EACE,SAAAA,UAAYC,IAAI,EAAE;IAAArF,eAAA,OAAAoF,SAAA;IAChB;AACJ;AACA;IACI,IAAI,CAACE,kBAAkB;;IAEvB;AACJ;AACA;IACI,IAAI,CAACC,gBAAgB;;IAErB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACF,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAAC9D,MAAM,GAAG,IAAI;EACpB;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAArB,YAAA,CAAAkF,SAAA;IAAAjF,GAAA;IAAAC,KAAA,EAKA,SAAAoF,cAAcA,CAAA,EAAG;MACf,IAAI,CAACD,gBAAgB,GAAG,IAAI;IAC9B;;IAEA;AACF;AACA;AACA;EAHE;IAAApF,GAAA;IAAAC,KAAA,EAIA,SAAAqF,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACH,kBAAkB,GAAG,IAAI;IAChC;EAAC;AAAA;AAGH;AACA;AACA;AACO,SAASG,eAAeA,CAACC,GAAG,EAAE;EACnCA,GAAG,CAACD,eAAe,CAAC,CAAC;AACvB;;AAEA;AACA;AACA;AACO,SAASD,cAAcA,CAACE,GAAG,EAAE;EAClCA,GAAG,CAACF,cAAc,CAAC,CAAC;AACtB;AAAC,IAAAhH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc0G,SAAS;;;;;;;;ACzExB,IAAAO,YAAA,GAAAC,sBAAA,CAAAnC,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAAsC,MAAA,GAAAH,sBAAA,CAAAnC,OAAA;AAA+B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAN/B;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAeMsC,MAAM,0BAAAC,WAAA;EACV;AACF;AACA;EACE,SAAAD,OAAY/G,MAAM,EAAE;IAAA,IAAAiH,KAAA;IAAAxI,eAAA,OAAAsI,MAAA;IAClBE,KAAA,GAAAnB,UAAA,OAAAiB,MAAA;;IAEA;AACJ;AACA;AACA;IACIE,KAAA,CAAKC,YAAY,GAAGlH,MAAM;;IAE1B;AACJ;AACA;AACA;IACIiH,KAAA,CAAKE,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACIF,KAAA,CAAKG,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACIH,KAAA,CAAKI,UAAU,GAAG,IAAI;IAAC,OAAAJ,KAAA;EACzB;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAG,MAAA,EAAAC,WAAA;EAAA,OAAArI,YAAA,CAAAoI,MAAA;IAAAnI,GAAA;IAAAC,KAAA,EAIA,SAAAyI,gBAAgBA,CAACxD,IAAI,EAAEyD,QAAQ,EAAE;MAC/B,IAAI,CAACzD,IAAI,IAAI,CAACyD,QAAQ,EAAE;QACtB;MACF;MACA,IAAMC,SAAS,GAAG,IAAI,CAACH,UAAU,KAAK,IAAI,CAACA,UAAU,GAAG,CAAC,CAAC,CAAC;MAC3D,IAAMI,gBAAgB,GAAGD,SAAS,CAAC1D,IAAI,CAAC,KAAK0D,SAAS,CAAC1D,IAAI,CAAC,GAAG,EAAE,CAAC;MAClE,IAAI,CAAC2D,gBAAgB,CAACC,QAAQ,CAACH,QAAQ,CAAC,EAAE;QACxCE,gBAAgB,CAACE,IAAI,CAACJ,QAAQ,CAAC;MACjC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA3I,GAAA;IAAAC,KAAA,EAUA,SAAA+I,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAMC,QAAQ,GAAG,OAAOD,KAAK,KAAK,QAAQ;MAC1C,IAAM/D,IAAI,GAAGgE,QAAQ,GAAGD,KAAK,GAAGA,KAAK,CAAC/D,IAAI;MAC1C,IAAM0D,SAAS,GAAG,IAAI,CAACH,UAAU,IAAI,IAAI,CAACA,UAAU,CAACvD,IAAI,CAAC;MAC1D,IAAI,CAAC0D,SAAS,EAAE;QACd;MACF;MAEA,IAAMrD,GAAG,GAAG2D,QAAQ,GAAG,IAAIC,cAAK,CAACF,KAAK,CAAC,IAAG,oBAAsBA,KAAK,CAAC;MACtE,IAAI,CAAC1D,GAAG,CAACnE,MAAM,EAAE;QACfmE,GAAG,CAACnE,MAAM,GAAG,IAAI,CAACkH,YAAY,IAAI,IAAI;MACxC;MACA,IAAMc,WAAW,GAAG,IAAI,CAACZ,YAAY,KAAK,IAAI,CAACA,YAAY,GAAG,CAAC,CAAC,CAAC;MACjE,IAAMa,eAAe,GACnB,IAAI,CAACd,gBAAgB,KAAK,IAAI,CAACA,gBAAgB,GAAG,CAAC,CAAC,CAAC;MACvD,IAAI,EAAErD,IAAI,IAAIkE,WAAW,CAAC,EAAE;QAC1BA,WAAW,CAAClE,IAAI,CAAC,GAAG,CAAC;QACrBmE,eAAe,CAACnE,IAAI,CAAC,GAAG,CAAC;MAC3B;MACA,EAAEkE,WAAW,CAAClE,IAAI,CAAC;MACnB,IAAIoE,SAAS;MACb,KAAK,IAAI/H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGX,SAAS,CAAC/H,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAClD,IAAI,aAAa,IAAIqH,SAAS,CAACrH,CAAC,CAAC,EAAE;UACjC+H,SAAS,GAAG,oDACVV,SAAS,CAACrH,CAAC,CAAC,CACZiI,WAAW,CAACjE,GAAG,CAAC;QACpB,CAAC,MAAM;UACL+D,SAAS,GAAG,sDACVV,SAAS,CAACrH,CAAC,CAAC,CACZ2C,IAAI,CAAC,IAAI,EAAEqB,GAAG,CAAC;QACnB;QACA,IAAI+D,SAAS,KAAK,KAAK,IAAI/D,GAAG,CAACJ,kBAAkB,EAAE;UACjDmE,SAAS,GAAG,KAAK;UACjB;QACF;MACF;MACA,IAAI,EAAEF,WAAW,CAAClE,IAAI,CAAC,KAAK,CAAC,EAAE;QAC7B,IAAIuE,EAAE,GAAGJ,eAAe,CAACnE,IAAI,CAAC;QAC9B,OAAOmE,eAAe,CAACnE,IAAI,CAAC;QAC5B,OAAOuE,EAAE,EAAE,EAAE;UACX,IAAI,CAACC,mBAAmB,CAACxE,IAAI,EAAEzB,eAAI,CAAC;QACtC;QACA,OAAO2F,WAAW,CAAClE,IAAI,CAAC;MAC1B;MACA,OAAOoE,SAAS;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAAtJ,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACsI,UAAU,IAAI,IAAA5D,UAAK,EAAC,IAAI,CAAC4D,UAAU,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAzI,GAAA;IAAAC,KAAA,EAOA,SAAA0J,YAAYA,CAACzE,IAAI,EAAE;MACjB,OAAQ,IAAI,CAACuD,UAAU,IAAI,IAAI,CAACA,UAAU,CAACvD,IAAI,CAAC,IAAK0E,SAAS;IAChE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5J,GAAA;IAAAC,KAAA,EAKA,SAAA4J,WAAWA,CAAC3E,IAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAACuD,UAAU,EAAE;QACpB,OAAO,KAAK;MACd;MACA,OAAOvD,IAAI,GACPA,IAAI,IAAI,IAAI,CAACuD,UAAU,GACvB9B,MAAM,CAACmD,IAAI,CAAC,IAAI,CAACrB,UAAU,CAAC,CAAC5H,MAAM,GAAG,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;EAHE;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAyJ,mBAAmBA,CAACxE,IAAI,EAAEyD,QAAQ,EAAE;MAClC,IAAI,CAAC,IAAI,CAACF,UAAU,EAAE;QACpB;MACF;MACA,IAAMG,SAAS,GAAG,IAAI,CAACH,UAAU,CAACvD,IAAI,CAAC;MACvC,IAAI,CAAC0D,SAAS,EAAE;QACd;MACF;MACA,IAAMhG,KAAK,GAAGgG,SAAS,CAACxG,OAAO,CAACuG,QAAQ,CAAC;MACzC,IAAI/F,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,IAAI,CAAC2F,gBAAgB,IAAIrD,IAAI,IAAI,IAAI,CAACqD,gBAAgB,EAAE;UAC1D;UACAK,SAAS,CAAChG,KAAK,CAAC,GAAGa,eAAI;UACvB,EAAE,IAAI,CAAC8E,gBAAgB,CAACrD,IAAI,CAAC;QAC/B,CAAC,MAAM;UACL0D,SAAS,CAACvG,MAAM,CAACO,KAAK,EAAE,CAAC,CAAC;UAC1B,IAAIgG,SAAS,CAAC/H,MAAM,KAAK,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC4H,UAAU,CAACvD,IAAI,CAAC;UAC9B;QACF;MACF;IACF;EAAC;AAAA,EAlKkBtF,oBAAU;AAAA,IAAAvB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAqKhB4J,MAAM;;;;;;;;;;AC7LrB,IAAAxC,IAAA,GAAArC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyG,MAAMA,CAAC3I,MAAM,EAAE8D,IAAI,EAAEyD,SAAQ,EAAEqB,OAAO,EAAEC,IAAI,EAAE;EAC5D,IAAIA,IAAI,EAAE;IACR,IAAMC,gBAAgB,GAAGvB,SAAQ;IACjC;AACJ;AACA;AACA;AACA;IACIA,SAAQ,GAAG,SAAXA,QAAQA,CAAaM,KAAK,EAAE;MAC1B7H,MAAM,CAACsI,mBAAmB,CAACxE,IAAI,EAAEyD,SAAQ,CAAC;MAC1C,OAAOuB,gBAAgB,CAAChG,IAAI,CAAC8F,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,IAAI,EAAEf,KAAK,CAAC;IACtD,CAAC;EACH,CAAC,MAAM,IAAIe,OAAO,IAAIA,OAAO,KAAK5I,MAAM,EAAE;IACxCuH,SAAQ,GAAGA,SAAQ,CAACb,IAAI,CAACkC,OAAO,CAAC;EACnC;EACA,IAAMG,SAAS,GAAG;IAChB/I,MAAM,EAAEA,MAAM;IACd8D,IAAI,EAAEA,IAAI;IACVyD,QAAQ,EAAEA;EACZ,CAAC;EACDvH,MAAM,CAACsH,gBAAgB,CAACxD,IAAI,EAAEyD,SAAQ,CAAC;EACvC,OAAOwB,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAAChJ,MAAM,EAAE8D,IAAI,EAAEyD,QAAQ,EAAEqB,OAAO,EAAE;EAC1D,OAAOD,MAAM,CAAC3I,MAAM,EAAE8D,IAAI,EAAEyD,QAAQ,EAAEqB,OAAO,EAAE,IAAI,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,aAAaA,CAACrK,GAAG,EAAE;EACjC,IAAIA,GAAG,IAAIA,GAAG,CAACoB,MAAM,EAAE;IACrBpB,GAAG,CAACoB,MAAM,CAACsI,mBAAmB,CAAC1J,GAAG,CAACkF,IAAI,EAAElF,GAAG,CAAC2I,QAAQ,CAAC;IACtD,IAAA9D,UAAK,EAAC7E,GAAG,CAAC;EACZ;AACF;;;;;;;;;ACzGA,IAAAsK,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAiH,OAAA,GAAA9E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AAA8D,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAL9D;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAWM4E,UAAU,0BAAAC,YAAA;EACd,SAAAD,WAAA,EAAc;IAAA,IAAApC,KAAA;IAAAxI,eAAA,OAAA4K,UAAA;IACZpC,KAAA,GAAAnB,UAAA,OAAAuD,UAAA;IAEApC,KAAA,CAAKsC,EAAE,GACL;IACEtC,KAAA,CAAKuC,UACN;IAEHvC,KAAA,CAAK4B,IAAI,GACP;IACE5B,KAAA,CAAKwC,YACN;IAEHxC,KAAA,CAAKyC,EAAE,GAAG,0CAA4CzC,KAAA,CAAK0C,UAAW;;IAEtE;AACJ;AACA;AACA;IACI1C,KAAA,CAAK2C,SAAS,GAAG,CAAC;IAAC,OAAA3C,KAAA;EACrB;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAyC,UAAA,EAAAC,YAAA;EAAA,OAAA3K,YAAA,CAAA0K,UAAA;IAAAzK,GAAA;IAAAC,KAAA,EAIA,SAAAgL,OAAOA,CAAA,EAAG;MACR,EAAE,IAAI,CAACD,SAAS;MAChB,IAAI,CAAChC,aAAa,CAACkC,kBAAS,CAACvM,MAAM,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAqB,GAAA;IAAAC,KAAA,EAMA,SAAAkL,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACH,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhL,GAAA;IAAAC,KAAA,EAMA,SAAA2K,UAAUA,CAAC1F,IAAI,EAAEyD,QAAQ,EAAE;MACzB,IAAI3G,KAAK,CAACC,OAAO,CAACiD,IAAI,CAAC,EAAE;QACvB,IAAMkG,GAAG,GAAGlG,IAAI,CAACrE,MAAM;QACvB,IAAMiJ,IAAI,GAAG,IAAI9H,KAAK,CAACoJ,GAAG,CAAC;QAC3B,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE,EAAE7J,CAAC,EAAE;UAC5BuI,IAAI,CAACvI,CAAC,CAAC,GAAG,IAAAwI,cAAM,EAAC,IAAI,EAAE7E,IAAI,CAAC3D,CAAC,CAAC,EAAEoH,QAAQ,CAAC;QAC3C;QACA,OAAOmB,IAAI;MACb;MACA,OAAO,IAAAC,cAAM,EAAC,IAAI,EAAE,qBAAuB7E,IAAI,EAAGyD,QAAQ,CAAC;IAC7D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3I,GAAA;IAAAC,KAAA,EAMA,SAAA4K,YAAYA,CAAC3F,IAAI,EAAEyD,QAAQ,EAAE;MAC3B,IAAI3I,GAAG;MACP,IAAIgC,KAAK,CAACC,OAAO,CAACiD,IAAI,CAAC,EAAE;QACvB,IAAMkG,GAAG,GAAGlG,IAAI,CAACrE,MAAM;QACvBb,GAAG,GAAG,IAAIgC,KAAK,CAACoJ,GAAG,CAAC;QACpB,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE,EAAE7J,CAAC,EAAE;UAC5BvB,GAAG,CAACuB,CAAC,CAAC,GAAG,IAAA6I,kBAAU,EAAC,IAAI,EAAElF,IAAI,CAAC3D,CAAC,CAAC,EAAEoH,QAAQ,CAAC;QAC9C;MACF,CAAC,MAAM;QACL3I,GAAG,GAAG,IAAAoK,kBAAU,EAAC,IAAI,EAAE,qBAAuBlF,IAAI,EAAGyD,QAAQ,CAAC;MAChE;MACA;MAAuBA,QAAQ,CAAE0C,MAAM,GAAGrL,GAAG;MAC7C,OAAOA,GAAG;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAA8K,UAAUA,CAAC7F,IAAI,EAAEyD,QAAQ,EAAE;MACzB,IAAM3I,GAAG,GAAG,qBAAuB2I,QAAQ,CAAE0C,MAAM;MACnD,IAAIrL,GAAG,EAAE;QACPsL,OAAO,CAACtL,GAAG,CAAC;MACd,CAAC,MAAM,IAAIgC,KAAK,CAACC,OAAO,CAACiD,IAAI,CAAC,EAAE;QAC9B,KAAK,IAAI3D,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGrE,IAAI,CAACrE,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC7C,IAAI,CAACmI,mBAAmB,CAACxE,IAAI,CAAC3D,CAAC,CAAC,EAAEoH,QAAQ,CAAC;QAC7C;MACF,CAAC,MAAM;QACL,IAAI,CAACe,mBAAmB,CAACxE,IAAI,EAAEyD,QAAQ,CAAC;MAC1C;IACF;EAAC;AAAA,EAlGsB4C,eAAW;AAqGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAd,UAAU,CAACzG,SAAS,CAAC2G,EAAE;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,UAAU,CAACzG,SAAS,CAACiG,IAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACAQ,UAAU,CAACzG,SAAS,CAAC8G,EAAE;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,OAAOA,CAACtL,GAAG,EAAE;EAC3B,IAAIgC,KAAK,CAACC,OAAO,CAACjC,GAAG,CAAC,EAAE;IACtB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGvJ,GAAG,CAACa,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAC5C,IAAA8I,qBAAa,EAACrK,GAAG,CAACuB,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,MAAM;IACL,IAAA8I,qBAAa,EAAC,8CAAgDrK,GAAI,CAAC;EACrE;AACF;AAAC,IAAA3B,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEckM,UAAU;;;;;;;;;;AC9LzB;AACA;AACA;;AAEA;AACA;AACA;AACO,SAASe,QAAQA,CAAA,EAAG;EACzB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,MAAMA,CAACxJ,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACyJ,MAAM,KAAKzJ,GAAG,CAACyJ,MAAM,GAAG5E,MAAM,CAAC,EAAE0E,WAAW,CAAC,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACO,IAAMG,OAAO,GAAAvN,OAAA,CAAAuN,OAAA,GAAG,QAAQ;;;;;;;;AChC/B,IAAAC,gBAAA,GAAArG,sBAAA,CAAAnC,OAAA;AACA,IAAAyI,YAAA,GAAAtG,sBAAA,CAAAnC,OAAA;AACA,IAAA0I,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAiC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAPjC;AACA;AACA;AAOA;AACA;AACA;AACA;AAHA,IAIaqG,WAAW,GAAA5N,OAAA,CAAA4N,WAAA,0BAAAtG,MAAA;EACtB;AACF;AACA;AACA;AACA;EACE,SAAAsG,YAAYhH,IAAI,EAAElF,GAAG,EAAEmM,QAAQ,EAAE;IAAA,IAAA9D,KAAA;IAAAxI,eAAA,OAAAqM,WAAA;IAC/B7D,KAAA,GAAAnB,UAAA,OAAAgF,WAAA,GAAMhH,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACImD,KAAA,CAAKrI,GAAG,GAAGA,GAAG;;IAEd;AACJ;AACA;AACA;AACA;AACA;IACIqI,KAAA,CAAK8D,QAAQ,GAAGA,QAAQ;IAAC,OAAA9D,KAAA;EAC3B;EAACL,SAAA,CAAAkE,WAAA,EAAAtG,MAAA;EAAA,OAAA7F,YAAA,CAAAmM,WAAA;AAAA,EAvB8B/C,eAAK;AA0BtC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA,IA2CMiD,UAAU,0BAAAC,WAAA;EACd;AACF;AACA;EACE,SAAAD,WAAYE,MAAM,EAAE;IAAA,IAAAC,MAAA;IAAA1M,eAAA,OAAAuM,UAAA;IAClBG,MAAA,GAAArF,UAAA,OAAAkF,UAAA;;IAEA;AACJ;AACA;IACIG,MAAA,CAAK5B,EAAE;;IAEP;AACJ;AACA;IACI4B,MAAA,CAAKtC,IAAI;;IAET;AACJ;AACA;IACIsC,MAAA,CAAKzB,EAAE;;IAEP;IACA;IACA;IACA;IACA,IAAAa,YAAM,EAAAY,MAAK,CAAC;;IAEZ;AACJ;AACA;AACA;IACIA,MAAA,CAAKC,OAAO,GAAG,IAAI;IAEnB,IAAIF,MAAM,KAAK1C,SAAS,EAAE;MACxB2C,MAAA,CAAKE,aAAa,CAACH,MAAM,CAAC;IAC5B;IAAC,OAAAC,MAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEvE,SAAA,CAAAoE,UAAA,EAAAC,WAAA;EAAA,OAAAtM,YAAA,CAAAqM,UAAA;IAAApM,GAAA;IAAAC,KAAA,EAMA,SAAAyM,GAAGA,CAAC1M,GAAG,EAAE;MACP,IAAIC,KAAK;MACT,IAAI,IAAI,CAACuM,OAAO,IAAI,IAAI,CAACA,OAAO,CAACG,cAAc,CAAC3M,GAAG,CAAC,EAAE;QACpDC,KAAK,GAAG,IAAI,CAACuM,OAAO,CAACxM,GAAG,CAAC;MAC3B;MACA,OAAOC,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAD,GAAA;IAAAC,KAAA,EAKA,SAAA2M,OAAOA,CAAA,EAAG;MACR,OAAQ,IAAI,CAACJ,OAAO,IAAI7F,MAAM,CAACmD,IAAI,CAAC,IAAI,CAAC0C,OAAO,CAAC,IAAK,EAAE;IAC1D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxM,GAAA;IAAAC,KAAA,EAKA,SAAA4M,aAAaA,CAAA,EAAG;MACd,OAAQ,IAAI,CAACL,OAAO,IAAI7F,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACN,OAAO,CAAC,IAAK,CAAC,CAAC;IAChE;;IAEA;AACF;AACA;AACA;EAHE;IAAAxM,GAAA;IAAAC,KAAA,EAIA,SAAA8M,qBAAqBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAACP,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAAxM,GAAA;IAAAC,KAAA,EAGA,SAAA+M,aAAaA,CAAA,EAAG;MACd,OAAO,CAAC,CAAC,IAAI,CAACR,OAAO;IACvB;;IAEA;AACF;AACA;AACA;EAHE;IAAAxM,GAAA;IAAAC,KAAA,EAIA,SAAAgN,MAAMA,CAACjN,GAAG,EAAEmM,QAAQ,EAAE;MACpB,IAAIe,SAAS;MACbA,SAAS,aAAAC,MAAA,CAAanN,GAAG,CAAE;MAC3B,IAAI,IAAI,CAAC6J,WAAW,CAACqD,SAAS,CAAC,EAAE;QAC/B,IAAI,CAAClE,aAAa,CAAC,IAAIkD,WAAW,CAACgB,SAAS,EAAElN,GAAG,EAAEmM,QAAQ,CAAC,CAAC;MAC/D;MACAe,SAAS,GAAGE,wBAAe,CAAC1O,cAAc;MAC1C,IAAI,IAAI,CAACmL,WAAW,CAACqD,SAAS,CAAC,EAAE;QAC/B,IAAI,CAAClE,aAAa,CAAC,IAAIkD,WAAW,CAACgB,SAAS,EAAElN,GAAG,EAAEmM,QAAQ,CAAC,CAAC;MAC/D;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAnM,GAAA;IAAAC,KAAA,EAIA,SAAAoN,iBAAiBA,CAACrN,GAAG,EAAE2I,QAAQ,EAAE;MAC/B,IAAI,CAACD,gBAAgB,WAAAyE,MAAA,CAAWnN,GAAG,GAAI2I,QAAQ,CAAC;IAClD;;IAEA;AACF;AACA;AACA;EAHE;IAAA3I,GAAA;IAAAC,KAAA,EAIA,SAAAqN,oBAAoBA,CAACtN,GAAG,EAAE2I,QAAQ,EAAE;MAClC,IAAI,CAACe,mBAAmB,WAAAyD,MAAA,CAAWnN,GAAG,GAAI2I,QAAQ,CAAC;IACrD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3I,GAAA;IAAAC,KAAA,EAOA,SAAAsN,GAAGA,CAACvN,GAAG,EAAEC,KAAK,EAAEuN,MAAM,EAAE;MACtB,IAAMlB,MAAM,GAAG,IAAI,CAACE,OAAO,KAAK,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC,CAAC;MAClD,IAAIgB,MAAM,EAAE;QACVlB,MAAM,CAACtM,GAAG,CAAC,GAAGC,KAAK;MACrB,CAAC,MAAM;QACL,IAAMkM,QAAQ,GAAGG,MAAM,CAACtM,GAAG,CAAC;QAC5BsM,MAAM,CAACtM,GAAG,CAAC,GAAGC,KAAK;QACnB,IAAIkM,QAAQ,KAAKlM,KAAK,EAAE;UACtB,IAAI,CAACgN,MAAM,CAACjN,GAAG,EAAEmM,QAAQ,CAAC;QAC5B;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnM,GAAA;IAAAC,KAAA,EAOA,SAAAwM,aAAaA,CAACH,MAAM,EAAEkB,MAAM,EAAE;MAC5B,KAAK,IAAMxN,GAAG,IAAIsM,MAAM,EAAE;QACxB,IAAI,CAACiB,GAAG,CAACvN,GAAG,EAAEsM,MAAM,CAACtM,GAAG,CAAC,EAAEwN,MAAM,CAAC;MACpC;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxN,GAAA;IAAAC,KAAA,EAKA,SAAAwN,eAAeA,CAACC,MAAM,EAAE;MACtB,IAAI,CAACA,MAAM,CAAClB,OAAO,EAAE;QACnB;MACF;MACA7F,MAAM,CAACmG,MAAM,CAAC,IAAI,CAACN,OAAO,KAAK,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC,CAAC,EAAEkB,MAAM,CAAClB,OAAO,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxM,GAAA;IAAAC,KAAA,EAMA,SAAA0N,KAAKA,CAAC3N,GAAG,EAAEwN,MAAM,EAAE;MACjB,IAAI,IAAI,CAAChB,OAAO,IAAIxM,GAAG,IAAI,IAAI,CAACwM,OAAO,EAAE;QACvC,IAAML,QAAQ,GAAG,IAAI,CAACK,OAAO,CAACxM,GAAG,CAAC;QAClC,OAAO,IAAI,CAACwM,OAAO,CAACxM,GAAG,CAAC;QACxB,IAAI,IAAAgF,YAAO,EAAC,IAAI,CAACwH,OAAO,CAAC,EAAE;UACzB,IAAI,CAACA,OAAO,GAAG,IAAI;QACrB;QACA,IAAI,CAACgB,MAAM,EAAE;UACX,IAAI,CAACP,MAAM,CAACjN,GAAG,EAAEmM,QAAQ,CAAC;QAC5B;MACF;IACF;EAAC;AAAA,EApLsB1B,oBAAU;AAAA,IAAApM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuLpB6N,UAAU;;;;;;;;AC7QzB,IAAAwB,oBAAA,GAAAnI,sBAAA,CAAAnC,OAAA;AACA,IAAAuK,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAA0I,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AAAsC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALtC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA,IAAMiI,QAAQ,GAAG;EACfC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALA,IAMaC,eAAe,GAAA1P,OAAA,CAAA0P,eAAA,0BAAApI,MAAA;EAC1B;AACF;AACA;AACA;AACA;EACE,SAAAoI,gBAAY9I,IAAI,EAAE+I,OAAO,EAAErL,KAAK,EAAE;IAAA,IAAAyF,KAAA;IAAAxI,eAAA,OAAAmO,eAAA;IAChC3F,KAAA,GAAAnB,UAAA,OAAA8G,eAAA,GAAM9I,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACImD,KAAA,CAAK4F,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;AACA;IACI5F,KAAA,CAAKzF,KAAK,GAAGA,KAAK;IAAC,OAAAyF,KAAA;EACrB;EAACL,SAAA,CAAAgG,eAAA,EAAApI,MAAA;EAAA,OAAA7F,YAAA,CAAAiO,eAAA;AAAA,EAtBkC7E,eAAK;AAyB1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaM+E,UAAU,0BAAAC,WAAA;EACd;AACF;AACA;AACA;EACE,SAAAD,WAAYE,KAAK,EAAEC,OAAO,EAAE;IAAA,IAAA9B,MAAA;IAAA1M,eAAA,OAAAqO,UAAA;IAC1B3B,MAAA,GAAArF,UAAA,OAAAgH,UAAA;;IAEA;AACJ;AACA;IACI3B,MAAA,CAAK5B,EAAE;;IAEP;AACJ;AACA;IACI4B,MAAA,CAAKtC,IAAI;;IAET;AACJ;AACA;IACIsC,MAAA,CAAKzB,EAAE;IAEPuD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI9B,MAAA,CAAK+B,OAAO,GAAG,CAAC,CAACD,OAAO,CAACE,MAAM;;IAE/B;AACJ;AACA;AACA;IACIhC,MAAA,CAAKiC,MAAM,GAAGJ,KAAK,GAAGA,KAAK,GAAG,EAAE;IAEhC,IAAI7B,MAAA,CAAK+B,OAAO,EAAE;MAChB,KAAK,IAAI/M,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGgD,MAAA,CAAKiC,MAAM,CAAC3N,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACpDgL,MAAA,CAAKkC,aAAa,CAAClC,MAAA,CAAKiC,MAAM,CAACjN,CAAC,CAAC,EAAEA,CAAC,CAAC;MACvC;IACF;IAEAgL,MAAA,CAAKmC,aAAa,CAAC,CAAC;IAAC,OAAAnC,MAAA;EACvB;;EAEA;AACF;AACA;AACA;EAHEvE,SAAA,CAAAkG,UAAA,EAAAC,WAAA;EAAA,OAAApO,YAAA,CAAAmO,UAAA;IAAAlO,GAAA;IAAAC,KAAA,EAIA,SAAA4E,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAAC8J,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACC,GAAG,CAAC,CAAC;MACZ;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5O,GAAA;IAAAC,KAAA,EAOA,SAAA4B,MAAMA,CAACV,GAAG,EAAE;MACV,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGpI,GAAG,CAACN,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC5C,IAAI,CAACwH,IAAI,CAAC5H,GAAG,CAACI,CAAC,CAAC,CAAC;MACnB;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAvB,GAAA;IAAAC,KAAA,EAOA,SAAA4O,OAAOA,CAACC,CAAC,EAAE;MACT,IAAMV,KAAK,GAAG,IAAI,CAACI,MAAM;MACzB,KAAK,IAAIjN,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG6E,KAAK,CAACvN,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC9CuN,CAAC,CAACV,KAAK,CAAC7M,CAAC,CAAC,EAAEA,CAAC,EAAE6M,KAAK,CAAC;MACvB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApO,GAAA;IAAAC,KAAA,EAQA,SAAA8O,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxO,GAAA;IAAAC,KAAA,EAMA,SAAA+O,IAAIA,CAACpM,KAAK,EAAE;MACV,OAAO,IAAI,CAAC4L,MAAM,CAAC5L,KAAK,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5C,GAAA;IAAAC,KAAA,EAMA,SAAA0O,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACjC,GAAG,CAACoB,QAAQ,CAACC,MAAM,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/N,GAAA;IAAAC,KAAA,EAMA,SAAAgP,QAAQA,CAACrM,KAAK,EAAEsM,IAAI,EAAE;MACpB,IAAItM,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,IAAI,CAAC+L,SAAS,CAAC,CAAC,EAAE;QACzC,MAAM,IAAIlD,KAAK,CAAC,uBAAuB,GAAG7I,KAAK,CAAC;MAClD;MACA,IAAI,IAAI,CAAC0L,OAAO,EAAE;QAChB,IAAI,CAACG,aAAa,CAACS,IAAI,CAAC;MAC1B;MACA,IAAI,CAACV,MAAM,CAACnM,MAAM,CAACO,KAAK,EAAE,CAAC,EAAEsM,IAAI,CAAC;MAClC,IAAI,CAACR,aAAa,CAAC,CAAC;MACpB,IAAI,CAAC1F,aAAa,CAChB,IAAIgF,eAAe,CAACmB,4BAAmB,CAAC3Q,GAAG,EAAE0Q,IAAI,EAAEtM,KAAK,CAC1D,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5C,GAAA;IAAAC,KAAA,EAMA,SAAA2O,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3O,GAAA;IAAAC,KAAA,EAMA,SAAA8I,IAAIA,CAACmG,IAAI,EAAE;MACT,IAAI,IAAI,CAACZ,OAAO,EAAE;QAChB,IAAI,CAACG,aAAa,CAACS,IAAI,CAAC;MAC1B;MACA,IAAM5N,CAAC,GAAG,IAAI,CAACqN,SAAS,CAAC,CAAC;MAC1B,IAAI,CAACM,QAAQ,CAAC3N,CAAC,EAAE4N,IAAI,CAAC;MACtB,OAAO,IAAI,CAACP,SAAS,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3O,GAAA;IAAAC,KAAA,EAMA,SAAAiC,MAAMA,CAACgN,IAAI,EAAE;MACX,IAAM/N,GAAG,GAAG,IAAI,CAACqN,MAAM;MACvB,KAAK,IAAIjN,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGpI,GAAG,CAACN,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC5C,IAAIJ,GAAG,CAACI,CAAC,CAAC,KAAK2N,IAAI,EAAE;UACnB,OAAO,IAAI,CAACE,QAAQ,CAAC7N,CAAC,CAAC;QACzB;MACF;MACA,OAAOqI,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5J,GAAA;IAAAC,KAAA,EAOA,SAAAmP,QAAQA,CAACxM,KAAK,EAAE;MACd,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAAC+L,SAAS,CAAC,CAAC,EAAE;QAC1C,OAAO/E,SAAS;MAClB;MACA,IAAMyF,IAAI,GAAG,IAAI,CAACb,MAAM,CAAC5L,KAAK,CAAC;MAC/B,IAAI,CAAC4L,MAAM,CAACnM,MAAM,CAACO,KAAK,EAAE,CAAC,CAAC;MAC5B,IAAI,CAAC8L,aAAa,CAAC,CAAC;MACpB,IAAI,CAAC1F,aAAa,CAChB;MACE,IAAIgF,eAAe,CAACmB,4BAAmB,CAAC1Q,MAAM,EAAE4Q,IAAI,EAAEzM,KAAK,CAE/D,CAAC;MACD,OAAOyM,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArP,GAAA;IAAAC,KAAA,EAMA,SAAAqP,KAAKA,CAAC1M,KAAK,EAAEsM,IAAI,EAAE;MACjB,IAAM5N,CAAC,GAAG,IAAI,CAACqN,SAAS,CAAC,CAAC;MAC1B,IAAI/L,KAAK,IAAItB,CAAC,EAAE;QACd,IAAI,CAAC2N,QAAQ,CAACrM,KAAK,EAAEsM,IAAI,CAAC;QAC1B;MACF;MACA,IAAItM,KAAK,GAAG,CAAC,EAAE;QACb,MAAM,IAAI6I,KAAK,CAAC,uBAAuB,GAAG7I,KAAK,CAAC;MAClD;MACA,IAAI,IAAI,CAAC0L,OAAO,EAAE;QAChB,IAAI,CAACG,aAAa,CAACS,IAAI,EAAEtM,KAAK,CAAC;MACjC;MACA,IAAMyM,IAAI,GAAG,IAAI,CAACb,MAAM,CAAC5L,KAAK,CAAC;MAC/B,IAAI,CAAC4L,MAAM,CAAC5L,KAAK,CAAC,GAAGsM,IAAI;MACzB,IAAI,CAAClG,aAAa,CAChB;MACE,IAAIgF,eAAe,CAACmB,4BAAmB,CAAC1Q,MAAM,EAAE4Q,IAAI,EAAEzM,KAAK,CAE/D,CAAC;MACD,IAAI,CAACoG,aAAa,CAChB;MACE,IAAIgF,eAAe,CAACmB,4BAAmB,CAAC3Q,GAAG,EAAE0Q,IAAI,EAAEtM,KAAK,CAE5D,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAA5C,GAAA;IAAAC,KAAA,EAGA,SAAAyO,aAAaA,CAAA,EAAG;MACd,IAAI,CAACnB,GAAG,CAACO,QAAQ,CAACC,MAAM,EAAE,IAAI,CAACS,MAAM,CAAC3N,MAAM,CAAC;IAC/C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAb,GAAA;IAAAC,KAAA,EAKA,SAAAwO,aAAaA,CAACS,IAAI,EAAEK,MAAM,EAAE;MAC1B,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAACiF,MAAM,CAAC3N,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACpD,IAAI,IAAI,CAACiN,MAAM,CAACjN,CAAC,CAAC,KAAK2N,IAAI,IAAI3N,CAAC,KAAKgO,MAAM,EAAE;UAC3C,MAAM,IAAI9D,KAAK,CAAC,6CAA6C,CAAC;QAChE;MACF;IACF;EAAC;AAAA,EAzPsBW,eAAU;AAAA,IAAA/N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA4PpB2P,UAAU;;;;;;;;ACpUzB,IAAAlC,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AAAsC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAHtC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA,IAKM2J,QAAQ,0BAAA5J,MAAA;EACZ;AACF;AACA;AACA;AACA;EACE,SAAA4J,SAAYtK,IAAI,EAAEuK,GAAG,EAAEC,UAAU,EAAE;IAAA,IAAArH,KAAA;IAAAxI,eAAA,OAAA2P,QAAA;IACjCnH,KAAA,GAAAnB,UAAA,OAAAsI,QAAA,GAAMtK,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACImD,KAAA,CAAKoH,GAAG,GAAGA,GAAG;;IAEd;AACJ;AACA;AACA;AACA;IACIpH,KAAA,CAAKqH,UAAU,GAAGA,UAAU,KAAK9F,SAAS,GAAG8F,UAAU,GAAG,IAAI;IAAC,OAAArH,KAAA;EACjE;EAACL,SAAA,CAAAwH,QAAA,EAAA5J,MAAA;EAAA,OAAA7F,YAAA,CAAAyP,QAAA;AAAA,EAtBoBrG,eAAK;AAAA,IAAA9K,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAyBbiR,QAAQ;;;;;;;;AChCvB,IAAAG,UAAA,GAAAlK,sBAAA,CAAAnC,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAHrC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMoK,eAAe,0BAAAC,SAAA;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAD,gBAAY/K,IAAI,EAAEuK,GAAG,EAAEU,aAAa,EAAEC,QAAQ,EAAEV,UAAU,EAAEW,cAAc,EAAE;IAAA,IAAAhI,KAAA;IAAAxI,eAAA,OAAAoQ,eAAA;IAC1E5H,KAAA,GAAAnB,UAAA,OAAA+I,eAAA,GAAM/K,IAAI,EAAEuK,GAAG,EAAEC,UAAU;;IAE3B;AACJ;AACA;AACA;AACA;AACA;IACIrH,KAAA,CAAK8H,aAAa,GAAGA,aAAa;;IAElC;AACJ;AACA;AACA;AACA;IACI9H,KAAA,CAAKiI,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;AACA;IACIjI,KAAA,CAAKkI,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;IACIlI,KAAA,CAAK+H,QAAQ,GAAGA,QAAQ,KAAKxG,SAAS,GAAGwG,QAAQ,GAAG,KAAK;;IAEzD;AACJ;AACA;IACI/H,KAAA,CAAKgI,cAAc,GAAGA,cAAc;IAAC,OAAAhI,KAAA;EACvC;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAiI,eAAA,EAAAC,SAAA;EAAA,OAAAnQ,YAAA,CAAAkQ,eAAA;IAAAjQ,GAAA;IAAA0M,GAAA,EAKA,SAAAA,IAAA,EAAY;MACV,IAAI,CAAC,IAAI,CAAC4D,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAG,IAAI,CAACb,GAAG,CAACe,aAAa,CAAC,IAAI,CAACL,aAAa,CAAC;MAC1D;MACA,OAAO,IAAI,CAACG,MAAM;IACpB,CAAC;IAAA/C,GAAA,EACD,SAAAA,IAAUkD,KAAK,EAAE;MACf,IAAI,CAACH,MAAM,GAAGG,KAAK;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzQ,GAAA;IAAA0M,GAAA,EAMA,SAAAA,IAAA,EAAiB;MACf,IAAI,CAAC,IAAI,CAAC6D,WAAW,EAAE;QACrB,IAAI,CAACA,WAAW,GAAG,IAAI,CAACd,GAAG,CAACiB,sBAAsB,CAAC,IAAI,CAACD,KAAK,CAAC;MAChE;MACA,OAAO,IAAI,CAACF,WAAW;IACzB,CAAC;IAAAhD,GAAA,EACD,SAAAA,IAAeoD,UAAU,EAAE;MACzB,IAAI,CAACJ,WAAW,GAAGI,UAAU;IAC/B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3Q,GAAA;IAAAC,KAAA,EAMA,SAAAoF,cAAcA,CAAA,EAAG;MACfuK,aAAA,CAAAK,eAAA;MACA,IAAI,gBAAgB,IAAI,IAAI,CAACE,aAAa,EAAE;QAC1C,sBAAwB,IAAI,CAACA,aAAa,CAAE9K,cAAc,CAAC,CAAC;MAC9D;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArF,GAAA;IAAAC,KAAA,EAMA,SAAAqF,eAAeA,CAAA,EAAG;MAChBsK,aAAA,CAAAK,eAAA;MACA,IAAI,iBAAiB,IAAI,IAAI,CAACE,aAAa,EAAE;QAC3C,sBAAwB,IAAI,CAACA,aAAa,CAAE7K,eAAe,CAAC,CAAC;MAC/D;IACF;EAAC;AAAA,EAxG2BkK,kBAAQ;AAAA,IAAAnR,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA2GvB0R,eAAe;;;;;;;;ACnH9B,IAAA3F,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AAA8C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAH9C;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA,IAAAxH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIe;EACb;AACF;AACA;AACA;AACA;AACA;EACEqS,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;EACE5R,KAAK,EAAEkM,kBAAS,CAAClM,KAAK;EAEtB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAEiM,kBAAS,CAACjM,QAAQ;EAE5B;AACF;AACA;AACA;AACA;EACE4R,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,aAAa;EAE1BC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE;AACjB,CAAC;AAED;AACA;AACA;;;;;;;;AC1DA;AACA;AACA;;AAEA,IAAMC,EAAE,GACN,OAAOC,SAAS,KAAK,WAAW,IAAI,OAAOA,SAAS,CAACC,SAAS,KAAK,WAAW,GAC1ED,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,GACjC,EAAE;;AAER;AACA;AACA;AACA;AACO,IAAMC,OAAO,GAAApT,OAAA,CAAAoT,OAAA,GAAGJ,EAAE,CAACxI,QAAQ,CAAC,SAAS,CAAC;;AAE7C;AACA;AACA;AACA;AACO,IAAM6I,MAAM,GAAArT,OAAA,CAAAqT,MAAA,GAAGL,EAAE,CAACxI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACwI,EAAE,CAACxI,QAAQ,CAAC,OAAO,CAAC;;AAEpE;AACA;AACA;AACA;AACO,IAAM8I,iBAAiB,GAAAtT,OAAA,CAAAsT,iBAAA,GAC5BD,MAAM,KACLL,EAAE,CAACxI,QAAQ,CAAC,cAAc,CAAC,IAC1B,uCAAuC,CAAC+I,IAAI,CAACP,EAAE,CAAC,CAAC;;AAErD;AACA;AACA;AACA;AACO,IAAMQ,MAAM,GAAAxT,OAAA,CAAAwT,MAAA,GAAGR,EAAE,CAACxI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACwI,EAAE,CAACxI,QAAQ,CAAC,MAAM,CAAC;;AAEnE;AACA;AACA;AACA;AACO,IAAMiJ,GAAG,GAAAzT,OAAA,CAAAyT,GAAA,GAAGT,EAAE,CAACxI,QAAQ,CAAC,WAAW,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMkJ,kBAAkB,GAAA1T,OAAA,CAAA0T,kBAAA,GAC7B,OAAOC,gBAAgB,KAAK,WAAW,GAAGA,gBAAgB,GAAG,CAAC;;AAEhE;AACA;AACA;AACA;AACA;AACO,IAAMC,uBAAuB,GAAA5T,OAAA,CAAA4T,uBAAA,GAClC,OAAOC,iBAAiB,KAAK,WAAW,IACxC,OAAOC,eAAe,KAAK,WAAW,IACtCC,IAAI,YAAYF,iBAAiB,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACO,IAAMG,YAAY,GAAAhU,OAAA,CAAAgU,YAAA,GACvB,OAAOC,KAAK,KAAK,WAAW,IAAIA,KAAK,CAACvO,SAAS,CAACwO,MAAM;;AAExD;AACA;AACA;AACA;AACO,IAAMC,mBAAmB,GAAAnU,OAAA,CAAAmU,mBAAA,GAAG,OAAOC,iBAAiB,KAAK,UAAU;;AAE1E;AACA;AACA;AACO,IAAMC,uBAAuB,GAAArU,OAAA,CAAAqU,uBAAA,GAAI,YAAY;EAClD,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAI;IACF,IAAMvE,OAAO,GAAG1H,MAAM,CAACC,cAAc,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE;MACnD8F,GAAG,EAAE,SAALA,GAAGA,CAAA,EAAc;QACfkG,OAAO,GAAG,IAAI;MAChB;IACF,CAAC,CAAC;;IAEF;IACAC,MAAM,CAACnK,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE2F,OAAO,CAAC;IAC3C;IACAwE,MAAM,CAACnJ,mBAAmB,CAAC,GAAG,EAAE,IAAI,EAAE2E,OAAO,CAAC;EAChD,CAAC,CAAC,OAAAyE,OAAA,EAAM;IACN;EAAA;EAEF,OAAOF,OAAO;AAChB,CAAC,CAAE,CAAC;;;;;;;;AC/FJ;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAAAvU,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIe;EACbuS,WAAW,EAAE,aAAa;EAC1BC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE;AACjB,CAAC;;;;;;;;ACbD,IAAA0B,gBAAA,GAAAtN,sBAAA,CAAAnC,OAAA;AACA,IAAA0P,oBAAA,GAAAvN,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA2P,QAAA,GAAAxN,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AACA,IAAA6P,WAAA,GAAA1N,sBAAA,CAAAnC,OAAA;AAAsD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAVtD;AACA;AACA;AAFA,IAYMuN,sBAAsB,0BAAA7I,OAAA;EAC1B;AACF;AACA;AACA;EACE,SAAA6I,uBAAY3D,GAAG,EAAE4D,aAAa,EAAE;IAAA,IAAAhL,KAAA;IAAAxI,eAAA,OAAAuT,sBAAA;IAC9B/K,KAAA,GAAAnB,UAAA,OAAAkM,sBAAA,GAAM3D,GAAG;;IAET;AACJ;AACA;AACA;AACA;IACIpH,KAAA,CAAKiL,IAAI,GAAG7D,GAAG;;IAEf;AACJ;AACA;AACA;IACIpH,KAAA,CAAKkL,eAAe;;IAEpB;AACJ;AACA;AACA;IACIlL,KAAA,CAAKmL,cAAc,GAAG,KAAK;;IAE3B;AACJ;AACA;AACA;IACInL,KAAA,CAAKoL,SAAS,GAAG,KAAK;;IAEtB;AACJ;AACA;AACA;IACIpL,KAAA,CAAKqL,iBAAiB,GAAG,EAAE;;IAE3B;AACJ;AACA;AACA;IACIrL,KAAA,CAAKsL,cAAc,GAAGN,aAAa,KAAKzJ,SAAS,GAAG,CAAC,GAAGyJ,aAAa;;IAErE;AACJ;AACA;AACA;AACA;AACA;IACIhL,KAAA,CAAKuL,KAAK,GAAG,IAAI;IAEjB,IAAM3F,OAAO,GAAG5F,KAAA,CAAKiL,IAAI,CAACO,WAAW,CAAC,CAAC;;IAEvC;AACJ;AACA;AACA;IACIxL,KAAA,CAAKyL,eAAe,GAAG,EAAE;;IAEzB;AACJ;AACA;AACA;IACIzL,KAAA,CAAK0L,eAAe,GAAG,CAAC,CAAC;;IAEzB;AACJ;AACA;IACI1L,KAAA,CAAK2L,QAAQ,GAAG/F,OAAO;;IAEvB;AACJ;AACA;AACA;IACI5F,KAAA,CAAK4L,uBAAuB,GAAG,IAAAlK,cAAM,EACnCkE,OAAO,EACPiG,mBAAgB,CAACnD,WAAW,EAC5B1I,KAAA,CAAK8L,kBAAkB,EAAA9L,KAEzB,CAAC;;IAED;AACJ;AACA;AACA;IACIA,KAAA,CAAK+L,yBAAyB;;IAE9B;AACJ;AACA;AACA;IACI/L,KAAA,CAAKgM,mBAAmB,GAAG,IAAAtK,cAAM,EAC/BkE,OAAO,EACPiG,mBAAgB,CAACpD,WAAW,EAC5BzI,KAAA,CAAKiM,eAAe,EAAAjM,KAEtB,CAAC;;IAED;AACJ;AACA;IACIA,KAAA,CAAKkM,qBAAqB,GAAGlM,KAAA,CAAKmM,gBAAgB,CAAC1M,IAAI,CAAAO,KAAK,CAAC;IAE7DA,KAAA,CAAK2L,QAAQ,CAACtL,gBAAgB,CAC5BwC,kBAAS,CAACxL,SAAS,EACnB2I,KAAA,CAAKkM,qBAAqB,EAC1B5B,4BAAuB,GAAG;MAACC,OAAO,EAAE;IAAK,CAAC,GAAG,KAC/C,CAAC;IAAC,OAAAvK,KAAA;EACJ;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAoL,sBAAA,EAAA7I,OAAA;EAAA,OAAAxK,YAAA,CAAAqT,sBAAA;IAAApT,GAAA;IAAAC,KAAA,EAKA,SAAAwU,aAAaA,CAACC,YAAY,EAAE;MAAA,IAAAnI,MAAA;MAC1B,IAAIoI,QAAQ,GAAG,IAAI1E,wBAAe,CAChC2E,4BAAmB,CAAC5V,KAAK,EACzB,IAAI,CAACsU,IAAI,EACToB,YACF,CAAC;MACD,IAAI,CAAC1L,aAAa,CAAC2L,QAAQ,CAAC;MAC5B,IAAI,IAAI,CAACpB,eAAe,KAAK3J,SAAS,EAAE;QACtC;QACAiL,YAAY,CAAC,IAAI,CAACtB,eAAe,CAAC;QAClC,IAAI,CAACA,eAAe,GAAG3J,SAAS;QAChC+K,QAAQ,GAAG,IAAI1E,wBAAe,CAC5B2E,4BAAmB,CAAC3V,QAAQ,EAC5B,IAAI,CAACqU,IAAI,EACToB,YACF,CAAC;QACD,IAAI,CAAC1L,aAAa,CAAC2L,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACL;QACA,IAAI,CAACpB,eAAe,GAAGuB,UAAU,CAAC,YAAM;UACtCvI,MAAI,CAACgH,eAAe,GAAG3J,SAAS;UAChC,IAAM+K,QAAQ,GAAG,IAAI1E,wBAAe,CAClC2E,4BAAmB,CAAChE,WAAW,EAC/BrE,MAAI,CAAC+G,IAAI,EACToB,YACF,CAAC;UACDnI,MAAI,CAACvD,aAAa,CAAC2L,QAAQ,CAAC;QAC9B,CAAC,EAAE,GAAG,CAAC;MACT;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3U,GAAA;IAAAC,KAAA,EAOA,SAAA8U,qBAAqBA,CAACL,YAAY,EAAE;MAClC,IAAMzL,KAAK,GAAGyL,YAAY;MAC1B,IAAMM,EAAE,GAAG/L,KAAK,CAACgM,SAAS;MAE1B,IACEhM,KAAK,CAAC/D,IAAI,IAAI0P,4BAAmB,CAAC5D,SAAS,IAC3C/H,KAAK,CAAC/D,IAAI,IAAI0P,4BAAmB,CAACvD,aAAa,EAC/C;QACA,OAAO,IAAI,CAAC0C,eAAe,CAACiB,EAAE,CAAC;QAC/B,KAAK,IAAMC,SAAS,IAAI,IAAI,CAAClB,eAAe,EAAE;UAC5C,IAAI,IAAI,CAACA,eAAe,CAACkB,SAAS,CAAC,CAAC7T,MAAM,KAAK6H,KAAK,CAAC7H,MAAM,EAAE;YAC3D;YACA;YACA;YACA;YACA,OAAO,IAAI,CAAC2S,eAAe,CAACkB,SAAS,CAAC;YACtC;UACF;QACF;MACF,CAAC,MAAM,IACLhM,KAAK,CAAC/D,IAAI,IAAI0P,4BAAmB,CAAC7D,WAAW,IAC7C9H,KAAK,CAAC/D,IAAI,IAAI0P,4BAAmB,CAAC9D,WAAW,EAC7C;QACA,IAAI,CAACiD,eAAe,CAACiB,EAAE,CAAC,GAAG/L,KAAK;MAClC;MACA,IAAI,CAAC6K,eAAe,GAAGnN,MAAM,CAAC2F,MAAM,CAAC,IAAI,CAACyH,eAAe,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/T,GAAA;IAAAC,KAAA,EAKA,SAAAiV,gBAAgBA,CAACR,YAAY,EAAE;MAC7B,IAAI,CAACK,qBAAqB,CAACL,YAAY,CAAC;MACxC,IAAMC,QAAQ,GAAG,IAAI1E,wBAAe,CAClC2E,4BAAmB,CAAC5D,SAAS,EAC7B,IAAI,CAACsC,IAAI,EACToB,YAAY,EACZ9K,SAAS,EACTA,SAAS,EACT,IAAI,CAACkK,eACP,CAAC;MACD,IAAI,CAAC9K,aAAa,CAAC2L,QAAQ,CAAC;;MAE5B;MACA;MACA;MACA;MACA;MACA;MACA,IACE,IAAI,CAACnB,cAAc,IACnB,CAACmB,QAAQ,CAACvP,gBAAgB,IAC1B,CAAC,IAAI,CAACqO,SAAS,IACf,IAAI,CAAC0B,oBAAoB,CAACT,YAAY,CAAC,EACvC;QACA,IAAI,CAACD,aAAa,CAAC,IAAI,CAACb,KAAK,CAAC;MAChC;MAEA,IAAI,IAAI,CAACE,eAAe,CAACjT,MAAM,KAAK,CAAC,EAAE;QACrC,IAAI,CAAC6S,iBAAiB,CAAC7E,OAAO,CAACxE,qBAAa,CAAC;QAC7C,IAAI,CAACqJ,iBAAiB,CAAC7S,MAAM,GAAG,CAAC;QACjC,IAAI,CAAC4S,SAAS,GAAG,KAAK;QACtB,IAAI,CAACG,KAAK,GAAG,IAAI;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5T,GAAA;IAAAC,KAAA,EAMA,SAAAkV,oBAAoBA,CAACT,YAAY,EAAE;MACjC,OAAOA,YAAY,CAACU,MAAM,KAAK,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApV,GAAA;IAAAC,KAAA,EAKA,SAAAkU,kBAAkBA,CAACO,YAAY,EAAE;MAC/B,IAAI,CAAClB,cAAc,GAAG,IAAI,CAACM,eAAe,CAACjT,MAAM,KAAK,CAAC;MACvD,IAAI,CAACkU,qBAAqB,CAACL,YAAY,CAAC;MACxC,IAAMC,QAAQ,GAAG,IAAI1E,wBAAe,CAClC2E,4BAAmB,CAAC7D,WAAW,EAC/B,IAAI,CAACuC,IAAI,EACToB,YAAY,EACZ9K,SAAS,EACTA,SAAS,EACT,IAAI,CAACkK,eACP,CAAC;MACD,IAAI,CAAC9K,aAAa,CAAC2L,QAAQ,CAAC;MAE5B,IAAI,CAACf,KAAK,GAAG,IAAIyB,YAAY,CAACX,YAAY,CAACxP,IAAI,EAAEwP,YAAY,CAAC;MAC9D/N,MAAM,CAACC,cAAc,CAAC,IAAI,CAACgN,KAAK,EAAE,QAAQ,EAAE;QAC1ClN,QAAQ,EAAE,KAAK;QACfzG,KAAK,EAAEyU,YAAY,CAACtT;MACtB,CAAC,CAAC;MAEF,IAAI,IAAI,CAACsS,iBAAiB,CAAC7S,MAAM,KAAK,CAAC,EAAE;QACvC,IAAMyU,GAAG,GAAG,IAAI,CAAChC,IAAI,CAACiC,gBAAgB,CAAC,CAAC;QACxC,IAAI,CAAC7B,iBAAiB,CAAC3K,IAAI,CACzB,IAAAgB,cAAM,EACJuL,GAAG,EACHV,4BAAmB,CAAC9D,WAAW,EAC/B,IAAI,CAAC0E,kBAAkB,EACvB,IACF,CAAC,EACD,IAAAzL,cAAM,EAACuL,GAAG,EAAEV,4BAAmB,CAAC5D,SAAS,EAAE,IAAI,CAACkE,gBAAgB,EAAE,IAAI,CAAC;QACvE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAAnL,cAAM,EACJ,IAAI,CAACiK,QAAQ,EACbY,4BAAmB,CAACvD,aAAa,EACjC,IAAI,CAAC6D,gBAAgB,EACrB,IACF,CACF,CAAC;QACD,IAAI,IAAI,CAAClB,QAAQ,CAACyB,WAAW,IAAI,IAAI,CAACzB,QAAQ,CAACyB,WAAW,CAAC,CAAC,KAAKH,GAAG,EAAE;UACpE,IAAI,CAAC5B,iBAAiB,CAAC3K,IAAI,CACzB,IAAAgB,cAAM,EACJ,IAAI,CAACiK,QAAQ,CAACyB,WAAW,CAAC,CAAC,EAC3Bb,4BAAmB,CAAC5D,SAAS,EAC7B,IAAI,CAACkE,gBAAgB,EACrB,IACF,CACF,CAAC;QACH;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlV,GAAA;IAAAC,KAAA,EAKA,SAAAuV,kBAAkBA,CAACd,YAAY,EAAE;MAC/B;MACA;MACA;MACA,IAAI,IAAI,CAACgB,SAAS,CAAChB,YAAY,CAAC,EAAE;QAChC,IAAI,CAACK,qBAAqB,CAACL,YAAY,CAAC;QACxC,IAAI,CAACjB,SAAS,GAAG,IAAI;QACrB,IAAMkB,QAAQ,GAAG,IAAI1E,wBAAe,CAClC2E,4BAAmB,CAAC/D,WAAW,EAC/B,IAAI,CAACyC,IAAI,EACToB,YAAY,EACZ,IAAI,CAACjB,SAAS,EACd7J,SAAS,EACT,IAAI,CAACkK,eACP,CAAC;QACD,IAAI,CAAC9K,aAAa,CAAC2L,QAAQ,CAAC;MAC9B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3U,GAAA;IAAAC,KAAA,EAMA,SAAAqU,eAAeA,CAACI,YAAY,EAAE;MAC5B,IAAI,CAACN,yBAAyB,GAAGM,YAAY;MAC7C,IAAMtE,QAAQ,GAAG,CAAC,EAAE,IAAI,CAACwD,KAAK,IAAI,IAAI,CAAC8B,SAAS,CAAChB,YAAY,CAAC,CAAC;MAC/D,IAAI,CAAC1L,aAAa,CAChB,IAAIiH,wBAAe,CACjB2E,4BAAmB,CAAC9D,WAAW,EAC/B,IAAI,CAACwC,IAAI,EACToB,YAAY,EACZtE,QACF,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApQ,GAAA;IAAAC,KAAA,EAQA,SAAAuU,gBAAgBA,CAACvL,KAAK,EAAE;MACtB;MACA;MACA;MACA,IAAMkH,aAAa,GAAG,IAAI,CAACiE,yBAAyB;MACpD,IACE,CAAC,CAACjE,aAAa,IAAIA,aAAa,CAAC/K,gBAAgB,MAChD,OAAO6D,KAAK,CAAC0M,UAAU,KAAK,SAAS,IAAI1M,KAAK,CAAC0M,UAAU,KAAK,IAAI,CAAC,EACpE;QACA1M,KAAK,CAAC5D,cAAc,CAAC,CAAC;MACxB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArF,GAAA;IAAAC,KAAA,EAMA,SAAAyV,SAASA,CAAChB,YAAY,EAAE;MACtB,OACE,IAAI,CAACjB,SAAS,IACdmC,IAAI,CAACC,GAAG,CAACnB,YAAY,CAACoB,OAAO,GAAG,IAAI,CAAClC,KAAK,CAACkC,OAAO,CAAC,GACjD,IAAI,CAACnC,cAAc,IACrBiC,IAAI,CAACC,GAAG,CAACnB,YAAY,CAACqB,OAAO,GAAG,IAAI,CAACnC,KAAK,CAACmC,OAAO,CAAC,GAAG,IAAI,CAACpC,cAAc;IAE7E;;IAEA;AACF;AACA;AACA;EAHE;IAAA3T,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACkU,mBAAmB,EAAE;QAC5B,IAAAhK,qBAAa,EAAC,IAAI,CAACgK,mBAAmB,CAAC;QACvC,IAAI,CAACA,mBAAmB,GAAG,IAAI;MACjC;MACA,IAAI,CAACL,QAAQ,CAACtK,mBAAmB,CAC/BwB,kBAAS,CAACxL,SAAS,EACnB,IAAI,CAAC6U,qBACP,CAAC;MAED,IAAI,IAAI,CAACN,uBAAuB,EAAE;QAChC,IAAA5J,qBAAa,EAAC,IAAI,CAAC4J,uBAAuB,CAAC;QAC3C,IAAI,CAACA,uBAAuB,GAAG,IAAI;MACrC;MAEA,IAAI,CAACP,iBAAiB,CAAC7E,OAAO,CAACxE,qBAAa,CAAC;MAC7C,IAAI,CAACqJ,iBAAiB,CAAC7S,MAAM,GAAG,CAAC;MAEjC,IAAI,CAACmT,QAAQ,GAAG,IAAI;MACpBpE,aAAA,CAAAwD,sBAAA;IACF;EAAC;AAAA,EAnZkCjL,gBAAM;AAAA,IAAA9J,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsZ5B6U,sBAAsB;;;;;;;;AClarC;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA/U,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACEyX,UAAU,EAAE,YAAY;EAExB;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAE,WAAW;EAEtB;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAE,SAAS;EAElB;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAE,WAAW;EAEtB;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAE;AACX,CAAC;AAED;AACA;AACA;;;;;;;;AC9CA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA/X,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb8X,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC;;;;;;;;ACZD;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAnY,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACbkY,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CAAC;EACT;AACF;AACA;AACA;EACE/X,KAAK,EAAE,CAAC;EACRgY,KAAK,EAAE;AACT,CAAC;;;;;;;;ACjBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASC,MAAMA,CAACC,SAAS,EAAEC,YAAY,EAAE;EAC9C,IAAI,CAACD,SAAS,EAAE;IACd,MAAM,IAAIrL,KAAK,CAACsL,YAAY,CAAC;EAC/B;AACF;;;;;;;;ACTA,IAAAC,QAAA,GAAA1T,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AAAgC,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAJhC;AACA;AACA;AAIA;AACA;AACA;AACO,IAAMnH,IAAI,GAAAd,OAAA,CAAAc,IAAA,GAAG6X,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMC,aAAa;EACjB;AACF;AACA;AACA;EACE,SAAAA,cAAYC,gBAAgB,EAAEC,WAAW,EAAE;IAAAvX,eAAA,OAAAqX,aAAA;IACzC;AACJ;AACA;AACA;IACI,IAAI,CAACG,iBAAiB,GAAGF,gBAAgB;;IAEzC;AACJ;AACA;AACA;IACI,IAAI,CAACG,YAAY,GAAGF,WAAW;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACG,SAAS,GAAG,EAAE;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,EAAE;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,eAAe,GAAG,CAAC,CAAC;EAC3B;;EAEA;AACF;AACA;EAFE,OAAA1X,YAAA,CAAAmX,aAAA;IAAAlX,GAAA;IAAAC,KAAA,EAGA,SAAA4E,KAAKA,CAAA,EAAG;MACN,IAAI,CAAC0S,SAAS,CAAC1W,MAAM,GAAG,CAAC;MACzB,IAAI,CAAC2W,WAAW,CAAC3W,MAAM,GAAG,CAAC;MAC3B,IAAAgE,UAAK,EAAC,IAAI,CAAC4S,eAAe,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;EAHE;IAAAzX,GAAA;IAAAC,KAAA,EAIA,SAAAyX,OAAOA,CAAA,EAAG;MACR,IAAMC,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAC/B,IAAMK,UAAU,GAAG,IAAI,CAACJ,WAAW;MACnC,IAAMvJ,OAAO,GAAG0J,QAAQ,CAAC,CAAC,CAAC;MAC3B,IAAIA,QAAQ,CAAC9W,MAAM,IAAI,CAAC,EAAE;QACxB8W,QAAQ,CAAC9W,MAAM,GAAG,CAAC;QACnB+W,UAAU,CAAC/W,MAAM,GAAG,CAAC;MACvB,CAAC,MAAM;QACL8W,QAAQ,CAAC,CAAC,CAAC,GAAG,gBAAkBA,QAAQ,CAAC/I,GAAG,CAAC,CAAE;QAC/CgJ,UAAU,CAAC,CAAC,CAAC,GAAG,qBAAuBA,UAAU,CAAChJ,GAAG,CAAC,CAAE;QACxD,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC;MACjB;MACA,IAAMC,UAAU,GAAG,IAAI,CAACR,YAAY,CAACrJ,OAAO,CAAC;MAC7C,OAAO,IAAI,CAACwJ,eAAe,CAACK,UAAU,CAAC;MACvC,OAAO7J,OAAO;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjO,GAAA;IAAAC,KAAA,EAKA,SAAA8X,OAAOA,CAAC9J,OAAO,EAAE;MACf,IAAA4I,eAAM,EACJ,EAAE,IAAI,CAACS,YAAY,CAACrJ,OAAO,CAAC,IAAI,IAAI,CAACwJ,eAAe,CAAC,EACrD,mEACF,CAAC;MACD,IAAMO,QAAQ,GAAG,IAAI,CAACX,iBAAiB,CAACpJ,OAAO,CAAC;MAChD,IAAI+J,QAAQ,IAAI5Y,IAAI,EAAE;QACpB,IAAI,CAACmY,SAAS,CAACxO,IAAI,CAACkF,OAAO,CAAC;QAC5B,IAAI,CAACuJ,WAAW,CAACzO,IAAI,CAACiP,QAAQ,CAAC;QAC/B,IAAI,CAACP,eAAe,CAAC,IAAI,CAACH,YAAY,CAACrJ,OAAO,CAAC,CAAC,GAAG,IAAI;QACvD,IAAI,CAACgK,SAAS,CAAC,CAAC,EAAE,IAAI,CAACV,SAAS,CAAC1W,MAAM,GAAG,CAAC,CAAC;QAC5C,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAAb,GAAA;IAAAC,KAAA,EAGA,SAAAiY,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACX,SAAS,CAAC1W,MAAM;IAC9B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAb,GAAA;IAAAC,KAAA,EAMA,SAAAkY,kBAAkBA,CAACvV,KAAK,EAAE;MACxB,OAAOA,KAAK,GAAG,CAAC,GAAG,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5C,GAAA;IAAAC,KAAA,EAMA,SAAAmY,mBAAmBA,CAACxV,KAAK,EAAE;MACzB,OAAOA,KAAK,GAAG,CAAC,GAAG,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5C,GAAA;IAAAC,KAAA,EAMA,SAAAoY,eAAeA,CAACzV,KAAK,EAAE;MACrB,OAAQA,KAAK,GAAG,CAAC,IAAK,CAAC;IACzB;;IAEA;AACF;AACA;AACA;EAHE;IAAA5C,GAAA;IAAAC,KAAA,EAIA,SAAAqY,QAAQA,CAAA,EAAG;MACT,IAAI/W,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,IAAI,CAACgW,SAAS,CAAC1W,MAAM,IAAI,CAAC,IAAI,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QACtD,IAAI,CAACsW,OAAO,CAACtW,CAAC,CAAC;MACjB;IACF;;IAEA;AACF;AACA;EAFE;IAAAvB,GAAA;IAAAC,KAAA,EAGA,SAAA+E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACuS,SAAS,CAAC1W,MAAM,KAAK,CAAC;IACpC;;IAEA;AACF;AACA;AACA;EAHE;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAsY,WAAWA,CAACvY,GAAG,EAAE;MACf,OAAOA,GAAG,IAAI,IAAI,CAACyX,eAAe;IACpC;;IAEA;AACF;AACA;AACA;EAHE;IAAAzX,GAAA;IAAAC,KAAA,EAIA,SAAAuY,QAAQA,CAACvK,OAAO,EAAE;MAChB,OAAO,IAAI,CAACsK,WAAW,CAAC,IAAI,CAACjB,YAAY,CAACrJ,OAAO,CAAC,CAAC;IACrD;;IAEA;AACF;AACA;AACA;EAHE;IAAAjO,GAAA;IAAAC,KAAA,EAIA,SAAA4X,OAAOA,CAACjV,KAAK,EAAE;MACb,IAAM+U,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAC/B,IAAMK,UAAU,GAAG,IAAI,CAACJ,WAAW;MACnC,IAAMiB,KAAK,GAAGd,QAAQ,CAAC9W,MAAM;MAC7B,IAAMoN,OAAO,GAAG0J,QAAQ,CAAC/U,KAAK,CAAC;MAC/B,IAAMoV,QAAQ,GAAGJ,UAAU,CAAChV,KAAK,CAAC;MAClC,IAAM8V,UAAU,GAAG9V,KAAK;MAExB,OAAOA,KAAK,GAAG6V,KAAK,IAAI,CAAC,EAAE;QACzB,IAAME,MAAM,GAAG,IAAI,CAACR,kBAAkB,CAACvV,KAAK,CAAC;QAC7C,IAAMgW,MAAM,GAAG,IAAI,CAACR,mBAAmB,CAACxV,KAAK,CAAC;QAE9C,IAAMiW,iBAAiB,GACrBD,MAAM,GAAGH,KAAK,IAAIb,UAAU,CAACgB,MAAM,CAAC,GAAGhB,UAAU,CAACe,MAAM,CAAC,GACrDC,MAAM,GACND,MAAM;QAEZhB,QAAQ,CAAC/U,KAAK,CAAC,GAAG+U,QAAQ,CAACkB,iBAAiB,CAAC;QAC7CjB,UAAU,CAAChV,KAAK,CAAC,GAAGgV,UAAU,CAACiB,iBAAiB,CAAC;QACjDjW,KAAK,GAAGiW,iBAAiB;MAC3B;MAEAlB,QAAQ,CAAC/U,KAAK,CAAC,GAAGqL,OAAO;MACzB2J,UAAU,CAAChV,KAAK,CAAC,GAAGoV,QAAQ;MAC5B,IAAI,CAACC,SAAS,CAACS,UAAU,EAAE9V,KAAK,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAgY,SAASA,CAACS,UAAU,EAAE9V,KAAK,EAAE;MAC3B,IAAM+U,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAC/B,IAAMK,UAAU,GAAG,IAAI,CAACJ,WAAW;MACnC,IAAMvJ,OAAO,GAAG0J,QAAQ,CAAC/U,KAAK,CAAC;MAC/B,IAAMoV,QAAQ,GAAGJ,UAAU,CAAChV,KAAK,CAAC;MAElC,OAAOA,KAAK,GAAG8V,UAAU,EAAE;QACzB,IAAMI,WAAW,GAAG,IAAI,CAACT,eAAe,CAACzV,KAAK,CAAC;QAC/C,IAAIgV,UAAU,CAACkB,WAAW,CAAC,GAAGd,QAAQ,EAAE;UACtCL,QAAQ,CAAC/U,KAAK,CAAC,GAAG+U,QAAQ,CAACmB,WAAW,CAAC;UACvClB,UAAU,CAAChV,KAAK,CAAC,GAAGgV,UAAU,CAACkB,WAAW,CAAC;UAC3ClW,KAAK,GAAGkW,WAAW;QACrB,CAAC,MAAM;UACL;QACF;MACF;MACAnB,QAAQ,CAAC/U,KAAK,CAAC,GAAGqL,OAAO;MACzB2J,UAAU,CAAChV,KAAK,CAAC,GAAGoV,QAAQ;IAC9B;;IAEA;AACF;AACA;EAFE;IAAAhY,GAAA;IAAAC,KAAA,EAGA,SAAA8Y,YAAYA,CAAA,EAAG;MACb,IAAM5B,gBAAgB,GAAG,IAAI,CAACE,iBAAiB;MAC/C,IAAMM,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAC/B,IAAMK,UAAU,GAAG,IAAI,CAACJ,WAAW;MACnC,IAAI5U,KAAK,GAAG,CAAC;MACb,IAAMtB,CAAC,GAAGqW,QAAQ,CAAC9W,MAAM;MACzB,IAAIoN,OAAO,EAAE1M,CAAC,EAAEyW,QAAQ;MACxB,KAAKzW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAE,EAAEC,CAAC,EAAE;QACtB0M,OAAO,GAAG0J,QAAQ,CAACpW,CAAC,CAAC;QACrByW,QAAQ,GAAGb,gBAAgB,CAAClJ,OAAO,CAAC;QACpC,IAAI+J,QAAQ,IAAI5Y,IAAI,EAAE;UACpB,OAAO,IAAI,CAACqY,eAAe,CAAC,IAAI,CAACH,YAAY,CAACrJ,OAAO,CAAC,CAAC;QACzD,CAAC,MAAM;UACL2J,UAAU,CAAChV,KAAK,CAAC,GAAGoV,QAAQ;UAC5BL,QAAQ,CAAC/U,KAAK,EAAE,CAAC,GAAGqL,OAAO;QAC7B;MACF;MACA0J,QAAQ,CAAC9W,MAAM,GAAG+B,KAAK;MACvBgV,UAAU,CAAC/W,MAAM,GAAG+B,KAAK;MACzB,IAAI,CAAC0V,QAAQ,CAAC,CAAC;IACjB;EAAC;AAAA;AAAA,IAAAja,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY2Y,aAAa;;;;;;;;;ACrQ5B,IAAA8B,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA2V,eAAA,GAAAC,uBAAA,CAAA5V,OAAA;AAA+D,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAL/D;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAGM0T,SAAS,0BAAAC,cAAA;EACb;AACF;AACA;AACA;EACE,SAAAD,UAAYE,oBAAoB,EAAEC,kBAAkB,EAAE;IAAA,IAAArR,KAAA;IAAAxI,eAAA,OAAA0Z,SAAA;IACpDlR,KAAA,GAAAnB,UAAA,OAAAqS,SAAA,GACE,UAACtL,OAAO;MAAA,OAAKwL,oBAAoB,CAACpV,KAAK,CAAC,IAAI,EAAE4J,OAAO,CAAC;IAAA,GACtD,UAACA,OAAO;MAAA,OAAKA,OAAO,CAAC,CAAC,CAAC,CAAC0L,MAAM,CAAC,CAAC;IAAA;;IAGlC;IACAtR,KAAA,CAAKuR,sBAAsB,GAAGvR,KAAA,CAAKwR,gBAAgB,CAAC/R,IAAI,CAAAO,KAAK,CAAC;;IAE9D;AACJ;AACA;AACA;IACIA,KAAA,CAAKyR,mBAAmB,GAAGJ,kBAAkB;;IAE7C;AACJ;AACA;AACA;IACIrR,KAAA,CAAK0R,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI1R,KAAA,CAAK2R,iBAAiB,GAAG,CAAC,CAAC;IAAC,OAAA3R,KAAA;EAC9B;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAuR,SAAA,EAAAC,cAAA;EAAA,OAAAzZ,YAAA,CAAAwZ,SAAA;IAAAvZ,GAAA;IAAAC,KAAA,EAKA,SAAA8X,OAAOA,CAAC9J,OAAO,EAAE;MACf,IAAMgM,KAAK,GAAArK,aAAA,CAAA2J,SAAA,uBAAiBtL,OAAO,EAAC;MACpC,IAAIgM,KAAK,EAAE;QACT,IAAMC,IAAI,GAAGjM,OAAO,CAAC,CAAC,CAAC;QACvBiM,IAAI,CAACxR,gBAAgB,CAACwC,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACib,sBAAsB,CAAC;MACtE;MACA,OAAOK,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAAja,GAAA;IAAAC,KAAA,EAGA,SAAAka,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACJ,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAA/Z,GAAA;IAAAC,KAAA,EAIA,SAAA4Z,gBAAgBA,CAAC5Q,KAAK,EAAE;MACtB,IAAMiR,IAAI,GAAG,0CAA4CjR,KAAK,CAAC7H,MAAO;MACtE,IAAMgZ,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;MAC7B,IACED,KAAK,KAAKE,kBAAS,CAAC3D,MAAM,IAC1ByD,KAAK,KAAKE,kBAAS,CAAC1b,KAAK,IACzBwb,KAAK,KAAKE,kBAAS,CAAC1D,KAAK,EACzB;QACA,IAAIwD,KAAK,KAAKE,kBAAS,CAAC1b,KAAK,EAAE;UAC7Bsb,IAAI,CAACxQ,mBAAmB,CAACwB,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACib,sBAAsB,CAAC;QACzE;QACA,IAAMW,OAAO,GAAGL,IAAI,CAACP,MAAM,CAAC,CAAC;QAC7B,IAAIY,OAAO,IAAI,IAAI,CAACP,iBAAiB,EAAE;UACrC,OAAO,IAAI,CAACA,iBAAiB,CAACO,OAAO,CAAC;UACtC,EAAE,IAAI,CAACR,aAAa;QACtB;QACA,IAAI,CAACD,mBAAmB,CAAC,CAAC;MAC5B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA9Z,GAAA;IAAAC,KAAA,EAIA,SAAAua,aAAaA,CAACC,eAAe,EAAEC,WAAW,EAAE;MAC1C,IAAIC,QAAQ,GAAG,CAAC;MAChB,OACE,IAAI,CAACZ,aAAa,GAAGU,eAAe,IACpCE,QAAQ,GAAGD,WAAW,IACtB,IAAI,CAACxC,QAAQ,CAAC,CAAC,GAAG,CAAC,EACnB;QACA,IAAMgC,IAAI,GAAG,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAM6C,OAAO,GAAGL,IAAI,CAACP,MAAM,CAAC,CAAC;QAC7B,IAAMS,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;QAC7B,IAAID,KAAK,KAAKE,kBAAS,CAAC7D,IAAI,IAAI,EAAE8D,OAAO,IAAI,IAAI,CAACP,iBAAiB,CAAC,EAAE;UACpE,IAAI,CAACA,iBAAiB,CAACO,OAAO,CAAC,GAAG,IAAI;UACtC,EAAE,IAAI,CAACR,aAAa;UACpB,EAAEY,QAAQ;UACVT,IAAI,CAACU,IAAI,CAAC,CAAC;QACb;MACF;IACF;EAAC;AAAA,EAnGqB1D,uBAAa;AAAA,IAAA7Y,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsGtBgb,SAAS;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsB,eAAeA,CAC7BnL,UAAU,EACVwK,IAAI,EACJY,aAAa,EACbC,UAAU,EACVC,cAAc,EACd;EACA;EACA;EACA,IAAI,CAACtL,UAAU,IAAI,EAAEoL,aAAa,IAAIpL,UAAU,CAACuL,WAAW,CAAC,EAAE;IAC7D,OAAO7b,oBAAI;EACb;EACA,IAAI,CAACsQ,UAAU,CAACuL,WAAW,CAACH,aAAa,CAAC,CAACZ,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC,EAAE;IACzD,OAAOva,oBAAI;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM8b,MAAM,GAAGxL,UAAU,CAACyL,SAAS,CAACD,MAAM;EAC1C,IAAME,MAAM,GAAGL,UAAU,CAAC,CAAC,CAAC,GAAGG,MAAM,CAAC,CAAC,CAAC;EACxC,IAAMG,MAAM,GAAGN,UAAU,CAAC,CAAC,CAAC,GAAGG,MAAM,CAAC,CAAC,CAAC;EACxC,OACE,KAAK,GAAGtF,IAAI,CAAC0F,GAAG,CAACN,cAAc,CAAC,GAChCpF,IAAI,CAAC2F,IAAI,CAACH,MAAM,GAAGA,MAAM,GAAGC,MAAM,GAAGA,MAAM,CAAC,GAAGL,cAAc;AAEjE;;;;;;;;AC9JA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA3c,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACbid,SAAS,EAAE,CAAC;EACZC,WAAW,EAAE;AACf,CAAC;;;;;;;;ACVD;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAApd,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACbmd,MAAM,EAAE,QAAQ;EAChBC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;AACZ,CAAC;;;;;;;;;;;;;;;;;;;;ACXD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAAC5b,KAAK,EAAE6b,GAAG,EAAEC,GAAG,EAAE;EACrC,OAAOnG,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC9b,KAAK,EAAE6b,GAAG,CAAC,EAAEC,GAAG,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAACC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC3D,IAAMC,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAMK,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAIG,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,EAAE;IACxB,IAAMjW,CAAC,GAAG,CAAC,CAAC0V,CAAC,GAAGE,EAAE,IAAII,EAAE,GAAG,CAACL,CAAC,GAAGE,EAAE,IAAII,EAAE,KAAKD,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAC/D,IAAIjW,CAAC,GAAG,CAAC,EAAE;MACT4V,EAAE,GAAGE,EAAE;MACPD,EAAE,GAAGE,EAAE;IACT,CAAC,MAAM,IAAI/V,CAAC,GAAG,CAAC,EAAE;MAChB4V,EAAE,IAAII,EAAE,GAAGhW,CAAC;MACZ6V,EAAE,IAAII,EAAE,GAAGjW,CAAC;IACd;EACF;EACA,OAAOkW,eAAe,CAACR,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,eAAeA,CAACN,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC9C,IAAMC,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAMK,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,OAAOG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,iBAAiBA,CAACC,GAAG,EAAE;EACrC,IAAMrb,CAAC,GAAGqb,GAAG,CAAC9b,MAAM;EAEpB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;IAC1B;IACA,IAAIqb,MAAM,GAAGrb,CAAC;IACd,IAAIsb,KAAK,GAAGjH,IAAI,CAACC,GAAG,CAAC8G,GAAG,CAACpb,CAAC,CAAC,CAACA,CAAC,CAAC,CAAC;IAC/B,KAAK,IAAI+E,CAAC,GAAG/E,CAAC,GAAG,CAAC,EAAE+E,CAAC,GAAGhF,CAAC,EAAEgF,CAAC,EAAE,EAAE;MAC9B,IAAMwW,QAAQ,GAAGlH,IAAI,CAACC,GAAG,CAAC8G,GAAG,CAACrW,CAAC,CAAC,CAAC/E,CAAC,CAAC,CAAC;MACpC,IAAIub,QAAQ,GAAGD,KAAK,EAAE;QACpBA,KAAK,GAAGC,QAAQ;QAChBF,MAAM,GAAGtW,CAAC;MACZ;IACF;IAEA,IAAIuW,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,IAAI,CAAC,CAAC;IACf;;IAEA;IACA,IAAMjb,GAAG,GAAG+a,GAAG,CAACC,MAAM,CAAC;IACvBD,GAAG,CAACC,MAAM,CAAC,GAAGD,GAAG,CAACpb,CAAC,CAAC;IACpBob,GAAG,CAACpb,CAAC,CAAC,GAAGK,GAAG;;IAEZ;IACA,KAAK,IAAImb,CAAC,GAAGxb,CAAC,GAAG,CAAC,EAAEwb,CAAC,GAAGzb,CAAC,EAAEyb,CAAC,EAAE,EAAE;MAC9B,IAAMC,IAAI,GAAG,CAACL,GAAG,CAACI,CAAC,CAAC,CAACxb,CAAC,CAAC,GAAGob,GAAG,CAACpb,CAAC,CAAC,CAACA,CAAC,CAAC;MACnC,KAAK,IAAI0b,CAAC,GAAG1b,CAAC,EAAE0b,CAAC,GAAG3b,CAAC,GAAG,CAAC,EAAE2b,CAAC,EAAE,EAAE;QAC9B,IAAI1b,CAAC,IAAI0b,CAAC,EAAE;UACVN,GAAG,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,GAAG,CAAC;QACf,CAAC,MAAM;UACLN,GAAG,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,IAAID,IAAI,GAAGL,GAAG,CAACpb,CAAC,CAAC,CAAC0b,CAAC,CAAC;QAC/B;MACF;IACF;EACF;;EAEA;EACA,IAAMhB,CAAC,GAAG,IAAIja,KAAK,CAACV,CAAC,CAAC;EACtB,KAAK,IAAI4b,CAAC,GAAG5b,CAAC,GAAG,CAAC,EAAE4b,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC/BjB,CAAC,CAACiB,CAAC,CAAC,GAAGP,GAAG,CAACO,CAAC,CAAC,CAAC5b,CAAC,CAAC,GAAGqb,GAAG,CAACO,CAAC,CAAC,CAACA,CAAC,CAAC;IAC5B,KAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/BR,GAAG,CAACQ,CAAC,CAAC,CAAC7b,CAAC,CAAC,IAAIqb,GAAG,CAACQ,CAAC,CAAC,CAACD,CAAC,CAAC,GAAGjB,CAAC,CAACiB,CAAC,CAAC;IAC/B;EACF;EACA,OAAOjB,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmB,SAASA,CAACC,cAAc,EAAE;EACxC,OAAQA,cAAc,GAAG,GAAG,GAAIzH,IAAI,CAAC0H,EAAE;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAASA,CAACC,cAAc,EAAE;EACxC,OAAQA,cAAc,GAAG5H,IAAI,CAAC0H,EAAE,GAAI,GAAG;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,MAAMA,CAAC1c,CAAC,EAAEC,CAAC,EAAE;EAC3B,IAAMsF,CAAC,GAAGvF,CAAC,GAAGC,CAAC;EACf,OAAOsF,CAAC,GAAGtF,CAAC,GAAG,CAAC,GAAGsF,CAAC,GAAGtF,CAAC,GAAGsF,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoX,IAAIA,CAAC3c,CAAC,EAAEC,CAAC,EAAEib,CAAC,EAAE;EAC5B,OAAOlb,CAAC,GAAGkb,CAAC,IAAIjb,CAAC,GAAGD,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4c,OAAOA,CAACrc,CAAC,EAAEsc,QAAQ,EAAE;EACnC,IAAMC,MAAM,GAAGjI,IAAI,CAACkI,GAAG,CAAC,EAAE,EAAEF,QAAQ,CAAC;EACrC,OAAOhI,IAAI,CAACmI,KAAK,CAACzc,CAAC,GAAGuc,MAAM,CAAC,GAAGA,MAAM;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,KAAKA,CAACzc,CAAC,EAAEsc,QAAQ,EAAE;EACjC,OAAOhI,IAAI,CAACmI,KAAK,CAACJ,OAAO,CAACrc,CAAC,EAAEsc,QAAQ,CAAC,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,KAAKA,CAAC1c,CAAC,EAAEsc,QAAQ,EAAE;EACjC,OAAOhI,IAAI,CAACoI,KAAK,CAACL,OAAO,CAACrc,CAAC,EAAEsc,QAAQ,CAAC,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,IAAIA,CAAC3c,CAAC,EAAEsc,QAAQ,EAAE;EAChC,OAAOhI,IAAI,CAACqI,IAAI,CAACN,OAAO,CAACrc,CAAC,EAAEsc,QAAQ,CAAC,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,IAAIA,CAAC5c,CAAC,EAAEwa,GAAG,EAAEC,GAAG,EAAE;EAChC,IAAIza,CAAC,IAAIwa,GAAG,IAAIxa,CAAC,GAAGya,GAAG,EAAE;IACvB,OAAOza,CAAC;EACV;EACA,IAAM6c,KAAK,GAAGpC,GAAG,GAAGD,GAAG;EACvB,OAAQ,CAAE,CAACxa,CAAC,GAAGwa,GAAG,IAAIqC,KAAK,GAAIA,KAAK,IAAIA,KAAK,GAAIrC,GAAG;AACtD;;;;;;;;;AClNA,IAAAsC,KAAA,GAAA9a,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+a,YAAYA,CAACC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAE;EACvD;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,UAAUtD,MAAM,EAAEuD,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAE;MACzD,IAAI,CAAC1D,MAAM,EAAE;QACX,OAAOtR,SAAS;MAClB;MACA,IAAI,CAAC6U,UAAU,IAAI,CAACF,UAAU,EAAE;QAC9B,OAAOrD,MAAM;MACf;MACA,IAAM2D,SAAS,GAAGN,UAAU,GAAG,CAAC,GAAGG,IAAI,CAAC,CAAC,CAAC,GAAGD,UAAU;MACvD,IAAMK,UAAU,GAAGP,UAAU,GAAG,CAAC,GAAGG,IAAI,CAAC,CAAC,CAAC,GAAGD,UAAU;MACxD,IAAMM,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;MAC/C,IAAMI,MAAM,GAAGJ,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;MAC/C,IAAIK,IAAI,GAAGX,MAAM,CAAC,CAAC,CAAC,GAAGO,SAAS,GAAG,CAAC,GAAGE,MAAM;MAC7C,IAAIG,IAAI,GAAGZ,MAAM,CAAC,CAAC,CAAC,GAAGO,SAAS,GAAG,CAAC,GAAGE,MAAM;MAC7C,IAAII,IAAI,GAAGb,MAAM,CAAC,CAAC,CAAC,GAAGQ,UAAU,GAAG,CAAC,GAAGE,MAAM;MAC9C,IAAII,IAAI,GAAGd,MAAM,CAAC,CAAC,CAAC,GAAGQ,UAAU,GAAG,CAAC,GAAGE,MAAM;;MAE9C;MACA;MACA,IAAIC,IAAI,GAAGC,IAAI,EAAE;QACfD,IAAI,GAAG,CAACC,IAAI,GAAGD,IAAI,IAAI,CAAC;QACxBC,IAAI,GAAGD,IAAI;MACb;MACA,IAAIE,IAAI,GAAGC,IAAI,EAAE;QACfD,IAAI,GAAG,CAACC,IAAI,GAAGD,IAAI,IAAI,CAAC;QACxBC,IAAI,GAAGD,IAAI;MACb;MAEA,IAAIlD,CAAC,GAAG,IAAAJ,WAAK,EAACX,MAAM,CAAC,CAAC,CAAC,EAAE+D,IAAI,EAAEC,IAAI,CAAC;MACpC,IAAIhD,CAAC,GAAG,IAAAL,WAAK,EAACX,MAAM,CAAC,CAAC,CAAC,EAAEiE,IAAI,EAAEC,IAAI,CAAC;;MAEpC;MACA,IAAIT,QAAQ,IAAIH,MAAM,IAAIC,UAAU,EAAE;QACpC,IAAMY,KAAK,GAAG,EAAE,GAAGZ,UAAU;QAC7BxC,CAAC,IACC,CAACoD,KAAK,GAAGzJ,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG1F,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEkD,IAAI,GAAG/D,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGmE,KAAK,CAAC,GAC5DA,KAAK,GAAGzJ,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG1F,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEb,MAAM,CAAC,CAAC,CAAC,GAAGgE,IAAI,CAAC,GAAGG,KAAK,CAAC;QAC7DnD,CAAC,IACC,CAACmD,KAAK,GAAGzJ,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG1F,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEoD,IAAI,GAAGjE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGmE,KAAK,CAAC,GAC5DA,KAAK,GAAGzJ,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG1F,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEb,MAAM,CAAC,CAAC,CAAC,GAAGkE,IAAI,CAAC,GAAGC,KAAK,CAAC;MAC/D;MAEA,OAAO,CAACpD,CAAC,EAAEC,CAAC,CAAC;IACf;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACO,SAASoD,IAAIA,CAACpE,MAAM,EAAE;EAC3B,OAAOA,MAAM;AACf;;;;;;;;AC9EA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAAA7c,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIe;EACbghB,OAAO,EAAE,CAAC;EACVC,YAAY,EAAE,CAAC;EACfC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;AACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZD,IAAAC,aAAA,GAAApa,sBAAA,CAAAnC,OAAA;AAAoD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAia,eAAAxZ,CAAA,EAAAT,CAAA,WAAAka,eAAA,CAAAzZ,CAAA,KAAA0Z,qBAAA,CAAA1Z,CAAA,EAAAT,CAAA,KAAAoa,2BAAA,CAAA3Z,CAAA,EAAAT,CAAA,KAAAqa,gBAAA;AAAA,SAAAA,iBAAA,cAAA9Z,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAA0e,sBAAA1Z,CAAA,EAAA4W,CAAA,QAAA3W,CAAA,WAAAD,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAC,CAAA,QAAAV,CAAA,EAAAvE,CAAA,EAAAC,CAAA,EAAA+X,CAAA,EAAAvY,CAAA,OAAA+N,CAAA,OAAA9I,CAAA,iBAAAzE,CAAA,IAAAgF,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,GAAAia,IAAA,QAAArD,CAAA,QAAAvW,MAAA,CAAAJ,CAAA,MAAAA,CAAA,UAAAuI,CAAA,uBAAAA,CAAA,IAAAjJ,CAAA,GAAAtE,CAAA,CAAA2C,IAAA,CAAAqC,CAAA,GAAAia,IAAA,MAAAzf,CAAA,CAAAgI,IAAA,CAAAlD,CAAA,CAAA5F,KAAA,GAAAc,CAAA,CAAAF,MAAA,KAAAqc,CAAA,GAAApO,CAAA,iBAAAxI,CAAA,IAAAN,CAAA,OAAA1E,CAAA,GAAAgF,CAAA,yBAAAwI,CAAA,YAAAvI,CAAA,CAAAka,MAAA,KAAAnH,CAAA,GAAA/S,CAAA,CAAAka,MAAA,IAAA9Z,MAAA,CAAA2S,CAAA,MAAAA,CAAA,2BAAAtT,CAAA,QAAA1E,CAAA,aAAAP,CAAA;AAAA,SAAAgf,gBAAAzZ,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAAA,CAAA,IAHpD;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoa,cAAcA,CAACC,WAAW,EAAE;EAC1C,IAAMrC,MAAM,GAAGsC,WAAW,CAAC,CAAC;EAC5B,KAAK,IAAIrf,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IACpDsf,gBAAgB,CAACvC,MAAM,EAAEqC,WAAW,CAACpf,CAAC,CAAC,CAAC;EAC1C;EACA,OAAO+c,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwC,kBAAkBA,CAACC,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAE;EACxC,IAAMhC,IAAI,GAAGrJ,IAAI,CAACkG,GAAG,CAACzX,KAAK,CAAC,IAAI,EAAE0c,EAAE,CAAC;EACrC,IAAM5B,IAAI,GAAGvJ,IAAI,CAACkG,GAAG,CAACzX,KAAK,CAAC,IAAI,EAAE2c,EAAE,CAAC;EACrC,IAAM9B,IAAI,GAAGtJ,IAAI,CAACmG,GAAG,CAAC1X,KAAK,CAAC,IAAI,EAAE0c,EAAE,CAAC;EACrC,IAAM3B,IAAI,GAAGxJ,IAAI,CAACmG,GAAG,CAAC1X,KAAK,CAAC,IAAI,EAAE2c,EAAE,CAAC;EACrC,OAAOE,cAAc,CAACjC,IAAI,EAAEE,IAAI,EAAED,IAAI,EAAEE,IAAI,EAAE6B,IAAI,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,MAAMA,CAAC7C,MAAM,EAAEre,KAAK,EAAEghB,IAAI,EAAE;EAC1C,IAAIA,IAAI,EAAE;IACRA,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK;IAC3BghB,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK;IAC3BghB,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK;IAC3BghB,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK;IAC3B,OAAOghB,IAAI;EACb;EACA,OAAO,CACL3C,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK,EACjBqe,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK,EACjBqe,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK,EACjBqe,MAAM,CAAC,CAAC,CAAC,GAAGre,KAAK,CAClB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmhB,KAAKA,CAAC9C,MAAM,EAAE2C,IAAI,EAAE;EAClC,IAAIA,IAAI,EAAE;IACRA,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB,OAAO2C,IAAI;EACb;EACA,OAAO3C,MAAM,CAACra,KAAK,CAAC,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASod,wBAAwBA,CAAC/C,MAAM,EAAErC,CAAC,EAAEC,CAAC,EAAE;EACrD,IAAIK,EAAE,EAAEC,EAAE;EACV,IAAIP,CAAC,GAAGqC,MAAM,CAAC,CAAC,CAAC,EAAE;IACjB/B,EAAE,GAAG+B,MAAM,CAAC,CAAC,CAAC,GAAGrC,CAAC;EACpB,CAAC,MAAM,IAAIqC,MAAM,CAAC,CAAC,CAAC,GAAGrC,CAAC,EAAE;IACxBM,EAAE,GAAGN,CAAC,GAAGqC,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC,MAAM;IACL/B,EAAE,GAAG,CAAC;EACR;EACA,IAAIL,CAAC,GAAGoC,MAAM,CAAC,CAAC,CAAC,EAAE;IACjB9B,EAAE,GAAG8B,MAAM,CAAC,CAAC,CAAC,GAAGpC,CAAC;EACpB,CAAC,MAAM,IAAIoC,MAAM,CAAC,CAAC,CAAC,GAAGpC,CAAC,EAAE;IACxBM,EAAE,GAAGN,CAAC,GAAGoC,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC,MAAM;IACL9B,EAAE,GAAG,CAAC;EACR;EACA,OAAOD,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8E,kBAAkBA,CAAChD,MAAM,EAAE3N,UAAU,EAAE;EACrD,OAAO4Q,UAAU,CAACjD,MAAM,EAAE3N,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6Q,cAAcA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC/C,OACED,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBA,OAAO,CAAC,CAAC,CAAC,IAAID,OAAO,CAAC,CAAC,CAAC,IACxBA,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBA,OAAO,CAAC,CAAC,CAAC,IAAID,OAAO,CAAC,CAAC,CAAC;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASF,UAAUA,CAACjD,MAAM,EAAErC,CAAC,EAAEC,CAAC,EAAE;EACvC,OAAOoC,MAAM,CAAC,CAAC,CAAC,IAAIrC,CAAC,IAAIA,CAAC,IAAIqC,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAIpC,CAAC,IAAIA,CAAC,IAAIoC,MAAM,CAAC,CAAC,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqD,sBAAsBA,CAACrD,MAAM,EAAE3N,UAAU,EAAE;EACzD,IAAMsO,IAAI,GAAGX,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMa,IAAI,GAAGb,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMY,IAAI,GAAGZ,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMc,IAAI,GAAGd,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMrC,CAAC,GAAGtL,UAAU,CAAC,CAAC,CAAC;EACvB,IAAMuL,CAAC,GAAGvL,UAAU,CAAC,CAAC,CAAC;EACvB,IAAIiR,YAAY,GAAGC,qBAAY,CAACtC,OAAO;EACvC,IAAItD,CAAC,GAAGgD,IAAI,EAAE;IACZ2C,YAAY,GAAGA,YAAY,GAAGC,qBAAY,CAACjC,IAAI;EACjD,CAAC,MAAM,IAAI3D,CAAC,GAAGiD,IAAI,EAAE;IACnB0C,YAAY,GAAGA,YAAY,GAAGC,qBAAY,CAACnC,KAAK;EAClD;EACA,IAAIxD,CAAC,GAAGiD,IAAI,EAAE;IACZyC,YAAY,GAAGA,YAAY,GAAGC,qBAAY,CAAClC,KAAK;EAClD,CAAC,MAAM,IAAIzD,CAAC,GAAGkD,IAAI,EAAE;IACnBwC,YAAY,GAAGA,YAAY,GAAGC,qBAAY,CAACpC,KAAK;EAClD;EACA,IAAImC,YAAY,KAAKC,qBAAY,CAACtC,OAAO,EAAE;IACzCqC,YAAY,GAAGC,qBAAY,CAACrC,YAAY;EAC1C;EACA,OAAOoC,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAShB,WAAWA,CAAA,EAAG;EAC5B,OAAO,CAAC3J,QAAQ,EAAEA,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiK,cAAcA,CAACjC,IAAI,EAAEE,IAAI,EAAED,IAAI,EAAEE,IAAI,EAAE6B,IAAI,EAAE;EAC3D,IAAIA,IAAI,EAAE;IACRA,IAAI,CAAC,CAAC,CAAC,GAAGhC,IAAI;IACdgC,IAAI,CAAC,CAAC,CAAC,GAAG9B,IAAI;IACd8B,IAAI,CAAC,CAAC,CAAC,GAAG/B,IAAI;IACd+B,IAAI,CAAC,CAAC,CAAC,GAAG7B,IAAI;IACd,OAAO6B,IAAI;EACb;EACA,OAAO,CAAChC,IAAI,EAAEE,IAAI,EAAED,IAAI,EAAEE,IAAI,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS0C,mBAAmBA,CAACb,IAAI,EAAE;EACxC,OAAOC,cAAc,CAACjK,QAAQ,EAAEA,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,EAAEgK,IAAI,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASc,4BAA4BA,CAACpR,UAAU,EAAEsQ,IAAI,EAAE;EAC7D,IAAMhF,CAAC,GAAGtL,UAAU,CAAC,CAAC,CAAC;EACvB,IAAMuL,CAAC,GAAGvL,UAAU,CAAC,CAAC,CAAC;EACvB,OAAOuQ,cAAc,CAACjF,CAAC,EAAEC,CAAC,EAAED,CAAC,EAAEC,CAAC,EAAE+E,IAAI,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASe,6BAA6BA,CAACrB,WAAW,EAAEM,IAAI,EAAE;EAC/D,IAAM3C,MAAM,GAAGwD,mBAAmB,CAACb,IAAI,CAAC;EACxC,OAAOgB,iBAAiB,CAAC3D,MAAM,EAAEqC,WAAW,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuB,iCAAiCA,CAC/CC,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNpB,IAAI,EACJ;EACA,IAAM3C,MAAM,GAAGwD,mBAAmB,CAACb,IAAI,CAAC;EACxC,OAAOqB,qBAAqB,CAAChE,MAAM,EAAE6D,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,uBAAuBA,CAACC,KAAK,EAAEvB,IAAI,EAAE;EACnD,IAAM3C,MAAM,GAAGwD,mBAAmB,CAACb,IAAI,CAAC;EACxC,OAAOwB,WAAW,CAACnE,MAAM,EAAEkE,KAAK,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASlgB,MAAMA,CAACmf,OAAO,EAAEC,OAAO,EAAE;EACvC,OACED,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgB,mBAAmBA,CAACjB,OAAO,EAAEC,OAAO,EAAEiB,SAAS,EAAE;EAC/D,OACE/M,IAAI,CAACC,GAAG,CAAC4L,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGiB,SAAS,IAC7C/M,IAAI,CAACC,GAAG,CAAC4L,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGiB,SAAS,IAC7C/M,IAAI,CAACC,GAAG,CAAC4L,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGiB,SAAS,IAC7C/M,IAAI,CAACC,GAAG,CAAC4L,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGiB,SAAS;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS9gB,MAAMA,CAAC4f,OAAO,EAAEC,OAAO,EAAE;EACvC,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,CAAC,EAAE;IAC3BA,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC;EACzB;EACA,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,CAAC,EAAE;IAC3BA,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC;EACzB;EACA,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,CAAC,EAAE;IAC3BA,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC;EACzB;EACA,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,CAAC,EAAE;IAC3BA,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC;EACzB;EACA,OAAOD,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACO,SAASZ,gBAAgBA,CAACvC,MAAM,EAAE3N,UAAU,EAAE;EACnD,IAAIA,UAAU,CAAC,CAAC,CAAC,GAAG2N,MAAM,CAAC,CAAC,CAAC,EAAE;IAC7BA,MAAM,CAAC,CAAC,CAAC,GAAG3N,UAAU,CAAC,CAAC,CAAC;EAC3B;EACA,IAAIA,UAAU,CAAC,CAAC,CAAC,GAAG2N,MAAM,CAAC,CAAC,CAAC,EAAE;IAC7BA,MAAM,CAAC,CAAC,CAAC,GAAG3N,UAAU,CAAC,CAAC,CAAC;EAC3B;EACA,IAAIA,UAAU,CAAC,CAAC,CAAC,GAAG2N,MAAM,CAAC,CAAC,CAAC,EAAE;IAC7BA,MAAM,CAAC,CAAC,CAAC,GAAG3N,UAAU,CAAC,CAAC,CAAC;EAC3B;EACA,IAAIA,UAAU,CAAC,CAAC,CAAC,GAAG2N,MAAM,CAAC,CAAC,CAAC,EAAE;IAC7BA,MAAM,CAAC,CAAC,CAAC,GAAG3N,UAAU,CAAC,CAAC,CAAC;EAC3B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASsR,iBAAiBA,CAAC3D,MAAM,EAAEqC,WAAW,EAAE;EACrD,KAAK,IAAIpf,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IACpDsf,gBAAgB,CAACvC,MAAM,EAAEqC,WAAW,CAACpf,CAAC,CAAC,CAAC;EAC1C;EACA,OAAO+c,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgE,qBAAqBA,CACnChE,MAAM,EACN6D,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN;EACA,OAAOD,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrCO,QAAQ,CAACtE,MAAM,EAAE6D,eAAe,CAACC,MAAM,CAAC,EAAED,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;EACxE;EACA,OAAO9D,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmE,WAAWA,CAACnE,MAAM,EAAEkE,KAAK,EAAE;EACzC,KAAK,IAAIjhB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGiZ,KAAK,CAAC3hB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C0gB,iBAAiB,CAAC3D,MAAM,EAAEkE,KAAK,CAACjhB,CAAC,CAAC,CAAC;EACrC;EACA,OAAO+c,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASsE,QAAQA,CAACtE,MAAM,EAAErC,CAAC,EAAEC,CAAC,EAAE;EACrCoC,MAAM,CAAC,CAAC,CAAC,GAAG1I,IAAI,CAACkG,GAAG,CAACwC,MAAM,CAAC,CAAC,CAAC,EAAErC,CAAC,CAAC;EAClCqC,MAAM,CAAC,CAAC,CAAC,GAAG1I,IAAI,CAACkG,GAAG,CAACwC,MAAM,CAAC,CAAC,CAAC,EAAEpC,CAAC,CAAC;EAClCoC,MAAM,CAAC,CAAC,CAAC,GAAG1I,IAAI,CAACmG,GAAG,CAACuC,MAAM,CAAC,CAAC,CAAC,EAAErC,CAAC,CAAC;EAClCqC,MAAM,CAAC,CAAC,CAAC,GAAG1I,IAAI,CAACmG,GAAG,CAACuC,MAAM,CAAC,CAAC,CAAC,EAAEpC,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2G,aAAaA,CAACvE,MAAM,EAAEwE,QAAQ,EAAE;EAC9C,IAAIC,GAAG;EACPA,GAAG,GAAGD,QAAQ,CAACE,aAAa,CAAC1E,MAAM,CAAC,CAAC;EACrC,IAAIyE,GAAG,EAAE;IACP,OAAOA,GAAG;EACZ;EACAA,GAAG,GAAGD,QAAQ,CAACG,cAAc,CAAC3E,MAAM,CAAC,CAAC;EACtC,IAAIyE,GAAG,EAAE;IACP,OAAOA,GAAG;EACZ;EACAA,GAAG,GAAGD,QAAQ,CAACI,WAAW,CAAC5E,MAAM,CAAC,CAAC;EACnC,IAAIyE,GAAG,EAAE;IACP,OAAOA,GAAG;EACZ;EACAA,GAAG,GAAGD,QAAQ,CAACK,UAAU,CAAC7E,MAAM,CAAC,CAAC;EAClC,IAAIyE,GAAG,EAAE;IACP,OAAOA,GAAG;EACZ;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,OAAOA,CAAC9E,MAAM,EAAE;EAC9B,IAAI+E,IAAI,GAAG,CAAC;EACZ,IAAI,CAACre,OAAO,CAACsZ,MAAM,CAAC,EAAE;IACpB+E,IAAI,GAAGC,QAAQ,CAAChF,MAAM,CAAC,GAAGiF,SAAS,CAACjF,MAAM,CAAC;EAC7C;EACA,OAAO+E,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASL,aAAaA,CAAC1E,MAAM,EAAE;EACpC,OAAO,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2E,cAAcA,CAAC3E,MAAM,EAAE;EACrC,OAAO,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkF,SAASA,CAAClF,MAAM,EAAE;EAChC,OAAO,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmF,SAASA,CAACnF,MAAM,EAAEoF,MAAM,EAAE;EACxC,IAAI/S,UAAU;EACd,IAAI+S,MAAM,KAAK,aAAa,EAAE;IAC5B/S,UAAU,GAAGqS,aAAa,CAAC1E,MAAM,CAAC;EACpC,CAAC,MAAM,IAAIoF,MAAM,KAAK,cAAc,EAAE;IACpC/S,UAAU,GAAGsS,cAAc,CAAC3E,MAAM,CAAC;EACrC,CAAC,MAAM,IAAIoF,MAAM,KAAK,UAAU,EAAE;IAChC/S,UAAU,GAAGwS,UAAU,CAAC7E,MAAM,CAAC;EACjC,CAAC,MAAM,IAAIoF,MAAM,KAAK,WAAW,EAAE;IACjC/S,UAAU,GAAGuS,WAAW,CAAC5E,MAAM,CAAC;EAClC,CAAC,MAAM;IACL,MAAM,IAAI7S,KAAK,CAAC,gBAAgB,CAAC;EACnC;EACA,OAAOkF,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASgT,eAAeA,CAAClC,OAAO,EAAEC,OAAO,EAAE;EAChD,IAAMzC,IAAI,GAAGrJ,IAAI,CAACkG,GAAG,CAAC2F,OAAO,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAMvC,IAAI,GAAGvJ,IAAI,CAACkG,GAAG,CAAC2F,OAAO,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAMxC,IAAI,GAAGtJ,IAAI,CAACmG,GAAG,CAAC0F,OAAO,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAMtC,IAAI,GAAGxJ,IAAI,CAACmG,GAAG,CAAC0F,OAAO,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7C,OAAO,CAACxC,IAAI,GAAGD,IAAI,KAAKG,IAAI,GAAGD,IAAI,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyE,iBAAiBA,CAAC1I,MAAM,EAAEuD,UAAU,EAAEoF,QAAQ,EAAEnF,IAAI,EAAEuC,IAAI,EAAE;EAC1E,IAAA6C,mBAAA,GAAyCC,kBAAkB,CACzD7I,MAAM,EACNuD,UAAU,EACVoF,QAAQ,EACRnF,IACF,CAAC;IAAAsF,oBAAA,GAAAlE,cAAA,CAAAgE,mBAAA;IALMG,EAAE,GAAAD,oBAAA;IAAEE,EAAE,GAAAF,oBAAA;IAAE7H,EAAE,GAAA6H,oBAAA;IAAE5H,EAAE,GAAA4H,oBAAA;IAAE3H,EAAE,GAAA2H,oBAAA;IAAE1H,EAAE,GAAA0H,oBAAA;IAAEG,EAAE,GAAAH,oBAAA;IAAEI,EAAE,GAAAJ,oBAAA;EAMrC,OAAO9C,cAAc,CACnBtL,IAAI,CAACkG,GAAG,CAACmI,EAAE,EAAE9H,EAAE,EAAEE,EAAE,EAAE8H,EAAE,CAAC,EACxBvO,IAAI,CAACkG,GAAG,CAACoI,EAAE,EAAE9H,EAAE,EAAEE,EAAE,EAAE8H,EAAE,CAAC,EACxBxO,IAAI,CAACmG,GAAG,CAACkI,EAAE,EAAE9H,EAAE,EAAEE,EAAE,EAAE8H,EAAE,CAAC,EACxBvO,IAAI,CAACmG,GAAG,CAACmI,EAAE,EAAE9H,EAAE,EAAEE,EAAE,EAAE8H,EAAE,CAAC,EACxBnD,IACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8C,kBAAkBA,CAAC7I,MAAM,EAAEuD,UAAU,EAAEoF,QAAQ,EAAEnF,IAAI,EAAE;EACrE,IAAMnC,EAAE,GAAIkC,UAAU,GAAGC,IAAI,CAAC,CAAC,CAAC,GAAI,CAAC;EACrC,IAAMlC,EAAE,GAAIiC,UAAU,GAAGC,IAAI,CAAC,CAAC,CAAC,GAAI,CAAC;EACrC,IAAM2F,WAAW,GAAGzO,IAAI,CAAC0O,GAAG,CAACT,QAAQ,CAAC;EACtC,IAAMU,WAAW,GAAG3O,IAAI,CAAC4O,GAAG,CAACX,QAAQ,CAAC;EACtC,IAAMY,IAAI,GAAGlI,EAAE,GAAG8H,WAAW;EAC7B,IAAMK,IAAI,GAAGnI,EAAE,GAAGgI,WAAW;EAC7B,IAAMI,IAAI,GAAGnI,EAAE,GAAG6H,WAAW;EAC7B,IAAMO,IAAI,GAAGpI,EAAE,GAAG+H,WAAW;EAC7B,IAAMtI,CAAC,GAAGf,MAAM,CAAC,CAAC,CAAC;EACnB,IAAMgB,CAAC,GAAGhB,MAAM,CAAC,CAAC,CAAC;EACnB,OAAO,CACLe,CAAC,GAAGwI,IAAI,GAAGG,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGC,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGG,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGC,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGG,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGC,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGG,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGC,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGG,IAAI,EACf1I,CAAC,GAAGwI,IAAI,GAAGC,IAAI,CAChB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASpB,SAASA,CAACjF,MAAM,EAAE;EAChC,OAAOA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASuG,mBAAmBA,CAACpD,OAAO,EAAEC,OAAO,EAAE;EACpD,IAAMoD,YAAY,GAAGC,eAAe,CAACtD,OAAO,EAAEC,OAAO,CAAC;EACtD,OAAO0B,OAAO,CAAC0B,YAAY,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAACtD,OAAO,EAAEC,OAAO,EAAET,IAAI,EAAE;EACtD,IAAM6D,YAAY,GAAG7D,IAAI,GAAGA,IAAI,GAAGL,WAAW,CAAC,CAAC;EAChD,IAAIoE,UAAU,CAACvD,OAAO,EAAEC,OAAO,CAAC,EAAE;IAChC,IAAID,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3BoD,YAAY,CAAC,CAAC,CAAC,GAAGrD,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLqD,YAAY,CAAC,CAAC,CAAC,GAAGpD,OAAO,CAAC,CAAC,CAAC;IAC9B;IACA,IAAID,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3BoD,YAAY,CAAC,CAAC,CAAC,GAAGrD,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLqD,YAAY,CAAC,CAAC,CAAC,GAAGpD,OAAO,CAAC,CAAC,CAAC;IAC9B;IACA,IAAID,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3BoD,YAAY,CAAC,CAAC,CAAC,GAAGrD,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLqD,YAAY,CAAC,CAAC,CAAC,GAAGpD,OAAO,CAAC,CAAC,CAAC;IAC9B;IACA,IAAID,OAAO,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3BoD,YAAY,CAAC,CAAC,CAAC,GAAGrD,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLqD,YAAY,CAAC,CAAC,CAAC,GAAGpD,OAAO,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,MAAM;IACLI,mBAAmB,CAACgD,YAAY,CAAC;EACnC;EACA,OAAOA,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACO,SAASG,SAASA,CAAC3G,MAAM,EAAE;EAChC,OAAOgF,QAAQ,CAAChF,MAAM,CAAC,GAAGiF,SAAS,CAACjF,MAAM,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4G,OAAOA,CAAC5G,MAAM,EAAE;EAC9B,OAAO,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6E,UAAUA,CAAC7E,MAAM,EAAE;EACjC,OAAO,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4E,WAAWA,CAAC5E,MAAM,EAAE;EAClC,OAAO,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgF,QAAQA,CAAChF,MAAM,EAAE;EAC/B,OAAOA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0G,UAAUA,CAACvD,OAAO,EAAEC,OAAO,EAAE;EAC3C,OACED,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC,IACxBD,OAAO,CAAC,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS1c,OAAOA,CAACsZ,MAAM,EAAE;EAC9B,OAAOA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS6G,cAAcA,CAAC7G,MAAM,EAAE2C,IAAI,EAAE;EAC3C,IAAIA,IAAI,EAAE;IACRA,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB2C,IAAI,CAAC,CAAC,CAAC,GAAG3C,MAAM,CAAC,CAAC,CAAC;IACnB,OAAO2C,IAAI;EACb;EACA,OAAO3C,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAAS8G,eAAeA,CAAC9G,MAAM,EAAEre,KAAK,EAAE;EAC7C,IAAMmb,MAAM,GAAI,CAACkD,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAKre,KAAK,GAAG,CAAC,CAAC;EAC1D,IAAMob,MAAM,GAAI,CAACiD,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAKre,KAAK,GAAG,CAAC,CAAC;EAC1Dqe,MAAM,CAAC,CAAC,CAAC,IAAIlD,MAAM;EACnBkD,MAAM,CAAC,CAAC,CAAC,IAAIlD,MAAM;EACnBkD,MAAM,CAAC,CAAC,CAAC,IAAIjD,MAAM;EACnBiD,MAAM,CAAC,CAAC,CAAC,IAAIjD,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgK,iBAAiBA,CAAC/G,MAAM,EAAEgH,KAAK,EAAE3jB,GAAG,EAAE;EACpD,IAAIqjB,UAAU,GAAG,KAAK;EACtB,IAAMO,QAAQ,GAAG5D,sBAAsB,CAACrD,MAAM,EAAEgH,KAAK,CAAC;EACtD,IAAME,MAAM,GAAG7D,sBAAsB,CAACrD,MAAM,EAAE3c,GAAG,CAAC;EAClD,IACE4jB,QAAQ,KAAK1D,qBAAY,CAACrC,YAAY,IACtCgG,MAAM,KAAK3D,qBAAY,CAACrC,YAAY,EACpC;IACAwF,UAAU,GAAG,IAAI;EACnB,CAAC,MAAM;IACL,IAAM/F,IAAI,GAAGX,MAAM,CAAC,CAAC,CAAC;IACtB,IAAMa,IAAI,GAAGb,MAAM,CAAC,CAAC,CAAC;IACtB,IAAMY,IAAI,GAAGZ,MAAM,CAAC,CAAC,CAAC;IACtB,IAAMc,IAAI,GAAGd,MAAM,CAAC,CAAC,CAAC;IACtB,IAAMmH,MAAM,GAAGH,KAAK,CAAC,CAAC,CAAC;IACvB,IAAMI,MAAM,GAAGJ,KAAK,CAAC,CAAC,CAAC;IACvB,IAAMK,IAAI,GAAGhkB,GAAG,CAAC,CAAC,CAAC;IACnB,IAAMikB,IAAI,GAAGjkB,GAAG,CAAC,CAAC,CAAC;IACnB,IAAMkkB,KAAK,GAAG,CAACD,IAAI,GAAGF,MAAM,KAAKC,IAAI,GAAGF,MAAM,CAAC;IAC/C,IAAIxJ,CAAC,EAAEC,CAAC;IACR,IAAI,CAAC,EAAEsJ,MAAM,GAAG3D,qBAAY,CAACpC,KAAK,CAAC,IAAI,EAAE8F,QAAQ,GAAG1D,qBAAY,CAACpC,KAAK,CAAC,EAAE;MACvE;MACAxD,CAAC,GAAG0J,IAAI,GAAG,CAACC,IAAI,GAAGxG,IAAI,IAAIyG,KAAK;MAChCb,UAAU,GAAG/I,CAAC,IAAIgD,IAAI,IAAIhD,CAAC,IAAIiD,IAAI;IACrC;IACA,IACE,CAAC8F,UAAU,IACX,CAAC,EAAEQ,MAAM,GAAG3D,qBAAY,CAACnC,KAAK,CAAC,IAC/B,EAAE6F,QAAQ,GAAG1D,qBAAY,CAACnC,KAAK,CAAC,EAChC;MACA;MACAxD,CAAC,GAAG0J,IAAI,GAAG,CAACD,IAAI,GAAGzG,IAAI,IAAI2G,KAAK;MAChCb,UAAU,GAAG9I,CAAC,IAAIiD,IAAI,IAAIjD,CAAC,IAAIkD,IAAI;IACrC;IACA,IACE,CAAC4F,UAAU,IACX,CAAC,EAAEQ,MAAM,GAAG3D,qBAAY,CAAClC,KAAK,CAAC,IAC/B,EAAE4F,QAAQ,GAAG1D,qBAAY,CAAClC,KAAK,CAAC,EAChC;MACA;MACA1D,CAAC,GAAG0J,IAAI,GAAG,CAACC,IAAI,GAAGzG,IAAI,IAAI0G,KAAK;MAChCb,UAAU,GAAG/I,CAAC,IAAIgD,IAAI,IAAIhD,CAAC,IAAIiD,IAAI;IACrC;IACA,IACE,CAAC8F,UAAU,IACX,CAAC,EAAEQ,MAAM,GAAG3D,qBAAY,CAACjC,IAAI,CAAC,IAC9B,EAAE2F,QAAQ,GAAG1D,qBAAY,CAACjC,IAAI,CAAC,EAC/B;MACA;MACA1D,CAAC,GAAG0J,IAAI,GAAG,CAACD,IAAI,GAAG1G,IAAI,IAAI4G,KAAK;MAChCb,UAAU,GAAG9I,CAAC,IAAIiD,IAAI,IAAIjD,CAAC,IAAIkD,IAAI;IACrC;EACF;EACA,OAAO4F,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,cAAcA,CAACxH,MAAM,EAAEyH,WAAW,EAAE9E,IAAI,EAAE+E,KAAK,EAAE;EAC/D,IAAIhhB,OAAO,CAACsZ,MAAM,CAAC,EAAE;IACnB,OAAOwD,mBAAmB,CAACb,IAAI,CAAC;EAClC;EACA,IAAIN,WAAW,GAAG,EAAE;EACpB,IAAIqF,KAAK,GAAG,CAAC,EAAE;IACb,IAAMC,KAAK,GAAG3H,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IACnC,IAAM4H,MAAM,GAAG5H,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IACpC,KAAK,IAAI/c,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGykB,KAAK,EAAE,EAAEzkB,CAAC,EAAE;MAC9Bof,WAAW,CAAC5X,IAAI,CACduV,MAAM,CAAC,CAAC,CAAC,GAAI2H,KAAK,GAAG1kB,CAAC,GAAIykB,KAAK,EAC/B1H,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,GAAI4H,MAAM,GAAG3kB,CAAC,GAAIykB,KAAK,EAChC1H,MAAM,CAAC,CAAC,CAAC,GAAI2H,KAAK,GAAG1kB,CAAC,GAAIykB,KAAK,EAC/B1H,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,GAAI4H,MAAM,GAAG3kB,CAAC,GAAIykB,KAC7B,CAAC;IACH;EACF,CAAC,MAAM;IACLrF,WAAW,GAAG,CACZrC,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,CACV;EACH;EACAyH,WAAW,CAACpF,WAAW,EAAEA,WAAW,EAAE,CAAC,CAAC;EACxC,IAAMI,EAAE,GAAG,EAAE;EACb,IAAMC,EAAE,GAAG,EAAE;EACb,KAAK,IAAIzf,EAAC,GAAG,CAAC,EAAE2b,CAAC,GAAGyD,WAAW,CAAC9f,MAAM,EAAEU,EAAC,GAAG2b,CAAC,EAAE3b,EAAC,IAAI,CAAC,EAAE;IACrDwf,EAAE,CAAChY,IAAI,CAAC4X,WAAW,CAACpf,EAAC,CAAC,CAAC;IACvByf,EAAE,CAACjY,IAAI,CAAC4X,WAAW,CAACpf,EAAC,GAAG,CAAC,CAAC,CAAC;EAC7B;EACA,OAAOuf,kBAAkB,CAACC,EAAE,EAAEC,EAAE,EAAEC,IAAI,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkF,KAAKA,CAAC7H,MAAM,EAAE8H,UAAU,EAAE;EACxC,IAAMC,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;EAC/C,IAAMpL,MAAM,GAAGsI,SAAS,CAAClF,MAAM,CAAC;EAChC,IACE8H,UAAU,CAACG,QAAQ,CAAC,CAAC,KACpBrL,MAAM,CAAC,CAAC,CAAC,GAAGmL,gBAAgB,CAAC,CAAC,CAAC,IAAInL,MAAM,CAAC,CAAC,CAAC,IAAImL,gBAAgB,CAAC,CAAC,CAAC,CAAC,EACrE;IACA,IAAMG,UAAU,GAAGlD,QAAQ,CAAC+C,gBAAgB,CAAC;IAC7C,IAAMI,UAAU,GAAG7Q,IAAI,CAACoI,KAAK,CAC3B,CAAC9C,MAAM,CAAC,CAAC,CAAC,GAAGmL,gBAAgB,CAAC,CAAC,CAAC,IAAIG,UACtC,CAAC;IACD,IAAMpE,MAAM,GAAGqE,UAAU,GAAGD,UAAU;IACtClI,MAAM,CAAC,CAAC,CAAC,IAAI8D,MAAM;IACnB9D,MAAM,CAAC,CAAC,CAAC,IAAI8D,MAAM;EACrB;EACA,OAAO9D,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoI,aAAaA,CAACpI,MAAM,EAAE8H,UAAU,EAAEO,UAAU,EAAE;EAC5D,IAAIP,UAAU,CAACG,QAAQ,CAAC,CAAC,EAAE;IACzB,IAAMF,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;IAE/C,IAAI,CAACM,QAAQ,CAACtI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACsI,QAAQ,CAACtI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;MAChD,OAAO,CAAC,CAAC+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,EAAE+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E;IAEA6H,KAAK,CAAC7H,MAAM,EAAE8H,UAAU,CAAC;IACzB,IAAMI,UAAU,GAAGlD,QAAQ,CAAC+C,gBAAgB,CAAC;IAE7C,IAAI/C,QAAQ,CAAChF,MAAM,CAAC,GAAGkI,UAAU,IAAI,CAACG,UAAU,EAAE;MAChD;MACA,OAAO,CAAC,CAACN,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,EAAE+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E;IACA,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,EAAE;MACnC;MACA,OAAO,CACL,CAAC/H,MAAM,CAAC,CAAC,CAAC,GAAGkI,UAAU,EAAElI,MAAM,CAAC,CAAC,CAAC,EAAE+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,CAAC,EACnE,CAAC+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CACvD;IACH;IACA,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,EAAE;MACnC;MACA,OAAO,CACL,CAAC/H,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAE+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC+H,gBAAgB,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAGkI,UAAU,EAAElI,MAAM,CAAC,CAAC,CAAC,CAAC,CACpE;IACH;EACF;EAEA,OAAO,CAACA,MAAM,CAAC;AACjB;;;;;;;;;AC15BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuI,SAASA,CAACC,MAAM,EAAEb,KAAK,EAAEc,SAAS,EAAE;EAClD,IAAMC,YAAY,GAChBD,SAAS,KAAKnd,SAAS,GAAGkd,MAAM,CAACnJ,OAAO,CAACoJ,SAAS,CAAC,GAAG,EAAE,GAAGD,MAAM;EACnE,IAAIG,OAAO,GAAGD,YAAY,CAAC5kB,OAAO,CAAC,GAAG,CAAC;EACvC6kB,OAAO,GAAGA,OAAO,KAAK,CAAC,CAAC,GAAGD,YAAY,CAACnmB,MAAM,GAAGomB,OAAO;EACxD,OAAOA,OAAO,GAAGhB,KAAK,GAClBe,YAAY,GACZ,IAAIhlB,KAAK,CAAC,CAAC,GAAGikB,KAAK,GAAGgB,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAGF,YAAY;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,eAAeA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACtC,IAAMC,EAAE,GAAG,CAAC,EAAE,GAAGF,EAAE,EAAEG,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAMC,EAAE,GAAG,CAAC,EAAE,GAAGH,EAAE,EAAEE,KAAK,CAAC,GAAG,CAAC;EAE/B,KAAK,IAAIhmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqU,IAAI,CAACmG,GAAG,CAACuL,EAAE,CAACzmB,MAAM,EAAE2mB,EAAE,CAAC3mB,MAAM,CAAC,EAAEU,CAAC,EAAE,EAAE;IACvD,IAAMkmB,EAAE,GAAGC,QAAQ,CAACJ,EAAE,CAAC/lB,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC;IACrC,IAAMomB,EAAE,GAAGD,QAAQ,CAACF,EAAE,CAACjmB,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC;IAErC,IAAIkmB,EAAE,GAAGE,EAAE,EAAE;MACX,OAAO,CAAC;IACV;IACA,IAAIA,EAAE,GAAGF,EAAE,EAAE;MACX,OAAO,CAAC,CAAC;IACX;EACF;EAEA,OAAO,CAAC;AACV;;;;;;;;;;;;;;;;;;;;;;;ACxCA,IAAAG,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAukB,OAAA,GAAAvkB,OAAA;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwkB,GAAGA,CAACnX,UAAU,EAAEoX,KAAK,EAAE;EACrCpX,UAAU,CAAC,CAAC,CAAC,IAAI,CAACoX,KAAK,CAAC,CAAC,CAAC;EAC1BpX,UAAU,CAAC,CAAC,CAAC,IAAI,CAACoX,KAAK,CAAC,CAAC,CAAC;EAC1B,OAAOpX,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqX,eAAeA,CAACrX,UAAU,EAAEsX,MAAM,EAAE;EAClD,IAAM3hB,CAAC,GAAG2hB,MAAM,CAACC,SAAS,CAAC,CAAC;EAC5B,IAAMhN,MAAM,GAAG+M,MAAM,CAACzE,SAAS,CAAC,CAAC;EACjC,IAAMS,EAAE,GAAG/I,MAAM,CAAC,CAAC,CAAC;EACpB,IAAMgJ,EAAE,GAAGhJ,MAAM,CAAC,CAAC,CAAC;EACpB,IAAMiB,EAAE,GAAGxL,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMyL,EAAE,GAAGzL,UAAU,CAAC,CAAC,CAAC;EAExB,IAAI4L,EAAE,GAAGJ,EAAE,GAAG8H,EAAE;EAChB,IAAMzH,EAAE,GAAGJ,EAAE,GAAG8H,EAAE;EAClB,IAAI3H,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,EAAE;IACxBD,EAAE,GAAG,CAAC;EACR;EACA,IAAM4L,CAAC,GAAGvS,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;EAEtC,IAAMP,CAAC,GAAGgI,EAAE,GAAI3d,CAAC,GAAGiW,EAAE,GAAI4L,CAAC;EAC3B,IAAMjM,CAAC,GAAGgI,EAAE,GAAI5d,CAAC,GAAGkW,EAAE,GAAI2L,CAAC;EAE3B,OAAO,CAAClM,CAAC,EAAEC,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkM,gBAAgBA,CAACzX,UAAU,EAAE0X,OAAO,EAAE;EACpD,IAAMpE,EAAE,GAAGtT,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMuT,EAAE,GAAGvT,UAAU,CAAC,CAAC,CAAC;EACxB,IAAM2U,KAAK,GAAG+C,OAAO,CAAC,CAAC,CAAC;EACxB,IAAM1mB,GAAG,GAAG0mB,OAAO,CAAC,CAAC,CAAC;EACtB,IAAMlM,EAAE,GAAGmJ,KAAK,CAAC,CAAC,CAAC;EACnB,IAAMlJ,EAAE,GAAGkJ,KAAK,CAAC,CAAC,CAAC;EACnB,IAAMjJ,EAAE,GAAG1a,GAAG,CAAC,CAAC,CAAC;EACjB,IAAM2a,EAAE,GAAG3a,GAAG,CAAC,CAAC,CAAC;EACjB,IAAM4a,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAMK,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAMkM,KAAK,GACT/L,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,GAChB,CAAC,GACD,CAACD,EAAE,IAAI0H,EAAE,GAAG9H,EAAE,CAAC,GAAGK,EAAE,IAAI0H,EAAE,GAAG9H,EAAE,CAAC,KAAKG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,IAAI,CAAC,CAAC;EAClE,IAAIP,CAAC,EAAEC,CAAC;EACR,IAAIoM,KAAK,IAAI,CAAC,EAAE;IACdrM,CAAC,GAAGE,EAAE;IACND,CAAC,GAAGE,EAAE;EACR,CAAC,MAAM,IAAIkM,KAAK,IAAI,CAAC,EAAE;IACrBrM,CAAC,GAAGI,EAAE;IACNH,CAAC,GAAGI,EAAE;EACR,CAAC,MAAM;IACLL,CAAC,GAAGE,EAAE,GAAGmM,KAAK,GAAG/L,EAAE;IACnBL,CAAC,GAAGE,EAAE,GAAGkM,KAAK,GAAG9L,EAAE;EACrB;EACA,OAAO,CAACP,CAAC,EAAEC,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqM,cAAcA,CAACC,cAAc,EAAE;EAC7C;IACE;AACJ;AACA;AACA;IACI,UAAU7X,UAAU,EAAE;MACpB,OAAO8X,UAAU,CAAC9X,UAAU,EAAE6X,cAAc,CAAC;IAC/C;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,mBAAmBA,CAACC,WAAW,EAAEC,OAAO,EAAEJ,cAAc,EAAE;EACxE,IAAMK,iBAAiB,GAAG,IAAApL,YAAM,EAACmL,OAAO,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG;EAC1D,IAAM3M,CAAC,GAAGrG,IAAI,CAACC,GAAG,CAAC,IAAI,GAAGgT,iBAAiB,CAAC;EAC5C,IAAMjL,QAAQ,GAAG4K,cAAc,IAAI,CAAC;EAEpC,IAAIM,GAAG,GAAGlT,IAAI,CAACoI,KAAK,CAAC/B,CAAC,GAAG,IAAI,CAAC;EAC9B,IAAIH,GAAG,GAAGlG,IAAI,CAACoI,KAAK,CAAC,CAAC/B,CAAC,GAAG6M,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;EAC3C,IAAIC,GAAG,GAAG,IAAApL,aAAO,EAAC1B,CAAC,GAAG6M,GAAG,GAAG,IAAI,GAAGhN,GAAG,GAAG,EAAE,EAAE8B,QAAQ,CAAC;EAEtD,IAAImL,GAAG,IAAI,EAAE,EAAE;IACbA,GAAG,GAAG,CAAC;IACPjN,GAAG,IAAI,CAAC;EACV;EAEA,IAAIA,GAAG,IAAI,EAAE,EAAE;IACbA,GAAG,GAAG,CAAC;IACPgN,GAAG,IAAI,CAAC;EACV;EAEA,IAAIE,IAAI,GAAGF,GAAG,GAAG,MAAQ;EACzB,IAAIhN,GAAG,KAAK,CAAC,IAAIiN,GAAG,KAAK,CAAC,EAAE;IAC1BC,IAAI,IAAI,GAAG,GAAG,IAAAnC,iBAAS,EAAC/K,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ;EAC5C;EACA,IAAIiN,GAAG,KAAK,CAAC,EAAE;IACbC,IAAI,IAAI,GAAG,GAAG,IAAAnC,iBAAS,EAACkC,GAAG,EAAE,CAAC,EAAEnL,QAAQ,CAAC,GAAG,QAAQ;EACtD;EACA,IAAIiL,iBAAiB,KAAK,CAAC,EAAE;IAC3BG,IAAI,IAAI,GAAG,GAAGL,WAAW,CAACM,MAAM,CAACJ,iBAAiB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACjE;EAEA,OAAOG,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,MAAMA,CAACvY,UAAU,EAAEwY,QAAQ,EAAEX,cAAc,EAAE;EAC3D,IAAI7X,UAAU,EAAE;IACd,OAAOwY,QAAQ,CACZC,OAAO,CAAC,KAAK,EAAEzY,UAAU,CAAC,CAAC,CAAC,CAACgN,OAAO,CAAC6K,cAAc,CAAC,CAAC,CACrDY,OAAO,CAAC,KAAK,EAAEzY,UAAU,CAAC,CAAC,CAAC,CAACgN,OAAO,CAAC6K,cAAc,CAAC,CAAC;EAC1D;EACA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASlmB,MAAMA,CAAC+mB,WAAW,EAAEC,WAAW,EAAE;EAC/C,IAAIhnB,MAAM,GAAG,IAAI;EACjB,KAAK,IAAIf,CAAC,GAAG8nB,WAAW,CAACxoB,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;IAChD,IAAI8nB,WAAW,CAAC9nB,CAAC,CAAC,IAAI+nB,WAAW,CAAC/nB,CAAC,CAAC,EAAE;MACpCe,MAAM,GAAG,KAAK;MACd;IACF;EACF;EACA,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASinB,MAAMA,CAAC5Y,UAAU,EAAE6Y,KAAK,EAAE;EACxC,IAAMC,QAAQ,GAAG7T,IAAI,CAAC0O,GAAG,CAACkF,KAAK,CAAC;EAChC,IAAME,QAAQ,GAAG9T,IAAI,CAAC4O,GAAG,CAACgF,KAAK,CAAC;EAChC,IAAMvN,CAAC,GAAGtL,UAAU,CAAC,CAAC,CAAC,GAAG8Y,QAAQ,GAAG9Y,UAAU,CAAC,CAAC,CAAC,GAAG+Y,QAAQ;EAC7D,IAAMxN,CAAC,GAAGvL,UAAU,CAAC,CAAC,CAAC,GAAG8Y,QAAQ,GAAG9Y,UAAU,CAAC,CAAC,CAAC,GAAG+Y,QAAQ;EAC7D/Y,UAAU,CAAC,CAAC,CAAC,GAAGsL,CAAC;EACjBtL,UAAU,CAAC,CAAC,CAAC,GAAGuL,CAAC;EACjB,OAAOvL,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgZ,KAAKA,CAAChZ,UAAU,EAAEgZ,KAAK,EAAE;EACvChZ,UAAU,CAAC,CAAC,CAAC,IAAIgZ,KAAK;EACtBhZ,UAAU,CAAC,CAAC,CAAC,IAAIgZ,KAAK;EACtB,OAAOhZ,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS8L,eAAeA,CAACmN,MAAM,EAAEC,MAAM,EAAE;EAC9C,IAAMtN,EAAE,GAAGqN,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;EAChC,IAAMrN,EAAE,GAAGoN,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;EAChC,OAAOtN,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASsN,QAAQA,CAACF,MAAM,EAAEC,MAAM,EAAE;EACvC,OAAOjU,IAAI,CAAC2F,IAAI,CAACkB,eAAe,CAACmN,MAAM,EAAEC,MAAM,CAAC,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,wBAAwBA,CAACpZ,UAAU,EAAE0X,OAAO,EAAE;EAC5D,OAAO5L,eAAe,CAAC9L,UAAU,EAAEyX,gBAAgB,CAACzX,UAAU,EAAE0X,OAAO,CAAC,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2B,YAAYA,CAACrZ,UAAU,EAAE6X,cAAc,EAAE;EACvD,IAAI7X,UAAU,EAAE;IACd,OACE+X,mBAAmB,CAAC,IAAI,EAAE/X,UAAU,CAAC,CAAC,CAAC,EAAE6X,cAAc,CAAC,GACxD,GAAG,GACHE,mBAAmB,CAAC,IAAI,EAAE/X,UAAU,CAAC,CAAC,CAAC,EAAE6X,cAAc,CAAC;EAE5D;EACA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAAC9X,UAAU,EAAE6X,cAAc,EAAE;EACrD,OAAOU,MAAM,CAACvY,UAAU,EAAE,UAAU,EAAE6X,cAAc,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASrC,KAAKA,CAACxV,UAAU,EAAEyV,UAAU,EAAE;EAC5C,IAAIA,UAAU,CAACG,QAAQ,CAAC,CAAC,EAAE;IACzB,IAAMC,UAAU,GAAG,IAAAlD,gBAAQ,EAAC8C,UAAU,CAACE,SAAS,CAAC,CAAC,CAAC;IACnD,IAAMG,UAAU,GAAGwD,aAAa,CAACtZ,UAAU,EAAEyV,UAAU,EAAEI,UAAU,CAAC;IACpE,IAAIC,UAAU,EAAE;MACd9V,UAAU,CAAC,CAAC,CAAC,IAAI8V,UAAU,GAAGD,UAAU;IAC1C;EACF;EACA,OAAO7V,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsZ,aAAaA,CAACtZ,UAAU,EAAEyV,UAAU,EAAE8D,iBAAiB,EAAE;EACvE,IAAM7D,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;EAC/C,IAAIG,UAAU,GAAG,CAAC;EAClB,IACEL,UAAU,CAACG,QAAQ,CAAC,CAAC,KACpB5V,UAAU,CAAC,CAAC,CAAC,GAAG0V,gBAAgB,CAAC,CAAC,CAAC,IAAI1V,UAAU,CAAC,CAAC,CAAC,GAAG0V,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAC5E;IACA6D,iBAAiB,GAAGA,iBAAiB,IAAI,IAAA5G,gBAAQ,EAAC+C,gBAAgB,CAAC;IACnEI,UAAU,GAAG7Q,IAAI,CAACoI,KAAK,CACrB,CAACrN,UAAU,CAAC,CAAC,CAAC,GAAG0V,gBAAgB,CAAC,CAAC,CAAC,IAAI6D,iBAC1C,CAAC;EACH;EACA,OAAOzD,UAAU;AACnB;;;;;;;;;;;;ACtbA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0D,MAAMA,CAAC5jB,CAAC,EAAE;EACxB,OAAOqP,IAAI,CAACkI,GAAG,CAACvX,CAAC,EAAE,CAAC,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6jB,OAAOA,CAAC7jB,CAAC,EAAE;EACzB,OAAO,CAAC,GAAG4jB,MAAM,CAAC,CAAC,GAAG5jB,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8jB,QAAQA,CAAC9jB,CAAC,EAAE;EAC1B,OAAO,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+jB,MAAMA,CAAC/jB,CAAC,EAAE;EACxB,OAAOA,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgkB,SAASA,CAAChkB,CAAC,EAAE;EAC3B,IAAIA,CAAC,GAAG,GAAG,EAAE;IACX,OAAO8jB,QAAQ,CAAC,CAAC,GAAG9jB,CAAC,CAAC;EACxB;EACA,OAAO,CAAC,GAAG8jB,QAAQ,CAAC,CAAC,IAAI9jB,CAAC,GAAG,GAAG,CAAC,CAAC;AACpC;;;;;;;;;;;;ACtDA,IAAA6X,KAAA,GAAA9a,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMknB,cAAc,GAAAlsB,OAAA,CAAAksB,cAAA,GAAG,SAAS;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAACC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAE;EAC1CA,MAAM,GAAGA,MAAM,IAAIJ,cAAc;EACjC,IAAMK,IAAI,GAAG,IAAAtN,eAAS,EAACmN,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMI,IAAI,GAAG,IAAAvN,eAAS,EAACoN,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMI,WAAW,GAAG,CAACD,IAAI,GAAGD,IAAI,IAAI,CAAC;EACrC,IAAMG,WAAW,GAAG,IAAAzN,eAAS,EAACoN,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAChD,IAAM3pB,CAAC,GACL6U,IAAI,CAAC4O,GAAG,CAACuG,WAAW,CAAC,GAAGnV,IAAI,CAAC4O,GAAG,CAACuG,WAAW,CAAC,GAC7CnV,IAAI,CAAC4O,GAAG,CAACwG,WAAW,CAAC,GACnBpV,IAAI,CAAC4O,GAAG,CAACwG,WAAW,CAAC,GACrBpV,IAAI,CAAC0O,GAAG,CAACuG,IAAI,CAAC,GACdjV,IAAI,CAAC0O,GAAG,CAACwG,IAAI,CAAC;EAClB,OAAO,CAAC,GAAGF,MAAM,GAAGhV,IAAI,CAACqV,KAAK,CAACrV,IAAI,CAAC2F,IAAI,CAACxa,CAAC,CAAC,EAAE6U,IAAI,CAAC2F,IAAI,CAAC,CAAC,GAAGxa,CAAC,CAAC,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmqB,iBAAiBA,CAACvK,WAAW,EAAEiK,MAAM,EAAE;EAC9C,IAAI/pB,MAAM,GAAG,CAAC;EACd,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,GAAG,CAAC,EAAE,EAAEhI,CAAC,EAAE;IACxDV,MAAM,IAAI4pB,WAAW,CAAC9J,WAAW,CAACpf,CAAC,CAAC,EAAEof,WAAW,CAACpf,CAAC,GAAG,CAAC,CAAC,EAAEqpB,MAAM,CAAC;EACnE;EACA,OAAO/pB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8N,SAASA,CAACwc,QAAQ,EAAE9c,OAAO,EAAE;EAC3CA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAMuc,MAAM,GAAGvc,OAAO,CAACuc,MAAM,IAAIJ,cAAc;EAC/C,IAAMpE,UAAU,GAAG/X,OAAO,CAAC+X,UAAU,IAAI,WAAW;EACpD,IAAMlhB,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;EAC/B,IAAIlmB,IAAI,KAAK,oBAAoB,EAAE;IACjCimB,QAAQ,GAAGA,QAAQ,CAAC/J,KAAK,CAAC,CAAC,CAACiK,SAAS,CAACjF,UAAU,EAAE,WAAW,CAAC;EAChE;EACA,IAAIvlB,MAAM,GAAG,CAAC;EACd,IAAI8f,WAAW,EAAE2K,MAAM,EAAE/pB,CAAC,EAAEgI,EAAE,EAAEwT,CAAC,EAAEwO,EAAE;EACrC,QAAQrmB,IAAI;IACV,KAAK,OAAO;IACZ,KAAK,YAAY;MAAE;QACjB;MACF;IACA,KAAK,YAAY;IACjB,KAAK,YAAY;MAAE;QACjByb,WAAW,GAAG,yDACZwK,QAAQ,CACRK,cAAc,CAAC,CAAC;QAClB3qB,MAAM,GAAGqqB,iBAAiB,CAACvK,WAAW,EAAEiK,MAAM,CAAC;QAC/C;MACF;IACA,KAAK,iBAAiB;IACtB,KAAK,SAAS;MAAE;QACdjK,WAAW,GAAG,yDACZwK,QAAQ,CACRK,cAAc,CAAC,CAAC;QAClB,KAAKjqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAChDV,MAAM,IAAIqqB,iBAAiB,CAACvK,WAAW,CAACpf,CAAC,CAAC,EAAEqpB,MAAM,CAAC;QACrD;QACA;MACF;IACA,KAAK,cAAc;MAAE;QACnBjK,WAAW,GAAG,yDACZwK,QAAQ,CACRK,cAAc,CAAC,CAAC;QAClB,KAAKjqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAChD+pB,MAAM,GAAG3K,WAAW,CAACpf,CAAC,CAAC;UACvB,KAAKwb,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGD,MAAM,CAACzqB,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;YAC3Clc,MAAM,IAAIqqB,iBAAiB,CAACI,MAAM,CAACvO,CAAC,CAAC,EAAE6N,MAAM,CAAC;UAChD;QACF;QACA;MACF;IACA,KAAK,oBAAoB;MAAE;QACzB,IAAMa,UAAU,GACd,6DACEN,QAAQ,CACRO,aAAa,CAAC,CAAC;QACnB,KAAKnqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC/CV,MAAM,IAAI8N,SAAS,CAAC8c,UAAU,CAAClqB,CAAC,CAAC,EAAE8M,OAAO,CAAC;QAC7C;QACA;MACF;IACA;MAAS;QACP,MAAM,IAAI5C,KAAK,CAAC,6BAA6B,GAAGvG,IAAI,CAAC;MACvD;EACF;EACA,OAAOrE,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8qB,eAAeA,CAAChL,WAAW,EAAEiK,MAAM,EAAE;EAC5C,IAAIvH,IAAI,GAAG,CAAC;EACZ,IAAMjY,GAAG,GAAGuV,WAAW,CAAC9f,MAAM;EAC9B,IAAIsb,EAAE,GAAGwE,WAAW,CAACvV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,IAAIgR,EAAE,GAAGuE,WAAW,CAACvV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE7J,CAAC,EAAE,EAAE;IAC5B,IAAM8a,EAAE,GAAGsE,WAAW,CAACpf,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM+a,EAAE,GAAGqE,WAAW,CAACpf,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B8hB,IAAI,IACF,IAAA9F,eAAS,EAAClB,EAAE,GAAGF,EAAE,CAAC,IACjB,CAAC,GAAGvG,IAAI,CAAC4O,GAAG,CAAC,IAAAjH,eAAS,EAACnB,EAAE,CAAC,CAAC,GAAGxG,IAAI,CAAC4O,GAAG,CAAC,IAAAjH,eAAS,EAACjB,EAAE,CAAC,CAAC,CAAC;IACzDH,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACA,OAAQ+G,IAAI,GAAGuH,MAAM,GAAGA,MAAM,GAAI,GAAG;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxH,OAAOA,CAAC+H,QAAQ,EAAE9c,OAAO,EAAE;EACzCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAMuc,MAAM,GAAGvc,OAAO,CAACuc,MAAM,IAAIJ,cAAc;EAC/C,IAAMpE,UAAU,GAAG/X,OAAO,CAAC+X,UAAU,IAAI,WAAW;EACpD,IAAMlhB,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;EAC/B,IAAIlmB,IAAI,KAAK,oBAAoB,EAAE;IACjCimB,QAAQ,GAAGA,QAAQ,CAAC/J,KAAK,CAAC,CAAC,CAACiK,SAAS,CAACjF,UAAU,EAAE,WAAW,CAAC;EAChE;EACA,IAAI/C,IAAI,GAAG,CAAC;EACZ,IAAI1C,WAAW,EAAE2K,MAAM,EAAE/pB,CAAC,EAAEgI,EAAE,EAAEwT,CAAC,EAAEwO,EAAE;EACrC,QAAQrmB,IAAI;IACV,KAAK,OAAO;IACZ,KAAK,YAAY;IACjB,KAAK,YAAY;IACjB,KAAK,iBAAiB;IACtB,KAAK,YAAY;MAAE;QACjB;MACF;IACA,KAAK,SAAS;MAAE;QACdyb,WAAW,GAAG,kDACZwK,QAAQ,CACRK,cAAc,CAAC,CAAC;QAClBnI,IAAI,GAAGzN,IAAI,CAACC,GAAG,CAAC8V,eAAe,CAAChL,WAAW,CAAC,CAAC,CAAC,EAAEiK,MAAM,CAAC,CAAC;QACxD,KAAKrpB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAChD8hB,IAAI,IAAIzN,IAAI,CAACC,GAAG,CAAC8V,eAAe,CAAChL,WAAW,CAACpf,CAAC,CAAC,EAAEqpB,MAAM,CAAC,CAAC;QAC3D;QACA;MACF;IACA,KAAK,cAAc;MAAE;QACnBjK,WAAW,GAAG,yDACZwK,QAAQ,CACRK,cAAc,CAAC,CAAC;QAClB,KAAKjqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAChD+pB,MAAM,GAAG3K,WAAW,CAACpf,CAAC,CAAC;UACvB8hB,IAAI,IAAIzN,IAAI,CAACC,GAAG,CAAC8V,eAAe,CAACL,MAAM,CAAC,CAAC,CAAC,EAAEV,MAAM,CAAC,CAAC;UACpD,KAAK7N,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGD,MAAM,CAACzqB,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;YAC3CsG,IAAI,IAAIzN,IAAI,CAACC,GAAG,CAAC8V,eAAe,CAACL,MAAM,CAACvO,CAAC,CAAC,EAAE6N,MAAM,CAAC,CAAC;UACtD;QACF;QACA;MACF;IACA,KAAK,oBAAoB;MAAE;QACzB,IAAMa,UAAU,GACd,6DACEN,QAAQ,CACRO,aAAa,CAAC,CAAC;QACnB,KAAKnqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC/C8hB,IAAI,IAAID,OAAO,CAACqI,UAAU,CAAClqB,CAAC,CAAC,EAAE8M,OAAO,CAAC;QACzC;QACA;MACF;IACA;MAAS;QACP,MAAM,IAAI5C,KAAK,CAAC,6BAA6B,GAAGvG,IAAI,CAAC;MACvD;EACF;EACA,OAAOme,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASjB,MAAMA,CAACsI,EAAE,EAAEZ,QAAQ,EAAE8B,OAAO,EAAEhB,MAAM,EAAE;EACpDA,MAAM,GAAGA,MAAM,IAAIJ,cAAc;EACjC,IAAMK,IAAI,GAAG,IAAAtN,eAAS,EAACmN,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMmB,IAAI,GAAG,IAAAtO,eAAS,EAACmN,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMoB,IAAI,GAAGhC,QAAQ,GAAGc,MAAM;EAC9B,IAAMmB,GAAG,GAAGnW,IAAI,CAACoW,IAAI,CACnBpW,IAAI,CAAC4O,GAAG,CAACqG,IAAI,CAAC,GAAGjV,IAAI,CAAC0O,GAAG,CAACwH,IAAI,CAAC,GAC7BlW,IAAI,CAAC0O,GAAG,CAACuG,IAAI,CAAC,GAAGjV,IAAI,CAAC4O,GAAG,CAACsH,IAAI,CAAC,GAAGlW,IAAI,CAAC0O,GAAG,CAACsH,OAAO,CACtD,CAAC;EACD,IAAMK,GAAG,GACPJ,IAAI,GACJjW,IAAI,CAACqV,KAAK,CACRrV,IAAI,CAAC4O,GAAG,CAACoH,OAAO,CAAC,GAAGhW,IAAI,CAAC4O,GAAG,CAACsH,IAAI,CAAC,GAAGlW,IAAI,CAAC0O,GAAG,CAACuG,IAAI,CAAC,EACnDjV,IAAI,CAAC0O,GAAG,CAACwH,IAAI,CAAC,GAAGlW,IAAI,CAAC4O,GAAG,CAACqG,IAAI,CAAC,GAAGjV,IAAI,CAAC4O,GAAG,CAACuH,GAAG,CAChD,CAAC;EACH,OAAO,CAAC,IAAA3O,eAAS,EAAC6O,GAAG,CAAC,EAAE,IAAA7O,eAAS,EAAC2O,GAAG,CAAC,CAAC;AACzC;;;;;;;;;;;ACtQA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMG,MAAM,GAAG;EACbC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACR/M,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA,IAAIgN,KAAK,GAAGJ,MAAM,CAACC,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,QAAQA,CAACrP,CAAC,EAAE;EAC1BoP,KAAK,GAAGJ,MAAM,CAAChP,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACO,SAAS5B,GAAGA,CAAA,EAAU;EAAA,IAAAkR,QAAA;EAC3B,IAAIF,KAAK,GAAGJ,MAAM,CAACC,IAAI,EAAE;IACvB;EACF;EACA,CAAAK,QAAA,GAAAC,OAAO,EAACnR,GAAG,CAAAjX,KAAA,CAAAmoB,QAAA,EAAAroB,SAAQ,CAAC,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACO,SAASioB,IAAIA,CAAA,EAAU;EAAA,IAAAM,SAAA;EAC5B,IAAIJ,KAAK,GAAGJ,MAAM,CAACE,IAAI,EAAE;IACvB;EACF;EACA,CAAAM,SAAA,GAAAD,OAAO,EAACL,IAAI,CAAA/nB,KAAA,CAAAqoB,SAAA,EAAAvoB,SAAQ,CAAC,CAAC,CAAC;AACzB;;AAEA;AACA;AACA;AACO,SAASkoB,KAAKA,CAAA,EAAU;EAAA,IAAAM,SAAA;EAC7B,IAAIL,KAAK,GAAGJ,MAAM,CAACG,KAAK,EAAE;IACxB;EACF;EACA,CAAAM,SAAA,GAAAF,OAAO,EAACJ,KAAK,CAAAhoB,KAAA,CAAAsoB,SAAA,EAAAxoB,SAAQ,CAAC,CAAC,CAAC;AAC1B;;;;;;;;;AC9DA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMyoB,UAAU,GAAG;EACjB,MAAM,EAAE,GAAG;EACX,MAAM,EAAE,IAAI;EACZ,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACO,SAASC,QAAQA,CAACC,IAAI,EAAE;EAC7B,OAAOF,UAAU,CAACE,IAAI,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAzuB,OAAA,CAAAyuB,eAAA,GAAG;EAC7B;EACA,SAAS,EAAE,OAAO,IAAI,CAAC,GAAGnX,IAAI,CAAC0H,EAAE,CAAC;EAClC,SAAS,EAAG,CAAC,GAAG1H,IAAI,CAAC0H,EAAE,GAAG,OAAO,GAAI,GAAG;EACxC,IAAI,EAAE,MAAM;EACZ,GAAG,EAAE,CAAC;EACN,OAAO,EAAE,IAAI,GAAG;AAClB,CAAC;;;;;;;;;AChDD,IAAA0P,MAAA,GAAA1pB,OAAA;AAA2C,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAH3C;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA,IA6BM0mB,UAAU;EACd;AACF;AACA;EACE,SAAAA,WAAY5e,OAAO,EAAE;IAAAxO,eAAA,OAAAotB,UAAA;IACnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG7e,OAAO,CAACye,IAAI;;IAEzB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACK,MAAM,GAAG,yCAA2C9e,OAAO,CAAC+e,KAAM;;IAEvE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGhf,OAAO,CAACiQ,MAAM,KAAK1U,SAAS,GAAGyE,OAAO,CAACiQ,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACgP,YAAY,GACfjf,OAAO,CAACkf,WAAW,KAAK3jB,SAAS,GAAGyE,OAAO,CAACkf,WAAW,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GACnBnf,OAAO,CAACof,eAAe,KAAK7jB,SAAS,GAAGyE,OAAO,CAACof,eAAe,GAAG,KAAK;;IAEzE;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGrf,OAAO,CAACsf,MAAM,KAAK/jB,SAAS,GAAGyE,OAAO,CAACsf,MAAM,GAAG,KAAK;;IAEpE;AACJ;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAG,CAAC,EAAE,IAAI,CAACF,OAAO,IAAI,IAAI,CAACL,OAAO,CAAC;;IAEjD;AACJ;AACA;AACA;IACI,IAAI,CAACQ,uBAAuB,GAAGxf,OAAO,CAACyf,kBAAkB;;IAEzD;AACJ;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAG3f,OAAO,CAAC4f,aAAa;EAC7C;;EAEA;AACF;AACA;EAFE,OAAAluB,YAAA,CAAAktB,UAAA;IAAAjtB,GAAA;IAAAC,KAAA,EAGA,SAAAsmB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACqH,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5tB,GAAA;IAAAC,KAAA,EAKA,SAAAiuB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAChB,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAltB,GAAA;IAAAC,KAAA,EAKA,SAAAqmB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC+G,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArtB,GAAA;IAAAC,KAAA,EAKA,SAAAkuB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAChB,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAntB,GAAA;IAAAC,KAAA,EAOA,SAAAmuB,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACJ,cAAc,IAAIjB,sBAAe,CAAC,IAAI,CAACI,MAAM,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAntB,GAAA;IAAAC,KAAA,EAKA,SAAAouB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACf,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAttB,GAAA;IAAAC,KAAA,EAWA,SAAAquB,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACd,gBAAgB;IAC9B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxtB,GAAA;IAAAC,KAAA,EAKA,SAAAsuB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACb,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1tB,GAAA;IAAAC,KAAA,EAKA,SAAAuuB,SAASA,CAACb,MAAM,EAAE;MAChB,IAAI,CAACD,OAAO,GAAGC,MAAM;MACrB,IAAI,CAACC,SAAS,GAAG,CAAC,EAAED,MAAM,IAAI,IAAI,CAACN,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;EAFE;IAAArtB,GAAA;IAAAC,KAAA,EAGA,SAAAwuB,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACV,gBAAgB;IAC9B;;IAEA;AACF;AACA;EAFE;IAAA/tB,GAAA;IAAAC,KAAA,EAGA,SAAAyuB,kBAAkBA,CAACC,QAAQ,EAAE;MAC3B,IAAI,CAACZ,gBAAgB,GAAGY,QAAQ;IAClC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3uB,GAAA;IAAAC,KAAA,EAKA,SAAA2uB,SAASA,CAACtQ,MAAM,EAAE;MAChB,IAAI,CAAC+O,OAAO,GAAG/O,MAAM;MACrB,IAAI,CAACsP,SAAS,GAAG,CAAC,EAAE,IAAI,CAACF,OAAO,IAAIpP,MAAM,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAte,GAAA;IAAAC,KAAA,EAMA,SAAA4uB,cAAcA,CAACtB,WAAW,EAAE;MAC1B,IAAI,CAACD,YAAY,GAAGC,WAAW;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAvtB,GAAA;IAAAC,KAAA,EAMA,SAAA6uB,qBAAqBA,CAAC/rB,IAAI,EAAE;MAC1B,IAAI,CAAC8qB,uBAAuB,GAAG9qB,IAAI;IACrC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/C,GAAA;IAAAC,KAAA,EAKA,SAAA8uB,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAAClB,uBAAuB;IACrC;EAAC;AAAA;AAAA,IAAAxvB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY0uB,UAAU;;;;;;;;;;ACrRzB,IAAA+B,YAAA,GAAAvpB,sBAAA,CAAAnC,OAAA;AAAyC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAHzC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMopB,MAAM,GAAA3wB,OAAA,CAAA2wB,MAAA,GAAG,OAAO;;AAE7B;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAA5wB,OAAA,CAAA4wB,SAAA,GAAGtZ,IAAI,CAAC0H,EAAE,GAAG2R,MAAM;;AAEzC;AACA;AACA;AACA;AACO,IAAME,MAAM,GAAA7wB,OAAA,CAAA6wB,MAAA,GAAG,CAAC,CAACD,SAAS,EAAE,CAACA,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC;;AAEpE;AACA;AACA;AACA;AACO,IAAME,YAAY,GAAA9wB,OAAA,CAAA8wB,YAAA,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACO,IAAMC,UAAU,GAAA/wB,OAAA,CAAA+wB,UAAA,GAAGJ,MAAM,GAAGrZ,IAAI,CAAC0F,GAAG,CAAC1F,IAAI,CAAC0Z,GAAG,CAAC1Z,IAAI,CAAC0H,EAAE,GAAG,CAAC,CAAC,CAAC;;AAElE;AACA;AACA;AACA;AAHA,IAIMiS,kBAAkB,0BAAAC,WAAA;EACtB;AACF;AACA;EACE,SAAAD,mBAAYzC,IAAI,EAAE;IAAAjtB,eAAA,OAAA0vB,kBAAA;IAAA,OAAAroB,UAAA,OAAAqoB,kBAAA,GACV;MACJzC,IAAI,EAAEA,IAAI;MACVM,KAAK,EAAE,GAAG;MACV9O,MAAM,EAAE6Q,MAAM;MACdxB,MAAM,EAAE,IAAI;MACZJ,WAAW,EAAE6B,YAAY;MACzBtB,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAYrP,UAAU,EAAEgR,KAAK,EAAE;QAC/C,OAAOhR,UAAU,GAAG7I,IAAI,CAAC8Z,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,GAAGR,MAAM,CAAC;MAClD;IACF,CAAC;EACH;EAACjnB,SAAA,CAAAunB,kBAAA,EAAAC,WAAA;EAAA,OAAAzvB,YAAA,CAAAwvB,kBAAA;AAAA,EAf8BtC,oBAAU;AAkB3C;AACA;AACA;AACA;AACA;AACA;AACO,IAAM0C,WAAW,GAAArxB,OAAA,CAAAqxB,WAAA,GAAG,CACzB,IAAIJ,kBAAkB,CAAC,WAAW,CAAC,EACnC,IAAIA,kBAAkB,CAAC,aAAa,CAAC,EACrC,IAAIA,kBAAkB,CAAC,aAAa,CAAC,EACrC,IAAIA,kBAAkB,CAAC,aAAa,CAAC,EACrC,IAAIA,kBAAkB,CAAC,4CAA4C,CAAC,EACpE,IAAIA,kBAAkB,CAAC,8CAA8C,CAAC,CACvE;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAE1N,MAAM,EAAE;EAC7D,IAAMxhB,MAAM,GAAGgvB,KAAK,CAAChvB,MAAM;EAC3BkvB,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC;EACzC1N,MAAM,GAAGA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0N,SAAS;EAC5B,IAAID,MAAM,KAAKlmB,SAAS,EAAE;IACxB,IAAImmB,SAAS,GAAG,CAAC,EAAE;MACjB;MACAD,MAAM,GAAGD,KAAK,CAAC5rB,KAAK,CAAC,CAAC;IACxB,CAAC,MAAM;MACL6rB,MAAM,GAAG,IAAI9tB,KAAK,CAACnB,MAAM,CAAC;IAC5B;EACF;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,IAAI8gB,MAAM,EAAE;IACvCyN,MAAM,CAACvuB,CAAC,CAAC,GAAI2tB,SAAS,GAAGW,KAAK,CAACtuB,CAAC,CAAC,GAAI,GAAG;IACxC,IAAI2a,CAAC,GAAG+S,MAAM,GAAGrZ,IAAI,CAAC0F,GAAG,CAAC1F,IAAI,CAAC0Z,GAAG,CAAE1Z,IAAI,CAAC0H,EAAE,IAAI,CAACuS,KAAK,CAACtuB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAI,GAAG,CAAC,CAAC;IAC3E,IAAI2a,CAAC,GAAGmT,UAAU,EAAE;MAClBnT,CAAC,GAAGmT,UAAU;IAChB,CAAC,MAAM,IAAInT,CAAC,GAAG,CAACmT,UAAU,EAAE;MAC1BnT,CAAC,GAAG,CAACmT,UAAU;IACjB;IACAS,MAAM,CAACvuB,CAAC,GAAG,CAAC,CAAC,GAAG2a,CAAC;EACnB;EACA,OAAO4T,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,UAAUA,CAACH,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAE1N,MAAM,EAAE;EAC3D,IAAMxhB,MAAM,GAAGgvB,KAAK,CAAChvB,MAAM;EAC3BkvB,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC;EACzC1N,MAAM,GAAGA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0N,SAAS;EAC5B,IAAID,MAAM,KAAKlmB,SAAS,EAAE;IACxB,IAAImmB,SAAS,GAAG,CAAC,EAAE;MACjB;MACAD,MAAM,GAAGD,KAAK,CAAC5rB,KAAK,CAAC,CAAC;IACxB,CAAC,MAAM;MACL6rB,MAAM,GAAG,IAAI9tB,KAAK,CAACnB,MAAM,CAAC;IAC5B;EACF;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,IAAI8gB,MAAM,EAAE;IACvCyN,MAAM,CAACvuB,CAAC,CAAC,GAAI,GAAG,GAAGsuB,KAAK,CAACtuB,CAAC,CAAC,GAAI2tB,SAAS;IACxCY,MAAM,CAACvuB,CAAC,GAAG,CAAC,CAAC,GACV,GAAG,GAAGqU,IAAI,CAACqa,IAAI,CAACra,IAAI,CAACsa,GAAG,CAACL,KAAK,CAACtuB,CAAC,GAAG,CAAC,CAAC,GAAG0tB,MAAM,CAAC,CAAC,GAAIrZ,IAAI,CAAC0H,EAAE,GAAG,EAAE;EACrE;EACA,OAAOwS,MAAM;AACf;;;;;;;;ACrIA,IAAAd,YAAA,GAAAvpB,sBAAA,CAAAnC,OAAA;AAAyC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAHzC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMopB,MAAM,GAAA3wB,OAAA,CAAA2wB,MAAA,GAAG,OAAO;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,MAAM,GAAA7wB,OAAA,CAAA6wB,MAAA,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;;AAE1C;AACA;AACA;AACA;AACO,IAAMpC,eAAe,GAAAzuB,OAAA,CAAAyuB,eAAA,GAAInX,IAAI,CAAC0H,EAAE,GAAG2R,MAAM,GAAI,GAAG;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMkB,kBAAkB,0BAAAX,WAAA;EACtB;AACF;AACA;AACA;EACE,SAAAW,mBAAYrD,IAAI,EAAEW,eAAe,EAAE;IAAA5tB,eAAA,OAAAswB,kBAAA;IAAA,OAAAjpB,UAAA,OAAAipB,kBAAA,GAC3B;MACJrD,IAAI,EAAEA,IAAI;MACVM,KAAK,EAAE,SAAS;MAChB9O,MAAM,EAAE6Q,MAAM;MACd1B,eAAe,EAAEA,eAAe;MAChCE,MAAM,EAAE,IAAI;MACZM,aAAa,EAAElB,eAAe;MAC9BQ,WAAW,EAAE4B;IACf,CAAC;EACH;EAACnnB,SAAA,CAAAmoB,kBAAA,EAAAX,WAAA;EAAA,OAAAzvB,YAAA,CAAAowB,kBAAA;AAAA,EAf8BlD,oBAAU;AAkB3C;AACA;AACA;AACA;AACA;AACA;AACO,IAAM0C,WAAW,GAAArxB,OAAA,CAAAqxB,WAAA,GAAG,CACzB,IAAIQ,kBAAkB,CAAC,QAAQ,CAAC,EAChC,IAAIA,kBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC,EAC1C,IAAIA,kBAAkB,CAAC,+BAA+B,CAAC,EACvD,IAAIA,kBAAkB,CAAC,0BAA0B,CAAC,EAClD,IAAIA,kBAAkB,CAAC,8CAA8C,CAAC,EACtE,IAAIA,kBAAkB,CAAC,8CAA8C,EAAE,KAAK,CAAC,EAC7E,IAAIA,kBAAkB,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAC5E;;;;;;;;;;ACnED;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAIC,KAAK,GAAG,CAAC,CAAC;;AAEd;AACA;AACA;AACO,SAASvrB,KAAKA,CAAA,EAAG;EACtBurB,KAAK,GAAG,CAAC,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS1jB,GAAGA,CAACogB,IAAI,EAAE;EACxB,OACEsD,KAAK,CAACtD,IAAI,CAAC,IACXsD,KAAK,CAACtD,IAAI,CAAC1D,OAAO,CAAC,wCAAwC,EAAE,SAAS,CAAC,CAAC,IACxE,IAAI;AAER;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAStB,GAAGA,CAACgF,IAAI,EAAE1G,UAAU,EAAE;EACpCgK,KAAK,CAACtD,IAAI,CAAC,GAAG1G,UAAU;AAC1B;;;;;;;;;;;ACjCA,IAAAzgB,IAAA,GAAArC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,IAAI+sB,UAAU,GAAG,CAAC,CAAC;;AAEnB;AACA;AACA;AACO,SAASxrB,KAAKA,CAAA,EAAG;EACtBwrB,UAAU,GAAG,CAAC,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASvI,GAAGA,CAACpa,MAAM,EAAE4iB,WAAW,EAAEvK,WAAW,EAAE;EACpD,IAAMwK,UAAU,GAAG7iB,MAAM,CAACwgB,OAAO,CAAC,CAAC;EACnC,IAAMsC,eAAe,GAAGF,WAAW,CAACpC,OAAO,CAAC,CAAC;EAC7C,IAAI,EAAEqC,UAAU,IAAIF,UAAU,CAAC,EAAE;IAC/BA,UAAU,CAACE,UAAU,CAAC,GAAG,CAAC,CAAC;EAC7B;EACAF,UAAU,CAACE,UAAU,CAAC,CAACC,eAAe,CAAC,GAAGzK,WAAW;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS7jB,MAAMA,CAACwL,MAAM,EAAE4iB,WAAW,EAAE;EAC1C,IAAMC,UAAU,GAAG7iB,MAAM,CAACwgB,OAAO,CAAC,CAAC;EACnC,IAAMsC,eAAe,GAAGF,WAAW,CAACpC,OAAO,CAAC,CAAC;EAC7C,IAAM7C,SAAS,GAAGgF,UAAU,CAACE,UAAU,CAAC,CAACC,eAAe,CAAC;EACzD,OAAOH,UAAU,CAACE,UAAU,CAAC,CAACC,eAAe,CAAC;EAC9C,IAAI,IAAAxrB,YAAO,EAACqrB,UAAU,CAACE,UAAU,CAAC,CAAC,EAAE;IACnC,OAAOF,UAAU,CAACE,UAAU,CAAC;EAC/B;EACA,OAAOlF,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS3e,GAAGA,CAAC6jB,UAAU,EAAEC,eAAe,EAAE;EAC/C,IAAID,UAAU,IAAIF,UAAU,IAAIG,eAAe,IAAIH,UAAU,CAACE,UAAU,CAAC,EAAE;IACzE,OAAOF,UAAU,CAACE,UAAU,CAAC,CAACC,eAAe,CAAC;EAChD;EACA,OAAO,IAAI;AACb;;;;;;;;;;ACpDA,IAAApS,KAAA,GAAA9a,OAAA;AACA,IAAAksB,WAAA,GAAA/pB,sBAAA,CAAAnC,OAAA;AAAyC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAA4qB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA,IAfzC;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;AAEA,IAAMuvB,EAAE,GAAG,MAAM;AAEjB,IAAMC,CAAC,GAAG,UAAU;AACpB,IAAMC,EAAE,GAAGD,CAAC,GAAGA,CAAC;AAChB,IAAME,EAAE,GAAGD,EAAE,GAAGD,CAAC;AACjB,IAAMG,IAAI,GAAGH,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC;AAExB,IAAMI,MAAM,GAAGtb,IAAI,CAAC2F,IAAI,CAAC,CAAC,GAAGuV,CAAC,CAAC;AAC/B,IAAMK,EAAE,GAAG,CAAC,CAAC,GAAGD,MAAM,KAAK,CAAC,GAAGA,MAAM,CAAC;AACtC,IAAME,GAAG,GAAGD,EAAE,GAAGA,EAAE;AACnB,IAAME,GAAG,GAAGD,GAAG,GAAGD,EAAE;AACpB,IAAMG,GAAG,GAAGD,GAAG,GAAGF,EAAE;AACpB,IAAMI,GAAG,GAAGD,GAAG,GAAGH,EAAE;AAEpB,IAAMK,EAAE,GAAG,CAAC,GAAGV,CAAC,GAAG,CAAC,GAAI,CAAC,GAAGC,EAAE,GAAI,EAAE,GAAI,CAAC,GAAGC,EAAE,GAAI,GAAG;AACrD,IAAMS,EAAE,GAAI,CAAC,GAAGX,CAAC,GAAI,CAAC,GAAI,CAAC,GAAGC,EAAE,GAAI,EAAE,GAAI,EAAE,GAAGC,EAAE,GAAI,IAAI;AACzD,IAAMU,EAAE,GAAI,EAAE,GAAGX,EAAE,GAAI,GAAG,GAAI,EAAE,GAAGC,EAAE,GAAI,IAAI;AAC7C,IAAMW,EAAE,GAAI,EAAE,GAAGX,EAAE,GAAI,IAAI;AAE3B,IAAMY,EAAE,GAAI,CAAC,GAAG,CAAC,GAAIT,EAAE,GAAI,EAAE,GAAG,EAAE,GAAIE,GAAG,GAAI,GAAG,GAAG,GAAG,GAAIE,GAAG;AAC7D,IAAMM,EAAE,GAAI,EAAE,GAAG,EAAE,GAAIT,GAAG,GAAI,EAAE,GAAG,EAAE,GAAIE,GAAG;AAC5C,IAAMQ,EAAE,GAAI,GAAG,GAAG,EAAE,GAAIT,GAAG,GAAI,GAAG,GAAG,GAAG,GAAIE,GAAG;AAC/C,IAAMQ,EAAE,GAAI,IAAI,GAAG,GAAG,GAAIT,GAAG;AAE7B,IAAMU,CAAC,GAAG,OAAO;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EACzC,IAAMnW,CAAC,GAAGiW,OAAO,GAAG,MAAM;EAC1B,IAAMhW,CAAC,GAAGkW,IAAI,CAACC,KAAK,GAAGF,QAAQ,GAAGA,QAAQ,GAAG,QAAQ;EAErD,IAAMhV,CAAC,GAAGjB,CAAC,GAAG2U,EAAE;EAChB,IAAMyB,EAAE,GAAGnV,CAAC,IAAI6U,CAAC,GAAGR,EAAE,CAAC;EAEvB,IAAMe,IAAI,GACRD,EAAE,GACFV,EAAE,GAAGhc,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAG8N,EAAE,CAAC,GACrBT,EAAE,GAAGjc,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAG8N,EAAE,CAAC,GACrBR,EAAE,GAAGlc,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAG8N,EAAE,CAAC,GACrBP,EAAE,GAAGnc,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAG8N,EAAE,CAAC;EAEvB,IAAME,IAAI,GAAG5c,IAAI,CAAC4O,GAAG,CAAC+N,IAAI,CAAC;EAC3B,IAAME,KAAK,GAAGD,IAAI,GAAGA,IAAI;EAEzB,IAAME,IAAI,GAAG9c,IAAI,CAAC0O,GAAG,CAACiO,IAAI,CAAC;EAE3B,IAAMI,IAAI,GAAGH,IAAI,GAAGE,IAAI;EACxB,IAAME,KAAK,GAAGD,IAAI,GAAGA,IAAI;EACzB,IAAME,KAAK,GAAGD,KAAK,GAAGA,KAAK;EAE3B,IAAME,KAAK,GAAG,CAAC,GAAGhC,CAAC,GAAG2B,KAAK;EAC3B,IAAMM,SAAS,GAAGnd,IAAI,CAAC2F,IAAI,CAAC,CAAC,GAAGuV,CAAC,GAAG2B,KAAK,CAAC;EAE1C,IAAMnxB,CAAC,GAAG0wB,CAAC,GAAGe,SAAS;EACvB,IAAMzsB,CAAC,GAAG,CAAC,CAAC,GAAGwqB,CAAC,IAAIgC,KAAK;EAEzB,IAAME,CAAC,GAAG/B,IAAI,GAAArb,IAAA,CAAAkI,GAAA,CAAG4U,IAAI,EAAI,CAAC;EAC1B,IAAM/H,EAAE,GAAGqI,CAAC,GAAGA,CAAC;EAEhB,IAAM7K,CAAC,GAAGlM,CAAC,IAAI3a,CAAC,GAAGuvB,EAAE,CAAC;EACtB,IAAMoC,EAAE,GAAG9K,CAAC,GAAGA,CAAC;EAChB,IAAM+K,EAAE,GAAGD,EAAE,GAAG9K,CAAC;EACjB,IAAMgL,EAAE,GAAGD,EAAE,GAAG/K,CAAC;EACjB,IAAMiL,EAAE,GAAGD,EAAE,GAAGhL,CAAC;EACjB,IAAMkL,EAAE,GAAGD,EAAE,GAAGjL,CAAC;EAEjB,IAAMmL,QAAQ,GACZf,IAAI,GACHI,IAAI,GAAGrsB,CAAC,IACN2sB,EAAE,GAAG,CAAC,GAAIE,EAAE,GAAG,EAAE,IAAK,CAAC,GAAG,CAAC,GAAGP,KAAK,GAAG,EAAE,GAAGI,CAAC,GAAG,CAAC,GAAGrI,EAAE,GAAG,CAAC,GAAGsG,IAAI,CAAC,CAAC,GACpEoC,EAAE,GAAG,GAAG,IAAK,EAAE,GAAG,EAAE,GAAGT,KAAK,GAAG,GAAG,GAAGI,CAAC,GAAG,EAAE,GAAGH,KAAK,GAAG,GAAG,GAAG5B,IAAI,GAAG,CAAC,GAAGtG,EAAE,CAAC;EAE7E,IAAI4I,SAAS,GACX,CAACpL,CAAC,GACC+K,EAAE,GAAG,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGN,KAAK,GAAGI,CAAC,CAAC,GAC7BI,EAAE,GAAG,GAAG,IAAK,CAAC,GAAG,CAAC,GAAGJ,CAAC,GAAG,EAAE,GAAGJ,KAAK,GAAG,CAAC,GAAGjI,EAAE,GAAG,CAAC,GAAGsG,IAAI,GAAG,EAAE,GAAG4B,KAAK,CAAC,IACxEH,IAAI;EAENa,SAAS,GAAG,IAAArV,UAAI,EACdqV,SAAS,GAAG,IAAAhW,eAAS,EAACiW,sBAAsB,CAACpB,IAAI,CAACtL,MAAM,CAAC,CAAC,EAC1D,CAAClR,IAAI,CAAC0H,EAAE,EACR1H,IAAI,CAAC0H,EACP,CAAC;EAED,OAAO,CAAC,IAAAF,eAAS,EAACmW,SAAS,CAAC,EAAE,IAAAnW,eAAS,EAACkW,QAAQ,CAAC,CAAC;AACpD;AAEA,IAAMG,YAAY,GAAG,CAAC,EAAE;AACxB,IAAMC,YAAY,GAAG,EAAE;AACvB,IAAMC,aAAa,GAAG,CAAC,GAAG;AAC1B,IAAMC,aAAa,GAAG,GAAG;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACN,SAAS,EAAED,QAAQ,EAAElB,IAAI,EAAE;EAC7CmB,SAAS,GAAG,IAAArV,UAAI,EAACqV,SAAS,EAAEI,aAAa,EAAEC,aAAa,CAAC;EAEzD,IAAIN,QAAQ,GAAGG,YAAY,EAAE;IAC3BH,QAAQ,GAAGG,YAAY;EACzB,CAAC,MAAM,IAAIH,QAAQ,GAAGI,YAAY,EAAE;IAClCJ,QAAQ,GAAGI,YAAY;EACzB;EAEA,IAAMI,MAAM,GAAG,IAAAvW,eAAS,EAAC+V,QAAQ,CAAC;EAClC,IAAMS,MAAM,GAAGne,IAAI,CAAC4O,GAAG,CAACsP,MAAM,CAAC;EAC/B,IAAME,MAAM,GAAGpe,IAAI,CAAC0O,GAAG,CAACwP,MAAM,CAAC;EAE/B,IAAMG,MAAM,GAAGF,MAAM,GAAGC,MAAM;EAC9B,IAAME,OAAO,GAAGD,MAAM,GAAGA,MAAM;EAC/B,IAAME,OAAO,GAAGD,OAAO,GAAGA,OAAO;EAEjC,IAAME,MAAM,GAAG,IAAA7W,eAAS,EAACgW,SAAS,CAAC;EACnC,IAAMc,UAAU,GAAGb,sBAAsB,CAACpB,IAAI,CAACtL,MAAM,CAAC;EACtD,IAAMwN,aAAa,GAAG,IAAA/W,eAAS,EAAC8W,UAAU,CAAC;EAE3C,IAAM/yB,CAAC,GAAG0wB,CAAC,GAAGpc,IAAI,CAAC2F,IAAI,CAAC,CAAC,GAAGuV,CAAC,GAAAlb,IAAA,CAAAkI,GAAA,CAAGiW,MAAM,EAAI,CAAC,EAAC;EAC5C,IAAMf,CAAC,GAAG/B,IAAI,GAAArb,IAAA,CAAAkI,GAAA,CAAGkW,MAAM,EAAI,CAAC;EAE5B,IAAMjzB,CAAC,GAAGizB,MAAM,GAAG,IAAA9V,UAAI,EAACkW,MAAM,GAAGE,aAAa,EAAE,CAAC1e,IAAI,CAAC0H,EAAE,EAAE1H,IAAI,CAAC0H,EAAE,CAAC;EAClE,IAAMiX,EAAE,GAAGxzB,CAAC,GAAGA,CAAC;EAChB,IAAMyzB,EAAE,GAAGD,EAAE,GAAGxzB,CAAC;EACjB,IAAM0zB,EAAE,GAAGD,EAAE,GAAGzzB,CAAC;EACjB,IAAM2zB,EAAE,GAAGD,EAAE,GAAG1zB,CAAC;EACjB,IAAM4zB,EAAE,GAAGD,EAAE,GAAG3zB,CAAC;EAEjB,IAAMoc,CAAC,GACL6U,CAAC,IACAR,EAAE,GAAGsC,MAAM,GACVrC,EAAE,GAAG7b,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAGsP,MAAM,CAAC,GACzBpC,EAAE,GAAG9b,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAGsP,MAAM,CAAC,GACzBnC,EAAE,GAAG/b,IAAI,CAAC4O,GAAG,CAAC,CAAC,GAAGsP,MAAM,CAAC,CAAC;EAE9B,IAAM5B,OAAO,GACXrB,EAAE,GACAvvB,CAAC,IACAP,CAAC,GACCyzB,EAAE,GAAG,CAAC,IAAK,CAAC,GAAGN,OAAO,GAAGlB,CAAC,CAAC,GAC3B0B,EAAE,GAAG,GAAG,IAAK,CAAC,GAAG,EAAE,GAAGR,OAAO,GAAGC,OAAO,GAAG,EAAE,GAAGnB,CAAC,GAAG,EAAE,GAAG/B,IAAI,CAAC,CAAC,GACnE,MAAM;EAER,IAAIkB,QAAQ,GACVtB,EAAE,IACD1T,CAAC,GACA7b,CAAC,GACC2yB,MAAM,IACLM,EAAE,GAAG,CAAC,GACJE,EAAE,GAAG,EAAE,IAAK,CAAC,GAAGP,OAAO,GAAG,CAAC,GAAGlB,CAAC,GAAG,CAAC,GAAApd,IAAA,CAAAkI,GAAA,CAAGkV,CAAC,EAAI,CAAC,EAAC,GAC7C2B,EAAE,GAAG,GAAG,IAAK,EAAE,GAAG,EAAE,GAAGT,OAAO,GAAGC,OAAO,GAAG,GAAG,GAAGnB,CAAC,GAAG,GAAG,GAAG/B,IAAI,CAAC,CAAC,CAAC;EAE3E,IAAI,CAACmB,IAAI,CAACC,KAAK,EAAE;IACfF,QAAQ,IAAI,QAAQ;EACtB;EAEA,OAAO,CAACD,OAAO,EAAEC,QAAQ,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA,SAASqB,sBAAsBA,CAACpB,IAAI,EAAE;EACpC,OAAO,CAACA,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACjC;;AAEA;AACA;AACA;AACA,IAAMwC,WAAW,GAAG,CAClB,cAAc,EACd,+BAA+B,EAC/B,wDAAwD,CACzD;;AAED;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAAC/H,IAAI,EAAE;EACjC,IAAIgI,MAAM,GAAG,CAAC;EAAC,IAAAC,SAAA,GAAAtE,0BAAA,CACEmE,WAAW;IAAAI,KAAA;EAAA;IAA5B,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAA8B;MAAA,IAAnByU,EAAE,GAAAD,KAAA,CAAA/0B,KAAA;MACX,IAAMi1B,KAAK,GAAGpI,IAAI,CAACoI,KAAK,CAACD,EAAE,CAAC;MAC5B,IAAIC,KAAK,EAAE;QACTJ,MAAM,GAAGpN,QAAQ,CAACwN,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B;MACF;IACF;EAAC,SAAAzwB,GAAA;IAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;EAAA;IAAAswB,SAAA,CAAAjmB,CAAA;EAAA;EACD,IAAI,CAACgmB,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,IAAIhO,MAAM,GAAG,CAAC;EACd,IAAIuL,KAAK,GAAG,KAAK;EACjB,IAAIyC,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IACpChO,MAAM,GAAGgO,MAAM,GAAG,KAAK;EACzB,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IAC3CzC,KAAK,GAAG,IAAI;IACZvL,MAAM,GAAGgO,MAAM,GAAG,KAAK;EACzB;EACA,IAAI,CAAChO,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,OAAO;IAACA,MAAM,EAANA,MAAM;IAAEuL,KAAK,EAALA;EAAK,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS8C,qBAAqBA,CAACC,WAAW,EAAEhD,IAAI,EAAE;EAChD,OAAO,UAAUvC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAE1N,MAAM,EAAE;IACjD,IAAMxhB,MAAM,GAAGgvB,KAAK,CAAChvB,MAAM;IAC3BkvB,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC;IACzC1N,MAAM,GAAGA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0N,SAAS;IAC5B,IAAI,CAACD,MAAM,EAAE;MACX,IAAIC,SAAS,GAAG,CAAC,EAAE;QACjBD,MAAM,GAAGD,KAAK,CAAC5rB,KAAK,CAAC,CAAC;MACxB,CAAC,MAAM;QACL6rB,MAAM,GAAG,IAAI9tB,KAAK,CAACnB,MAAM,CAAC;MAC5B;IACF;IACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,IAAI8gB,MAAM,EAAE;MACvC,IAAMpG,CAAC,GAAG4T,KAAK,CAACtuB,CAAC,CAAC;MAClB,IAAM2a,CAAC,GAAG2T,KAAK,CAACtuB,CAAC,GAAG,CAAC,CAAC;MACtB,IAAM8zB,KAAK,GAAGD,WAAW,CAACnZ,CAAC,EAAEC,CAAC,EAAEkW,IAAI,CAAC;MACrCtC,MAAM,CAACvuB,CAAC,CAAC,GAAG8zB,KAAK,CAAC,CAAC,CAAC;MACpBvF,MAAM,CAACvuB,CAAC,GAAG,CAAC,CAAC,GAAG8zB,KAAK,CAAC,CAAC,CAAC;IAC1B;IACA,OAAOvF,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACO,SAASwF,cAAcA,CAACxI,IAAI,EAAE;EACnC,IAAMsF,IAAI,GAAGyC,YAAY,CAAC/H,IAAI,CAAC;EAC/B,IAAI,CAACsF,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,OAAO,IAAInF,mBAAU,CAAC;IAACH,IAAI,EAAJA,IAAI;IAAEM,KAAK,EAAE;EAAG,CAAC,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACO,SAASmI,cAAcA,CAACnP,UAAU,EAAE;EACzC,IAAMgM,IAAI,GAAGyC,YAAY,CAACzO,UAAU,CAAC8H,OAAO,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACkE,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EAEA,OAAO;IACLoD,OAAO,EAAEL,qBAAqB,CAACtB,UAAU,EAAEzB,IAAI,CAAC;IAChDqD,OAAO,EAAEN,qBAAqB,CAAClD,QAAQ,EAAEG,IAAI;EAC/C,CAAC;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OA,IAAA5F,QAAA,GAAAlpB,OAAA;AACA,IAAAoyB,WAAA,GAAApyB,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAksB,WAAA,GAAA/pB,sBAAA,CAAAnC,OAAA;AACA,IAAA0pB,MAAA,GAAA1pB,OAAA;AACA,IAAAqyB,KAAA,GAAAryB,OAAA;AAKA,IAAAsyB,MAAA,GAAAtyB,OAAA;AACA,IAAAuyB,YAAA,GAAAvyB,OAAA;AAKA,IAAAwyB,WAAA,GAAAxyB,OAAA;AAKA,IAAAyyB,IAAA,GAAAzyB,OAAA;AAIA,IAAA0yB,OAAA,GAAA1yB,OAAA;AAAwC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAA4qB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA,IAjFxC;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAM20B,kBAAkB,GAAG,CAACC,mBAAiB,CAAC;;AAE9C;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,CAACC,mBAAiB,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,IAAIC,qBAAqB,GAAG,IAAI;;AAEhC;AACA;AACA;AACO,SAASC,wBAAwBA,CAACC,OAAO,EAAE;EAChD,IAAMC,IAAI,GAAGD,OAAO,KAAK3sB,SAAS,GAAG,IAAI,GAAG2sB,OAAO;EACnDF,qBAAqB,GAAG,CAACG,IAAI;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAC5G,KAAK,EAAEC,MAAM,EAAE;EAC5C,IAAIA,MAAM,KAAKlmB,SAAS,EAAE;IACxB,KAAK,IAAIrI,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGsmB,KAAK,CAAChvB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAC9CuuB,MAAM,CAACvuB,CAAC,CAAC,GAAGsuB,KAAK,CAACtuB,CAAC,CAAC;IACtB;IACAuuB,MAAM,GAAGA,MAAM;EACjB,CAAC,MAAM;IACLA,MAAM,GAAGD,KAAK,CAAC5rB,KAAK,CAAC,CAAC;EACxB;EACA,OAAO6rB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS4G,iBAAiBA,CAAC7G,KAAK,EAAEC,MAAM,EAAE;EAC/C,IAAIA,MAAM,KAAKlmB,SAAS,IAAIimB,KAAK,KAAKC,MAAM,EAAE;IAC5C,KAAK,IAAIvuB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGsmB,KAAK,CAAChvB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAC9CuuB,MAAM,CAACvuB,CAAC,CAAC,GAAGsuB,KAAK,CAACtuB,CAAC,CAAC;IACtB;IACAsuB,KAAK,GAAGC,MAAM;EAChB;EACA,OAAOD,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8G,aAAaA,CAACvQ,UAAU,EAAE;EACxC,IAAAwQ,gBAAO,EAACxQ,UAAU,CAAC8H,OAAO,CAAC,CAAC,EAAE9H,UAAU,CAAC;EACzC,IAAAyQ,eAAgB,EAACzQ,UAAU,EAAEA,UAAU,EAAEqQ,cAAc,CAAC;AAC1D;;AAEA;AACA;AACA;AACO,SAASK,cAAcA,CAACC,WAAW,EAAE;EAC1CA,WAAW,CAACloB,OAAO,CAAC8nB,aAAa,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASjqB,GAAGA,CAACsqB,cAAc,EAAE;EAClC,IAAI,EAAE,OAAOA,cAAc,KAAK,QAAQ,CAAC,EAAE;IACzC,OAAOA,cAAc;EACvB;EACA,IAAM5Q,UAAU,GAAG,IAAA6Q,gBAAO,EAACD,cAAc,CAAC;EAC1C,IAAI5Q,UAAU,EAAE;IACd,OAAOA,UAAU;EACnB;EAAC,IAAA2O,SAAA,GAAAtE,0BAAA,CAC4B0F,mBAAmB;IAAAnB,KAAA;EAAA;IAAhD,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAAkD;MAAA,IAAvC8U,cAAc,GAAAN,KAAA,CAAA/0B,KAAA;MACvB,IAAMmmB,WAAU,GAAGkP,cAAc,CAAC0B,cAAc,CAAC;MACjD,IAAI5Q,WAAU,EAAE;QACd,OAAOA,WAAU;MACnB;IACF;EAAC,SAAA3hB,GAAA;IAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;EAAA;IAAAswB,SAAA,CAAAjmB,CAAA;EAAA;EACD,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgf,kBAAkBA,CAAC1H,UAAU,EAAE3H,UAAU,EAAEgR,KAAK,EAAErC,KAAK,EAAE;EACvEhH,UAAU,GAAG1Z,GAAG,CAAC0Z,UAAU,CAAC;EAC5B,IAAI8Q,eAAe;EACnB,IAAM3yB,MAAM,GAAG6hB,UAAU,CAAC2I,sBAAsB,CAAC,CAAC;EAClD,IAAIxqB,MAAM,EAAE;IACV2yB,eAAe,GAAG3yB,MAAM,CAACka,UAAU,EAAEgR,KAAK,CAAC;IAC3C,IAAIrC,KAAK,IAAIA,KAAK,KAAKhH,UAAU,CAAC+H,QAAQ,CAAC,CAAC,EAAE;MAC5C,IAAMF,aAAa,GAAG7H,UAAU,CAACgI,gBAAgB,CAAC,CAAC;MACnD,IAAIH,aAAa,EAAE;QACjBiJ,eAAe,GACZA,eAAe,GAAGjJ,aAAa,GAAIlB,sBAAe,CAACK,KAAK,CAAC;MAC9D;IACF;EACF,CAAC,MAAM;IACL,IAAM+J,SAAS,GAAG/Q,UAAU,CAAC+H,QAAQ,CAAC,CAAC;IACvC,IAAKgJ,SAAS,IAAI,SAAS,IAAI,CAAC/J,KAAK,IAAKA,KAAK,IAAI,SAAS,EAAE;MAC5D8J,eAAe,GAAGzY,UAAU;IAC9B,CAAC,MAAM;MACL;MACA;MACA;MACA,IAAMuR,OAAU,GAAGoH,2BAA2B,CAC5ChR,UAAU,EACV1Z,GAAG,CAAC,WAAW,CACjB,CAAC;MACD,IAAI,CAACsjB,OAAU,IAAImH,SAAS,KAAK,SAAS,EAAE;QAC1C;QACAD,eAAe,GAAGzY,UAAU,GAAG2H,UAAU,CAACgI,gBAAgB,CAAC,CAAC;MAC9D,CAAC,MAAM;QACL,IAAIiJ,QAAQ,GAAG,CACb5H,KAAK,CAAC,CAAC,CAAC,GAAGhR,UAAU,GAAG,CAAC,EACzBgR,KAAK,CAAC,CAAC,CAAC,EACRA,KAAK,CAAC,CAAC,CAAC,GAAGhR,UAAU,GAAG,CAAC,EACzBgR,KAAK,CAAC,CAAC,CAAC,EACRA,KAAK,CAAC,CAAC,CAAC,EACRA,KAAK,CAAC,CAAC,CAAC,GAAGhR,UAAU,GAAG,CAAC,EACzBgR,KAAK,CAAC,CAAC,CAAC,EACRA,KAAK,CAAC,CAAC,CAAC,GAAGhR,UAAU,GAAG,CAAC,CAC1B;QACD4Y,QAAQ,GAAGrH,OAAU,CAACqH,QAAQ,EAAEA,QAAQ,EAAE,CAAC,CAAC;QAC5C,IAAMpR,KAAK,GAAG,IAAAwE,mBAAW,EAAC4M,QAAQ,CAACpzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEozB,QAAQ,CAACpzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrE,IAAMiiB,MAAM,GAAG,IAAAuE,mBAAW,EAAC4M,QAAQ,CAACpzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEozB,QAAQ,CAACpzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtEizB,eAAe,GAAG,CAACjR,KAAK,GAAGC,MAAM,IAAI,CAAC;MACxC;MACA,IAAM+H,cAAa,GAAGb,KAAK,GACvBL,sBAAe,CAACK,KAAK,CAAC,GACtBhH,UAAU,CAACgI,gBAAgB,CAAC,CAAC;MACjC,IAAIH,cAAa,KAAKrkB,SAAS,EAAE;QAC/BstB,eAAe,IAAIjJ,cAAa;MAClC;IACF;EACF;EACA,OAAOiJ,eAAe;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,wBAAwBA,CAACP,WAAW,EAAE;EACpDD,cAAc,CAACC,WAAW,CAAC;EAC3BA,WAAW,CAACloB,OAAO,CAAC,UAAUnB,MAAM,EAAE;IACpCqpB,WAAW,CAACloB,OAAO,CAAC,UAAUyhB,WAAW,EAAE;MACzC,IAAI5iB,MAAM,KAAK4iB,WAAW,EAAE;QAC1B,IAAAuG,eAAgB,EAACnpB,MAAM,EAAE4iB,WAAW,EAAEmG,cAAc,CAAC;MACvD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,uBAAuBA,CACrCC,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,gBAAgB,EAChB;EACAH,YAAY,CAAC3oB,OAAO,CAAC,UAAU+oB,WAAW,EAAE;IAC1CH,YAAY,CAAC5oB,OAAO,CAAC,UAAUgpB,WAAW,EAAE;MAC1C,IAAAhB,eAAgB,EAACe,WAAW,EAAEC,WAAW,EAAEH,gBAAgB,CAAC;MAC5D,IAAAb,eAAgB,EAACgB,WAAW,EAAED,WAAW,EAAED,gBAAgB,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACO,SAASG,mBAAmBA,CAAA,EAAG;EACpC,IAAAC,kBAAS,EAAC,CAAC;EACX,IAAAC,iBAAmB,EAAC,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,gBAAgBA,CAAC7R,UAAU,EAAE8R,WAAW,EAAE;EACxD,IAAI,CAAC9R,UAAU,EAAE;IACf,OAAO1Z,GAAG,CAACwrB,WAAW,CAAC;EACzB;EACA,IAAI,OAAO9R,UAAU,KAAK,QAAQ,EAAE;IAClC,OAAO1Z,GAAG,CAAC0Z,UAAU,CAAC;EACxB;EACA,OAAO,yBAA2BA,UAAU;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+R,sCAAsCA,CAACC,cAAc,EAAE;EACrE;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,UAAUvI,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAE1N,MAAM,EAAE;MAC1C,IAAMxhB,MAAM,GAAGgvB,KAAK,CAAChvB,MAAM;MAC3BkvB,SAAS,GAAGA,SAAS,KAAKnmB,SAAS,GAAGmmB,SAAS,GAAG,CAAC;MACnD1N,MAAM,GAAGA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0N,SAAS;MAC5BD,MAAM,GAAGA,MAAM,KAAKlmB,SAAS,GAAGkmB,MAAM,GAAG,IAAI9tB,KAAK,CAACnB,MAAM,CAAC;MAC1D,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,IAAI8gB,MAAM,EAAE;QACvC,IAAMoN,KAAK,GAAG2I,cAAc,CAACvI,KAAK,CAAC5rB,KAAK,CAAC1C,CAAC,EAAEA,CAAC,GAAGwuB,SAAS,CAAC,CAAC;QAC3D,IAAMsI,WAAW,GAAG5I,KAAK,CAAC5uB,MAAM;QAChC,KAAK,IAAIkc,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGlJ,MAAM,EAAEtF,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;UACxC+S,MAAM,CAACvuB,CAAC,GAAGwb,CAAC,CAAC,GAAGA,CAAC,IAAIsb,WAAW,GAAGxI,KAAK,CAACtuB,CAAC,GAAGwb,CAAC,CAAC,GAAG0S,KAAK,CAAC1S,CAAC,CAAC;QAC5D;MACF;MACA,OAAO+S,MAAM;IACf;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwI,uBAAuBA,CAAC5qB,MAAM,EAAE4iB,WAAW,EAAEkF,OAAO,EAAEC,OAAO,EAAE;EAC7E,IAAM8C,UAAU,GAAG7rB,GAAG,CAACgB,MAAM,CAAC;EAC9B,IAAM8qB,QAAQ,GAAG9rB,GAAG,CAAC4jB,WAAW,CAAC;EACjC,IAAAuG,eAAgB,EACd0B,UAAU,EACVC,QAAQ,EACRL,sCAAsC,CAAC3C,OAAO,CAChD,CAAC;EACD,IAAAqB,eAAgB,EACd2B,QAAQ,EACRD,UAAU,EACVJ,sCAAsC,CAAC1C,OAAO,CAChD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS5B,UAAUA,CAACljB,UAAU,EAAEyV,UAAU,EAAE;EACjDkQ,wBAAwB,CAAC,CAAC;EAC1B,OAAOjL,SAAS,CACd1a,UAAU,EACV,WAAW,EACXyV,UAAU,KAAKxc,SAAS,GAAGwc,UAAU,GAAG,WAC1C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6L,QAAQA,CAACthB,UAAU,EAAEyV,UAAU,EAAE;EAC/C,IAAMqS,MAAM,GAAGpN,SAAS,CACtB1a,UAAU,EACVyV,UAAU,KAAKxc,SAAS,GAAGwc,UAAU,GAAG,WAAW,EACnD,WACF,CAAC;EACD,IAAM6F,GAAG,GAAGwM,MAAM,CAAC,CAAC,CAAC;EACrB,IAAIxM,GAAG,GAAG,CAAC,GAAG,IAAIA,GAAG,GAAG,GAAG,EAAE;IAC3BwM,MAAM,CAAC,CAAC,CAAC,GAAG,IAAAhb,YAAM,EAACwO,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG;EAC1C;EACA,OAAOwM,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACd,WAAW,EAAEC,WAAW,EAAE;EACnD,IAAID,WAAW,KAAKC,WAAW,EAAE;IAC/B,OAAO,IAAI;EACb;EACA,IAAMc,UAAU,GAAGf,WAAW,CAACzJ,QAAQ,CAAC,CAAC,KAAK0J,WAAW,CAAC1J,QAAQ,CAAC,CAAC;EACpE,IAAIyJ,WAAW,CAAC1J,OAAO,CAAC,CAAC,KAAK2J,WAAW,CAAC3J,OAAO,CAAC,CAAC,EAAE;IACnD,OAAOyK,UAAU;EACnB;EACA,IAAMC,aAAa,GAAGxB,2BAA2B,CAACQ,WAAW,EAAEC,WAAW,CAAC;EAC3E,OAAOe,aAAa,KAAKnC,cAAc,IAAIkC,UAAU;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASvB,2BAA2BA,CAAC1pB,MAAM,EAAE4iB,WAAW,EAAE;EAC/D,IAAMC,UAAU,GAAG7iB,MAAM,CAACwgB,OAAO,CAAC,CAAC;EACnC,IAAMsC,eAAe,GAAGF,WAAW,CAACpC,OAAO,CAAC,CAAC;EAC7C,IAAI0K,aAAa,GAAG,IAAAC,eAAgB,EAACtI,UAAU,EAAEC,eAAe,CAAC;EACjE,IAAIoI,aAAa,EAAE;IACjB,OAAOA,aAAa;EACtB;;EAEA;AACF;AACA;EACE,IAAIE,gBAAgB,GAAG,IAAI;;EAE3B;AACF;AACA;EACE,IAAIC,qBAAqB,GAAG,IAAI;;EAEhC;EAAA,IAAAC,UAAA,GAAAvI,0BAAA,CAC6BwF,kBAAkB;IAAAgD,MAAA;EAAA;IAA/C,KAAAD,UAAA,CAAApI,CAAA,MAAAqI,MAAA,GAAAD,UAAA,CAAA13B,CAAA,IAAAkf,IAAA,GAAiD;MAAA,IAAtC+U,cAAc,GAAA0D,MAAA,CAAAh5B,KAAA;MACvB,IAAI,CAAC64B,gBAAgB,EAAE;QACrBA,gBAAgB,GAAGvD,cAAc,CAAC7nB,MAAM,CAAC;MAC3C;MACA,IAAI,CAACqrB,qBAAqB,EAAE;QAC1BA,qBAAqB,GAAGxD,cAAc,CAACjF,WAAW,CAAC;MACrD;IACF;EAAC,SAAA7rB,GAAA;IAAAu0B,UAAA,CAAAnzB,CAAA,CAAApB,GAAA;EAAA;IAAAu0B,UAAA,CAAAlqB,CAAA;EAAA;EAED,IAAI,CAACgqB,gBAAgB,IAAI,CAACC,qBAAqB,EAAE;IAC/C,OAAO,IAAI;EACb;EAEA,IAAMG,gBAAgB,GAAG,WAAW;EACpC,IAAI,CAACH,qBAAqB,EAAE;IAC1B,IAAMI,aAAa,GAAG,IAAAN,eAAgB,EAACK,gBAAgB,EAAE1I,eAAe,CAAC;IACzE,IAAI2I,aAAa,EAAE;MACjBP,aAAa,GAAGQ,qBAAqB,CACnCN,gBAAgB,CAACrD,OAAO,EACxB0D,aACF,CAAC;IACH;EACF,CAAC,MAAM,IAAI,CAACL,gBAAgB,EAAE;IAC5B,IAAMO,UAAU,GAAG,IAAAR,eAAgB,EAACtI,UAAU,EAAE2I,gBAAgB,CAAC;IACjE,IAAIG,UAAU,EAAE;MACdT,aAAa,GAAGQ,qBAAqB,CACnCC,UAAU,EACVN,qBAAqB,CAACvD,OACxB,CAAC;IACH;EACF,CAAC,MAAM;IACLoD,aAAa,GAAGQ,qBAAqB,CACnCN,gBAAgB,CAACrD,OAAO,EACxBsD,qBAAqB,CAACvD,OACxB,CAAC;EACH;EAEA,IAAIoD,aAAa,EAAE;IACjBjC,aAAa,CAACjpB,MAAM,CAAC;IACrBipB,aAAa,CAACrG,WAAW,CAAC;IAC1B,IAAAuG,eAAgB,EAACnpB,MAAM,EAAE4iB,WAAW,EAAEsI,aAAa,CAAC;EACtD;EAEA,OAAOA,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASQ,qBAAqBA,CAACE,EAAE,EAAEC,EAAE,EAAE;EACrC,OAAO,UAAU1J,KAAK,EAAEC,MAAM,EAAE0J,UAAU,EAAEnX,MAAM,EAAE;IAClDyN,MAAM,GAAGwJ,EAAE,CAACzJ,KAAK,EAAEC,MAAM,EAAE0J,UAAU,EAAEnX,MAAM,CAAC;IAC9C,OAAOkX,EAAE,CAACzJ,MAAM,EAAEA,MAAM,EAAE0J,UAAU,EAAEnX,MAAM,CAAC;EAC/C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoX,YAAYA,CAAC/rB,MAAM,EAAE4iB,WAAW,EAAE;EAChD,IAAMoJ,gBAAgB,GAAGhtB,GAAG,CAACgB,MAAM,CAAC;EACpC,IAAMisB,qBAAqB,GAAGjtB,GAAG,CAAC4jB,WAAW,CAAC;EAC9C,OAAO8G,2BAA2B,CAACsC,gBAAgB,EAAEC,qBAAqB,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAStO,SAASA,CAAC1a,UAAU,EAAEjD,MAAM,EAAE4iB,WAAW,EAAE;EACzD,IAAMsI,aAAa,GAAGa,YAAY,CAAC/rB,MAAM,EAAE4iB,WAAW,CAAC;EACvD,IAAI,CAACsI,aAAa,EAAE;IAClB,IAAMrI,UAAU,GAAG7jB,GAAG,CAACgB,MAAM,CAAC,CAACwgB,OAAO,CAAC,CAAC;IACxC,IAAMsC,eAAe,GAAG9jB,GAAG,CAAC4jB,WAAW,CAAC,CAACpC,OAAO,CAAC,CAAC;IAClD,MAAM,IAAIziB,KAAK,mCAAA0B,MAAA,CACqBojB,UAAU,WAAApjB,MAAA,CAAQqjB,eAAe,CACrE,CAAC;EACH;EACA,OAAOoI,aAAa,CAACjoB,UAAU,EAAE/G,SAAS,EAAE+G,UAAU,CAAC9P,MAAM,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+4B,eAAeA,CAACtb,MAAM,EAAE5Q,MAAM,EAAE4iB,WAAW,EAAEtK,KAAK,EAAE;EAClE,IAAM4S,aAAa,GAAGa,YAAY,CAAC/rB,MAAM,EAAE4iB,WAAW,CAAC;EACvD,OAAO,IAAAxK,sBAAc,EAACxH,MAAM,EAAEsa,aAAa,EAAEhvB,SAAS,EAAEoc,KAAK,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6T,wBAAwBA,CACtCpK,KAAK,EACLiK,gBAAgB,EAChBC,qBAAqB,EACrB;EACA,IAAMf,aAAa,GAAGxB,2BAA2B,CAC/CsC,gBAAgB,EAChBC,qBACF,CAAC;EACD,OAAOf,aAAa,CAACnJ,KAAK,CAAC;AAC7B;;AAEA;AACA;AACA;AACA,IAAIqK,cAAc,GAAG,IAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAAC3T,UAAU,EAAE;EAC5C0T,cAAc,GAAGptB,GAAG,CAAC0Z,UAAU,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACO,SAAS4T,mBAAmBA,CAAA,EAAG;EACpCF,cAAc,GAAG,IAAI;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASG,iBAAiBA,CAAA,EAAG;EAClC,OAAOH,cAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,aAAaA,CAAA,EAAG;EAC9BH,iBAAiB,CAAC,WAAW,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,gBAAgBA,CAACxpB,UAAU,EAAE+oB,gBAAgB,EAAE;EAC7D,IAAI,CAACI,cAAc,EAAE;IACnB,OAAOnpB,UAAU;EACnB;EACA,OAAO0a,SAAS,CAAC1a,UAAU,EAAE+oB,gBAAgB,EAAEI,cAAc,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,kBAAkBA,CAACzpB,UAAU,EAAE0pB,cAAc,EAAE;EAC7D,IAAI,CAACP,cAAc,EAAE;IACnB,IACEzD,qBAAqB,IACrB,CAAC,IAAA/zB,kBAAM,EAACqO,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAC3BA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IACrBA,UAAU,CAAC,CAAC,CAAC,IAAI,GAAG,IACpBA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IACpBA,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,EACnB;MACA0lB,qBAAqB,GAAG,KAAK;MAC7B,IAAAjK,aAAI,EACF,wFACF,CAAC;IACH;IACA,OAAOzb,UAAU;EACnB;EACA,OAAO0a,SAAS,CAAC1a,UAAU,EAAEmpB,cAAc,EAAEO,cAAc,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAAChc,MAAM,EAAEob,gBAAgB,EAAE;EACrD,IAAI,CAACI,cAAc,EAAE;IACnB,OAAOxb,MAAM;EACf;EACA,OAAOsb,eAAe,CAACtb,MAAM,EAAEob,gBAAgB,EAAEI,cAAc,CAAC;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,cAAcA,CAACjc,MAAM,EAAE+b,cAAc,EAAE;EACrD,IAAI,CAACP,cAAc,EAAE;IACnB,OAAOxb,MAAM;EACf;EACA,OAAOsb,eAAe,CAACtb,MAAM,EAAEwb,cAAc,EAAEO,cAAc,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,gBAAgBA,CAAC/b,UAAU,EAAEib,gBAAgB,EAAE;EAC7D,IAAI,CAACI,cAAc,EAAE;IACnB,OAAOrb,UAAU;EACnB;EACA,IAAMgc,mBAAmB,GAAG/tB,GAAG,CAACgtB,gBAAgB,CAAC,CAACtL,gBAAgB,CAAC,CAAC;EACpE,IAAMsM,iBAAiB,GAAGZ,cAAc,CAAC1L,gBAAgB,CAAC,CAAC;EAC3D,OAAOqM,mBAAmB,IAAIC,iBAAiB,GAC1Cjc,UAAU,GAAGgc,mBAAmB,GAAIC,iBAAiB,GACtDjc,UAAU;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkc,kBAAkBA,CAAClc,UAAU,EAAE4b,cAAc,EAAE;EAC7D,IAAI,CAACP,cAAc,EAAE;IACnB,OAAOrb,UAAU;EACnB;EACA,IAAMmc,iBAAiB,GAAGluB,GAAG,CAAC2tB,cAAc,CAAC,CAACjM,gBAAgB,CAAC,CAAC;EAChE,IAAMsM,iBAAiB,GAAGZ,cAAc,CAAC1L,gBAAgB,CAAC,CAAC;EAC3D,OAAOwM,iBAAiB,IAAIF,iBAAiB,GACxCjc,UAAU,GAAGic,iBAAiB,GAAIE,iBAAiB,GACpDnc,UAAU;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoc,6BAA6BA,CAACtC,UAAU,EAAEC,QAAQ,EAAEnN,SAAS,EAAE;EAC7E,OAAO,UAAUgK,KAAK,EAAE;IACtB,IAAIyF,WAAW,EAAErU,UAAU;IAC3B,IAAI8R,UAAU,CAAChS,QAAQ,CAAC,CAAC,EAAE;MACzB,IAAMwU,YAAY,GAAGxC,UAAU,CAACjS,SAAS,CAAC,CAAC;MAC3C,IAAM4D,iBAAiB,GAAG,IAAA5G,gBAAQ,EAACyX,YAAY,CAAC;MAChD1F,KAAK,GAAGA,KAAK,CAACpxB,KAAK,CAAC,CAAC,CAAC;MACtBwiB,UAAU,GAAG,IAAAwD,yBAAa,EAACoL,KAAK,EAAEkD,UAAU,EAAErO,iBAAiB,CAAC;MAChE,IAAIzD,UAAU,EAAE;QACd;QACA4O,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG5O,UAAU,GAAGyD,iBAAiB;MACtD;MACAmL,KAAK,CAAC,CAAC,CAAC,GAAG,IAAAxZ,WAAK,EAACwZ,KAAK,CAAC,CAAC,CAAC,EAAE0F,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,CAAC;MAC5D1F,KAAK,CAAC,CAAC,CAAC,GAAG,IAAAxZ,WAAK,EAACwZ,KAAK,CAAC,CAAC,CAAC,EAAE0F,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,CAAC;MAC5DD,WAAW,GAAGzP,SAAS,CAACgK,KAAK,CAAC;IAChC,CAAC,MAAM;MACLyF,WAAW,GAAGzP,SAAS,CAACgK,KAAK,CAAC;IAChC;IACA,IAAI5O,UAAU,IAAI+R,QAAQ,CAACjS,QAAQ,CAAC,CAAC,EAAE;MACrC;MACAuU,WAAW,CAAC,CAAC,CAAC,IAAIrU,UAAU,GAAG,IAAAnD,gBAAQ,EAACkV,QAAQ,CAAClS,SAAS,CAAC,CAAC,CAAC;IAC/D;IACA,OAAOwU,WAAW;EACpB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,SAASA,CAAA,EAAG;EAC1B;EACA;EACA1D,wBAAwB,CAAC2D,iBAAoB,CAAC;EAC9C3D,wBAAwB,CAAC4D,kBAAoB,CAAC;EAC9C;EACA;EACA3D,uBAAuB,CACrB2D,kBAAoB,EACpBD,iBAAoB,EACpBrL,kBAAY,EACZI,gBACF,CAAC;AACH;AAEAgL,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC31BX,IAAAhkB,QAAA,GAAA1T,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAM63B,IAAI,GAAG,IAAIn5B,KAAK,CAAC,CAAC,CAAC;;AAEzB;AACA;AACA;AACA;AACO,SAASiG,MAAMA,CAAA,EAAG;EACvB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmzB,KAAKA,CAAC/P,SAAS,EAAE;EAC/B,OAAO9d,GAAG,CAAC8d,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgQ,QAAQA,CAACC,UAAU,EAAEC,UAAU,EAAE;EAC/C,IAAMC,EAAE,GAAGF,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMG,EAAE,GAAGH,UAAU,CAAC,CAAC,CAAC;EACxB,IAAM5Q,EAAE,GAAG4Q,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMI,EAAE,GAAGJ,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMK,EAAE,GAAGL,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMM,EAAE,GAAGN,UAAU,CAAC,CAAC,CAAC;EACxB,IAAM/G,EAAE,GAAGgH,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMM,EAAE,GAAGN,UAAU,CAAC,CAAC,CAAC;EACxB,IAAM5Q,EAAE,GAAG4Q,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMtI,EAAE,GAAGsI,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMO,EAAE,GAAGP,UAAU,CAAC,CAAC,CAAC;EACxB,IAAMQ,EAAE,GAAGR,UAAU,CAAC,CAAC,CAAC;EAExBD,UAAU,CAAC,CAAC,CAAC,GAAGE,EAAE,GAAGjH,EAAE,GAAG7J,EAAE,GAAGmR,EAAE;EACjCP,UAAU,CAAC,CAAC,CAAC,GAAGG,EAAE,GAAGlH,EAAE,GAAGmH,EAAE,GAAGG,EAAE;EACjCP,UAAU,CAAC,CAAC,CAAC,GAAGE,EAAE,GAAG7Q,EAAE,GAAGD,EAAE,GAAGuI,EAAE;EACjCqI,UAAU,CAAC,CAAC,CAAC,GAAGG,EAAE,GAAG9Q,EAAE,GAAG+Q,EAAE,GAAGzI,EAAE;EACjCqI,UAAU,CAAC,CAAC,CAAC,GAAGE,EAAE,GAAGM,EAAE,GAAGpR,EAAE,GAAGqR,EAAE,GAAGJ,EAAE;EACtCL,UAAU,CAAC,CAAC,CAAC,GAAGG,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGK,EAAE,GAAGH,EAAE;EAEtC,OAAON,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS/tB,GAAGA,CAAC8d,SAAS,EAAEtqB,CAAC,EAAEC,CAAC,EAAEgyB,CAAC,EAAE7K,CAAC,EAAEtiB,CAAC,EAAEiJ,CAAC,EAAE;EAC/Cuc,SAAS,CAAC,CAAC,CAAC,GAAGtqB,CAAC;EAChBsqB,SAAS,CAAC,CAAC,CAAC,GAAGrqB,CAAC;EAChBqqB,SAAS,CAAC,CAAC,CAAC,GAAG2H,CAAC;EAChB3H,SAAS,CAAC,CAAC,CAAC,GAAGlD,CAAC;EAChBkD,SAAS,CAAC,CAAC,CAAC,GAAGxlB,CAAC;EAChBwlB,SAAS,CAAC,CAAC,CAAC,GAAGvc,CAAC;EAChB,OAAOuc,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2Q,YAAYA,CAACV,UAAU,EAAEC,UAAU,EAAE;EACnDD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7BD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7BD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7BD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7BD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7BD,UAAU,CAAC,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,CAAC;EAC7B,OAAOD,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASj3B,KAAKA,CAACgnB,SAAS,EAAE1a,UAAU,EAAE;EAC3C,IAAMsL,CAAC,GAAGtL,UAAU,CAAC,CAAC,CAAC;EACvB,IAAMuL,CAAC,GAAGvL,UAAU,CAAC,CAAC,CAAC;EACvBA,UAAU,CAAC,CAAC,CAAC,GAAG0a,SAAS,CAAC,CAAC,CAAC,GAAGpP,CAAC,GAAGoP,SAAS,CAAC,CAAC,CAAC,GAAGnP,CAAC,GAAGmP,SAAS,CAAC,CAAC,CAAC;EAClE1a,UAAU,CAAC,CAAC,CAAC,GAAG0a,SAAS,CAAC,CAAC,CAAC,GAAGpP,CAAC,GAAGoP,SAAS,CAAC,CAAC,CAAC,GAAGnP,CAAC,GAAGmP,SAAS,CAAC,CAAC,CAAC;EAClE,OAAO1a,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4Y,MAAMA,CAAC8B,SAAS,EAAE7B,KAAK,EAAE;EACvC,IAAMlF,GAAG,GAAG1O,IAAI,CAAC0O,GAAG,CAACkF,KAAK,CAAC;EAC3B,IAAMhF,GAAG,GAAG5O,IAAI,CAAC4O,GAAG,CAACgF,KAAK,CAAC;EAC3B,OAAO6R,QAAQ,CAAChQ,SAAS,EAAE9d,GAAG,CAAC4tB,IAAI,EAAE7W,GAAG,EAAEE,GAAG,EAAE,CAACA,GAAG,EAAEF,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqF,KAAKA,CAAC0B,SAAS,EAAEpP,CAAC,EAAEC,CAAC,EAAE;EACrC,OAAOmf,QAAQ,CAAChQ,SAAS,EAAE9d,GAAG,CAAC4tB,IAAI,EAAElf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+f,SAASA,CAAC76B,MAAM,EAAE6a,CAAC,EAAEC,CAAC,EAAE;EACtC,OAAO3O,GAAG,CAACnM,MAAM,EAAE6a,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASggB,SAASA,CAAC7Q,SAAS,EAAE9O,EAAE,EAAEC,EAAE,EAAE;EAC3C,OAAO6e,QAAQ,CAAChQ,SAAS,EAAE9d,GAAG,CAAC4tB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE5e,EAAE,EAAEC,EAAE,CAAC,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2f,OAAOA,CAAC9Q,SAAS,EAAE+Q,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAE/S,KAAK,EAAEgT,GAAG,EAAEC,GAAG,EAAE;EACpE,IAAMjY,GAAG,GAAG5O,IAAI,CAAC4O,GAAG,CAACgF,KAAK,CAAC;EAC3B,IAAMlF,GAAG,GAAG1O,IAAI,CAAC0O,GAAG,CAACkF,KAAK,CAAC;EAC3B6B,SAAS,CAAC,CAAC,CAAC,GAAGiR,EAAE,GAAGhY,GAAG;EACvB+G,SAAS,CAAC,CAAC,CAAC,GAAGkR,EAAE,GAAG/X,GAAG;EACvB6G,SAAS,CAAC,CAAC,CAAC,GAAG,CAACiR,EAAE,GAAG9X,GAAG;EACxB6G,SAAS,CAAC,CAAC,CAAC,GAAGkR,EAAE,GAAGjY,GAAG;EACvB+G,SAAS,CAAC,CAAC,CAAC,GAAGmR,GAAG,GAAGF,EAAE,GAAGhY,GAAG,GAAGmY,GAAG,GAAGH,EAAE,GAAG9X,GAAG,GAAG4X,GAAG;EACpD/Q,SAAS,CAAC,CAAC,CAAC,GAAGmR,GAAG,GAAGD,EAAE,GAAG/X,GAAG,GAAGiY,GAAG,GAAGF,EAAE,GAAGjY,GAAG,GAAG+X,GAAG;EACpD,OAAOhR,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqR,mBAAmBA,CAACN,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAE/S,KAAK,EAAEgT,GAAG,EAAEC,GAAG,EAAE;EACrE,OAAOrc,QAAQ,CAAC+b,OAAO,CAACl0B,MAAM,CAAC,CAAC,EAAEm0B,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAE/S,KAAK,EAAEgT,GAAG,EAAEC,GAAG,CAAC,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,MAAMA,CAACjvB,MAAM,EAAE;EAC7B,OAAOkvB,WAAW,CAAClvB,MAAM,EAAEA,MAAM,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkvB,WAAWA,CAACx7B,MAAM,EAAEsM,MAAM,EAAE;EAC1C,IAAMmvB,GAAG,GAAGC,WAAW,CAACpvB,MAAM,CAAC;EAC/B,IAAAmJ,eAAM,EAACgmB,GAAG,KAAK,CAAC,EAAE,0CAA0C,CAAC;EAE7D,IAAM97B,CAAC,GAAG2M,MAAM,CAAC,CAAC,CAAC;EACnB,IAAM1M,CAAC,GAAG0M,MAAM,CAAC,CAAC,CAAC;EACnB,IAAMslB,CAAC,GAAGtlB,MAAM,CAAC,CAAC,CAAC;EACnB,IAAMya,CAAC,GAAGza,MAAM,CAAC,CAAC,CAAC;EACnB,IAAM7H,CAAC,GAAG6H,MAAM,CAAC,CAAC,CAAC;EACnB,IAAMoB,CAAC,GAAGpB,MAAM,CAAC,CAAC,CAAC;EAEnBtM,MAAM,CAAC,CAAC,CAAC,GAAG+mB,CAAC,GAAG0U,GAAG;EACnBz7B,MAAM,CAAC,CAAC,CAAC,GAAG,CAACJ,CAAC,GAAG67B,GAAG;EACpBz7B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC4xB,CAAC,GAAG6J,GAAG;EACpBz7B,MAAM,CAAC,CAAC,CAAC,GAAGL,CAAC,GAAG87B,GAAG;EACnBz7B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC4xB,CAAC,GAAGlkB,CAAC,GAAGqZ,CAAC,GAAGtiB,CAAC,IAAIg3B,GAAG;EACjCz7B,MAAM,CAAC,CAAC,CAAC,GAAG,EAAEL,CAAC,GAAG+N,CAAC,GAAG9N,CAAC,GAAG6E,CAAC,CAAC,GAAGg3B,GAAG;EAElC,OAAOz7B,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS07B,WAAWA,CAACngB,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;AAC1C;;AAEA;AACA;AACA;AACA,IAAMogB,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS3c,QAAQA,CAACzD,GAAG,EAAE;EAC5B,IAAMqgB,eAAe,GACnB,SAAS,GACTrgB,GAAG,CACAlN,GAAG,CACF,UAACxP,KAAK,EAAEsB,CAAC;IAAA,OACPqU,IAAI,CAACmI,KAAK,CAAC9d,KAAK,GAAG88B,eAAe,CAACx7B,CAAC,CAAC,CAAC,GAAGw7B,eAAe,CAACx7B,CAAC,CAAC;EAAA,CAC/D,CAAC,CACA2lB,IAAI,CAAC,IAAI,CAAC,GACb,GAAG;EACL,OAAO8V,eAAe;AACxB;;;;;;;;;;;AChSA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CACzB9a,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNgJ,SAAS,EACTpK,IAAI,EACJic,iBAAiB,EACjB;EACAjc,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;EACvBic,iBAAiB,GAAGA,iBAAiB,GAAGA,iBAAiB,GAAG,CAAC;EAC7D,IAAI37B,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAGqF,MAAM,EAAErF,CAAC,GAAGpb,GAAG,EAAEob,CAAC,IAAIsF,MAAM,EAAE;IACzC,IAAMpG,CAAC,GAAGkG,eAAe,CAACpF,CAAC,CAAC;IAC5B,IAAMb,CAAC,GAAGiG,eAAe,CAACpF,CAAC,GAAG,CAAC,CAAC;IAChCkE,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG8pB,SAAS,CAAC,CAAC,CAAC,GAAGpP,CAAC,GAAGoP,SAAS,CAAC,CAAC,CAAC,GAAGnP,CAAC,GAAGmP,SAAS,CAAC,CAAC,CAAC;IAC9DpK,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG8pB,SAAS,CAAC,CAAC,CAAC,GAAGpP,CAAC,GAAGoP,SAAS,CAAC,CAAC,CAAC,GAAGnP,CAAC,GAAGmP,SAAS,CAAC,CAAC,CAAC;IAE9D,KAAK,IAAIpO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGigB,iBAAiB,EAAEjgB,CAAC,EAAE,EAAE;MAC1CgE,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAACpF,CAAC,GAAGE,CAAC,CAAC;IACpC;EACF;EAEA,IAAIgE,IAAI,IAAIA,IAAI,CAACpgB,MAAM,IAAIU,CAAC,EAAE;IAC5B0f,IAAI,CAACpgB,MAAM,GAAGU,CAAC;EACjB;EACA,OAAO0f,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsI,MAAMA,CACpBpH,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNmH,KAAK,EACL2T,MAAM,EACNlc,IAAI,EACJ;EACAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;EACvB,IAAMqD,GAAG,GAAG1O,IAAI,CAAC0O,GAAG,CAACkF,KAAK,CAAC;EAC3B,IAAMhF,GAAG,GAAG5O,IAAI,CAAC4O,GAAG,CAACgF,KAAK,CAAC;EAC3B,IAAM4T,OAAO,GAAGD,MAAM,CAAC,CAAC,CAAC;EACzB,IAAME,OAAO,GAAGF,MAAM,CAAC,CAAC,CAAC;EACzB,IAAI57B,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAGqF,MAAM,EAAErF,CAAC,GAAGpb,GAAG,EAAEob,CAAC,IAAIsF,MAAM,EAAE;IACzC,IAAMjH,MAAM,GAAG+G,eAAe,CAACpF,CAAC,CAAC,GAAGqgB,OAAO;IAC3C,IAAM/hB,MAAM,GAAG8G,eAAe,CAACpF,CAAC,GAAG,CAAC,CAAC,GAAGsgB,OAAO;IAC/Cpc,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG67B,OAAO,GAAGhiB,MAAM,GAAGkJ,GAAG,GAAGjJ,MAAM,GAAGmJ,GAAG;IACjDvD,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG87B,OAAO,GAAGjiB,MAAM,GAAGoJ,GAAG,GAAGnJ,MAAM,GAAGiJ,GAAG;IACjD,KAAK,IAAIrH,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGF,CAAC,GAAGsF,MAAM,EAAE,EAAEpF,CAAC,EAAE;MACvCgE,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAAClF,CAAC,CAAC;IAChC;EACF;EACA,IAAIgE,IAAI,IAAIA,IAAI,CAACpgB,MAAM,IAAIU,CAAC,EAAE;IAC5B0f,IAAI,CAACpgB,MAAM,GAAGU,CAAC;EACjB;EACA,OAAO0f,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0I,KAAKA,CACnBxH,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNia,EAAE,EACFC,EAAE,EACFY,MAAM,EACNlc,IAAI,EACJ;EACAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;EACvB,IAAMmc,OAAO,GAAGD,MAAM,CAAC,CAAC,CAAC;EACzB,IAAME,OAAO,GAAGF,MAAM,CAAC,CAAC,CAAC;EACzB,IAAI57B,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAGqF,MAAM,EAAErF,CAAC,GAAGpb,GAAG,EAAEob,CAAC,IAAIsF,MAAM,EAAE;IACzC,IAAMjH,MAAM,GAAG+G,eAAe,CAACpF,CAAC,CAAC,GAAGqgB,OAAO;IAC3C,IAAM/hB,MAAM,GAAG8G,eAAe,CAACpF,CAAC,GAAG,CAAC,CAAC,GAAGsgB,OAAO;IAC/Cpc,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG67B,OAAO,GAAGd,EAAE,GAAGlhB,MAAM;IACjC6F,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG87B,OAAO,GAAGd,EAAE,GAAGlhB,MAAM;IACjC,KAAK,IAAI4B,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGF,CAAC,GAAGsF,MAAM,EAAE,EAAEpF,CAAC,EAAE;MACvCgE,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAAClF,CAAC,CAAC;IAChC;EACF;EACA,IAAIgE,IAAI,IAAIA,IAAI,CAACpgB,MAAM,IAAIU,CAAC,EAAE;IAC5B0f,IAAI,CAACpgB,MAAM,GAAGU,CAAC;EACjB;EACA,OAAO0f,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASib,SAASA,CACvB/Z,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNjH,MAAM,EACNC,MAAM,EACN4F,IAAI,EACJ;EACAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;EACvB,IAAI1f,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAGqF,MAAM,EAAErF,CAAC,GAAGpb,GAAG,EAAEob,CAAC,IAAIsF,MAAM,EAAE;IACzCpB,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAACpF,CAAC,CAAC,GAAG3B,MAAM;IACvC6F,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAACpF,CAAC,GAAG,CAAC,CAAC,GAAG1B,MAAM;IAC3C,KAAK,IAAI4B,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGF,CAAC,GAAGsF,MAAM,EAAE,EAAEpF,CAAC,EAAE;MACvCgE,IAAI,CAAC1f,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAAClF,CAAC,CAAC;IAChC;EACF;EACA,IAAIgE,IAAI,IAAIA,IAAI,CAACpgB,MAAM,IAAIU,CAAC,EAAE;IAC5B0f,IAAI,CAACpgB,MAAM,GAAGU,CAAC;EACjB;EACA,OAAO0f,IAAI;AACb;;;;;;;;ACzJA,IAAApT,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAg6B,QAAA,GAAAh6B,OAAA;AAMA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAIA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAm6B,WAAA,GAAAn6B,OAAA;AAAgD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAjBhD;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAM63B,YAAY,GAAG,IAAAC,iBAAe,EAAC,CAAC;;AAEtC;AACA,IAAMC,QAAQ,GAAG,CAACC,GAAG,EAAEA,GAAG,CAAC;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMC,QAAQ,0BAAA3vB,WAAA;EACZ,SAAA2vB,SAAA,EAAc;IAAA,IAAAz1B,KAAA;IAAAxI,eAAA,OAAAi+B,QAAA;IACZz1B,KAAA,GAAAnB,UAAA,OAAA42B,QAAA;;IAEA;AACJ;AACA;AACA;IACIz1B,KAAA,CAAKglB,OAAO,GAAG,IAAAzM,oBAAW,EAAC,CAAC;;IAE5B;AACJ;AACA;AACA;IACIvY,KAAA,CAAK01B,eAAe,GAAG,CAAC,CAAC;;IAEzB;AACJ;AACA;AACA;IACI11B,KAAA,CAAK21B,wCAAwC,GAAG,CAAC;;IAEjD;AACJ;AACA;AACA;IACI31B,KAAA,CAAK41B,0BAA0B,GAAG,CAAC;;IAEnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI51B,KAAA,CAAK61B,2BAA2B,GAAG,IAAAx6B,qBAAU,EAC3C,UAACy6B,QAAQ,EAAEC,gBAAgB,EAAE/S,SAAS,EAAK;MACzC,IAAI,CAACA,SAAS,EAAE;QACd,OAAOhjB,KAAA,CAAKg2B,qBAAqB,CAACD,gBAAgB,CAAC;MACrD;MACA,IAAMhd,KAAK,GAAG/Y,KAAA,CAAK+Y,KAAK,CAAC,CAAC;MAC1BA,KAAK,CAAC0E,cAAc,CAACuF,SAAS,CAAC;MAC/B,OAAOjK,KAAK,CAACid,qBAAqB,CAACD,gBAAgB,CAAC;IACtD,CACF,CAAC;IAAC,OAAA/1B,KAAA;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEL,SAAA,CAAA81B,QAAA,EAAA3vB,WAAA;EAAA,OAAApO,YAAA,CAAA+9B,QAAA;IAAA99B,GAAA;IAAAC,KAAA,EAOA,SAAAq+B,mBAAmBA,CAACF,gBAAgB,EAAE/S,SAAS,EAAE;MAC/C,OAAO,IAAI,CAAC6S,2BAA2B,CACrC,IAAI,CAAC/yB,WAAW,CAAC,CAAC,EAClBizB,gBAAgB,EAChB/S,SACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArrB,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,OAAO,IAAA5V,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAxL,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,OAAO,IAAAjzB,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,OAAO,IAAI,CAACqiB,cAAc,CAACtiB,CAAC,EAAEC,CAAC,EAAE0hB,QAAQ,EAAE32B,MAAM,CAACy3B,SAAS,CAAC,KAAK,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1+B,GAAA;IAAAC,KAAA,EAQA,SAAA0+B,eAAeA,CAAClP,KAAK,EAAE+O,YAAY,EAAE;MACnCA,YAAY,GAAGA,YAAY,GAAGA,YAAY,GAAG,CAACX,GAAG,EAAEA,GAAG,CAAC;MACvD,IAAI,CAACU,cAAc,CAAC9O,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAE+O,YAAY,EAAEvnB,QAAQ,CAAC;MAC/D,OAAOunB,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAx+B,GAAA;IAAAC,KAAA,EAOA,SAAA2+B,oBAAoBA,CAACjuB,UAAU,EAAE;MAC/B,OAAO,IAAI,CAAC4Q,UAAU,CAAC5Q,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;IACtD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3Q,GAAA;IAAAC,KAAA,EAMA,SAAA4+B,aAAaA,CAACvgB,MAAM,EAAE;MACpB,OAAO,IAAA9S,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAAqmB,SAASA,CAAChI,MAAM,EAAE;MAChB,IAAI,IAAI,CAACyf,eAAe,IAAI,IAAI,CAAC5yB,WAAW,CAAC,CAAC,EAAE;QAC9C,IAAMmT,OAAM,GAAG,IAAI,CAACugB,aAAa,CAAC,IAAI,CAACxR,OAAO,CAAC;QAC/C,IAAIyR,KAAK,CAACxgB,OAAM,CAAC,CAAC,CAAC,CAAC,IAAIwgB,KAAK,CAACxgB,OAAM,CAAC,CAAC,CAAC,CAAC,EAAE;UACxC,IAAAwD,4BAAmB,EAACxD,OAAM,CAAC;QAC7B;QACA,IAAI,CAACyf,eAAe,GAAG,IAAI,CAAC5yB,WAAW,CAAC,CAAC;MAC3C;MACA,OAAO,IAAAga,uBAAc,EAAC,IAAI,CAACkI,OAAO,EAAE/O,MAAM,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAte,GAAA;IAAAC,KAAA,EAQA,SAAAspB,MAAMA,CAACC,KAAK,EAAE2T,MAAM,EAAE;MACpB,IAAA3xB,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAxL,GAAA;IAAAC,KAAA,EAUA,SAAA0pB,KAAKA,CAAC2S,EAAE,EAAEC,EAAE,EAAEY,MAAM,EAAE;MACpB,IAAA3xB,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAxL,GAAA;IAAAC,KAAA,EASA,SAAA8+B,QAAQA,CAACpc,SAAS,EAAE;MAClB,OAAO,IAAI,CAAC0b,qBAAqB,CAAC1b,SAAS,GAAGA,SAAS,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3iB,GAAA;IAAAC,KAAA,EAQA,SAAAo+B,qBAAqBA,CAACD,gBAAgB,EAAE;MACtC,OAAO,IAAA5yB,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAA5f,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAxL,GAAA;IAAAC,KAAA,EASA,SAAA6lB,cAAcA,CAACC,WAAW,EAAE;MAC1B,IAAAva,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAA9S,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAxL,GAAA;IAAAC,KAAA,EAQA,SAAAi8B,SAASA,CAAC9gB,MAAM,EAAEC,MAAM,EAAE;MACxB,IAAA7P,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAAxL,GAAA;IAAAC,KAAA,EAeA,SAAAorB,SAASA,CAAC3d,MAAM,EAAE4iB,WAAW,EAAE;MAC7B;MACA,IAAMiI,UAAU,GAAG,IAAA0G,SAAa,EAACvxB,MAAM,CAAC;MACxC,IAAMqY,WAAW,GACfwS,UAAU,CAACpK,QAAQ,CAAC,CAAC,IAAI,aAAa,GAClC,UAAU+Q,aAAa,EAAEC,cAAc,EAAE9c,MAAM,EAAE;QAC/C,IAAM+c,WAAW,GAAG7G,UAAU,CAACjS,SAAS,CAAC,CAAC;QAC1C,IAAM+Y,eAAe,GAAG9G,UAAU,CAAClK,cAAc,CAAC,CAAC;QACnD,IAAM1E,KAAK,GAAG,IAAApG,kBAAS,EAAC8b,eAAe,CAAC,GAAG,IAAA9b,kBAAS,EAAC6b,WAAW,CAAC;QACjE,IAAAE,kBAAgB,EACd5B,YAAY,EACZ2B,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CAAC,EAClB1V,KAAK,EACL,CAACA,KAAK,EACN,CAAC,EACD,CAAC,EACD,CACF,CAAC;QACD,IAAMmR,WAAW,GAAG,IAAAmC,uBAAW,EAC7BiC,aAAa,EACb,CAAC,EACDA,aAAa,CAACr+B,MAAM,EACpBwhB,MAAM,EACNqb,YAAY,EACZyB,cACF,CAAC;QACD,IAAMI,aAAa,GAAG,IAAA9F,kBAAY,EAAClB,UAAU,EAAEjI,WAAW,CAAC;QAC3D,IAAIiP,aAAa,EAAE;UACjB,OAAOA,aAAa,CAACzE,WAAW,EAAEA,WAAW,EAAEzY,MAAM,CAAC;QACxD;QACA,OAAOyY,WAAW;MACpB,CAAC,GACD,IAAArB,kBAAY,EAAClB,UAAU,EAAEjI,WAAW,CAAC;MAC3C,IAAI,CAACxK,cAAc,CAACC,WAAW,CAAC;MAChC,OAAO,IAAI;IACb;EAAC;AAAA,EAnSoB3Z,eAAU;AAAA,IAAA/N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsSlBu/B,QAAQ;;;;;;;;;;;ACvVvB,IAAAlW,OAAA,GAAAtkB,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAk8B,UAAA,GAAA/5B,sBAAA,CAAAnC,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAA0E,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAN1E;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQM45B,cAAc,0BAAAC,SAAA;EAClB,SAAAD,eAAA,EAAc;IAAA,IAAAp3B,KAAA;IAAAxI,eAAA,OAAA4/B,cAAA;IACZp3B,KAAA,GAAAnB,UAAA,OAAAu4B,cAAA;;IAEA;AACJ;AACA;AACA;IACIp3B,KAAA,CAAKs3B,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACIt3B,KAAA,CAAKga,MAAM,GAAG,CAAC;;IAEf;AACJ;AACA;AACA;IACIha,KAAA,CAAK8Z,eAAe;IAAC,OAAA9Z,KAAA;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAy3B,cAAA,EAAAC,SAAA;EAAA,OAAA3/B,YAAA,CAAA0/B,cAAA;IAAAz/B,GAAA;IAAAC,KAAA,EAMA,SAAA4+B,aAAaA,CAACvgB,MAAM,EAAE;MACpB,OAAO,IAAA4D,yCAAiC,EACtC,IAAI,CAACC,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX/D,MACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAte,GAAA;IAAAC,KAAA,EAIA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAAhgB,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAA2/B,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACzd,eAAe,CAACle,KAAK,CAAC,CAAC,EAAE,IAAI,CAACoe,MAAM,CAAC;IACnD;;IAEA;AACF;AACA;EAFE;IAAAriB,GAAA;IAAAC,KAAA,EAGA,SAAA4/B,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAAC1d,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAniB,GAAA;IAAAC,KAAA,EAKA,SAAA6/B,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAAC3d,eAAe,CAACle,KAAK,CAC/B,IAAI,CAACke,eAAe,CAACthB,MAAM,GAAG,IAAI,CAACwhB,MACrC,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAriB,GAAA;IAAAC,KAAA,EAKA,SAAA8/B,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACJ,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3/B,GAAA;IAAAC,KAAA,EAMA,SAAAo+B,qBAAqBA,CAACD,gBAAgB,EAAE;MACtC,IAAI,IAAI,CAACH,0BAA0B,KAAK,IAAI,CAAC9yB,WAAW,CAAC,CAAC,EAAE;QAC1D,IAAI,CAAC6yB,wCAAwC,GAAG,CAAC;QACjD,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAAC9yB,WAAW,CAAC,CAAC;MACtD;MACA;MACA;MACA,IACEizB,gBAAgB,GAAG,CAAC,IACnB,IAAI,CAACJ,wCAAwC,KAAK,CAAC,IAClDI,gBAAgB,IAAI,IAAI,CAACJ,wCAAyC,EACpE;QACA,OAAO,IAAI;MACb;MAEA,IAAMgC,kBAAkB,GACtB,IAAI,CAACC,6BAA6B,CAAC7B,gBAAgB,CAAC;MACtD,IAAM8B,yBAAyB,GAAGF,kBAAkB,CAACH,kBAAkB,CAAC,CAAC;MACzE,IAAIK,yBAAyB,CAACr/B,MAAM,GAAG,IAAI,CAACshB,eAAe,CAACthB,MAAM,EAAE;QAClE,OAAOm/B,kBAAkB;MAC3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAAChC,wCAAwC,GAAGI,gBAAgB;MAChE,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAp+B,GAAA;IAAAC,KAAA,EAKA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C,OAAO,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAAp+B,GAAA;IAAAC,KAAA,EAGA,SAAAkgC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC9d,MAAM;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAAriB,GAAA;IAAAC,KAAA,EAIA,SAAAmgC,kBAAkBA,CAACT,MAAM,EAAExd,eAAe,EAAE;MAC1C,IAAI,CAACE,MAAM,GAAGge,kBAAkB,CAACV,MAAM,CAAC;MACxC,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACxd,eAAe,GAAGA,eAAe;IACxC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAniB,GAAA;IAAAC,KAAA,EAKA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAAn0B,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAAsgC,SAASA,CAACZ,MAAM,EAAEhf,WAAW,EAAE6f,OAAO,EAAE;MACtC,IAAIne,MAAM;MACV,IAAIsd,MAAM,EAAE;QACVtd,MAAM,GAAGge,kBAAkB,CAACV,MAAM,CAAC;MACrC,CAAC,MAAM;QACL,KAAK,IAAIp+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi/B,OAAO,EAAE,EAAEj/B,CAAC,EAAE;UAChC,IAAIof,WAAW,CAAC9f,MAAM,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC8+B,MAAM,GAAG,IAAI;YAClB,IAAI,CAACtd,MAAM,GAAG,CAAC;YACf;UACF;UACA1B,WAAW,GAAG,6BAA+BA,WAAW,CAAC,CAAC,CAAE;QAC9D;QACA0B,MAAM,GAAG1B,WAAW,CAAC9f,MAAM;QAC3B8+B,MAAM,GAAGc,kBAAkB,CAACpe,MAAM,CAAC;MACrC;MACA,IAAI,CAACsd,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACtd,MAAM,GAAGA,MAAM;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAriB,GAAA;IAAAC,KAAA,EAUA,SAAA6lB,cAAcA,CAACC,WAAW,EAAE;MAC1B,IAAI,IAAI,CAAC5D,eAAe,EAAE;QACxB4D,WAAW,CACT,IAAI,CAAC5D,eAAe,EACpB,IAAI,CAACA,eAAe,EACpB,IAAI,CAACwd,MAAM,CAACe,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EACrC,IAAI,CAACre,MACP,CAAC;QACD,IAAI,CAACpX,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAspB,MAAMA,CAACC,KAAK,EAAE2T,MAAM,EAAE;MACpB,IAAMhb,eAAe,GAAG,IAAI,CAAC0d,kBAAkB,CAAC,CAAC;MACjD,IAAI1d,eAAe,EAAE;QACnB,IAAME,MAAM,GAAG,IAAI,CAAC8d,SAAS,CAAC,CAAC;QAC/B,IAAA5W,iBAAM,EACJpH,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACNmH,KAAK,EACL2T,MAAM,EACNhb,eACF,CAAC;QACD,IAAI,CAAClX,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAjL,GAAA;IAAAC,KAAA,EAUA,SAAA0pB,KAAKA,CAAC2S,EAAE,EAAEC,EAAE,EAAEY,MAAM,EAAE;MACpB,IAAIZ,EAAE,KAAK3yB,SAAS,EAAE;QACpB2yB,EAAE,GAAGD,EAAE;MACT;MACA,IAAI,CAACa,MAAM,EAAE;QACXA,MAAM,GAAG,IAAA3Z,iBAAS,EAAC,IAAI,CAAC8C,SAAS,CAAC,CAAC,CAAC;MACtC;MACA,IAAMnE,eAAe,GAAG,IAAI,CAAC0d,kBAAkB,CAAC,CAAC;MACjD,IAAI1d,eAAe,EAAE;QACnB,IAAME,MAAM,GAAG,IAAI,CAAC8d,SAAS,CAAC,CAAC;QAC/B,IAAAxW,gBAAK,EACHxH,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACNia,EAAE,EACFC,EAAE,EACFY,MAAM,EACNhb,eACF,CAAC;QACD,IAAI,CAAClX,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAi8B,SAASA,CAAC9gB,MAAM,EAAEC,MAAM,EAAE;MACxB,IAAM8G,eAAe,GAAG,IAAI,CAAC0d,kBAAkB,CAAC,CAAC;MACjD,IAAI1d,eAAe,EAAE;QACnB,IAAME,MAAM,GAAG,IAAI,CAAC8d,SAAS,CAAC,CAAC;QAC/B,IAAAjE,oBAAS,EACP/Z,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACNjH,MAAM,EACNC,MAAM,EACN8G,eACF,CAAC;QACD,IAAI,CAAClX,OAAO,CAAC,CAAC;MAChB;IACF;EAAC;AAAA,EA7R0B6yB,kBAAQ;AAgSrC;AACA;AACA;AACA;AACO,SAAS2C,kBAAkBA,CAACpe,MAAM,EAAE;EACzC,IAAIsd,MAAM;EACV,IAAItd,MAAM,IAAI,CAAC,EAAE;IACfsd,MAAM,GAAG,IAAI;EACf,CAAC,MAAM,IAAItd,MAAM,IAAI,CAAC,EAAE;IACtBsd,MAAM,GAAG,KAAK;EAChB,CAAC,MAAM,IAAItd,MAAM,IAAI,CAAC,EAAE;IACtBsd,MAAM,GAAG,MAAM;EACjB;EACA,OAAO,qDAAuDA,MAAM;AACtE;;AAEA;AACA;AACA;AACA;AACO,SAASU,kBAAkBA,CAACV,MAAM,EAAE;EACzC,IAAItd,MAAM;EACV,IAAIsd,MAAM,IAAI,IAAI,EAAE;IAClBtd,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAIsd,MAAM,IAAI,KAAK,IAAIA,MAAM,IAAI,KAAK,EAAE;IAC7Ctd,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAIsd,MAAM,IAAI,MAAM,EAAE;IAC3Btd,MAAM,GAAG,CAAC;EACZ;EACA,OAAO,qBAAuBA,MAAM;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASse,eAAeA,CAACC,cAAc,EAAEvV,SAAS,EAAEpK,IAAI,EAAE;EAC/D,IAAMkB,eAAe,GAAGye,cAAc,CAACf,kBAAkB,CAAC,CAAC;EAC3D,IAAI,CAAC1d,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EACA,IAAME,MAAM,GAAGue,cAAc,CAACT,SAAS,CAAC,CAAC;EACzC,OAAO,IAAAlD,sBAAW,EAChB9a,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACNgJ,SAAS,EACTpK,IACF,CAAC;AACH;AAAC,IAAA5iB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEckhC,cAAc;;;;;;;;;;ACtW7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoB,UAAUA,CAAC1e,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EAC/D,IAAIye,SAAS,GAAG,CAAC;EACjB,IAAM7c,EAAE,GAAG9B,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,CAAC;EACxC,IAAM6B,EAAE,GAAG/B,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG,CAAC,CAAC;EAC5C,IAAI+Z,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC;EACX,OAAOja,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrC,IAAMma,GAAG,GAAGra,eAAe,CAACC,MAAM,CAAC,GAAG6B,EAAE;IACxC,IAAMwY,GAAG,GAAGta,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,GAAG8B,EAAE;IAC5C4c,SAAS,IAAIzE,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGK,GAAG;IAClCL,GAAG,GAAGI,GAAG;IACTH,GAAG,GAAGI,GAAG;EACX;EACA,OAAOqE,SAAS,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAAC5e,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAE;EACjE,IAAIgB,IAAI,GAAG,CAAC;EACZ,KAAK,IAAI9hB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnB8hB,IAAI,IAAIwd,UAAU,CAAC1e,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,CAAC;IACxDD,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAO0hB,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4d,YAAYA,CAAC9e,eAAe,EAAEC,MAAM,EAAE8e,KAAK,EAAE7e,MAAM,EAAE;EACnE,IAAIgB,IAAI,GAAG,CAAC;EACZ,KAAK,IAAI9hB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB8hB,IAAI,IAAI0d,WAAW,CAAC5e,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,CAAC;IAC1DD,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAOwiB,IAAI;AACb;;;;;;;;;;;;;ACxDA,IAAAjF,KAAA,GAAA9a,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS69B,aAAaA,CACpBhf,eAAe,EACfif,OAAO,EACPC,OAAO,EACPhf,MAAM,EACNpG,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZ;EACA,IAAMriB,EAAE,GAAGgG,eAAe,CAACif,OAAO,CAAC;EACnC,IAAMhlB,EAAE,GAAG+F,eAAe,CAACif,OAAO,GAAG,CAAC,CAAC;EACvC,IAAM7kB,EAAE,GAAG4F,eAAe,CAACkf,OAAO,CAAC,GAAGllB,EAAE;EACxC,IAAMK,EAAE,GAAG2F,eAAe,CAACkf,OAAO,GAAG,CAAC,CAAC,GAAGjlB,EAAE;EAC5C,IAAIgG,MAAM;EACV,IAAI7F,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,EAAE;IACxB4F,MAAM,GAAGgf,OAAO;EAClB,CAAC,MAAM;IACL,IAAM76B,CAAC,GAAG,CAAC,CAAC0V,CAAC,GAAGE,EAAE,IAAII,EAAE,GAAG,CAACL,CAAC,GAAGE,EAAE,IAAII,EAAE,KAAKD,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAC/D,IAAIjW,CAAC,GAAG,CAAC,EAAE;MACT6b,MAAM,GAAGif,OAAO;IAClB,CAAC,MAAM,IAAI96B,CAAC,GAAG,CAAC,EAAE;MAChB,KAAK,IAAIhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;QAC/Bi9B,YAAY,CAACj9B,CAAC,CAAC,GAAG,IAAAmc,UAAI,EACpByE,eAAe,CAACif,OAAO,GAAG7/B,CAAC,CAAC,EAC5B4gB,eAAe,CAACkf,OAAO,GAAG9/B,CAAC,CAAC,EAC5BgF,CACF,CAAC;MACH;MACAi4B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;MAC5B;IACF,CAAC,MAAM;MACLD,MAAM,GAAGgf,OAAO;IAClB;EACF;EACA,KAAK,IAAI7/B,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,EAAC,EAAE;IAC/Bi9B,YAAY,CAACj9B,EAAC,CAAC,GAAG4gB,eAAe,CAACC,MAAM,GAAG7gB,EAAC,CAAC;EAC/C;EACAi9B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASif,eAAeA,CAACnf,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAEtG,GAAG,EAAE;EACzE,IAAII,EAAE,GAAGgG,eAAe,CAACC,MAAM,CAAC;EAChC,IAAIhG,EAAE,GAAG+F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EACpC,KAAKA,MAAM,IAAIC,MAAM,EAAED,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrD,IAAMhG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;IAClC,IAAM9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IACtC,IAAMmf,YAAY,GAAG,IAAAC,qBAAS,EAACrlB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC9C,IAAIilB,YAAY,GAAGxlB,GAAG,EAAE;MACtBA,GAAG,GAAGwlB,YAAY;IACpB;IACAplB,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACA,OAAOP,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0lB,oBAAoBA,CAClCtf,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNtG,GAAG,EACH;EACA,KAAK,IAAIxa,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnBwa,GAAG,GAAGulB,eAAe,CAACnf,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAEtG,GAAG,CAAC;IAChEqG,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAOoa,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2lB,yBAAyBA,CACvCvf,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNtG,GAAG,EACH;EACA,KAAK,IAAIxa,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrBwa,GAAG,GAAG0lB,oBAAoB,CAACtf,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAEtG,GAAG,CAAC;IACtEqG,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAOkb,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4lB,kBAAkBA,CAChCxf,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNuf,QAAQ,EACRC,MAAM,EACN5lB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBAAkB,EAClBb,QAAQ,EACR;EACA,IAAIxb,MAAM,IAAIzgB,GAAG,EAAE;IACjB,OAAO88B,kBAAkB;EAC3B;EACA,IAAIl9B,CAAC,EAAEkb,eAAe;EACtB,IAAImlB,QAAQ,KAAK,CAAC,EAAE;IAClB;IACAnlB,eAAe,GAAG,IAAA+kB,qBAAS,EACzBvlB,CAAC,EACDC,CAAC,EACDiG,eAAe,CAACC,MAAM,CAAC,EACvBD,eAAe,CAACC,MAAM,GAAG,CAAC,CAC5B,CAAC;IACD,IAAI3F,eAAe,GAAGgiB,kBAAkB,EAAE;MACxC,KAAKl9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;QAC3Bi9B,YAAY,CAACj9B,CAAC,CAAC,GAAG4gB,eAAe,CAACC,MAAM,GAAG7gB,CAAC,CAAC;MAC/C;MACAi9B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;MAC5B,OAAO5F,eAAe;IACxB;IACA,OAAOgiB,kBAAkB;EAC3B;EACAb,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAACC,GAAG,EAAEA,GAAG,CAAC;EAC3C,IAAIj7B,KAAK,GAAGwf,MAAM,GAAGC,MAAM;EAC3B,OAAOzf,KAAK,GAAGjB,GAAG,EAAE;IAClBw/B,aAAa,CACXhf,eAAe,EACfvf,KAAK,GAAGyf,MAAM,EACdzf,KAAK,EACLyf,MAAM,EACNpG,CAAC,EACDC,CAAC,EACD0hB,QACF,CAAC;IACDnhB,eAAe,GAAG,IAAA+kB,qBAAS,EAACvlB,CAAC,EAAEC,CAAC,EAAE0hB,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAInhB,eAAe,GAAGgiB,kBAAkB,EAAE;MACxCA,kBAAkB,GAAGhiB,eAAe;MACpC,KAAKlb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;QAC3Bi9B,YAAY,CAACj9B,CAAC,CAAC,GAAGq8B,QAAQ,CAACr8B,CAAC,CAAC;MAC/B;MACAi9B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;MAC5Bzf,KAAK,IAAIyf,MAAM;IACjB,CAAC,MAAM;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAzf,KAAK,IACHyf,MAAM,GACNzM,IAAI,CAACmG,GAAG,CACL,CAACnG,IAAI,CAAC2F,IAAI,CAACkB,eAAe,CAAC,GAAG7G,IAAI,CAAC2F,IAAI,CAACkjB,kBAAkB,CAAC,IAC1DmD,QAAQ,GACR,CAAC,EACH,CACF,CAAC;IACL;EACF;EACA,IAAIC,MAAM,EAAE;IACV;IACAV,aAAa,CACXhf,eAAe,EACfxgB,GAAG,GAAG0gB,MAAM,EACZD,MAAM,EACNC,MAAM,EACNpG,CAAC,EACDC,CAAC,EACD0hB,QACF,CAAC;IACDnhB,eAAe,GAAG,IAAA+kB,qBAAS,EAACvlB,CAAC,EAAEC,CAAC,EAAE0hB,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAInhB,eAAe,GAAGgiB,kBAAkB,EAAE;MACxCA,kBAAkB,GAAGhiB,eAAe;MACpC,KAAKlb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;QAC3Bi9B,YAAY,CAACj9B,CAAC,CAAC,GAAGq8B,QAAQ,CAACr8B,CAAC,CAAC;MAC/B;MACAi9B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;IAC9B;EACF;EACA,OAAOoc,kBAAkB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqD,uBAAuBA,CACrC3f,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNuf,QAAQ,EACRC,MAAM,EACN5lB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBAAkB,EAClBb,QAAQ,EACR;EACAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAACC,GAAG,EAAEA,GAAG,CAAC;EAC3C,KAAK,IAAIt8B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnBk9B,kBAAkB,GAAGkD,kBAAkB,CACrCxf,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNuf,QAAQ,EACRC,MAAM,EACN5lB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBAAkB,EAClBb,QACF,CAAC;IACDxb,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAO88B,kBAAkB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsD,4BAA4BA,CAC1C5f,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNuf,QAAQ,EACRC,MAAM,EACN5lB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBAAkB,EAClBb,QAAQ,EACR;EACAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAACC,GAAG,EAAEA,GAAG,CAAC;EAC3C,KAAK,IAAIt8B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrBk9B,kBAAkB,GAAGqD,uBAAuB,CAC1C3f,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNuf,QAAQ,EACRC,MAAM,EACN5lB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBAAkB,EAClBb,QACF,CAAC;IACDxb,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAO49B,kBAAkB;AAC3B;;;;;;;;;;;AC/UA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuD,iBAAiBA,CAAC7f,eAAe,EAAEC,MAAM,EAAEzR,UAAU,EAAE0R,MAAM,EAAE;EAC7E,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoH,UAAU,CAAC9P,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IACnD4gB,eAAe,CAACC,MAAM,EAAE,CAAC,GAAGzR,UAAU,CAACpP,CAAC,CAAC;EAC3C;EACA,OAAO6gB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6f,kBAAkBA,CAChC9f,eAAe,EACfC,MAAM,EACNzB,WAAW,EACX0B,MAAM,EACN;EACA,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IACpD,IAAMoP,UAAU,GAAGgQ,WAAW,CAACpf,CAAC,CAAC;IACjC,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,MAAM,EAAE,EAAEtF,CAAC,EAAE;MAC/BoF,eAAe,CAACC,MAAM,EAAE,CAAC,GAAGzR,UAAU,CAACoM,CAAC,CAAC;IAC3C;EACF;EACA,OAAOqF,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8f,uBAAuBA,CACrC/f,eAAe,EACfC,MAAM,EACN+f,YAAY,EACZ9f,MAAM,EACN2e,IAAI,EACJ;EACAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;EACvB,IAAIz/B,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG4W,YAAY,CAACthC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;IACrD,IAAMpb,GAAG,GAAGsgC,kBAAkB,CAC5B9f,eAAe,EACfC,MAAM,EACN+f,YAAY,CAACplB,CAAC,CAAC,EACfsF,MACF,CAAC;IACD2e,IAAI,CAACz/B,CAAC,EAAE,CAAC,GAAGI,GAAG;IACfygB,MAAM,GAAGzgB,GAAG;EACd;EACAq/B,IAAI,CAACngC,MAAM,GAAGU,CAAC;EACf,OAAOy/B,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoB,4BAA4BA,CAC1CjgB,eAAe,EACfC,MAAM,EACNigB,aAAa,EACbhgB,MAAM,EACN6e,KAAK,EACL;EACAA,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAC1B,IAAI3/B,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG8W,aAAa,CAACxhC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;IACtD,IAAMikB,IAAI,GAAGkB,uBAAuB,CAClC/f,eAAe,EACfC,MAAM,EACNigB,aAAa,CAACtlB,CAAC,CAAC,EAChBsF,MAAM,EACN6e,KAAK,CAAC3/B,CAAC,CACT,CAAC;IACD,IAAIy/B,IAAI,CAACngC,MAAM,KAAK,CAAC,EAAE;MACrBmgC,IAAI,CAAC,CAAC,CAAC,GAAG5e,MAAM;IAClB;IACA8e,KAAK,CAAC3/B,CAAC,EAAE,CAAC,GAAGy/B,IAAI;IACjB5e,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACAqgC,KAAK,CAACrgC,MAAM,GAAGU,CAAC;EAChB,OAAO2/B,KAAK;AACd;;;;;;;;;;ACxGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoB,kBAAkBA,CAChCngB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN1B,WAAW,EACX;EACAA,WAAW,GAAGA,WAAW,KAAK/W,SAAS,GAAG+W,WAAW,GAAG,EAAE;EAC1D,IAAIpf,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAGqF,MAAM,EAAErF,CAAC,GAAGpb,GAAG,EAAEob,CAAC,IAAIsF,MAAM,EAAE;IACzC1B,WAAW,CAACpf,CAAC,EAAE,CAAC,GAAG4gB,eAAe,CAACle,KAAK,CAAC8Y,CAAC,EAAEA,CAAC,GAAGsF,MAAM,CAAC;EACzD;EACA1B,WAAW,CAAC9f,MAAM,GAAGU,CAAC;EACtB,OAAOof,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4hB,uBAAuBA,CACrCpgB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN8f,YAAY,EACZ;EACAA,YAAY,GAAGA,YAAY,KAAKv4B,SAAS,GAAGu4B,YAAY,GAAG,EAAE;EAC7D,IAAI5gC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGyV,IAAI,CAACngC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;IAC7C,IAAMpb,GAAG,GAAGq/B,IAAI,CAACjkB,CAAC,CAAC;IACnBolB,YAAY,CAAC5gC,CAAC,EAAE,CAAC,GAAG+gC,kBAAkB,CACpCngB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN8f,YAAY,CAAC5gC,CAAC,CAChB,CAAC;IACD6gB,MAAM,GAAGzgB,GAAG;EACd;EACAwgC,YAAY,CAACthC,MAAM,GAAGU,CAAC;EACvB,OAAO4gC,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,4BAA4BA,CAC1CrgB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNggB,aAAa,EACb;EACAA,aAAa,GAAGA,aAAa,KAAKz4B,SAAS,GAAGy4B,aAAa,GAAG,EAAE;EAChE,IAAI9gC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG2V,KAAK,CAACrgC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;IAC9C,IAAMikB,IAAI,GAAGE,KAAK,CAACnkB,CAAC,CAAC;IACrBslB,aAAa,CAAC9gC,CAAC,EAAE,CAAC,GAChBy/B,IAAI,CAACngC,MAAM,KAAK,CAAC,IAAImgC,IAAI,CAAC,CAAC,CAAC,KAAK5e,MAAM,GACnC,EAAE,GACFmgB,uBAAuB,CACrBpgB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNggB,aAAa,CAAC9gC,CAAC,CACjB,CAAC;IACP6gB,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACAwhC,aAAa,CAACxhC,MAAM,GAAGU,CAAC;EACxB,OAAO8gC,aAAa;AACtB;;;;;;;;;;;;;;;;ACjEA,IAAAjkB,KAAA,GAAA9a,OAAA;AA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASm/B,kBAAkBA,CAChCtgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChBsE,WAAW,EACXxC,yBAAyB,EACzB;EACAA,yBAAyB,GACvBA,yBAAyB,KAAKt2B,SAAS,GAAGs2B,yBAAyB,GAAG,EAAE;EAC1E,IAAI,CAACwC,WAAW,EAAE;IAChB/gC,GAAG,GAAGghC,cAAc,CAClBxgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB,CACF,CAAC;IACD/d,eAAe,GAAG+d,yBAAyB;IAC3C9d,MAAM,GAAG,CAAC;IACVC,MAAM,GAAG,CAAC;EACZ;EACA6d,yBAAyB,CAACr/B,MAAM,GAAG+hC,cAAc,CAC/CzgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB,CACF,CAAC;EACD,OAAOA,yBAAyB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0C,cAAcA,CAC5BzgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBAAgB,EAChB;EACA,IAAMvhC,CAAC,GAAG,CAACK,GAAG,GAAGygB,MAAM,IAAIC,MAAM;EACjC,IAAI/gB,CAAC,GAAG,CAAC,EAAE;IACT,OAAO8gB,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;MACrC6d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAG1gB,eAAe,CAACC,MAAM,CAAC;MACvE8d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAC3C1gB,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IAC/B;IACA,OAAOygB,gBAAgB;EACzB;EACA;EACA,IAAMC,OAAO,GAAG,IAAI9gC,KAAK,CAACV,CAAC,CAAC;EAC5BwhC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EACdA,OAAO,CAACxhC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAClB;EACA,IAAMyhC,KAAK,GAAG,CAAC3gB,MAAM,EAAEzgB,GAAG,GAAG0gB,MAAM,CAAC;EACpC,IAAIzf,KAAK,GAAG,CAAC;EACb,OAAOmgC,KAAK,CAACliC,MAAM,GAAG,CAAC,EAAE;IACvB,IAAMmiC,IAAI,GAAGD,KAAK,CAACn0B,GAAG,CAAC,CAAC;IACxB,IAAMq0B,KAAK,GAAGF,KAAK,CAACn0B,GAAG,CAAC,CAAC;IACzB,IAAIs0B,kBAAkB,GAAG,CAAC;IAC1B,IAAM/mB,EAAE,GAAGgG,eAAe,CAAC8gB,KAAK,CAAC;IACjC,IAAM7mB,EAAE,GAAG+F,eAAe,CAAC8gB,KAAK,GAAG,CAAC,CAAC;IACrC,IAAM5mB,EAAE,GAAG8F,eAAe,CAAC6gB,IAAI,CAAC;IAChC,IAAM1mB,EAAE,GAAG6F,eAAe,CAAC6gB,IAAI,GAAG,CAAC,CAAC;IACpC,KAAK,IAAIzhC,CAAC,GAAG0hC,KAAK,GAAG5gB,MAAM,EAAE9gB,CAAC,GAAGyhC,IAAI,EAAEzhC,CAAC,IAAI8gB,MAAM,EAAE;MAClD,IAAMpG,CAAC,GAAGkG,eAAe,CAAC5gB,CAAC,CAAC;MAC5B,IAAM2a,CAAC,GAAGiG,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;MAChC,IAAMkb,gBAAe,GAAG,IAAAT,4BAAsB,EAACC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MACpE,IAAIG,gBAAe,GAAGymB,kBAAkB,EAAE;QACxCtgC,KAAK,GAAGrB,CAAC;QACT2hC,kBAAkB,GAAGzmB,gBAAe;MACtC;IACF;IACA,IAAIymB,kBAAkB,GAAG9E,gBAAgB,EAAE;MACzC0E,OAAO,CAAC,CAAClgC,KAAK,GAAGwf,MAAM,IAAIC,MAAM,CAAC,GAAG,CAAC;MACtC,IAAI4gB,KAAK,GAAG5gB,MAAM,GAAGzf,KAAK,EAAE;QAC1BmgC,KAAK,CAACh6B,IAAI,CAACk6B,KAAK,EAAErgC,KAAK,CAAC;MAC1B;MACA,IAAIA,KAAK,GAAGyf,MAAM,GAAG2gB,IAAI,EAAE;QACzBD,KAAK,CAACh6B,IAAI,CAACnG,KAAK,EAAEogC,IAAI,CAAC;MACzB;IACF;EACF;EACA,KAAK,IAAIzhC,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGD,CAAC,EAAE,EAAEC,EAAC,EAAE;IAC1B,IAAIuhC,OAAO,CAACvhC,EAAC,CAAC,EAAE;MACd2+B,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAC3C1gB,eAAe,CAACC,MAAM,GAAG7gB,EAAC,GAAG8gB,MAAM,CAAC;MACtC6d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAC3C1gB,eAAe,CAACC,MAAM,GAAG7gB,EAAC,GAAG8gB,MAAM,GAAG,CAAC,CAAC;IAC5C;EACF;EACA,OAAOwgB,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,mBAAmBA,CACjChhB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBAAgB,EAChBO,cAAc,EACd;EACA,KAAK,IAAI7hC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnBshC,gBAAgB,GAAGD,cAAc,CAC/BzgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBACF,CAAC;IACDO,cAAc,CAACr6B,IAAI,CAAC85B,gBAAgB,CAAC;IACrCzgB,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAOkhC,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,wBAAwBA,CACtClhB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBAAgB,EAChBS,eAAe,EACf;EACA,KAAK,IAAI/hC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB;IACA,IAAM6hC,cAAc,GAAG,EAAE;IACzBP,gBAAgB,GAAGM,mBAAmB,CACpChhB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBAAgB,EAChBO,cACF,CAAC;IACDE,eAAe,CAACv6B,IAAI,CAACq6B,cAAc,CAAC;IACpChhB,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAOgiC,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASF,cAAcA,CAC5BxgB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN+b,gBAAgB,EAChB8B,yBAAyB,EACzB2C,gBAAgB,EAChB;EACA,IAAIlhC,GAAG,IAAIygB,MAAM,GAAGC,MAAM,EAAE;IAC1B;IACA,OAAOD,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;MACrC6d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAG1gB,eAAe,CAACC,MAAM,CAAC;MACvE8d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAC3C1gB,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IAC/B;IACA,OAAOygB,gBAAgB;EACzB;EACA,IAAI1mB,EAAE,GAAGgG,eAAe,CAACC,MAAM,CAAC;EAChC,IAAIhG,EAAE,GAAG+F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EACpC;EACA8d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAG1mB,EAAE;EAClD+jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGzmB,EAAE;EAClD,IAAIC,EAAE,GAAGF,EAAE;EACX,IAAIG,EAAE,GAAGF,EAAE;EACX,KAAKgG,MAAM,IAAIC,MAAM,EAAED,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrDhG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;IAC5B9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IAChC,IAAI,IAAA3F,qBAAe,EAACN,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAG8hB,gBAAgB,EAAE;MACtD;MACA8B,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGxmB,EAAE;MAClD6jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGvmB,EAAE;MAClDH,EAAE,GAAGE,EAAE;MACPD,EAAE,GAAGE,EAAE;IACT;EACF;EACA,IAAID,EAAE,IAAIF,EAAE,IAAIG,EAAE,IAAIF,EAAE,EAAE;IACxB;IACA8jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGxmB,EAAE;IAClD6jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGvmB,EAAE;EACpD;EACA,OAAOumB,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASU,IAAIA,CAACtjC,KAAK,EAAE0iB,SAAS,EAAE;EACrC,OAAOA,SAAS,GAAG/M,IAAI,CAACmI,KAAK,CAAC9d,KAAK,GAAG0iB,SAAS,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6gB,QAAQA,CACtBrhB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNM,SAAS,EACTud,yBAAyB,EACzB2C,gBAAgB,EAChB;EACA;EACA,IAAIzgB,MAAM,IAAIzgB,GAAG,EAAE;IACjB,OAAOkhC,gBAAgB;EACzB;EACA;EACA,IAAI1mB,EAAE,GAAGonB,IAAI,CAACphB,eAAe,CAACC,MAAM,CAAC,EAAEO,SAAS,CAAC;EACjD,IAAIvG,EAAE,GAAGmnB,IAAI,CAACphB,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,EAAEO,SAAS,CAAC;EACrDP,MAAM,IAAIC,MAAM;EAChB;EACA6d,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAG1mB,EAAE;EAClD+jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGzmB,EAAE;EAClD;EACA;EACA,IAAIC,EAAE,EAAEC,EAAE;EACV,GAAG;IACDD,EAAE,GAAGknB,IAAI,CAACphB,eAAe,CAACC,MAAM,CAAC,EAAEO,SAAS,CAAC;IAC7CrG,EAAE,GAAGinB,IAAI,CAACphB,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,EAAEO,SAAS,CAAC;IACjDP,MAAM,IAAIC,MAAM;IAChB,IAAID,MAAM,IAAIzgB,GAAG,EAAE;MACjB;MACA;MACA;MACA;MACAu+B,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGxmB,EAAE;MAClD6jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGvmB,EAAE;MAClD,OAAOumB,gBAAgB;IACzB;EACF,CAAC,QAAQxmB,EAAE,IAAIF,EAAE,IAAIG,EAAE,IAAIF,EAAE;EAC7B,OAAOgG,MAAM,GAAGzgB,GAAG,EAAE;IACnB;IACA,IAAMwiB,EAAE,GAAGof,IAAI,CAACphB,eAAe,CAACC,MAAM,CAAC,EAAEO,SAAS,CAAC;IACnD,IAAMyB,EAAE,GAAGmf,IAAI,CAACphB,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,EAAEO,SAAS,CAAC;IACvDP,MAAM,IAAIC,MAAM;IAChB;IACA,IAAI8B,EAAE,IAAI9H,EAAE,IAAI+H,EAAE,IAAI9H,EAAE,EAAE;MACxB;IACF;IACA;IACA,IAAM8f,GAAG,GAAG/f,EAAE,GAAGF,EAAE;IACnB,IAAMkgB,GAAG,GAAG/f,EAAE,GAAGF,EAAE;IACnB;IACA,IAAMogB,GAAG,GAAGrY,EAAE,GAAGhI,EAAE;IACnB,IAAMsgB,GAAG,GAAGrY,EAAE,GAAGhI,EAAE;IACnB;IACA;IACA;IACA,IACEggB,GAAG,GAAGK,GAAG,IAAIJ,GAAG,GAAGG,GAAG,KACpBJ,GAAG,GAAG,CAAC,IAAII,GAAG,GAAGJ,GAAG,IAAKA,GAAG,IAAII,GAAG,IAAKJ,GAAG,GAAG,CAAC,IAAII,GAAG,GAAGJ,GAAI,CAAC,KAC9DC,GAAG,GAAG,CAAC,IAAII,GAAG,GAAGJ,GAAG,IAAKA,GAAG,IAAII,GAAG,IAAKJ,GAAG,GAAG,CAAC,IAAII,GAAG,GAAGJ,GAAI,CAAC,EAChE;MACA;MACAhgB,EAAE,GAAG8H,EAAE;MACP7H,EAAE,GAAG8H,EAAE;MACP;IACF;IACA;IACA;IACA;IACA8b,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGxmB,EAAE;IAClD6jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGvmB,EAAE;IAClDH,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAG8H,EAAE;IACP7H,EAAE,GAAG8H,EAAE;EACT;EACA;EACA8b,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGxmB,EAAE;EAClD6jB,yBAAyB,CAAC2C,gBAAgB,EAAE,CAAC,GAAGvmB,EAAE;EAClD,OAAOumB,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASY,aAAaA,CAC3BthB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNM,SAAS,EACTud,yBAAyB,EACzB2C,gBAAgB,EAChBO,cAAc,EACd;EACA,KAAK,IAAI7hC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnBshC,gBAAgB,GAAGW,QAAQ,CACzBrhB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNM,SAAS,EACTud,yBAAyB,EACzB2C,gBACF,CAAC;IACDO,cAAc,CAACr6B,IAAI,CAAC85B,gBAAgB,CAAC;IACrCzgB,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAOkhC,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,kBAAkBA,CAChCvhB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNM,SAAS,EACTud,yBAAyB,EACzB2C,gBAAgB,EAChBS,eAAe,EACf;EACA,KAAK,IAAI/hC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB;IACA,IAAM6hC,cAAc,GAAG,EAAE;IACzBP,gBAAgB,GAAGY,aAAa,CAC9BthB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNM,SAAS,EACTud,yBAAyB,EACzB2C,gBAAgB,EAChBO,cACF,CAAC;IACDE,eAAe,CAACv6B,IAAI,CAACq6B,cAAc,CAAC;IACpChhB,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAOgiC,gBAAgB;AACzB;;;;;;;;AC1dA,IAAAjb,OAAA,GAAAtkB,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAsgC,KAAA,GAAAtgC,OAAA;AACA,IAAAugC,QAAA,GAAAvgC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AACA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAAkD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KATlD;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMo+B,UAAU,0BAAAC,eAAA;EACd;AACF;AACA;AACA;AACA;EACE,SAAAD,WAAYtjB,WAAW,EAAEgf,MAAM,EAAE;IAAA,IAAAt3B,KAAA;IAAAxI,eAAA,OAAAokC,UAAA;IAC/B57B,KAAA,GAAAnB,UAAA,OAAA+8B,UAAA;;IAEA;AACJ;AACA;AACA;IACI57B,KAAA,CAAK87B,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACI97B,KAAA,CAAK+7B,iBAAiB,GAAG,CAAC,CAAC;IAE3B,IAAIzE,MAAM,KAAK/1B,SAAS,IAAI,CAAC5H,KAAK,CAACC,OAAO,CAAC0e,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1DtY,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;IACH,CAAC,MAAM;MACLtY,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAi8B,UAAA,EAAAC,eAAA;EAAA,OAAAnkC,YAAA,CAAAkkC,UAAA;IAAAjkC,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI6iB,UAAU,CAAC,IAAI,CAAC9hB,eAAe,CAACle,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC07B,MAAM,CAAC;IAClE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3/B,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAI,IAAI,CAAC2F,iBAAiB,IAAI,IAAI,CAACj5B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAI,CAACg5B,SAAS,GAAGvuB,IAAI,CAAC2F,IAAI,CACxB,IAAA+lB,wBAAe,EACb,IAAI,CAACnf,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX,CACF,CACF,CAAC;QACD,IAAI,CAAC+hB,iBAAiB,GAAG,IAAI,CAACj5B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,IAAAw2B,2BAAkB,EACvB,IAAI,CAACxf,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX,IAAI,CAAC8hB,SAAS,EACd,IAAI,EACJloB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz+B,GAAA;IAAAC,KAAA,EAKA,SAAAmjB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAAihB,gBAAc,EACnB,IAAI,CAACliB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAriB,GAAA;IAAAC,KAAA,EAMA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAA8W,2BAAkB,EACvB,IAAI,CAACngB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAriB,GAAA;IAAAC,KAAA,EAMA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C;MACA,IAAM8B,yBAAyB,GAAG,EAAE;MACpCA,yBAAyB,CAACr/B,MAAM,GAAG,IAAA+hC,wBAAc,EAC/C,IAAI,CAACzgB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX+b,gBAAgB,EAChB8B,yBAAyB,EACzB,CACF,CAAC;MACD,OAAO,IAAI+D,UAAU,CAAC/D,yBAAyB,EAAE,IAAI,CAAC;IACxD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlgC,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAte,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAI,CAACA,eAAe,CAACthB,MAAM,GAAG,IAAAohC,2BAAkB,EAC9C,IAAI,CAAC9f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MACP,CAAC;MACD,IAAI,CAACpX,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EA9KsBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAiLxB0lC,UAAU;;;;;;;;AChMzB,IAAArc,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AAAoD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANpD;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMy+B,KAAK,0BAAAJ,eAAA;EACT;AACF;AACA;AACA;EACE,SAAAI,MAAY3jB,WAAW,EAAEgf,MAAM,EAAE;IAAA,IAAAt3B,KAAA;IAAAxI,eAAA,OAAAykC,KAAA;IAC/Bj8B,KAAA,GAAAnB,UAAA,OAAAo9B,KAAA;IACAj8B,KAAA,CAAKi4B,cAAc,CAAC3f,WAAW,EAAEgf,MAAM,CAAC;IAAC,OAAAt3B,KAAA;EAC3C;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAs8B,KAAA,EAAAJ,eAAA;EAAA,OAAAnkC,YAAA,CAAAukC,KAAA;IAAAtkC,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMqO,KAAK,GAAG,IAAI6U,KAAK,CAAC,IAAI,CAACniB,eAAe,CAACle,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC07B,MAAM,CAAC;MAClElQ,KAAK,CAAChiB,eAAe,CAAC,IAAI,CAAC;MAC3B,OAAOgiB,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAzvB,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAMtc,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM1F,eAAe,GAAG,IAAA+kB,qBAAS,EAC/BvlB,CAAC,EACDC,CAAC,EACDiG,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CACnB,CAAC;MACD,IAAI1F,eAAe,GAAGgiB,kBAAkB,EAAE;QACxC,IAAMpc,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;UAC/Bi9B,YAAY,CAACj9B,CAAC,CAAC,GAAG4gB,eAAe,CAAC5gB,CAAC,CAAC;QACtC;QACAi9B,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;QAC5B,OAAO5F,eAAe;MACxB;MACA,OAAOgiB,kBAAkB;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACrJ,eAAe,CAACle,KAAK,CAAC,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjE,GAAA;IAAAC,KAAA,EAMA,SAAA4+B,aAAaA,CAACvgB,MAAM,EAAE;MACpB,OAAO,IAAAyD,oCAA4B,EAAC,IAAI,CAACI,eAAe,EAAE7D,MAAM,CAAC;IACnE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAte,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,OAAO;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAAiD,kBAAU,EAACjD,MAAM,EAAE,IAAI,CAAC6D,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,eAAe,CAAC,CAAC,CAAC,CAAC;IAC7E;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAniB,GAAA;IAAAC,KAAA,EAMA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAI,CAACA,eAAe,CAACthB,MAAM,GAAG,IAAAmhC,0BAAiB,EAC7C,IAAI,CAAC7f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MACP,CAAC;MACD,IAAI,CAACpX,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EA5GiBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA+GnB+lC,KAAK;;;;;;;;;;;AC1HpB,IAAA1c,OAAA,GAAAtkB,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASihC,wBAAwBA,CACtCpiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,EACN;EACA,IAAMkmB,OAAO,GAAG,IAAA3hB,qBAAa,EAC3BvE,MAAM;EACN;AACJ;AACA;AACA;EACI,UAAU3N,UAAU,EAAE;IACpB,OAAO,CAAC8zB,oBAAoB,CAC1BtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN1R,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CACd,CAAC;EACH,CACF,CAAC;EACD,OAAO,CAAC6zB,OAAO;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,oBAAoBA,CAClCtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNpG,CAAC,EACDC,CAAC,EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIwoB,EAAE,GAAG,CAAC;EACV,IAAIvoB,EAAE,GAAGgG,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,CAAC;EACtC,IAAIjG,EAAE,GAAG+F,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG,CAAC,CAAC;EAC1C,OAAOD,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrC,IAAMhG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;IAClC,IAAM9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IACtC,IAAIhG,EAAE,IAAIF,CAAC,EAAE;MACX,IAAII,EAAE,GAAGJ,CAAC,IAAI,CAACG,EAAE,GAAGF,EAAE,KAAKD,CAAC,GAAGE,EAAE,CAAC,GAAG,CAACH,CAAC,GAAGE,EAAE,KAAKG,EAAE,GAAGF,EAAE,CAAC,GAAG,CAAC,EAAE;QAC7DsoB,EAAE,EAAE;MACN;IACF,CAAC,MAAM,IAAIpoB,EAAE,IAAIJ,CAAC,IAAI,CAACG,EAAE,GAAGF,EAAE,KAAKD,CAAC,GAAGE,EAAE,CAAC,GAAG,CAACH,CAAC,GAAGE,EAAE,KAAKG,EAAE,GAAGF,EAAE,CAAC,GAAG,CAAC,EAAE;MACrEsoB,EAAE,EAAE;IACN;IACAvoB,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACA,OAAOooB,EAAE,KAAK,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,CACnCxiB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNpG,CAAC,EACDC,CAAC,EACD;EACA,IAAI8kB,IAAI,CAACngC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,KAAK;EACd;EACA,IAAI,CAAC4jC,oBAAoB,CAACtiB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,CAAC,CAAC,CAAC,EAAE3e,MAAM,EAAEpG,CAAC,EAAEC,CAAC,CAAC,EAAE;IACzE,OAAO,KAAK;EACd;EACA,KAAK,IAAI3a,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IACEkjC,oBAAoB,CAACtiB,eAAe,EAAE6e,IAAI,CAACz/B,CAAC,GAAG,CAAC,CAAC,EAAEy/B,IAAI,CAACz/B,CAAC,CAAC,EAAE8gB,MAAM,EAAEpG,CAAC,EAAEC,CAAC,CAAC,EACzE;MACA,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0oB,sBAAsBA,CACpCziB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNpG,CAAC,EACDC,CAAC,EACD;EACA,IAAIglB,KAAK,CAACrgC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,KAAK;EACd;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB,IAAIojC,qBAAqB,CAACxiB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAEpG,CAAC,EAAEC,CAAC,CAAC,EAAE;MACtE,OAAO,IAAI;IACb;IACAkG,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAO,KAAK;AACd;;;;;;;;;AC7IA,IAAAwC,MAAA,GAAAC,OAAA;AACA,IAAAuhC,SAAA,GAAAvhC,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwhC,uBAAuBA,CACrC3iB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN0iB,WAAW,EACXC,iBAAiB,EACjB/jB,IAAI,EACJ;EACA,IAAI1f,CAAC,EAAEgI,EAAE,EAAE0S,CAAC,EAAEE,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;EAC5B,IAAMJ,CAAC,GAAG6oB,WAAW,CAACC,iBAAiB,GAAG,CAAC,CAAC;EAC5C;EACA,IAAMC,aAAa,GAAG,EAAE;EACxB;EACA,KAAK,IAAI3+B,CAAC,GAAG,CAAC,EAAE4+B,EAAE,GAAGlE,IAAI,CAACngC,MAAM,EAAEyF,CAAC,GAAG4+B,EAAE,EAAE,EAAE5+B,CAAC,EAAE;IAC7C,IAAM3E,GAAG,GAAGq/B,IAAI,CAAC16B,CAAC,CAAC;IACnB6V,EAAE,GAAGgG,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,CAAC;IAClCjG,EAAE,GAAG+F,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG,CAAC,CAAC;IACtC,KAAK9gB,CAAC,GAAG6gB,MAAM,EAAE7gB,CAAC,GAAGI,GAAG,EAAEJ,CAAC,IAAI8gB,MAAM,EAAE;MACrChG,EAAE,GAAG8F,eAAe,CAAC5gB,CAAC,CAAC;MACvB+a,EAAE,GAAG6F,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;MAC3B,IAAK2a,CAAC,IAAIE,EAAE,IAAIE,EAAE,IAAIJ,CAAC,IAAME,EAAE,IAAIF,CAAC,IAAIA,CAAC,IAAII,EAAG,EAAE;QAChDL,CAAC,GAAI,CAACC,CAAC,GAAGE,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,IAAKC,EAAE,GAAGF,EAAE,CAAC,GAAGA,EAAE;QAC3C8oB,aAAa,CAACl8B,IAAI,CAACkT,CAAC,CAAC;MACvB;MACAE,EAAE,GAAGE,EAAE;MACPD,EAAE,GAAGE,EAAE;IACT;EACF;EACA;EACA;EACA,IAAI6oB,MAAM,GAAGtH,GAAG;EAChB,IAAIuH,gBAAgB,GAAG,CAACnuB,QAAQ;EAChCguB,aAAa,CAACpiC,IAAI,CAACnC,gBAAS,CAAC;EAC7Byb,EAAE,GAAG8oB,aAAa,CAAC,CAAC,CAAC;EACrB,KAAK1jC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG07B,aAAa,CAACpkC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAClD8a,EAAE,GAAG4oB,aAAa,CAAC1jC,CAAC,CAAC;IACrB,IAAM8jC,aAAa,GAAGzvB,IAAI,CAACC,GAAG,CAACwG,EAAE,GAAGF,EAAE,CAAC;IACvC,IAAIkpB,aAAa,GAAGD,gBAAgB,EAAE;MACpCnpB,CAAC,GAAG,CAACE,EAAE,GAAGE,EAAE,IAAI,CAAC;MACjB,IAAI,IAAAsoB,+BAAqB,EAACxiB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAEpG,CAAC,EAAEC,CAAC,CAAC,EAAE;QACtEipB,MAAM,GAAGlpB,CAAC;QACVmpB,gBAAgB,GAAGC,aAAa;MAClC;IACF;IACAlpB,EAAE,GAAGE,EAAE;EACT;EACA,IAAIyiB,KAAK,CAACqG,MAAM,CAAC,EAAE;IACjB;IACA;IACAA,MAAM,GAAGJ,WAAW,CAACC,iBAAiB,CAAC;EACzC;EACA,IAAI/jB,IAAI,EAAE;IACRA,IAAI,CAAClY,IAAI,CAACo8B,MAAM,EAAEjpB,CAAC,EAAEkpB,gBAAgB,CAAC;IACtC,OAAOnkB,IAAI;EACb;EACA,OAAO,CAACkkB,MAAM,EAAEjpB,CAAC,EAAEkpB,gBAAgB,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,6BAA6BA,CAC3CnjB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACN0iB,WAAW,EACX;EACA;EACA,IAAIQ,cAAc,GAAG,EAAE;EACvB,KAAK,IAAIhkC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrBgkC,cAAc,GAAGT,uBAAuB,CACtC3iB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN0iB,WAAW,EACX,CAAC,GAAGxjC,CAAC,EACLgkC,cACF,CAAC;IACDnjB,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAO0kC,cAAc;AACvB;;;;;;;;AC9GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS12B,OAAOA,CAACsT,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAES,QAAQ,EAAE;EACtE,IAAI0iB,GAAG;EACPpjB,MAAM,IAAIC,MAAM;EAChB,OAAOD,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrCmjB,GAAG,GAAG1iB,QAAQ,CACZX,eAAe,CAACle,KAAK,CAACme,MAAM,GAAGC,MAAM,EAAED,MAAM,CAAC,EAC9CD,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEA,MAAM,GAAGC,MAAM,CAC/C,CAAC;IACD,IAAImjB,GAAG,EAAE;MACP,OAAOA,GAAG;IACZ;EACF;EACA,OAAO,KAAK;AACd;;;;;;;;;;;;AC3BA,IAAA5d,OAAA,GAAAtkB,OAAA;AAMA,IAAAuhC,SAAA,GAAAvhC,OAAA;AACA,IAAAmiC,SAAA,GAAAniC,OAAA;AAVA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoiC,oBAAoBA,CAClCvjB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,EACNqnB,iBAAiB,EACjB;EACAA,iBAAiB,GACfA,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GACjB,IAAArjB,6BAAqB,EAAC,IAAA1B,mBAAW,EAAC,CAAC,EAAEuB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,CAAC;EAC5E,IAAI,CAAC,IAAA2C,kBAAU,EAAC1G,MAAM,EAAEqnB,iBAAiB,CAAC,EAAE;IAC1C,OAAO,KAAK;EACd;EACA,IACGA,iBAAiB,CAAC,CAAC,CAAC,IAAIrnB,MAAM,CAAC,CAAC,CAAC,IAAIqnB,iBAAiB,CAAC,CAAC,CAAC,IAAIrnB,MAAM,CAAC,CAAC,CAAC,IACtEqnB,iBAAiB,CAAC,CAAC,CAAC,IAAIrnB,MAAM,CAAC,CAAC,CAAC,IAAIqnB,iBAAiB,CAAC,CAAC,CAAC,IAAIrnB,MAAM,CAAC,CAAC,CAAE,EACxE;IACA,OAAO,IAAI;EACb;EACA,OAAO,IAAAsnB,iBAAc,EACnBzjB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM;EACN;AACJ;AACA;AACA;AACA;AACA;EACI,UAAUwjB,MAAM,EAAEC,MAAM,EAAE;IACxB,OAAO,IAAAzgB,yBAAiB,EAAC/G,MAAM,EAAEunB,MAAM,EAAEC,MAAM,CAAC;EAClD,CACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,yBAAyBA,CACvC5jB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN/D,MAAM,EACN;EACA,KAAK,IAAI/c,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IACEmkC,oBAAoB,CAACvjB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,CAACz/B,CAAC,CAAC,EAAE8gB,MAAM,EAAE/D,MAAM,CAAC,EACtE;MACA,OAAO,IAAI;IACb;IACA8D,MAAM,GAAG4e,IAAI,CAACz/B,CAAC,CAAC;EAClB;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASykC,oBAAoBA,CAClC7jB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,EACN;EACA,IAAIonB,oBAAoB,CAACvjB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE/D,MAAM,CAAC,EAAE;IACtE,OAAO,IAAI;EACb;EACA,IACE,IAAAmmB,8BAAoB,EAClBtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CACV,CAAC,EACD;IACA,OAAO,IAAI;EACb;EACA,IACE,IAAAmmB,8BAAoB,EAClBtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CACV,CAAC,EACD;IACA,OAAO,IAAI;EACb;EACA,IACE,IAAAmmB,8BAAoB,EAClBtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CACV,CAAC,EACD;IACA,OAAO,IAAI;EACb;EACA,IACE,IAAAmmB,8BAAoB,EAClBtiB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN/D,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CACV,CAAC,EACD;IACA,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2nB,yBAAyBA,CACvC9jB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACN/D,MAAM,EACN;EACA,IAAI,CAAC0nB,oBAAoB,CAAC7jB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,CAAC,CAAC,CAAC,EAAE3e,MAAM,EAAE/D,MAAM,CAAC,EAAE;IAC3E,OAAO,KAAK;EACd;EACA,IAAI0iB,IAAI,CAACngC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,IAAI;EACb;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IACE,IAAAgjC,kCAAwB,EACtBpiB,eAAe,EACf6e,IAAI,CAACz/B,CAAC,GAAG,CAAC,CAAC,EACXy/B,IAAI,CAACz/B,CAAC,CAAC,EACP8gB,MAAM,EACN/D,MACF,CAAC,EACD;MACA,IACE,CAAConB,oBAAoB,CACnBvjB,eAAe,EACf6e,IAAI,CAACz/B,CAAC,GAAG,CAAC,CAAC,EACXy/B,IAAI,CAACz/B,CAAC,CAAC,EACP8gB,MAAM,EACN/D,MACF,CAAC,EACD;QACA,OAAO,KAAK;MACd;IACF;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4nB,8BAA8BA,CAC5C/jB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACN/D,MAAM,EACN;EACA,KAAK,IAAI/c,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB,IACE0kC,yBAAyB,CAAC9jB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAE/D,MAAM,CAAC,EACxE;MACA,OAAO,IAAI;IACb;IACA8D,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAO,KAAK;AACd;;;;;;;;ACjOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8f,WAAWA,CAACwB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EAChE,OAAOD,MAAM,GAAGzgB,GAAG,GAAG0gB,MAAM,EAAE;IAC5B,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;MAC/B,IAAMK,GAAG,GAAGugB,eAAe,CAACC,MAAM,GAAG7gB,CAAC,CAAC;MACvC4gB,eAAe,CAACC,MAAM,GAAG7gB,CAAC,CAAC,GAAG4gB,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG9gB,CAAC,CAAC;MAC/D4gB,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG9gB,CAAC,CAAC,GAAGK,GAAG;IACzC;IACAwgB,MAAM,IAAIC,MAAM;IAChB1gB,GAAG,IAAI0gB,MAAM;EACf;AACF;;;;;;;;;;;;;ACjBA,IAAA8jB,QAAA,GAAA7iC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8iC,qBAAqBA,CAACjkB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EAC1E;EACA;EACA,IAAIgkB,IAAI,GAAG,CAAC;EACZ,IAAIlqB,EAAE,GAAGgG,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,CAAC;EACtC,IAAIjG,EAAE,GAAG+F,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG,CAAC,CAAC;EAC1C,OAAOD,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;IACrC,IAAMhG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;IAClC,IAAM9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IACtCikB,IAAI,IAAI,CAAChqB,EAAE,GAAGF,EAAE,KAAKG,EAAE,GAAGF,EAAE,CAAC;IAC7BD,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACA,OAAO+pB,IAAI,KAAK,CAAC,GAAGz8B,SAAS,GAAGy8B,IAAI,GAAG,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CACpCnkB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNkkB,KAAK,EACL;EACAA,KAAK,GAAGA,KAAK,KAAK38B,SAAS,GAAG28B,KAAK,GAAG,KAAK;EAC3C,KAAK,IAAIhlC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnB,IAAMilC,WAAW,GAAGJ,qBAAqB,CACvCjkB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MACF,CAAC;IACD,IAAI9gB,CAAC,KAAK,CAAC,EAAE;MACX,IAAKglC,KAAK,IAAIC,WAAW,IAAM,CAACD,KAAK,IAAI,CAACC,WAAY,EAAE;QACtD,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MACL,IAAKD,KAAK,IAAI,CAACC,WAAW,IAAM,CAACD,KAAK,IAAIC,WAAY,EAAE;QACtD,OAAO,KAAK;MACd;IACF;IACApkB,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8kC,uBAAuBA,CACrCtkB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNkkB,KAAK,EACL;EACA,KAAK,IAAIhlC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB,IAAI,CAAC+kC,sBAAsB,CAACnkB,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAEkkB,KAAK,CAAC,EAAE;MACzE,OAAO,KAAK;IACd;IACA,IAAIvF,IAAI,CAACngC,MAAM,EAAE;MACfuhB,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;IAChC;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6lC,iBAAiBA,CAC/BvkB,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNkkB,KAAK,EACL;EACAA,KAAK,GAAGA,KAAK,KAAK38B,SAAS,GAAG28B,KAAK,GAAG,KAAK;EAC3C,KAAK,IAAIhlC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnB,IAAMilC,WAAW,GAAGJ,qBAAqB,CACvCjkB,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MACF,CAAC;IACD,IAAMskB,OAAO,GACXplC,CAAC,KAAK,CAAC,GACFglC,KAAK,IAAIC,WAAW,IAAM,CAACD,KAAK,IAAI,CAACC,WAAY,GACjDD,KAAK,IAAI,CAACC,WAAW,IAAM,CAACD,KAAK,IAAIC,WAAY;IACxD,IAAIG,OAAO,EAAE;MACX,IAAAC,oBAAkB,EAACzkB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,CAAC;IAC1D;IACAD,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAOygB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASykB,sBAAsBA,CACpC1kB,eAAe,EACfC,MAAM,EACN8e,KAAK,EACL7e,MAAM,EACNkkB,KAAK,EACL;EACA,KAAK,IAAIhlC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C6gB,MAAM,GAAGskB,iBAAiB,CACxBvkB,eAAe,EACfC,MAAM,EACN8e,KAAK,CAAC3/B,CAAC,CAAC,EACR8gB,MAAM,EACNkkB,KACF,CAAC;EACH;EACA,OAAOnkB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0kB,WAAWA,CAAC3kB,eAAe,EAAE6e,IAAI,EAAE;EACjD,IAAME,KAAK,GAAG,EAAE;EAChB,IAAI9e,MAAM,GAAG,CAAC;EACd,IAAI2kB,YAAY,GAAG,CAAC;EACpB,IAAIC,gBAAgB;EACpB,KAAK,IAAIzlC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnB;IACA,IAAM0lC,WAAW,GAAGb,qBAAqB,CAACjkB,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE,CAAC,CAAC;IAC1E,IAAIqlC,gBAAgB,KAAKp9B,SAAS,EAAE;MAClCo9B,gBAAgB,GAAGC,WAAW;IAChC;IACA,IAAIA,WAAW,KAAKD,gBAAgB,EAAE;MACpC9F,KAAK,CAACn4B,IAAI,CAACi4B,IAAI,CAAC/8B,KAAK,CAAC8iC,YAAY,EAAExlC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,IAAI2/B,KAAK,CAACrgC,MAAM,KAAK,CAAC,EAAE;QACtB;MACF;MACAqgC,KAAK,CAACA,KAAK,CAACrgC,MAAM,GAAG,CAAC,CAAC,CAACkI,IAAI,CAACi4B,IAAI,CAAC+F,YAAY,CAAC,CAAC;IAClD;IACAA,YAAY,GAAGxlC,CAAC,GAAG,CAAC;IACpB6gB,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAOu/B,KAAK;AACd;;;;;;;;;;;;AC/MA,IAAA79B,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAA0yB,OAAA,GAAA1yB,OAAA;AACA,IAAA4jC,WAAA,GAAAzhC,sBAAA,CAAAnC,OAAA;AACA,IAAA6jC,MAAA,GAAA1hC,sBAAA,CAAAnC,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAsgC,KAAA,GAAAtgC,OAAA;AACA,IAAAugC,QAAA,GAAAvgC,OAAA;AACA,IAAAuhC,SAAA,GAAAvhC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AACA,IAAA8jC,cAAA,GAAA9jC,OAAA;AACA,IAAA+jC,iBAAA,GAAA/jC,OAAA;AACA,IAAAgkC,OAAA,GAAAhkC,OAAA;AACA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAAiD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAlBjD;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM0hC,OAAO,0BAAArD,eAAA;EACX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAqD,QAAY5mB,WAAW,EAAEgf,MAAM,EAAEqB,IAAI,EAAE;IAAA,IAAA34B,KAAA;IAAAxI,eAAA,OAAA0nC,OAAA;IACrCl/B,KAAA,GAAAnB,UAAA,OAAAqgC,OAAA;;IAEA;AACJ;AACA;AACA;IACIl/B,KAAA,CAAKm/B,KAAK,GAAG,EAAE;;IAEf;AACJ;AACA;AACA;IACIn/B,KAAA,CAAKo/B,0BAA0B,GAAG,CAAC,CAAC;;IAEpC;AACJ;AACA;AACA;IACIp/B,KAAA,CAAKq/B,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACIr/B,KAAA,CAAK87B,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACI97B,KAAA,CAAK+7B,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;AACA;IACI/7B,KAAA,CAAKs/B,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;AACA;IACIt/B,KAAA,CAAKu/B,wBAAwB,GAAG,IAAI;IAEpC,IAAIjI,MAAM,KAAK/1B,SAAS,IAAIo3B,IAAI,EAAE;MAChC34B,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;MACDtY,KAAA,CAAKm/B,KAAK,GAAGxG,IAAI;IACnB,CAAC,MAAM;MACL34B,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAu/B,OAAA,EAAArD,eAAA;EAAA,OAAAnkC,YAAA,CAAAwnC,OAAA;IAAAvnC,GAAA;IAAAC,KAAA,EAKA,SAAA4nC,gBAAgBA,CAAChH,UAAU,EAAE;MAC3B,IAAI,CAAC,IAAI,CAAC1e,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG0e,UAAU,CAAChB,kBAAkB,CAAC,CAAC,CAAC57B,KAAK,CAAC,CAAC;MAChE,CAAC,MAAM;QACL,IAAApC,aAAM,EAAC,IAAI,CAACsgB,eAAe,EAAE0e,UAAU,CAAChB,kBAAkB,CAAC,CAAC,CAAC;MAC/D;MACA,IAAI,CAAC2H,KAAK,CAACz+B,IAAI,CAAC,IAAI,CAACoZ,eAAe,CAACthB,MAAM,CAAC;MAC5C,IAAI,CAACoK,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAM0mB,OAAO,GAAG,IAAIP,OAAO,CACzB,IAAI,CAACplB,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC07B,MAAM,EACX,IAAI,CAAC6H,KAAK,CAACvjC,KAAK,CAAC,CACnB,CAAC;MACD6jC,OAAO,CAACr6B,eAAe,CAAC,IAAI,CAAC;MAC7B,OAAOq6B,OAAO;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9nC,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAI,IAAI,CAAC2F,iBAAiB,IAAI,IAAI,CAACj5B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAI,CAACg5B,SAAS,GAAGvuB,IAAI,CAAC2F,IAAI,CACxB,IAAAkmB,6BAAoB,EAClB,IAAI,CAACtf,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX,CACF,CACF,CAAC;QACD,IAAI,CAAC+hB,iBAAiB,GAAG,IAAI,CAACj5B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,IAAA22B,gCAAuB,EAC5B,IAAI,CAAC3f,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX,IAAI,CAAC8hB,SAAS,EACd,IAAI,EACJloB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,OAAO,IAAAyoB,+BAAqB,EAC1B,IAAI,CAACoD,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAACP,KAAK,EACV,IAAI,CAACnlB,MAAM,EACXpG,CAAC,EACDC,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlc,GAAA;IAAAC,KAAA,EAKA,SAAAmjB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAA4kB,iBAAe,EACpB,IAAI,CAACD,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAACP,KAAK,EACV,IAAI,CAACnlB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAAriB,GAAA;IAAAC,KAAA,EAcA,SAAAurB,cAAcA,CAAC+a,KAAK,EAAE;MACpB,IAAIpkB,eAAe;MACnB,IAAIokB,KAAK,KAAK38B,SAAS,EAAE;QACvBuY,eAAe,GAAG,IAAI,CAAC4lB,0BAA0B,CAAC,CAAC,CAAC9jC,KAAK,CAAC,CAAC;QAC3D,IAAAyiC,yBAAiB,EAACvkB,eAAe,EAAE,CAAC,EAAE,IAAI,CAACqlB,KAAK,EAAE,IAAI,CAACnlB,MAAM,EAAEkkB,KAAK,CAAC;MACvE,CAAC,MAAM;QACLpkB,eAAe,GAAG,IAAI,CAACA,eAAe;MACxC;MAEA,OAAO,IAAAogB,gCAAuB,EAACpgB,eAAe,EAAE,CAAC,EAAE,IAAI,CAACqlB,KAAK,EAAE,IAAI,CAACnlB,MAAM,CAAC;IAC7E;;IAEA;AACF;AACA;EAFE;IAAAriB,GAAA;IAAAC,KAAA,EAGA,SAAAgoC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACT,KAAK;IACnB;;IAEA;AACF;AACA;EAFE;IAAAxnC,GAAA;IAAAC,KAAA,EAGA,SAAAioC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACT,0BAA0B,IAAI,IAAI,CAACt8B,WAAW,CAAC,CAAC,EAAE;QACzD,IAAMg9B,UAAU,GAAG,IAAA3kB,iBAAS,EAAC,IAAI,CAAC8C,SAAS,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACohB,kBAAkB,GAAG,IAAA5C,sCAAuB,EAC/C,IAAI,CAACiD,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAACP,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX8lB,UAAU,EACV,CACF,CAAC;QACD,IAAI,CAACV,0BAA0B,GAAG,IAAI,CAACt8B,WAAW,CAAC,CAAC;MACtD;MACA,OAAO,oDACL,IAAI,CAACu8B,kBAAkB;IAE3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1nC,GAAA;IAAAC,KAAA,EAMA,SAAAmoC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI9D,cAAK,CAAC,IAAI,CAAC4D,oBAAoB,CAAC,CAAC,EAAE,KAAK,CAAC;IACtD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAloC,GAAA;IAAAC,KAAA,EAOA,SAAAooC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACb,KAAK,CAAC3mC,MAAM;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAb,GAAA;IAAAC,KAAA,EAUA,SAAAqoC,aAAaA,CAAC1lC,KAAK,EAAE;MACnB,IAAIA,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC4kC,KAAK,CAAC3mC,MAAM,IAAI+B,KAAK,EAAE;QAC3C,OAAO,IAAI;MACb;MACA,OAAO,IAAIqhC,mBAAU,CACnB,IAAI,CAAC9hB,eAAe,CAACle,KAAK,CACxBrB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC4kC,KAAK,CAAC5kC,KAAK,GAAG,CAAC,CAAC,EACvC,IAAI,CAAC4kC,KAAK,CAAC5kC,KAAK,CAClB,CAAC,EACD,IAAI,CAAC+8B,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3/B,GAAA;IAAAC,KAAA,EAKA,SAAAsoC,cAAcA,CAAA,EAAG;MACf,IAAM5I,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMxd,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM6e,IAAI,GAAG,IAAI,CAACwG,KAAK;MACvB,IAAMzG,WAAW,GAAG,EAAE;MACtB,IAAI3e,MAAM,GAAG,CAAC;MACd,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;QACnB,IAAMs/B,UAAU,GAAG,IAAIoD,mBAAU,CAC/B9hB,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEzgB,GAAG,CAAC,EAClCg+B,MACF,CAAC;QACDoB,WAAW,CAACh4B,IAAI,CAAC83B,UAAU,CAAC;QAC5Bze,MAAM,GAAGzgB,GAAG;MACd;MACA,OAAOo/B,WAAW;IACpB;;IAEA;AACF;AACA;EAFE;IAAA/gC,GAAA;IAAAC,KAAA,EAGA,SAAA8nC,0BAA0BA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAACJ,iBAAiB,IAAI,IAAI,CAACx8B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAMgX,eAAe,GAAG,IAAI,CAACA,eAAe;QAC5C,IAAI,IAAAmkB,8BAAsB,EAACnkB,eAAe,EAAE,CAAC,EAAE,IAAI,CAACqlB,KAAK,EAAE,IAAI,CAACnlB,MAAM,CAAC,EAAE;UACvE,IAAI,CAACulB,wBAAwB,GAAGzlB,eAAe;QACjD,CAAC,MAAM;UACL,IAAI,CAACylB,wBAAwB,GAAGzlB,eAAe,CAACle,KAAK,CAAC,CAAC;UACvD,IAAI,CAAC2jC,wBAAwB,CAAC/mC,MAAM,GAAG,IAAA6lC,yBAAiB,EACtD,IAAI,CAACkB,wBAAwB,EAC7B,CAAC,EACD,IAAI,CAACJ,KAAK,EACV,IAAI,CAACnlB,MACP,CAAC;QACH;QACA,IAAI,CAACslB,iBAAiB,GAAG,IAAI,CAACx8B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,4BAA8B,IAAI,CAACy8B,wBAAwB;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5nC,GAAA;IAAAC,KAAA,EAMA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C;MACA,IAAM8B,yBAAyB,GAAG,EAAE;MACpC;MACA,IAAMkD,cAAc,GAAG,EAAE;MACzBlD,yBAAyB,CAACr/B,MAAM,GAAG,IAAA4iC,uBAAa,EAC9C,IAAI,CAACthB,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACXzM,IAAI,CAAC2F,IAAI,CAAC6iB,gBAAgB,CAAC,EAC3B8B,yBAAyB,EACzB,CAAC,EACDkD,cACF,CAAC;MACD,OAAO,IAAImE,OAAO,CAACrH,yBAAyB,EAAE,IAAI,EAAEkD,cAAc,CAAC;IACrE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApjC,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAA2nB,2CAAyB,EAC9B,IAAI,CAAC8B,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAACP,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX/D,MACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAte,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAM6e,IAAI,GAAG,IAAAkB,gCAAuB,EAClC,IAAI,CAAC/f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MAAM,EACX,IAAI,CAACmlB,KACP,CAAC;MACD,IAAI,CAACrlB,eAAe,CAACthB,MAAM,GAAGmgC,IAAI,CAACngC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGmgC,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;MAC3E,IAAI,CAACoK,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EApYmBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuYrBgpC,OAAO;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,QAAQA,CAACttB,MAAM,EAAE0P,MAAM,EAAEtpB,CAAC,EAAEmnC,YAAY,EAAE;EACxDnnC,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,EAAE;EACd;EACA,IAAM6gB,eAAe,GAAG,EAAE;EAC1B,KAAK,IAAI5gB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAE,EAAEC,CAAC,EAAE;IAC1B,IAAAM,aAAM,EACJsgB,eAAe,EACf,IAAAumB,cAAY,EAACxtB,MAAM,EAAE0P,MAAM,EAAG,CAAC,GAAGhV,IAAI,CAAC0H,EAAE,GAAG/b,CAAC,GAAID,CAAC,EAAEmnC,YAAY,CAClE,CAAC;EACH;EACAtmB,eAAe,CAACpZ,IAAI,CAACoZ,eAAe,CAAC,CAAC,CAAC,EAAEA,eAAe,CAAC,CAAC,CAAC,CAAC;EAC5D,OAAO,IAAIolB,OAAO,CAACplB,eAAe,EAAE,IAAI,EAAE,CAACA,eAAe,CAACthB,MAAM,CAAC,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8nC,UAAUA,CAACrqB,MAAM,EAAE;EACjC,IAAI,IAAAtZ,eAAO,EAACsZ,MAAM,CAAC,EAAE;IACnB,MAAM,IAAI7S,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EACA,IAAMwT,IAAI,GAAGX,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMa,IAAI,GAAGb,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMY,IAAI,GAAGZ,MAAM,CAAC,CAAC,CAAC;EACtB,IAAMc,IAAI,GAAGd,MAAM,CAAC,CAAC,CAAC;EACtB,IAAM6D,eAAe,GAAG,CACtBlD,IAAI,EACJE,IAAI,EACJF,IAAI,EACJG,IAAI,EACJF,IAAI,EACJE,IAAI,EACJF,IAAI,EACJC,IAAI,EACJF,IAAI,EACJE,IAAI,CACL;EACD,OAAO,IAAIooB,OAAO,CAACplB,eAAe,EAAE,IAAI,EAAE,CAACA,eAAe,CAACthB,MAAM,CAAC,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+nC,UAAUA,CAAC3gB,MAAM,EAAE4gB,KAAK,EAAErf,KAAK,EAAE;EAC/Cqf,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAC1B,IAAMxmB,MAAM,GAAG4F,MAAM,CAACkY,SAAS,CAAC,CAAC;EACjC,IAAMR,MAAM,GAAG1X,MAAM,CAAC8X,SAAS,CAAC,CAAC;EACjC,IAAM7kB,MAAM,GAAG+M,MAAM,CAACzE,SAAS,CAAC,CAAC;EACjC,IAAMslB,WAAW,GAAGzmB,MAAM,IAAIwmB,KAAK,GAAG,CAAC,CAAC;EACxC,IAAM1mB,eAAe,GAAG,IAAIngB,KAAK,CAAC8mC,WAAW,CAAC;EAC9C,KAAK,IAAIvnC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGunC,WAAW,EAAEvnC,CAAC,IAAI8gB,MAAM,EAAE;IAC5CF,eAAe,CAAC5gB,CAAC,CAAC,GAAG,CAAC;IACtB4gB,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,MAAM,EAAEtF,CAAC,EAAE,EAAE;MAC/BoF,eAAe,CAAC5gB,CAAC,GAAGwb,CAAC,CAAC,GAAG7B,MAAM,CAAC6B,CAAC,CAAC;IACpC;EACF;EACA,IAAMikB,IAAI,GAAG,CAAC7e,eAAe,CAACthB,MAAM,CAAC;EACrC,IAAMinC,OAAO,GAAG,IAAIP,OAAO,CAACplB,eAAe,EAAEwd,MAAM,EAAEqB,IAAI,CAAC;EAC1D+H,WAAW,CAACjB,OAAO,EAAE5sB,MAAM,EAAE+M,MAAM,CAACC,SAAS,CAAC,CAAC,EAAEsB,KAAK,CAAC;EACvD,OAAOse,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,WAAWA,CAACjB,OAAO,EAAE5sB,MAAM,EAAE0P,MAAM,EAAEpB,KAAK,EAAE;EAC1D,IAAMrH,eAAe,GAAG2lB,OAAO,CAACjI,kBAAkB,CAAC,CAAC;EACpD,IAAMxd,MAAM,GAAGylB,OAAO,CAAC3H,SAAS,CAAC,CAAC;EAClC,IAAM0I,KAAK,GAAG1mB,eAAe,CAACthB,MAAM,GAAGwhB,MAAM,GAAG,CAAC;EACjD,IAAM2mB,UAAU,GAAGxf,KAAK,GAAGA,KAAK,GAAG,CAAC;EACpC,KAAK,IAAIjoB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIsnC,KAAK,EAAE,EAAEtnC,CAAC,EAAE;IAC/B,IAAM6gB,MAAM,GAAG7gB,CAAC,GAAG8gB,MAAM;IACzB,IAAMmH,MAAK,GAAGwf,UAAU,GAAI,IAAAvrB,YAAM,EAAClc,CAAC,EAAEsnC,KAAK,CAAC,GAAG,CAAC,GAAGjzB,IAAI,CAAC0H,EAAE,GAAIurB,KAAK;IACnE1mB,eAAe,CAACC,MAAM,CAAC,GAAGlH,MAAM,CAAC,CAAC,CAAC,GAAG0P,MAAM,GAAGhV,IAAI,CAAC0O,GAAG,CAACkF,MAAK,CAAC;IAC9DrH,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,GAAGlH,MAAM,CAAC,CAAC,CAAC,GAAG0P,MAAM,GAAGhV,IAAI,CAAC4O,GAAG,CAACgF,MAAK,CAAC;EACpE;EACAse,OAAO,CAAC78B,OAAO,CAAC,CAAC;AACnB;;;;;;;;;;ACxgBA,IAAA5H,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AALA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2lC,4BAA4BA,CACnCxqB,UAAU,EACVyqB,SAAS,EACTC,YAAY,EACZC,cAAc,EACd;EACA,IAAMC,WAAW,GAAG,IAAA/lB,gBAAQ,EAAC4lB,SAAS,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC;EACzD,IAAMG,WAAW,GAAG,IAAA/lB,iBAAS,EAAC2lB,SAAS,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC;EAE1D,IAAIC,cAAc,EAAE;IAClB,OAAOxzB,IAAI,CAACkG,GAAG,CAAC2C,UAAU,EAAE7I,IAAI,CAACmG,GAAG,CAACstB,WAAW,EAAEC,WAAW,CAAC,CAAC;EACjE;EACA,OAAO1zB,IAAI,CAACkG,GAAG,CAAC2C,UAAU,EAAE7I,IAAI,CAACkG,GAAG,CAACutB,WAAW,EAAEC,WAAW,CAAC,CAAC;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,0BAA0BA,CAAC9qB,UAAU,EAAE+qB,aAAa,EAAEC,aAAa,EAAE;EAC5E,IAAIC,MAAM,GAAG9zB,IAAI,CAACkG,GAAG,CAAC2C,UAAU,EAAE+qB,aAAa,CAAC;EAChD,IAAMnqB,KAAK,GAAG,EAAE;EAEhBqqB,MAAM,IACJ9zB,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG+D,KAAK,GAAGzJ,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAE0C,UAAU,GAAG+qB,aAAa,GAAG,CAAC,CAAC,CAAC,GAAGnqB,KAAK,GACzE,CAAC;EACH,IAAIoqB,aAAa,EAAE;IACjBC,MAAM,GAAG9zB,IAAI,CAACmG,GAAG,CAAC2tB,MAAM,EAAED,aAAa,CAAC;IACxCC,MAAM,IACJ9zB,IAAI,CAAC0F,GAAG,CAAC,CAAC,GAAG+D,KAAK,GAAGzJ,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAE0tB,aAAa,GAAGhrB,UAAU,GAAG,CAAC,CAAC,CAAC,GAC/DY,KAAK,GACP,CAAC;EACL;EACA,OAAO,IAAAxD,WAAK,EAAC6tB,MAAM,EAAED,aAAa,GAAG,CAAC,EAAED,aAAa,GAAG,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,uBAAuBA,CACrCC,WAAW,EACXprB,MAAM,EACN0qB,SAAS,EACTE,cAAc,EACd;EACA5qB,MAAM,GAAGA,MAAM,KAAK5U,SAAS,GAAG4U,MAAM,GAAG,IAAI;EAC7C;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,UAAUC,UAAU,EAAEpd,SAAS,EAAEqd,IAAI,EAAEC,QAAQ,EAAE;MAC/C,IAAIF,UAAU,KAAK7U,SAAS,EAAE;QAC5B,IAAM4/B,aAAa,GAAGI,WAAW,CAAC,CAAC,CAAC;QACpC,IAAMH,aAAa,GAAGG,WAAW,CAACA,WAAW,CAAC/oC,MAAM,GAAG,CAAC,CAAC;QACzD,IAAMgpC,YAAY,GAAGX,SAAS,GAC1BD,4BAA4B,CAC1BO,aAAa,EACbN,SAAS,EACTxqB,IAAI,EACJ0qB,cACF,CAAC,GACDI,aAAa;;QAEjB;QACA,IAAI7qB,QAAQ,EAAE;UACZ,IAAI,CAACH,MAAM,EAAE;YACX,OAAO,IAAA3C,WAAK,EAAC4C,UAAU,EAAEgrB,aAAa,EAAEI,YAAY,CAAC;UACvD;UACA,OAAON,0BAA0B,CAC/B9qB,UAAU,EACVorB,YAAY,EACZJ,aACF,CAAC;QACH;QAEA,IAAMK,MAAM,GAAGl0B,IAAI,CAACkG,GAAG,CAAC+tB,YAAY,EAAEprB,UAAU,CAAC;QACjD,IAAMsrB,CAAC,GAAGn0B,IAAI,CAACoI,KAAK,CAAC,IAAA9c,wBAAiB,EAAC0oC,WAAW,EAAEE,MAAM,EAAEzoC,SAAS,CAAC,CAAC;QACvE,IAAIuoC,WAAW,CAACG,CAAC,CAAC,GAAGF,YAAY,IAAIE,CAAC,GAAGH,WAAW,CAAC/oC,MAAM,GAAG,CAAC,EAAE;UAC/D,OAAO+oC,WAAW,CAACG,CAAC,GAAG,CAAC,CAAC;QAC3B;QACA,OAAOH,WAAW,CAACG,CAAC,CAAC;MACvB;MACA,OAAOngC,SAAS;IAClB;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASogC,iBAAiBA,CAC/BC,KAAK,EACLT,aAAa,EACbC,aAAa,EACbjrB,MAAM,EACN0qB,SAAS,EACTE,cAAc,EACd;EACA5qB,MAAM,GAAGA,MAAM,KAAK5U,SAAS,GAAG4U,MAAM,GAAG,IAAI;EAC7CirB,aAAa,GAAGA,aAAa,KAAK7/B,SAAS,GAAG6/B,aAAa,GAAG,CAAC;EAE/D;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,UAAUhrB,UAAU,EAAEpd,SAAS,EAAEqd,IAAI,EAAEC,QAAQ,EAAE;MAC/C,IAAIF,UAAU,KAAK7U,SAAS,EAAE;QAC5B,IAAMigC,YAAY,GAAGX,SAAS,GAC1BD,4BAA4B,CAC1BO,aAAa,EACbN,SAAS,EACTxqB,IAAI,EACJ0qB,cACF,CAAC,GACDI,aAAa;;QAEjB;QACA,IAAI7qB,QAAQ,EAAE;UACZ,IAAI,CAACH,MAAM,EAAE;YACX,OAAO,IAAA3C,WAAK,EAAC4C,UAAU,EAAEgrB,aAAa,EAAEI,YAAY,CAAC;UACvD;UACA,OAAON,0BAA0B,CAC/B9qB,UAAU,EACVorB,YAAY,EACZJ,aACF,CAAC;QACH;QAEA,IAAM9mB,SAAS,GAAG,IAAI;QACtB,IAAMunB,YAAY,GAAGt0B,IAAI,CAACqI,IAAI,CAC5BrI,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAGK,YAAY,CAAC,GAAGj0B,IAAI,CAAC0F,GAAG,CAAC2uB,KAAK,CAAC,GAAGtnB,SAC7D,CAAC;QACD,IAAMP,MAAM,GAAG,CAAC/gB,SAAS,IAAI,GAAG,GAAGshB,SAAS,CAAC,GAAG,GAAG;QACnD,IAAMmnB,MAAM,GAAGl0B,IAAI,CAACkG,GAAG,CAAC+tB,YAAY,EAAEprB,UAAU,CAAC;QACjD,IAAM0rB,eAAe,GAAGv0B,IAAI,CAACoI,KAAK,CAChCpI,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAGM,MAAM,CAAC,GAAGl0B,IAAI,CAAC0F,GAAG,CAAC2uB,KAAK,CAAC,GAAG7nB,MACvD,CAAC;QACD,IAAMgoB,SAAS,GAAGx0B,IAAI,CAACmG,GAAG,CAACmuB,YAAY,EAAEC,eAAe,CAAC;QACzD,IAAME,aAAa,GAAGb,aAAa,GAAG5zB,IAAI,CAACkI,GAAG,CAACmsB,KAAK,EAAEG,SAAS,CAAC;QAChE,OAAO,IAAAvuB,WAAK,EAACwuB,aAAa,EAAEZ,aAAa,EAAEI,YAAY,CAAC;MAC1D;MACA,OAAOjgC,SAAS;IAClB;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0gC,sBAAsBA,CACpCd,aAAa,EACbC,aAAa,EACbjrB,MAAM,EACN0qB,SAAS,EACTE,cAAc,EACd;EACA5qB,MAAM,GAAGA,MAAM,KAAK5U,SAAS,GAAG4U,MAAM,GAAG,IAAI;EAE7C;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,UAAUC,UAAU,EAAEpd,SAAS,EAAEqd,IAAI,EAAEC,QAAQ,EAAE;MAC/C,IAAIF,UAAU,KAAK7U,SAAS,EAAE;QAC5B,IAAMigC,YAAY,GAAGX,SAAS,GAC1BD,4BAA4B,CAC1BO,aAAa,EACbN,SAAS,EACTxqB,IAAI,EACJ0qB,cACF,CAAC,GACDI,aAAa;QAEjB,IAAI,CAAChrB,MAAM,IAAI,CAACG,QAAQ,EAAE;UACxB,OAAO,IAAA9C,WAAK,EAAC4C,UAAU,EAAEgrB,aAAa,EAAEI,YAAY,CAAC;QACvD;QACA,OAAON,0BAA0B,CAC/B9qB,UAAU,EACVorB,YAAY,EACZJ,aACF,CAAC;MACH;MACA,OAAO7/B,SAAS;IAClB;EAAC;AAEL;;;;;;;;;;;AC7OA,IAAAwU,KAAA,GAAA9a,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASizB,OAAOA,CAAC1S,QAAQ,EAAE;EAChC,IAAIA,QAAQ,KAAKja,SAAS,EAAE;IAC1B,OAAO,CAAC;EACV;EACA,OAAOA,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACO,SAAS0V,IAAIA,CAACuE,QAAQ,EAAE;EAC7B,IAAIA,QAAQ,KAAKja,SAAS,EAAE;IAC1B,OAAOia,QAAQ;EACjB;EACA,OAAOja,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACO,SAAS2gC,aAAaA,CAACjpC,CAAC,EAAE;EAC/B,IAAMkpC,KAAK,GAAI,CAAC,GAAG50B,IAAI,CAAC0H,EAAE,GAAIhc,CAAC;EAC/B;IACE;AACJ;AACA;AACA;AACA;IACI,UAAUuiB,QAAQ,EAAElF,QAAQ,EAAE;MAC5B,IAAIA,QAAQ,EAAE;QACZ,OAAOkF,QAAQ;MACjB;MAEA,IAAIA,QAAQ,KAAKja,SAAS,EAAE;QAC1Bia,QAAQ,GAAGjO,IAAI,CAACoI,KAAK,CAAC6F,QAAQ,GAAG2mB,KAAK,GAAG,GAAG,CAAC,GAAGA,KAAK;QACrD,OAAO3mB,QAAQ;MACjB;MACA,OAAOja,SAAS;IAClB;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACO,SAAS6gC,gBAAgBA,CAAC9nB,SAAS,EAAE;EAC1C,IAAMpc,CAAC,GAAGoc,SAAS,KAAK/Y,SAAS,GAAG,IAAA2T,eAAS,EAAC,CAAC,CAAC,GAAGoF,SAAS;EAC5D;IACE;AACJ;AACA;AACA;AACA;IACI,UAAUkB,QAAQ,EAAElF,QAAQ,EAAE;MAC5B,IAAIA,QAAQ,IAAIkF,QAAQ,KAAKja,SAAS,EAAE;QACtC,OAAOia,QAAQ;MACjB;MAEA,IAAIjO,IAAI,CAACC,GAAG,CAACgO,QAAQ,CAAC,IAAItd,CAAC,EAAE;QAC3B,OAAO,CAAC;MACV;MACA,OAAOsd,QAAQ;IACjB;EAAC;AAEL;;;;;;;;AChFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAM6mB,gBAAgB,GAAApsC,OAAA,CAAAosC,gBAAA,GAAG,EAAE;;AAElC;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAArsC,OAAA,CAAAqsC,iBAAA,GAAG,GAAG;;;;;;;;;;;;ACXpC,IAAA98B,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAsnC,SAAA,GAAAnlC,sBAAA,CAAAnC,OAAA;AACA,IAAAunC,aAAA,GAAAplC,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAwnC,iBAAA,GAAAxnC,OAAA;AACA,IAAAoyB,WAAA,GAAApyB,OAAA;AAMA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAAg6B,QAAA,GAAAh6B,OAAA;AAOA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA0nC,QAAA,GAAA1nC,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAUA,IAAA2nC,qBAAA,GAAA3nC,OAAA;AAKA,IAAA4nC,mBAAA,GAAA5nC,OAAA;AAMA,IAAA6nC,OAAA,GAAA7nC,OAAA;AAAuD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA/CvulC,gBAAgB,GAAG,CAAC;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA,IAwEMC,IAAI,0BAAAl9B,WAAA;EACR;AACF;AACA;EACE,SAAAk9B,KAAYh9B,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAwrC,IAAA;IACnBhjC,KAAA,GAAAnB,UAAA,OAAAmkC,IAAA;;IAEA;AACJ;AACA;IACIhjC,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;IAEPuD,OAAO,GAAG1H,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;;IAEpC;AACJ;AACA;AACA;IACIhG,KAAA,CAAKijC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEpB;AACJ;AACA;AACA;IACIjjC,KAAA,CAAKkjC,WAAW,GAAG,EAAE;;IAErB;AACJ;AACA;AACA;IACIljC,KAAA,CAAKmjC,mBAAmB;;IAExB;AACJ;AACA;AACA;AACA;IACInjC,KAAA,CAAKojC,WAAW,GAAG,IAAAxT,sBAAgB,EAAC5pB,OAAO,CAAC+X,UAAU,EAAE,WAAW,CAAC;;IAEpE;AACJ;AACA;AACA;IACI/d,KAAA,CAAKqjC,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;;IAE/B;AACJ;AACA;AACA;IACIrjC,KAAA,CAAKsjC,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACItjC,KAAA,CAAKujC,iBAAiB;;IAEtB;AACJ;AACA;AACA;IACIvjC,KAAA,CAAKwjC,eAAe;;IAEpB;AACJ;AACA;AACA;IACIxjC,KAAA,CAAKyjC,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;IACIzjC,KAAA,CAAK0jC,eAAe;;IAEpB;AACJ;AACA;AACA;IACI1jC,KAAA,CAAK2jC,aAAa;;IAElB;AACJ;AACA;AACA;IACI3jC,KAAA,CAAK4jC,aAAa,GAAGriC,SAAS;IAE9B,IAAIyE,OAAO,CAAC+X,UAAU,EAAE;MACtB,IAAAkQ,8BAAwB,EAAC,CAAC;IAC5B;IACA,IAAIjoB,OAAO,CAAC6M,MAAM,EAAE;MAClB7M,OAAO,CAAC6M,MAAM,GAAG,IAAAkf,wBAAkB,EAAC/rB,OAAO,CAAC6M,MAAM,EAAE7S,KAAA,CAAKojC,WAAW,CAAC;IACvE;IACA,IAAIp9B,OAAO,CAACiQ,MAAM,EAAE;MAClBjQ,OAAO,CAACiQ,MAAM,GAAG,IAAAic,oBAAc,EAAClsB,OAAO,CAACiQ,MAAM,EAAEjW,KAAA,CAAKojC,WAAW,CAAC;IACnE;IAEApjC,KAAA,CAAK6jC,aAAa,CAAC79B,OAAO,CAAC;IAAC,OAAAhG,KAAA;EAC9B;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAqjC,IAAA,EAAAl9B,WAAA;EAAA,OAAApO,YAAA,CAAAsrC,IAAA;IAAArrC,GAAA;IAAAC,KAAA,EAIA,SAAAisC,aAAaA,CAAC79B,OAAO,EAAE;MACrB,IAAM89B,UAAU,GAAGxlC,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;MAC7C,KAAK,IAAMrO,GAAG,IAAIosC,qBAAY,EAAE;QAC9B,OAAOD,UAAU,CAACnsC,GAAG,CAAC;MACxB;MACA,IAAI,CAACyM,aAAa,CAAC0/B,UAAU,EAAE,IAAI,CAAC;MAEpC,IAAME,wBAAwB,GAAGC,0BAA0B,CAACj+B,OAAO,CAAC;;MAEpE;AACJ;AACA;AACA;MACI,IAAI,CAACk+B,cAAc,GAAGF,wBAAwB,CAAC7C,aAAa;;MAE5D;AACJ;AACA;AACA;MACI,IAAI,CAACgD,cAAc,GAAGH,wBAAwB,CAAC5C,aAAa;;MAE5D;AACJ;AACA;AACA;MACI,IAAI,CAACgD,WAAW,GAAGJ,wBAAwB,CAACK,UAAU;;MAEtD;AACJ;AACA;AACA;MACI,IAAI,CAACC,YAAY,GAAGt+B,OAAO,CAACu7B,WAAW;;MAEvC;AACJ;AACA;AACA;MACI,IAAI,CAACgD,QAAQ,GAAGv+B,OAAO,CAACw+B,OAAO;;MAE/B;AACJ;AACA;AACA;MACI,IAAI,CAACC,QAAQ,GAAGT,wBAAwB,CAACU,OAAO;MAEhD,IAAMC,gBAAgB,GAAGC,sBAAsB,CAAC5+B,OAAO,CAAC;MACxD,IAAM6+B,oBAAoB,GAAGb,wBAAwB,CAACc,UAAU;MAChE,IAAMC,kBAAkB,GAAGC,wBAAwB,CAACh/B,OAAO,CAAC;;MAE5D;AACJ;AACA;AACA;MACI,IAAI,CAACi/B,YAAY,GAAG;QAClBpyB,MAAM,EAAE8xB,gBAAgB;QACxBvuB,UAAU,EAAEyuB,oBAAoB;QAChCrpB,QAAQ,EAAEupB;MACZ,CAAC;MAED,IAAI,CAACG,WAAW,CAACl/B,OAAO,CAACwV,QAAQ,KAAKja,SAAS,GAAGyE,OAAO,CAACwV,QAAQ,GAAG,CAAC,CAAC;MACvE,IAAI,CAAC2pB,iBAAiB,CACpBn/B,OAAO,CAAC6M,MAAM,KAAKtR,SAAS,GAAGyE,OAAO,CAAC6M,MAAM,GAAG,IAClD,CAAC;MACD,IAAI7M,OAAO,CAACoQ,UAAU,KAAK7U,SAAS,EAAE;QACpC,IAAI,CAAC6jC,aAAa,CAACp/B,OAAO,CAACoQ,UAAU,CAAC;MACxC,CAAC,MAAM,IAAIpQ,OAAO,CAACq/B,IAAI,KAAK9jC,SAAS,EAAE;QACrC,IAAI,CAAC+jC,OAAO,CAACt/B,OAAO,CAACq/B,IAAI,CAAC;MAC5B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA1tC,GAAA;IAAA0M,GAAA,EASA,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACkgC,QAAQ;IACtB,CAAC;IAAAr/B,GAAA,EACD,SAAAA,IAAYs/B,OAAO,EAAE;MACnB,IAAIe,UAAU,GAAG,IAAI,CAAChB,QAAQ;MAC9B,IAAI,CAACA,QAAQ,GAAGC,OAAO;MACvB,IAAM3xB,MAAM,GAAG,IAAI,CAAC2yB,iBAAiB,CAAC,CAAC;MACvC,IAAI3yB,MAAM,EAAE;QACV,IAAM4yB,UAAU,GAAGjB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1Ce,UAAU,GAAGA,UAAU,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACvC,IAAMnvB,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC,CAAC;QACvC,IAAMC,OAAO,GACVvvB,UAAU,GAAG,CAAC,IACdqvB,UAAU,CAAC,CAAC,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGE,UAAU,CAAC,CAAC,CAAC,CAAC;QACjE,IAAMG,OAAO,GACVxvB,UAAU,GAAG,CAAC,IACdqvB,UAAU,CAAC,CAAC,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGE,UAAU,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,CAACN,iBAAiB,CAAC,CAACtyB,MAAM,CAAC,CAAC,CAAC,GAAG8yB,OAAO,EAAE9yB,MAAM,CAAC,CAAC,CAAC,GAAG+yB,OAAO,CAAC,CAAC;MACpE;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjuC,GAAA;IAAAC,KAAA,EAQA,SAAAiuC,kBAAkBA,CAACC,UAAU,EAAE;MAC7B,IAAM9/B,OAAO,GAAG,IAAI,CAACxB,aAAa,CAAC,CAAC;;MAEpC;MACA,IAAIwB,OAAO,CAACoQ,UAAU,KAAK7U,SAAS,EAAE;QACpCyE,OAAO,CAACoQ,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC,CAAC;MAC3C,CAAC,MAAM;QACL1/B,OAAO,CAACq/B,IAAI,GAAG,IAAI,CAACU,OAAO,CAAC,CAAC;MAC/B;;MAEA;MACA//B,OAAO,CAAC6M,MAAM,GAAG,IAAI,CAAC2yB,iBAAiB,CAAC,CAAC;;MAEzC;MACAx/B,OAAO,CAACwV,QAAQ,GAAG,IAAI,CAACwqB,WAAW,CAAC,CAAC;MAErC,OAAO1nC,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,EAAE8/B,UAAU,CAAC;IAC/C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhCE;IAAAnuC,GAAA;IAAAC,KAAA,EAiCA,SAAAquC,OAAOA,CAACC,QAAQ,EAAE;MAChB,IAAI,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;QACxC,IAAI,CAACC,kBAAkB,CAAC,CAAC,CAAC;MAC5B;MACA,IAAMC,IAAI,GAAG,IAAI3sC,KAAK,CAACmC,SAAS,CAACtD,MAAM,CAAC;MACxC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGotC,IAAI,CAAC9tC,MAAM,EAAE,EAAEU,CAAC,EAAE;QACpC,IAAI8M,OAAO,GAAGlK,SAAS,CAAC5C,CAAC,CAAC;QAC1B,IAAI8M,OAAO,CAAC6M,MAAM,EAAE;UAClB7M,OAAO,GAAG1H,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;UACpCA,OAAO,CAAC6M,MAAM,GAAG,IAAAkf,wBAAkB,EACjC/rB,OAAO,CAAC6M,MAAM,EACd,IAAI,CAAC+jB,aAAa,CAAC,CACrB,CAAC;QACH;QACA,IAAI5wB,OAAO,CAAC8uB,MAAM,EAAE;UAClB9uB,OAAO,GAAG1H,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;UACpCA,OAAO,CAAC8uB,MAAM,GAAG,IAAA/C,wBAAkB,EACjC/rB,OAAO,CAAC8uB,MAAM,EACd,IAAI,CAAC8B,aAAa,CAAC,CACrB,CAAC;QACH;QACA0P,IAAI,CAACptC,CAAC,CAAC,GAAG8M,OAAO;MACnB;MACA,IAAI,CAACugC,eAAe,CAACvqC,KAAK,CAAC,IAAI,EAAEsqC,IAAI,CAAC;IACxC;;IAEA;AACF;AACA;EAFE;IAAA3uC,GAAA;IAAAC,KAAA,EAGA,SAAA2uC,eAAeA,CAACL,QAAQ,EAAE;MACxB,IAAIM,cAAc,GAAG1qC,SAAS,CAACtD,MAAM;MACrC,IAAIiiB,QAAQ;MACZ,IACE+rB,cAAc,GAAG,CAAC,IAClB,OAAO1qC,SAAS,CAAC0qC,cAAc,GAAG,CAAC,CAAC,KAAK,UAAU,EACnD;QACA/rB,QAAQ,GAAG3e,SAAS,CAAC0qC,cAAc,GAAG,CAAC,CAAC;QACxC,EAAEA,cAAc;MAClB;MAEA,IAAIttC,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGstC,cAAc,IAAI,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC,EAAE,EAAEjtC,CAAC,EAAE;QAC/C;QACA,IAAM6Y,KAAK,GAAGjW,SAAS,CAAC5C,CAAC,CAAC;QAC1B,IAAI6Y,KAAK,CAACc,MAAM,EAAE;UAChB,IAAI,CAACsyB,iBAAiB,CAACpzB,KAAK,CAACc,MAAM,CAAC;QACtC;QACA,IAAId,KAAK,CAACszB,IAAI,KAAK9jC,SAAS,EAAE;UAC5B,IAAI,CAAC+jC,OAAO,CAACvzB,KAAK,CAACszB,IAAI,CAAC;QAC1B,CAAC,MAAM,IAAItzB,KAAK,CAACqE,UAAU,EAAE;UAC3B,IAAI,CAACgvB,aAAa,CAACrzB,KAAK,CAACqE,UAAU,CAAC;QACtC;QACA,IAAIrE,KAAK,CAACyJ,QAAQ,KAAKja,SAAS,EAAE;UAChC,IAAI,CAAC2jC,WAAW,CAACnzB,KAAK,CAACyJ,QAAQ,CAAC;QAClC;MACF;MACA,IAAItiB,CAAC,KAAKstC,cAAc,EAAE;QACxB,IAAI/rB,QAAQ,EAAE;UACZgsB,iBAAiB,CAAChsB,QAAQ,EAAE,IAAI,CAAC;QACnC;QACA;MACF;MAEA,IAAIwC,KAAK,GAAGypB,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,IAAI9zB,MAAM,GAAG,IAAI,CAACywB,aAAa,CAAC1nC,KAAK,CAAC,CAAC;MACvC,IAAIwa,UAAU,GAAG,IAAI,CAACmtB,iBAAiB;MACvC,IAAI/nB,QAAQ,GAAG,IAAI,CAACgoB,eAAe;MACnC,IAAMoD,MAAM,GAAG,EAAE;MACjB,OAAO1tC,CAAC,GAAGstC,cAAc,EAAE,EAAEttC,CAAC,EAAE;QAC9B,IAAM8M,OAAO,GAAG,+BAAiClK,SAAS,CAAC5C,CAAC,CAAE;QAE9D,IAAM2tC,SAAS,GAAG;UAChB5pB,KAAK,EAAEA,KAAK;UACZ6pB,QAAQ,EAAE,KAAK;UACfhS,MAAM,EAAE9uB,OAAO,CAAC8uB,MAAM;UACtBiS,QAAQ,EAAE/gC,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,IAAI;UAClEC,MAAM,EAAEhhC,OAAO,CAACghC,MAAM,IAAIhlB,gBAAQ;UAClCvH,QAAQ,EAAEA;QACZ,CAAC;QAED,IAAIzU,OAAO,CAAC6M,MAAM,EAAE;UAClBg0B,SAAS,CAACI,YAAY,GAAGp0B,MAAM;UAC/Bg0B,SAAS,CAACK,YAAY,GAAGlhC,OAAO,CAAC6M,MAAM,CAACjX,KAAK,CAAC,CAAC;UAC/CiX,MAAM,GAAGg0B,SAAS,CAACK,YAAY;QACjC;QAEA,IAAIlhC,OAAO,CAACq/B,IAAI,KAAK9jC,SAAS,EAAE;UAC9BslC,SAAS,CAACM,gBAAgB,GAAG/wB,UAAU;UACvCywB,SAAS,CAACO,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,CAACrhC,OAAO,CAACq/B,IAAI,CAAC;UACpEjvB,UAAU,GAAGywB,SAAS,CAACO,gBAAgB;QACzC,CAAC,MAAM,IAAIphC,OAAO,CAACoQ,UAAU,EAAE;UAC7BywB,SAAS,CAACM,gBAAgB,GAAG/wB,UAAU;UACvCywB,SAAS,CAACO,gBAAgB,GAAGphC,OAAO,CAACoQ,UAAU;UAC/CA,UAAU,GAAGywB,SAAS,CAACO,gBAAgB;QACzC;QAEA,IAAIphC,OAAO,CAACwV,QAAQ,KAAKja,SAAS,EAAE;UAClCslC,SAAS,CAACS,cAAc,GAAG9rB,QAAQ;UACnC,IAAMkE,KAAK,GACT,IAAAtK,YAAM,EAACpP,OAAO,CAACwV,QAAQ,GAAGA,QAAQ,GAAGjO,IAAI,CAAC0H,EAAE,EAAE,CAAC,GAAG1H,IAAI,CAAC0H,EAAE,CAAC,GAAG1H,IAAI,CAAC0H,EAAE;UACtE4xB,SAAS,CAACU,cAAc,GAAG/rB,QAAQ,GAAGkE,KAAK;UAC3ClE,QAAQ,GAAGqrB,SAAS,CAACU,cAAc;QACrC;;QAEA;QACA,IAAIC,eAAe,CAACX,SAAS,CAAC,EAAE;UAC9BA,SAAS,CAACC,QAAQ,GAAG,IAAI;UACzB;QACF,CAAC,MAAM;UACL7pB,KAAK,IAAI4pB,SAAS,CAACE,QAAQ;QAC7B;QACAH,MAAM,CAAClmC,IAAI,CAACmmC,SAAS,CAAC;MACxB;MACA,IAAI,CAAC3D,WAAW,CAACxiC,IAAI,CAACkmC,MAAM,CAAC;MAC7B,IAAI,CAACa,OAAO,CAACC,iBAAQ,CAACv0B,SAAS,EAAE,CAAC,CAAC;MACnC,IAAI,CAACw0B,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhwC,GAAA;IAAAC,KAAA,EAKA,SAAAwuC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACnD,MAAM,CAACyE,iBAAQ,CAACv0B,SAAS,CAAC,GAAG,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxb,GAAA;IAAAC,KAAA,EAKA,SAAAgwC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC3E,MAAM,CAACyE,iBAAQ,CAACt0B,WAAW,CAAC,GAAG,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;EAHE;IAAAzb,GAAA;IAAAC,KAAA,EAIA,SAAAiwC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACJ,OAAO,CAACC,iBAAQ,CAACv0B,SAAS,EAAE,CAAC,IAAI,CAAC8vB,MAAM,CAACyE,iBAAQ,CAACv0B,SAAS,CAAC,CAAC;MAClE,IAAI2hB,MAAM;MACV,KAAK,IAAI57B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAACgiC,WAAW,CAAC1qC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACzD,IAAM0tC,MAAM,GAAG,IAAI,CAAC1D,WAAW,CAAChqC,CAAC,CAAC;QAClC,IAAI0tC,MAAM,CAAC,CAAC,CAAC,CAACnsB,QAAQ,EAAE;UACtBgsB,iBAAiB,CAACG,MAAM,CAAC,CAAC,CAAC,CAACnsB,QAAQ,EAAE,KAAK,CAAC;QAC9C;QACA,IAAI,CAACqa,MAAM,EAAE;UACX,KAAK,IAAIpgB,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG0jB,MAAM,CAACpuC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;YAC/C,IAAMmyB,SAAS,GAAGD,MAAM,CAAClyB,CAAC,CAAC;YAC3B,IAAI,CAACmyB,SAAS,CAACC,QAAQ,EAAE;cACvBhS,MAAM,GAAG+R,SAAS,CAAC/R,MAAM;cACzB;YACF;UACF;QACF;MACF;MACA,IAAI,CAACoO,WAAW,CAAC1qC,MAAM,GAAG,CAAC;MAC3B,IAAI,CAACorC,aAAa,GAAG9O,MAAM;MAC3B,IAAI,CAAC2O,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,eAAe,GAAGlO,GAAG;MAC1B,IAAI,CAACmO,aAAa,GAAGnO,GAAG;IAC1B;;IAEA;AACF;AACA;EAFE;IAAA79B,GAAA;IAAAC,KAAA,EAGA,SAAA+vC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACxE,mBAAmB,KAAK5hC,SAAS,EAAE;QAC1CumC,oBAAoB,CAAC,IAAI,CAAC3E,mBAAmB,CAAC;QAC9C,IAAI,CAACA,mBAAmB,GAAG5hC,SAAS;MACtC;MACA,IAAI,CAAC,IAAI,CAAC6kC,YAAY,CAAC,CAAC,EAAE;QACxB;MACF;MACA,IAAMO,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,IAAIoB,IAAI,GAAG,KAAK;MAChB,KAAK,IAAI7uC,CAAC,GAAG,IAAI,CAACgqC,WAAW,CAAC1qC,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACrD,IAAM0tC,MAAM,GAAG,IAAI,CAAC1D,WAAW,CAAChqC,CAAC,CAAC;QAClC,IAAI8uC,cAAc,GAAG,IAAI;QACzB,KAAK,IAAItzB,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG0jB,MAAM,CAACpuC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;UAC/C,IAAMmyB,SAAS,GAAGD,MAAM,CAAClyB,CAAC,CAAC;UAC3B,IAAImyB,SAAS,CAACC,QAAQ,EAAE;YACtB;UACF;UACA,IAAMmB,OAAO,GAAGtB,GAAG,GAAGE,SAAS,CAAC5pB,KAAK;UACrC,IAAIirB,QAAQ,GACVrB,SAAS,CAACE,QAAQ,GAAG,CAAC,GAAGkB,OAAO,GAAGpB,SAAS,CAACE,QAAQ,GAAG,CAAC;UAC3D,IAAImB,QAAQ,IAAI,CAAC,EAAE;YACjBrB,SAAS,CAACC,QAAQ,GAAG,IAAI;YACzBoB,QAAQ,GAAG,CAAC;UACd,CAAC,MAAM;YACLF,cAAc,GAAG,KAAK;UACxB;UACA,IAAMG,QAAQ,GAAGtB,SAAS,CAACG,MAAM,CAACkB,QAAQ,CAAC;UAC3C,IAAIrB,SAAS,CAACI,YAAY,EAAE;YAC1B,IAAMrrB,EAAE,GAAGirB,SAAS,CAACI,YAAY,CAAC,CAAC,CAAC;YACpC,IAAMprB,EAAE,GAAGgrB,SAAS,CAACI,YAAY,CAAC,CAAC,CAAC;YACpC,IAAMnzB,EAAE,GAAG+yB,SAAS,CAACK,YAAY,CAAC,CAAC,CAAC;YACpC,IAAMnzB,EAAE,GAAG8yB,SAAS,CAACK,YAAY,CAAC,CAAC,CAAC;YACpC,IAAI,CAACzD,WAAW,GAAGoD,SAAS,CAACK,YAAY;YACzC,IAAMtzB,CAAC,GAAGgI,EAAE,GAAGusB,QAAQ,IAAIr0B,EAAE,GAAG8H,EAAE,CAAC;YACnC,IAAM/H,CAAC,GAAGgI,EAAE,GAAGssB,QAAQ,IAAIp0B,EAAE,GAAG8H,EAAE,CAAC;YACnC,IAAI,CAACynB,aAAa,GAAG,CAAC1vB,CAAC,EAAEC,CAAC,CAAC;UAC7B;UACA,IAAIgzB,SAAS,CAACM,gBAAgB,IAAIN,SAAS,CAACO,gBAAgB,EAAE;YAC5D,IAAMhxB,UAAU,GACd+xB,QAAQ,KAAK,CAAC,GACVtB,SAAS,CAACO,gBAAgB,GAC1BP,SAAS,CAACM,gBAAgB,GAC1BgB,QAAQ,IACLtB,SAAS,CAACO,gBAAgB,GAAGP,SAAS,CAACM,gBAAgB,CAAC;YACjE,IAAIN,SAAS,CAAC/R,MAAM,EAAE;cACpB,IAAMze,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC,IAAI,CAACpC,WAAW,CAAC,CAAC,CAAC;cACtD,IAAMqC,qBAAqB,GAAG,IAAI,CAACpD,YAAY,CAAC7uB,UAAU,CACxDA,UAAU,EACV,CAAC,EACDC,IAAI,EACJ,IACF,CAAC;cACD,IAAI,CAACitB,aAAa,GAAG,IAAI,CAACgF,mBAAmB,CAC3CD,qBAAqB,EACrBxB,SAAS,CAAC/R,MACZ,CAAC;YACH;YACA,IAAI,CAAC4O,eAAe,GAAGmD,SAAS,CAACO,gBAAgB;YACjD,IAAI,CAAC7D,iBAAiB,GAAGntB,UAAU;YACnC,IAAI,CAACmyB,iBAAiB,CAAC,IAAI,CAAC;UAC9B;UACA,IACE1B,SAAS,CAACS,cAAc,KAAK/lC,SAAS,IACtCslC,SAAS,CAACU,cAAc,KAAKhmC,SAAS,EACtC;YACA,IAAMia,QAAQ,GACZ2sB,QAAQ,KAAK,CAAC,GACV,IAAA/yB,YAAM,EAACyxB,SAAS,CAACU,cAAc,GAAGh6B,IAAI,CAAC0H,EAAE,EAAE,CAAC,GAAG1H,IAAI,CAAC0H,EAAE,CAAC,GACvD1H,IAAI,CAAC0H,EAAE,GACP4xB,SAAS,CAACS,cAAc,GACxBa,QAAQ,IACLtB,SAAS,CAACU,cAAc,GAAGV,SAAS,CAACS,cAAc,CAAC;YAC7D,IAAIT,SAAS,CAAC/R,MAAM,EAAE;cACpB,IAAM0T,mBAAmB,GAAG,IAAI,CAACvD,YAAY,CAACzpB,QAAQ,CACpDA,QAAQ,EACR,IACF,CAAC;cACD,IAAI,CAAC8nB,aAAa,GAAG,IAAI,CAACmF,qBAAqB,CAC7CD,mBAAmB,EACnB3B,SAAS,CAAC/R,MACZ,CAAC;YACH;YACA,IAAI,CAAC6O,aAAa,GAAGkD,SAAS,CAACU,cAAc;YAC7C,IAAI,CAAC/D,eAAe,GAAGhoB,QAAQ;UACjC;UACA,IAAI,CAAC+sB,iBAAiB,CAAC,IAAI,CAAC;UAC5BR,IAAI,GAAG,IAAI;UACX,IAAI,CAAClB,SAAS,CAACC,QAAQ,EAAE;YACvB;UACF;QACF;QACA,IAAIkB,cAAc,EAAE;UAClB,IAAI,CAAC9E,WAAW,CAAChqC,CAAC,CAAC,GAAG,IAAI;UAC1B,IAAI,CAACuuC,OAAO,CAACC,iBAAQ,CAACv0B,SAAS,EAAE,CAAC,CAAC,CAAC;UACpC,IAAI,CAACswB,WAAW,GAAG,IAAI;UACvB,IAAI,CAACC,eAAe,GAAGlO,GAAG;UAC1B,IAAI,CAACmO,aAAa,GAAGnO,GAAG;UACxB,IAAM/a,QAAQ,GAAGmsB,MAAM,CAAC,CAAC,CAAC,CAACnsB,QAAQ;UACnC,IAAIA,QAAQ,EAAE;YACZgsB,iBAAiB,CAAChsB,QAAQ,EAAE,IAAI,CAAC;UACnC;QACF;MACF;MACA;MACA,IAAI,CAACyoB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACwF,MAAM,CAACrpC,OAAO,CAAC;MACnD,IAAI0oC,IAAI,IAAI,IAAI,CAAC5E,mBAAmB,KAAK5hC,SAAS,EAAE;QAClD,IAAI,CAAC4hC,mBAAmB,GAAGwF,qBAAqB,CAC9C,IAAI,CAAChB,iBAAiB,CAACloC,IAAI,CAAC,IAAI,CAClC,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA9H,GAAA;IAAAC,KAAA,EAKA,SAAA6wC,qBAAqBA,CAACjtB,QAAQ,EAAEsZ,MAAM,EAAE;MACtC,IAAIjiB,MAAM;MACV,IAAM+1B,aAAa,GAAG,IAAI,CAACpD,iBAAiB,CAAC,CAAC;MAC9C,IAAIoD,aAAa,KAAKrnC,SAAS,EAAE;QAC/BsR,MAAM,GAAG,CAAC+1B,aAAa,CAAC,CAAC,CAAC,GAAG9T,MAAM,CAAC,CAAC,CAAC,EAAE8T,aAAa,CAAC,CAAC,CAAC,GAAG9T,MAAM,CAAC,CAAC,CAAC,CAAC;QACrE,IAAA+T,kBAAgB,EAACh2B,MAAM,EAAE2I,QAAQ,GAAG,IAAI,CAACwqB,WAAW,CAAC,CAAC,CAAC;QACvD,IAAA8C,eAAa,EAACj2B,MAAM,EAAEiiB,MAAM,CAAC;MAC/B;MACA,OAAOjiB,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlb,GAAA;IAAAC,KAAA,EAKA,SAAA0wC,mBAAmBA,CAAClyB,UAAU,EAAE0e,MAAM,EAAE;MACtC,IAAIjiB,MAAM;MACV,IAAM+1B,aAAa,GAAG,IAAI,CAACpD,iBAAiB,CAAC,CAAC;MAC9C,IAAMuD,iBAAiB,GAAG,IAAI,CAACrD,aAAa,CAAC,CAAC;MAC9C,IAAIkD,aAAa,KAAKrnC,SAAS,IAAIwnC,iBAAiB,KAAKxnC,SAAS,EAAE;QAClE,IAAMqS,CAAC,GACLkhB,MAAM,CAAC,CAAC,CAAC,GACR1e,UAAU,IAAI0e,MAAM,CAAC,CAAC,CAAC,GAAG8T,aAAa,CAAC,CAAC,CAAC,CAAC,GAAIG,iBAAiB;QACnE,IAAMl1B,CAAC,GACLihB,MAAM,CAAC,CAAC,CAAC,GACR1e,UAAU,IAAI0e,MAAM,CAAC,CAAC,CAAC,GAAG8T,aAAa,CAAC,CAAC,CAAC,CAAC,GAAIG,iBAAiB;QACnEl2B,MAAM,GAAG,CAACe,CAAC,EAAEC,CAAC,CAAC;MACjB;MACA,OAAOhB,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlb,GAAA;IAAAC,KAAA,EAMA,SAAAwwC,gBAAgBA,CAAC5sB,QAAQ,EAAE;MACzB,IAAMnF,IAAI,GAAG,IAAI,CAACgtB,aAAa;MAC/B,IAAI7nB,QAAQ,EAAE;QACZ,IAAMwtB,CAAC,GAAG3yB,IAAI,CAAC,CAAC,CAAC;QACjB,IAAM4yB,CAAC,GAAG5yB,IAAI,CAAC,CAAC,CAAC;QACjB,OAAO,CACL9I,IAAI,CAACC,GAAG,CAACw7B,CAAC,GAAGz7B,IAAI,CAAC0O,GAAG,CAACT,QAAQ,CAAC,CAAC,GAAGjO,IAAI,CAACC,GAAG,CAACy7B,CAAC,GAAG17B,IAAI,CAAC4O,GAAG,CAACX,QAAQ,CAAC,CAAC,EACnEjO,IAAI,CAACC,GAAG,CAACw7B,CAAC,GAAGz7B,IAAI,CAAC4O,GAAG,CAACX,QAAQ,CAAC,CAAC,GAAGjO,IAAI,CAACC,GAAG,CAACy7B,CAAC,GAAG17B,IAAI,CAAC0O,GAAG,CAACT,QAAQ,CAAC,CAAC,CACpE;MACH;MACA,OAAOnF,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1e,GAAA;IAAAC,KAAA,EAOA,SAAAsxC,eAAeA,CAAC7yB,IAAI,EAAE;MACpB,IAAI,CAACgtB,aAAa,GAAG1pC,KAAK,CAACC,OAAO,CAACyc,IAAI,CAAC,GAAGA,IAAI,CAACza,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;MACpE,IAAI,CAAC,IAAI,CAACwqC,YAAY,CAAC,CAAC,EAAE;QACxB,IAAI,CAACC,kBAAkB,CAAC,CAAC,CAAC;MAC5B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1uC,GAAA;IAAAC,KAAA,EAMA,SAAAujB,SAASA,CAAA,EAAG;MACV,IAAMtI,MAAM,GAAG,IAAI,CAAC2yB,iBAAiB,CAAC,CAAC;MACvC,IAAI,CAAC3yB,MAAM,EAAE;QACX,OAAOA,MAAM;MACf;MACA,OAAO,IAAAif,sBAAgB,EAACjf,MAAM,EAAE,IAAI,CAAC+jB,aAAa,CAAC,CAAC,CAAC;IACvD;;IAEA;AACF;AACA;AACA;EAHE;IAAAj/B,GAAA;IAAAC,KAAA,EAIA,SAAA4tC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,6DACL,IAAI,CAACnhC,GAAG,CAAC0/B,qBAAY,CAAC1wB,MAAM,CAAC;IAEjC;;IAEA;AACF;AACA;EAFE;IAAA1b,GAAA;IAAAC,KAAA,EAGA,SAAAuxC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAClE,YAAY;IAC1B;;IAEA;AACF;AACA;EAFE;IAAAttC,GAAA;IAAAC,KAAA,EAGA,SAAAwxC,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAAC/kC,GAAG,CAAC,qBAAqB,CAAC;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAA1M,GAAA;IAAAC,KAAA,EAIA,SAAAyxC,QAAQA,CAACC,KAAK,EAAE;MACd,IAAIA,KAAK,KAAK/nC,SAAS,EAAE;QACvB+nC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACrG,MAAM,CAAC,CAAC,CAAC;QACzBqG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACrG,MAAM,CAAC,CAAC,CAAC;QACzB,OAAOqG,KAAK;MACd;MACA,OAAO,IAAI,CAACrG,MAAM,CAACrnC,KAAK,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAjE,GAAA;IAAAC,KAAA,EAUA,SAAA2xC,eAAeA,CAAClzB,IAAI,EAAE;MACpB,IAAMJ,MAAM,GAAG,IAAI,CAACuzB,uBAAuB,CAACnzB,IAAI,CAAC;MACjD,OAAO,IAAA4b,kBAAY,EAAChc,MAAM,EAAE,IAAI,CAAC2gB,aAAa,CAAC,CAAC,CAAC;IACnD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAj/B,GAAA;IAAAC,KAAA,EAKA,SAAA4xC,uBAAuBA,CAACnzB,IAAI,EAAE;MAC5BA,IAAI,GAAGA,IAAI,IAAI,IAAI,CAACozB,4BAA4B,CAAC,CAAC;MAClD,IAAM52B,MAAM,GAAG;MACb,IAAI,CAAC2yB,iBAAiB,CAAC,CACxB;MACD,IAAAh3B,eAAM,EAACqE,MAAM,EAAE,gCAAgC,CAAC;MAChD,IAAMuD,UAAU,GAAG,sBAAwB,IAAI,CAACsvB,aAAa,CAAC,CAAE;MAChE,IAAAl3B,eAAM,EAAC4H,UAAU,KAAK7U,SAAS,EAAE,oCAAoC,CAAC;MACtE,IAAMia,QAAQ,GAAG,sBAAwB,IAAI,CAACwqB,WAAW,CAAC,CAAE;MAC5D,IAAAx3B,eAAM,EAACgN,QAAQ,KAAKja,SAAS,EAAE,kCAAkC,CAAC;MAElE,OAAO,IAAAga,0BAAiB,EAAC1I,MAAM,EAAEuD,UAAU,EAAEoF,QAAQ,EAAEnF,IAAI,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1e,GAAA;IAAAC,KAAA,EAKA,SAAA8xC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACxF,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAvsC,GAAA;IAAAC,KAAA,EAKA,SAAA+xC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACxF,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxsC,GAAA;IAAAC,KAAA,EAKA,SAAAgyC,UAAUA,CAAA,EAAG;MACX,OAAO,qBACL,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAAC1F,cAAc,CAAC;IAElD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxsC,GAAA;IAAAC,KAAA,EAKA,SAAAkyC,UAAUA,CAACzE,IAAI,EAAE;MACf,IAAI,CAACxB,aAAa,CAAC,IAAI,CAACgC,kBAAkB,CAAC;QAACkE,OAAO,EAAE1E;MAAI,CAAC,CAAC,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1tC,GAAA;IAAAC,KAAA,EAKA,SAAAoyC,UAAUA,CAAA,EAAG;MACX,OAAO,qBACL,IAAI,CAACH,oBAAoB,CAAC,IAAI,CAAC3F,cAAc,CAAC;IAElD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAvsC,GAAA;IAAAC,KAAA,EAKA,SAAAqyC,UAAUA,CAAC5E,IAAI,EAAE;MACf,IAAI,CAACxB,aAAa,CAAC,IAAI,CAACgC,kBAAkB,CAAC;QAACnB,OAAO,EAAEW;MAAI,CAAC,CAAC,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1tC,GAAA;IAAAC,KAAA,EAKA,SAAAsyC,sBAAsBA,CAACC,OAAO,EAAE;MAC9B,IAAI,CAACtG,aAAa,CAAC,IAAI,CAACgC,kBAAkB,CAAC;QAACuE,mBAAmB,EAAED;MAAO,CAAC,CAAC,CAAC;IAC7E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxyC,GAAA;IAAAC,KAAA,EAKA,SAAAg/B,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACwM,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzrC,GAAA;IAAAC,KAAA,EAMA,SAAA8tC,aAAaA,CAAA,EAAG;MACd,OAAO,+BAAiC,IAAI,CAACrhC,GAAG,CAAC0/B,qBAAY,CAACzwB,UAAU,CAAC;IAC3E;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3b,GAAA;IAAAC,KAAA,EAMA,SAAAyyC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC/F,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3sC,GAAA;IAAAC,KAAA,EAQA,SAAA0yC,sBAAsBA,CAACr0B,MAAM,EAAEI,IAAI,EAAE;MACnC,OAAO,IAAI,CAACk0B,8BAA8B,CACxC,IAAArY,oBAAc,EAACjc,MAAM,EAAE,IAAI,CAAC2gB,aAAa,CAAC,CAAC,CAAC,EAC5CvgB,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1e,GAAA;IAAAC,KAAA,EAOA,SAAA2yC,8BAA8BA,CAACt0B,MAAM,EAAEI,IAAI,EAAE;MAC3CA,IAAI,GAAGA,IAAI,IAAI,IAAI,CAACozB,4BAA4B,CAAC,CAAC;MAClD,IAAMzI,WAAW,GAAG,IAAA/lB,iBAAQ,EAAChF,MAAM,CAAC,GAAGI,IAAI,CAAC,CAAC,CAAC;MAC9C,IAAM4qB,WAAW,GAAG,IAAA/lB,kBAAS,EAACjF,MAAM,CAAC,GAAGI,IAAI,CAAC,CAAC,CAAC;MAC/C,OAAO9I,IAAI,CAACmG,GAAG,CAACstB,WAAW,EAAEC,WAAW,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtpC,GAAA;IAAAC,KAAA,EAMA,SAAA4yC,6BAA6BA,CAAC5I,KAAK,EAAE;MACnCA,KAAK,GAAGA,KAAK,IAAI,CAAC;MAClB,IAAMT,aAAa,GAAG,IAAI,CAACsJ,wBAAwB,CAAC,IAAI,CAACvG,cAAc,CAAC;MACxE,IAAM9C,aAAa,GAAG,IAAI,CAAC+C,cAAc;MACzC,IAAMzwB,GAAG,GAAGnG,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAGC,aAAa,CAAC,GAAG7zB,IAAI,CAAC0F,GAAG,CAAC2uB,KAAK,CAAC;MACrE;QACE;AACN;AACA;AACA;QACM,UAAUhqC,KAAK,EAAE;UACf,IAAMwe,UAAU,GAAG+qB,aAAa,GAAG5zB,IAAI,CAACkI,GAAG,CAACmsB,KAAK,EAAEhqC,KAAK,GAAG8b,GAAG,CAAC;UAC/D,OAAO0C,UAAU;QACnB;MAAC;IAEL;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAze,GAAA;IAAAC,KAAA,EAMA,SAAAouC,WAAWA,CAAA,EAAG;MACZ,OAAO,qBAAuB,IAAI,CAAC3hC,GAAG,CAAC0/B,qBAAY,CAACxwB,QAAQ,CAAC;IAC/D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5b,GAAA;IAAAC,KAAA,EAMA,SAAA8yC,6BAA6BA,CAAC9I,KAAK,EAAE;MACnC,IAAM+I,QAAQ,GAAGp9B,IAAI,CAAC0F,GAAG,CAAC2uB,KAAK,IAAI,CAAC,CAAC;MACrC,IAAMT,aAAa,GAAG,IAAI,CAACsJ,wBAAwB,CAAC,IAAI,CAACvG,cAAc,CAAC;MACxE,IAAM9C,aAAa,GAAG,IAAI,CAAC+C,cAAc;MACzC,IAAMzwB,GAAG,GAAGnG,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAGC,aAAa,CAAC,GAAGuJ,QAAQ;MAC9D;QACE;AACN;AACA;AACA;QACM,UAAUv0B,UAAU,EAAE;UACpB,IAAMxe,KAAK,GAAG2V,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAG/qB,UAAU,CAAC,GAAGu0B,QAAQ,GAAGj3B,GAAG;UACnE,OAAO9b,KAAK;QACd;MAAC;IAEL;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAD,GAAA;IAAAC,KAAA,EAMA,SAAA6xC,4BAA4BA,CAACjuB,QAAQ,EAAE;MACrC,IAAInF,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC5sB,QAAQ,CAAC;MAC1C,IAAMgpB,OAAO,GAAG,IAAI,CAACD,QAAQ;MAC7B,IAAIC,OAAO,EAAE;QACXnuB,IAAI,GAAG,CACLA,IAAI,CAAC,CAAC,CAAC,GAAGmuB,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,EACjCnuB,IAAI,CAAC,CAAC,CAAC,GAAGmuB,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,CAClC;MACH;MACA,OAAOnuB,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAA1e,GAAA;IAAAC,KAAA,EAGA,SAAAoa,QAAQA,CAAA,EAAG;MACT,IAAM+L,UAAU,GAAG,IAAI,CAAC6Y,aAAa,CAAC,CAAC;MACvC,IAAMxgB,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC,CAAC;MACvC,IAAMlqB,QAAQ,GAAG,IAAI,CAACwqB,WAAW,CAAC,CAAC;MACnC,IAAInzB,MAAM,GAAG;MACX,IAAI,CAAC2yB,iBAAiB,CAAC,CACxB;MACD,IAAMhB,OAAO,GAAG,IAAI,CAACD,QAAQ;MAC7B,IAAIC,OAAO,EAAE;QACX,IAAMoG,WAAW,GAAG,IAAI,CAACnB,4BAA4B,CAAC,CAAC;QACvD52B,MAAM,GAAGg4B,iBAAiB,CACxBh4B,MAAM,EACN,IAAI,CAACu1B,gBAAgB,CAAC,CAAC,EACvB,CAACwC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGpG,OAAO,CAAC,CAAC,CAAC,EAAEoG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGpG,OAAO,CAAC,CAAC,CAAC,CAAC,EAClEpuB,UAAU,EACVoF,QACF,CAAC;MACH;MACA,OAAO;QACL3I,MAAM,EAAEA,MAAM,CAACjX,KAAK,CAAC,CAAC,CAAC;QACvBmiB,UAAU,EAAEA,UAAU,KAAKxc,SAAS,GAAGwc,UAAU,GAAG,IAAI;QACxD3H,UAAU,EAAEA,UAAU;QACtB00B,UAAU,EAAE,IAAI,CAACrH,WAAW;QAC5BsH,cAAc,EAAE,IAAI,CAACrH,eAAe;QACpCsH,YAAY,EAAE,IAAI,CAACrH,aAAa;QAChCnoB,QAAQ,EAAEA,QAAQ;QAClB6pB,IAAI,EAAE,IAAI,CAACU,OAAO,CAAC;MACrB,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAApuC,GAAA;IAAAC,KAAA,EAGA,SAAAqzC,qBAAqBA,CAAA,EAAG;MACtB,OAAO;QACLn4B,SAAS,EAAE,IAAI,CAACd,QAAQ,CAAC,CAAC;QAC1BiE,MAAM,EAAE,IAAI,CAACszB,eAAe,CAAC;MAC/B,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5xC,GAAA;IAAAC,KAAA,EAOA,SAAAmuC,OAAOA,CAAA,EAAG;MACR,IAAIV,IAAI;MACR,IAAMjvB,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC,CAAC;MACvC,IAAItvB,UAAU,KAAK7U,SAAS,EAAE;QAC5B8jC,IAAI,GAAG,IAAI,CAACwE,oBAAoB,CAACzzB,UAAU,CAAC;MAC9C;MACA,OAAOivB,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1tC,GAAA;IAAAC,KAAA,EAMA,SAAAiyC,oBAAoBA,CAACzzB,UAAU,EAAE;MAC/B,IAAI2D,MAAM,GAAG,IAAI,CAAC0qB,QAAQ,IAAI,CAAC;MAC/B,IAAI/wB,GAAG,EAAE2wB,UAAU;MACnB,IAAI,IAAI,CAACC,YAAY,EAAE;QACrB,IAAM4G,OAAO,GAAG,IAAAryC,wBAAiB,EAAC,IAAI,CAACyrC,YAAY,EAAEluB,UAAU,EAAE,CAAC,CAAC;QACnE2D,MAAM,GAAGmxB,OAAO;QAChBx3B,GAAG,GAAG,IAAI,CAAC4wB,YAAY,CAAC4G,OAAO,CAAC;QAChC,IAAIA,OAAO,IAAI,IAAI,CAAC5G,YAAY,CAAC9rC,MAAM,GAAG,CAAC,EAAE;UAC3C6rC,UAAU,GAAG,CAAC;QAChB,CAAC,MAAM;UACLA,UAAU,GAAG3wB,GAAG,GAAG,IAAI,CAAC4wB,YAAY,CAAC4G,OAAO,GAAG,CAAC,CAAC;QACnD;MACF,CAAC,MAAM;QACLx3B,GAAG,GAAG,IAAI,CAACwwB,cAAc;QACzBG,UAAU,GAAG,IAAI,CAACD,WAAW;MAC/B;MACA,OAAOrqB,MAAM,GAAGxM,IAAI,CAAC0F,GAAG,CAACS,GAAG,GAAG0C,UAAU,CAAC,GAAG7I,IAAI,CAAC0F,GAAG,CAACoxB,UAAU,CAAC;IACnE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1sC,GAAA;IAAAC,KAAA,EAMA,SAAAyvC,oBAAoBA,CAAChC,IAAI,EAAE;MAAA,IAAA8F,kBAAA;MACzB,KAAAA,kBAAA,GAAI,IAAI,CAAC7G,YAAY,cAAA6G,kBAAA,eAAjBA,kBAAA,CAAmB3yC,MAAM,EAAE;QAC7B,IAAI,IAAI,CAAC8rC,YAAY,CAAC9rC,MAAM,KAAK,CAAC,EAAE;UAClC,OAAO,IAAI,CAAC8rC,YAAY,CAAC,CAAC,CAAC;QAC7B;QACA,IAAM8G,SAAS,GAAG,IAAA53B,WAAK,EACrBjG,IAAI,CAACoI,KAAK,CAAC0vB,IAAI,CAAC,EAChB,CAAC,EACD,IAAI,CAACf,YAAY,CAAC9rC,MAAM,GAAG,CAC7B,CAAC;QACD,IAAM6rC,UAAU,GACd,IAAI,CAACC,YAAY,CAAC8G,SAAS,CAAC,GAAG,IAAI,CAAC9G,YAAY,CAAC8G,SAAS,GAAG,CAAC,CAAC;QACjE,OACE,IAAI,CAAC9G,YAAY,CAAC8G,SAAS,CAAC,GAC5B79B,IAAI,CAACkI,GAAG,CAAC4uB,UAAU,EAAE,IAAA7wB,WAAK,EAAC6xB,IAAI,GAAG+F,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAEvD;MACA,OACE,IAAI,CAAClH,cAAc,GAAG32B,IAAI,CAACkI,GAAG,CAAC,IAAI,CAAC2uB,WAAW,EAAEiB,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAC;IAE1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA9sC,GAAA;IAAAC,KAAA,EAUA,SAAAyzC,GAAGA,CAACC,gBAAgB,EAAEtlC,OAAO,EAAE;MAC7B;MACA,IAAI8c,QAAQ;MACZ,IAAAtU,eAAM,EACJ7U,KAAK,CAACC,OAAO,CAAC0xC,gBAAgB,CAAC,IAC7B,QAAQ,gBAAkBA,gBAAgB,CAAEtV,qBAAqB,CAAC,KAChE,UAAU,EACd,mDACF,CAAC;MACD,IAAIr8B,KAAK,CAACC,OAAO,CAAC0xC,gBAAgB,CAAC,EAAE;QACnC,IAAA98B,eAAM,EACJ,CAAC,IAAA7R,gBAAO,EAAC2uC,gBAAgB,CAAC,EAC1B,gDACF,CAAC;QACD,IAAMr1B,MAAM,GAAG,IAAAic,oBAAc,EAACoZ,gBAAgB,EAAE,IAAI,CAAC1U,aAAa,CAAC,CAAC,CAAC;QACrE9T,QAAQ,GAAG,IAAAyoB,mBAAiB,EAACt1B,MAAM,CAAC;MACtC,CAAC,MAAM,IAAIq1B,gBAAgB,CAACvoB,OAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;QAClD,IAAM9M,OAAM,GAAG,IAAAic,oBAAc,EAC3BoZ,gBAAgB,CAACrtB,SAAS,CAAC,CAAC,EAC5B,IAAI,CAAC2Y,aAAa,CAAC,CACrB,CAAC;QACD9T,QAAQ,GAAG,IAAAyoB,mBAAiB,EAACt1B,OAAM,CAAC;QACpC6M,QAAQ,CAAC5B,MAAM,CAAC,IAAI,CAAC8kB,WAAW,CAAC,CAAC,EAAE,IAAA7qB,kBAAS,EAAClF,OAAM,CAAC,CAAC;MACxD,CAAC,MAAM;QACL,IAAMwb,cAAc,GAAG,IAAAG,uBAAiB,EAAC,CAAC;QAC1C,IAAIH,cAAc,EAAE;UAClB3O,QAAQ,GAAG;UACTwoB,gBAAgB,CACbvyB,KAAK,CAAC,CAAC,CACPiK,SAAS,CAACyO,cAAc,EAAE,IAAI,CAACmF,aAAa,CAAC,CAAC,CAClD;QACH,CAAC,MAAM;UACL9T,QAAQ,GAAGwoB,gBAAgB;QAC7B;MACF;MAEA,IAAI,CAACE,WAAW,CAAC1oB,QAAQ,EAAE9c,OAAO,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArO,GAAA;IAAAC,KAAA,EAKA,SAAA6zC,wBAAwBA,CAAC3oB,QAAQ,EAAE;MACjC,IAAMtH,QAAQ,GAAG,IAAI,CAACwqB,WAAW,CAAC,CAAC;MACnC,IAAM5kB,QAAQ,GAAG7T,IAAI,CAAC0O,GAAG,CAACT,QAAQ,CAAC;MACnC,IAAM6F,QAAQ,GAAG9T,IAAI,CAAC4O,GAAG,CAAC,CAACX,QAAQ,CAAC;MACpC,IAAMyH,MAAM,GAAGH,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;MAC5C,IAAMxd,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;MACnC,IAAI4T,OAAO,GAAG,CAAC98B,QAAQ;MACvB,IAAI+8B,OAAO,GAAG,CAAC/8B,QAAQ;MACvB,IAAIg9B,OAAO,GAAG,CAACh9B,QAAQ;MACvB,IAAIi9B,OAAO,GAAG,CAACj9B,QAAQ;MACvB,KAAK,IAAI1V,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG+hB,MAAM,CAACzqB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI8gB,MAAM,EAAE;QACvD,IAAM8xB,IAAI,GAAG7oB,MAAM,CAAC/pB,CAAC,CAAC,GAAGkoB,QAAQ,GAAG6B,MAAM,CAAC/pB,CAAC,GAAG,CAAC,CAAC,GAAGmoB,QAAQ;QAC5D,IAAM0qB,IAAI,GAAG9oB,MAAM,CAAC/pB,CAAC,CAAC,GAAGmoB,QAAQ,GAAG4B,MAAM,CAAC/pB,CAAC,GAAG,CAAC,CAAC,GAAGkoB,QAAQ;QAC5DsqB,OAAO,GAAGn+B,IAAI,CAACkG,GAAG,CAACi4B,OAAO,EAAEI,IAAI,CAAC;QACjCH,OAAO,GAAGp+B,IAAI,CAACkG,GAAG,CAACk4B,OAAO,EAAEI,IAAI,CAAC;QACjCH,OAAO,GAAGr+B,IAAI,CAACmG,GAAG,CAACk4B,OAAO,EAAEE,IAAI,CAAC;QACjCD,OAAO,GAAGt+B,IAAI,CAACmG,GAAG,CAACm4B,OAAO,EAAEE,IAAI,CAAC;MACnC;MACA,OAAO,CAACL,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;EAHE;IAAAl0C,GAAA;IAAAC,KAAA,EAIA,SAAA4zC,WAAWA,CAAC1oB,QAAQ,EAAE9c,OAAO,EAAE;MAC7BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;MACvB,IAAIqQ,IAAI,GAAGrQ,OAAO,CAACqQ,IAAI;MACvB,IAAI,CAACA,IAAI,EAAE;QACTA,IAAI,GAAG,IAAI,CAACozB,4BAA4B,CAAC,CAAC;MAC5C;MACA,IAAMjF,OAAO,GACXx+B,OAAO,CAACw+B,OAAO,KAAKjjC,SAAS,GAAGyE,OAAO,CAACw+B,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChE,IAAM0G,OAAO,GAAGllC,OAAO,CAACklC,OAAO,KAAK3pC,SAAS,GAAGyE,OAAO,CAACklC,OAAO,GAAG,KAAK;MACvE,IAAI9J,aAAa;MACjB,IAAIp7B,OAAO,CAACo7B,aAAa,KAAK7/B,SAAS,EAAE;QACvC6/B,aAAa,GAAGp7B,OAAO,CAACo7B,aAAa;MACvC,CAAC,MAAM,IAAIp7B,OAAO,CAAC+jC,OAAO,KAAKxoC,SAAS,EAAE;QACxC6/B,aAAa,GAAG,IAAI,CAACiG,oBAAoB,CAACrhC,OAAO,CAAC+jC,OAAO,CAAC;MAC5D,CAAC,MAAM;QACL3I,aAAa,GAAG,CAAC;MACnB;MAEA,IAAM4K,aAAa,GAAG,IAAI,CAACP,wBAAwB,CAAC3oB,QAAQ,CAAC;;MAE7D;MACA,IAAI1M,UAAU,GAAG,IAAI,CAACm0B,8BAA8B,CAACyB,aAAa,EAAE,CAClE31B,IAAI,CAAC,CAAC,CAAC,GAAGmuB,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,EACjCnuB,IAAI,CAAC,CAAC,CAAC,GAAGmuB,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,CAClC,CAAC;MACFpuB,UAAU,GAAGqgB,KAAK,CAACrgB,UAAU,CAAC,GAC1BgrB,aAAa,GACb7zB,IAAI,CAACmG,GAAG,CAAC0C,UAAU,EAAEgrB,aAAa,CAAC;MACvChrB,UAAU,GAAG,IAAI,CAACq0B,wBAAwB,CAACr0B,UAAU,EAAE80B,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;;MAEvE;MACA,IAAM1vB,QAAQ,GAAG,IAAI,CAACwqB,WAAW,CAAC,CAAC;MACnC,IAAM3kB,QAAQ,GAAG9T,IAAI,CAAC4O,GAAG,CAACX,QAAQ,CAAC;MACnC,IAAM4F,QAAQ,GAAG7T,IAAI,CAAC0O,GAAG,CAACT,QAAQ,CAAC;MACnC,IAAMywB,SAAS,GAAG,IAAA9wB,kBAAS,EAAC6wB,aAAa,CAAC;MAC1CC,SAAS,CAAC,CAAC,CAAC,IAAK,CAACzH,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAIpuB,UAAU;MAC5D61B,SAAS,CAAC,CAAC,CAAC,IAAK,CAACzH,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAIpuB,UAAU;MAC5D,IAAM81B,OAAO,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG7qB,QAAQ,GAAG6qB,SAAS,CAAC,CAAC,CAAC,GAAG5qB,QAAQ;MACjE,IAAM8qB,OAAO,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG7qB,QAAQ,GAAG6qB,SAAS,CAAC,CAAC,CAAC,GAAG5qB,QAAQ;MACjE,IAAMxO,MAAM,GAAG,IAAI,CAACu5B,oBAAoB,CAAC,CAACF,OAAO,EAAEC,OAAO,CAAC,EAAE/1B,UAAU,CAAC;MACxE,IAAMqE,QAAQ,GAAGzU,OAAO,CAACyU,QAAQ,GAAGzU,OAAO,CAACyU,QAAQ,GAAGrf,eAAI;MAE3D,IAAI4K,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,EAAE;QAClC,IAAI,CAACglC,eAAe,CAClB;UACEnwB,UAAU,EAAEA,UAAU;UACtBvD,MAAM,EAAEA,MAAM;UACdk0B,QAAQ,EAAE/gC,OAAO,CAAC+gC,QAAQ;UAC1BC,MAAM,EAAEhhC,OAAO,CAACghC;QAClB,CAAC,EACDvsB,QACF,CAAC;MACH,CAAC,MAAM;QACL,IAAI,CAAC8oB,iBAAiB,GAAGntB,UAAU;QACnC,IAAI,CAACktB,aAAa,GAAGzwB,MAAM;QAC3B,IAAI,CAAC01B,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;QACnC9B,iBAAiB,CAAChsB,QAAQ,EAAE,IAAI,CAAC;MACnC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA9iB,GAAA;IAAAC,KAAA,EAOA,SAAAy0C,QAAQA,CAAC/jC,UAAU,EAAE+N,IAAI,EAAEi2B,QAAQ,EAAE;MACnC,IAAI,CAACC,gBAAgB,CACnB,IAAAxa,wBAAkB,EAACzpB,UAAU,EAAE,IAAI,CAACsuB,aAAa,CAAC,CAAC,CAAC,EACpDvgB,IAAI,EACJi2B,QACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA30C,GAAA;IAAAC,KAAA,EAKA,SAAA20C,gBAAgBA,CAACjkC,UAAU,EAAE+N,IAAI,EAAEi2B,QAAQ,EAAE;MAC3C,IAAI,CAACnH,iBAAiB,CACpB0F,iBAAiB,CACfviC,UAAU,EACV+N,IAAI,EACJi2B,QAAQ,EACR,IAAI,CAAC5G,aAAa,CAAC,CAAC,EACpB,IAAI,CAACM,WAAW,CAAC,CACnB,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAruC,GAAA;IAAAC,KAAA,EAQA,SAAA40C,oBAAoBA,CAAC35B,MAAM,EAAEuD,UAAU,EAAEoF,QAAQ,EAAEnF,IAAI,EAAE;MACvD,IAAIE,WAAW;MACf,IAAMiuB,OAAO,GAAG,IAAI,CAACD,QAAQ;MAC7B,IAAIC,OAAO,IAAI3xB,MAAM,EAAE;QACrB,IAAM+3B,WAAW,GAAG,IAAI,CAACnB,4BAA4B,CAAC,CAACjuB,QAAQ,CAAC;QAChE,IAAMixB,aAAa,GAAG5B,iBAAiB,CACrCh4B,MAAM,EACNwD,IAAI,EACJ,CAACu0B,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGpG,OAAO,CAAC,CAAC,CAAC,EAAEoG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGpG,OAAO,CAAC,CAAC,CAAC,CAAC,EAClEpuB,UAAU,EACVoF,QACF,CAAC;QACDjF,WAAW,GAAG,CACZ1D,MAAM,CAAC,CAAC,CAAC,GAAG45B,aAAa,CAAC,CAAC,CAAC,EAC5B55B,MAAM,CAAC,CAAC,CAAC,GAAG45B,aAAa,CAAC,CAAC,CAAC,CAC7B;MACH;MACA,OAAOl2B,WAAW;IACpB;;IAEA;AACF;AACA;EAFE;IAAA5e,GAAA;IAAAC,KAAA,EAGA,SAAAuuC,KAAKA,CAAA,EAAG;MACN,OAAO,CAAC,CAAC,IAAI,CAACX,iBAAiB,CAAC,CAAC,IAAI,IAAI,CAACE,aAAa,CAAC,CAAC,KAAKnkC,SAAS;IACzE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5J,GAAA;IAAAC,KAAA,EAKA,SAAA80C,YAAYA,CAACC,gBAAgB,EAAE;MAC7B,IAAM95B,MAAM,GAAG,IAAAif,sBAAgB,EAAC,IAAI,CAACwR,aAAa,EAAE,IAAI,CAAC1M,aAAa,CAAC,CAAC,CAAC;MACzE,IAAI,CAACgW,SAAS,CAAC,CACb/5B,MAAM,CAAC,CAAC,CAAC,GAAG85B,gBAAgB,CAAC,CAAC,CAAC,EAC/B95B,MAAM,CAAC,CAAC,CAAC,GAAG85B,gBAAgB,CAAC,CAAC,CAAC,CAChC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;EAHE;IAAAh1C,GAAA;IAAAC,KAAA,EAIA,SAAAi1C,oBAAoBA,CAACF,gBAAgB,EAAE;MACrC,IAAM95B,MAAM,GAAG,IAAI,CAACywB,aAAa;MACjC,IAAI,CAAC6B,iBAAiB,CAAC,CACrBtyB,MAAM,CAAC,CAAC,CAAC,GAAG85B,gBAAgB,CAAC,CAAC,CAAC,EAC/B95B,MAAM,CAAC,CAAC,CAAC,GAAG85B,gBAAgB,CAAC,CAAC,CAAC,CAChC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAh1C,GAAA;IAAAC,KAAA,EAOA,SAAAk1C,gBAAgBA,CAAC91B,KAAK,EAAE8d,MAAM,EAAE;MAC9BA,MAAM,GAAGA,MAAM,IAAI,IAAA/C,wBAAkB,EAAC+C,MAAM,EAAE,IAAI,CAAC8B,aAAa,CAAC,CAAC,CAAC;MACnE,IAAI,CAACmW,wBAAwB,CAAC/1B,KAAK,EAAE8d,MAAM,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAn9B,GAAA;IAAAC,KAAA,EAMA,SAAAm1C,wBAAwBA,CAAC/1B,KAAK,EAAE8d,MAAM,EAAE;MACtC,IAAMxe,QAAQ,GAAG,IAAI,CAAC8vB,YAAY,CAAC,CAAC,IAAI,IAAI,CAACwB,cAAc,CAAC,CAAC;MAC7D,IAAMvxB,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC,IAAI,CAACpC,WAAW,CAAC,CAAC,CAAC;MACtD,IAAMhE,aAAa,GAAG,IAAI,CAACiD,YAAY,CAAC7uB,UAAU,CAChD,IAAI,CAACmtB,iBAAiB,GAAGvsB,KAAK,EAC9B,CAAC,EACDX,IAAI,EACJC,QACF,CAAC;MAED,IAAIwe,MAAM,EAAE;QACV,IAAI,CAACwO,aAAa,GAAG,IAAI,CAACgF,mBAAmB,CAACtG,aAAa,EAAElN,MAAM,CAAC;MACtE;MAEA,IAAI,CAACyO,iBAAiB,IAAIvsB,KAAK;MAC/B,IAAI,CAACuxB,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5wC,GAAA;IAAAC,KAAA,EAOA,SAAAo1C,UAAUA,CAACttB,KAAK,EAAEoV,MAAM,EAAE;MACxB,IAAI,CAACgY,gBAAgB,CAACv/B,IAAI,CAACkI,GAAG,CAAC,IAAI,CAAC2uB,WAAW,EAAE,CAAC1kB,KAAK,CAAC,EAAEoV,MAAM,CAAC;IACnE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAn9B,GAAA;IAAAC,KAAA,EAOA,SAAAq1C,cAAcA,CAACvtB,KAAK,EAAEoV,MAAM,EAAE;MAC5B,IAAIA,MAAM,EAAE;QACVA,MAAM,GAAG,IAAA/C,wBAAkB,EAAC+C,MAAM,EAAE,IAAI,CAAC8B,aAAa,CAAC,CAAC,CAAC;MAC3D;MACA,IAAI,CAACsW,sBAAsB,CAACxtB,KAAK,EAAEoV,MAAM,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;EAHE;IAAAn9B,GAAA;IAAAC,KAAA,EAIA,SAAAs1C,sBAAsBA,CAACxtB,KAAK,EAAEoV,MAAM,EAAE;MACpC,IAAMxe,QAAQ,GAAG,IAAI,CAAC8vB,YAAY,CAAC,CAAC,IAAI,IAAI,CAACwB,cAAc,CAAC,CAAC;MAC7D,IAAMuF,WAAW,GAAG,IAAI,CAAClI,YAAY,CAACzpB,QAAQ,CAC5C,IAAI,CAACgoB,eAAe,GAAG9jB,KAAK,EAC5BpJ,QACF,CAAC;MACD,IAAIwe,MAAM,EAAE;QACV,IAAI,CAACwO,aAAa,GAAG,IAAI,CAACmF,qBAAqB,CAAC0E,WAAW,EAAErY,MAAM,CAAC;MACtE;MACA,IAAI,CAAC0O,eAAe,IAAI9jB,KAAK;MAC7B,IAAI,CAAC6oB,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5wC,GAAA;IAAAC,KAAA,EAMA,SAAAg1C,SAASA,CAAC/5B,MAAM,EAAE;MAChB,IAAI,CAACsyB,iBAAiB,CACpBtyB,MAAM,GAAG,IAAAkf,wBAAkB,EAAClf,MAAM,EAAE,IAAI,CAAC+jB,aAAa,CAAC,CAAC,CAAC,GAAG/jB,MAC9D,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAlb,GAAA;IAAAC,KAAA,EAIA,SAAAutC,iBAAiBA,CAACtyB,MAAM,EAAE;MACxB,IAAI,CAACywB,aAAa,GAAGzwB,MAAM;MAC3B,IAAI,CAAC01B,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5wC,GAAA;IAAAC,KAAA,EAKA,SAAA6vC,OAAOA,CAAC2F,IAAI,EAAE1tB,KAAK,EAAE;MACnB,IAAI,CAACujB,MAAM,CAACmK,IAAI,CAAC,IAAI1tB,KAAK;MAC1B,IAAI,CAAC9c,OAAO,CAAC,CAAC;MACd,OAAO,IAAI,CAACqgC,MAAM,CAACmK,IAAI,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz1C,GAAA;IAAAC,KAAA,EAMA,SAAAwtC,aAAaA,CAAChvB,UAAU,EAAE;MACxB,IAAI,CAACmtB,iBAAiB,GAAGntB,UAAU;MACnC,IAAI,CAACmyB,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5wC,GAAA;IAAAC,KAAA,EAMA,SAAAstC,WAAWA,CAAC1pB,QAAQ,EAAE;MACpB,IAAI,CAACgoB,eAAe,GAAGhoB,QAAQ;MAC/B,IAAI,CAAC+sB,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5wC,GAAA;IAAAC,KAAA,EAKA,SAAA0tC,OAAOA,CAACD,IAAI,EAAE;MACZ,IAAI,CAACD,aAAa,CAAC,IAAI,CAACiC,oBAAoB,CAAChC,IAAI,CAAC,CAAC;IACrD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1tC,GAAA;IAAAC,KAAA,EAQA,SAAA2wC,iBAAiBA,CAAC8E,gBAAgB,EAAEC,WAAW,EAAE;MAC/C,IAAMh3B,QAAQ,GACZ,IAAI,CAAC8vB,YAAY,CAAC,CAAC,IAAI,IAAI,CAACwB,cAAc,CAAC,CAAC,IAAI0F,WAAW;;MAE7D;MACA,IAAMH,WAAW,GAAG,IAAI,CAAClI,YAAY,CAACzpB,QAAQ,CAC5C,IAAI,CAACgoB,eAAe,EACpBltB,QACF,CAAC;MACD,IAAMD,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC+E,WAAW,CAAC;MAC/C,IAAMnL,aAAa,GAAG,IAAI,CAACiD,YAAY,CAAC7uB,UAAU,CAChD,IAAI,CAACmtB,iBAAiB,EACtB,CAAC,EACDltB,IAAI,EACJC,QACF,CAAC;MACD,IAAMi3B,SAAS,GAAG,IAAI,CAACtI,YAAY,CAACpyB,MAAM,CACxC,IAAI,CAACywB,aAAa,EAClBtB,aAAa,EACb3rB,IAAI,EACJC,QAAQ,EACR,IAAI,CAACk2B,oBAAoB,CACvB,IAAI,CAAClJ,aAAa,EAClBtB,aAAa,EACbmL,WAAW,EACX92B,IACF,CACF,CAAC;MAED,IAAI,IAAI,CAAChS,GAAG,CAAC0/B,qBAAY,CAACxwB,QAAQ,CAAC,KAAK45B,WAAW,EAAE;QACnD,IAAI,CAACjoC,GAAG,CAAC6+B,qBAAY,CAACxwB,QAAQ,EAAE45B,WAAW,CAAC;MAC9C;MACA,IAAI,IAAI,CAAC9oC,GAAG,CAAC0/B,qBAAY,CAACzwB,UAAU,CAAC,KAAK0uB,aAAa,EAAE;QACvD,IAAI,CAAC98B,GAAG,CAAC6+B,qBAAY,CAACzwB,UAAU,EAAE0uB,aAAa,CAAC;QAChD,IAAI,CAAC98B,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC6gC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC;MACxC;MACA,IACE,CAACwH,SAAS,IACV,CAAC,IAAI,CAAClpC,GAAG,CAAC0/B,qBAAY,CAAC1wB,MAAM,CAAC,IAC9B,CAAC,IAAApZ,kBAAM,EAAC,IAAI,CAACoK,GAAG,CAAC0/B,qBAAY,CAAC1wB,MAAM,CAAC,EAAEk6B,SAAS,CAAC,EACjD;QACA,IAAI,CAACroC,GAAG,CAAC6+B,qBAAY,CAAC1wB,MAAM,EAAEk6B,SAAS,CAAC;MAC1C;MAEA,IAAI,IAAI,CAACnH,YAAY,CAAC,CAAC,IAAI,CAACiH,gBAAgB,EAAE;QAC5C,IAAI,CAACxF,gBAAgB,CAAC,CAAC;MACzB;MACA,IAAI,CAACjE,aAAa,GAAGriC,SAAS;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA5J,GAAA;IAAAC,KAAA,EASA,SAAAyuC,kBAAkBA,CAACU,QAAQ,EAAEyG,mBAAmB,EAAE1Y,MAAM,EAAE;MACxDiS,QAAQ,GAAGA,QAAQ,KAAKxlC,SAAS,GAAGwlC,QAAQ,GAAG,GAAG;MAClD,IAAM/tC,SAAS,GAAGw0C,mBAAmB,IAAI,CAAC;MAE1C,IAAML,WAAW,GAAG,IAAI,CAAClI,YAAY,CAACzpB,QAAQ,CAAC,IAAI,CAACgoB,eAAe,CAAC;MACpE,IAAMntB,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC+E,WAAW,CAAC;MAC/C,IAAMnL,aAAa,GAAG,IAAI,CAACiD,YAAY,CAAC7uB,UAAU,CAChD,IAAI,CAACmtB,iBAAiB,EACtBvqC,SAAS,EACTqd,IACF,CAAC;MACD,IAAMk3B,SAAS,GAAG,IAAI,CAACtI,YAAY,CAACpyB,MAAM,CACxC,IAAI,CAACywB,aAAa,EAClBtB,aAAa,EACb3rB,IAAI,EACJ,KAAK,EACL,IAAI,CAACm2B,oBAAoB,CACvB,IAAI,CAAClJ,aAAa,EAClBtB,aAAa,EACbmL,WAAW,EACX92B,IACF,CACF,CAAC;MAED,IAAI0wB,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAACnD,aAAa,EAAE;QACzC,IAAI,CAACL,iBAAiB,GAAGvB,aAAa;QACtC,IAAI,CAACwB,eAAe,GAAG2J,WAAW;QAClC,IAAI,CAAC7J,aAAa,GAAGiK,SAAS;QAC9B,IAAI,CAAChF,iBAAiB,CAAC,CAAC;QACxB;MACF;MAEAzT,MAAM,GAAGA,MAAM,KAAKiS,QAAQ,KAAK,CAAC,GAAG,IAAI,CAACnD,aAAa,GAAGriC,SAAS,CAAC;MACpE,IAAI,CAACqiC,aAAa,GAAGriC,SAAS;MAE9B,IACE,IAAI,CAACmkC,aAAa,CAAC,CAAC,KAAK1D,aAAa,IACtC,IAAI,CAACgE,WAAW,CAAC,CAAC,KAAKmH,WAAW,IAClC,CAAC,IAAI,CAAC3H,iBAAiB,CAAC,CAAC,IACzB,CAAC,IAAAvrC,kBAAM,EAAC,IAAI,CAACurC,iBAAiB,CAAC,CAAC,EAAE+H,SAAS,CAAC,EAC5C;QACA,IAAI,IAAI,CAACnH,YAAY,CAAC,CAAC,EAAE;UACvB,IAAI,CAACyB,gBAAgB,CAAC,CAAC;QACzB;QAEA,IAAI,CAACtB,eAAe,CAAC;UACnB/qB,QAAQ,EAAE2xB,WAAW;UACrBt6B,MAAM,EAAE06B,SAAS;UACjBn3B,UAAU,EAAE4rB,aAAa;UACzB+E,QAAQ,EAAEA,QAAQ;UAClBC,MAAM,EAAEjlB,eAAO;UACf+S,MAAM,EAAEA;QACV,CAAC,CAAC;MACJ;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAn9B,GAAA;IAAAC,KAAA,EAMA,SAAA61C,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACpH,kBAAkB,CAAC,CAAC,CAAC;MAE1B,IAAI,CAACoB,OAAO,CAACC,iBAAQ,CAACt0B,WAAW,EAAE,CAAC,CAAC;IACvC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAzb,GAAA;IAAAC,KAAA,EAQA,SAAA81C,cAAcA,CAAC3G,QAAQ,EAAEyG,mBAAmB,EAAE1Y,MAAM,EAAE;MACpDA,MAAM,GAAGA,MAAM,IAAI,IAAA/C,wBAAkB,EAAC+C,MAAM,EAAE,IAAI,CAAC8B,aAAa,CAAC,CAAC,CAAC;MACnE,IAAI,CAAC+W,sBAAsB,CAAC5G,QAAQ,EAAEyG,mBAAmB,EAAE1Y,MAAM,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAn9B,GAAA;IAAAC,KAAA,EAOA,SAAA+1C,sBAAsBA,CAAC5G,QAAQ,EAAEyG,mBAAmB,EAAE1Y,MAAM,EAAE;MAC5D,IAAI,CAAC,IAAI,CAAC8S,cAAc,CAAC,CAAC,EAAE;QAC1B;MACF;MACA,IAAI,CAACH,OAAO,CAACC,iBAAQ,CAACt0B,WAAW,EAAE,CAAC,CAAC,CAAC;MACtC,IAAI,CAACizB,kBAAkB,CAACU,QAAQ,EAAEyG,mBAAmB,EAAE1Y,MAAM,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAn9B,GAAA;IAAAC,KAAA,EAOA,SAAAw0C,oBAAoBA,CAAClF,YAAY,EAAEE,gBAAgB,EAAE;MACnD,IAAM/wB,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC,IAAI,CAACpC,WAAW,CAAC,CAAC,CAAC;MACtD,OAAO,IAAI,CAACf,YAAY,CAACpyB,MAAM,CAC7Bq0B,YAAY,EACZE,gBAAgB,IAAI,IAAI,CAAC1B,aAAa,CAAC,CAAC,EACxCrvB,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA1e,GAAA;IAAAC,KAAA,EASA,SAAAg2C,kBAAkBA,CAACC,UAAU,EAAE70C,SAAS,EAAE;MACxC,IAAM80C,SAAS,GAAG,IAAI,CAACzG,oBAAoB,CAACwG,UAAU,CAAC;MACvD,OAAO,IAAI,CAAChE,oBAAoB,CAC9B,IAAI,CAACY,wBAAwB,CAACqD,SAAS,EAAE90C,SAAS,CACpD,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAArB,GAAA;IAAAC,KAAA,EASA,SAAA6yC,wBAAwBA,CAACrD,gBAAgB,EAAEpuC,SAAS,EAAE;MACpDA,SAAS,GAAGA,SAAS,IAAI,CAAC;MAC1B,IAAMqd,IAAI,GAAG,IAAI,CAAC+xB,gBAAgB,CAAC,IAAI,CAACpC,WAAW,CAAC,CAAC,CAAC;MAEtD,OAAO,IAAI,CAACf,YAAY,CAAC7uB,UAAU,CAACgxB,gBAAgB,EAAEpuC,SAAS,EAAEqd,IAAI,CAAC;IACxE;EAAC;AAAA,EAlkDgBtS,eAAU;AAqkD7B;AACA;AACA;AACA;AACA,SAAS0iC,iBAAiBA,CAAChsB,QAAQ,EAAEszB,WAAW,EAAE;EAChDthC,UAAU,CAAC,YAAY;IACrBgO,QAAQ,CAACszB,WAAW,CAAC;EACvB,CAAC,EAAE,CAAC,CAAC;AACP;;AAEA;AACA;AACA;AACA;AACO,SAASnJ,sBAAsBA,CAAC5+B,OAAO,EAAE;EAC9C,IAAIA,OAAO,CAACiQ,MAAM,KAAK1U,SAAS,EAAE;IAChC,IAAM4U,MAAM,GACVnQ,OAAO,CAACgoC,sBAAsB,KAAKzsC,SAAS,GACxCyE,OAAO,CAACgoC,sBAAsB,GAC9B,IAAI;IACV,OAAO,IAAAh4B,8BAAY,EAAChQ,OAAO,CAACiQ,MAAM,EAAEjQ,OAAO,CAACioC,mBAAmB,EAAE93B,MAAM,CAAC;EAC1E;EAEA,IAAM4H,UAAU,GAAG,IAAA6R,sBAAgB,EAAC5pB,OAAO,CAAC+X,UAAU,EAAE,WAAW,CAAC;EACpE,IAAI/X,OAAO,CAACsY,UAAU,KAAK,IAAI,IAAIP,UAAU,CAACmI,QAAQ,CAAC,CAAC,EAAE;IACxD,IAAMjQ,MAAM,GAAG8H,UAAU,CAACE,SAAS,CAAC,CAAC,CAACriB,KAAK,CAAC,CAAC;IAC7Cqa,MAAM,CAAC,CAAC,CAAC,GAAG,CAACrH,QAAQ;IACrBqH,MAAM,CAAC,CAAC,CAAC,GAAGrH,QAAQ;IACpB,OAAO,IAAAoH,8BAAY,EAACC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;EAC3C;EAEA,OAAOi4B,sBAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASjK,0BAA0BA,CAACj+B,OAAO,EAAE;EAClD,IAAI6+B,oBAAoB;EACxB,IAAI1D,aAAa;EACjB,IAAIC,aAAa;;EAEjB;EACA;EACA,IAAM+M,cAAc,GAAG,EAAE;EACzB,IAAMC,iBAAiB,GAAG,CAAC;EAE3B,IAAI1J,OAAO,GACT1+B,OAAO,CAAC0+B,OAAO,KAAKnjC,SAAS,GAAGyE,OAAO,CAAC0+B,OAAO,GAAG3B,gBAAgB;EAEpE,IAAIgH,OAAO,GACT/jC,OAAO,CAAC+jC,OAAO,KAAKxoC,SAAS,GAAGyE,OAAO,CAAC+jC,OAAO,GAAGoE,cAAc;EAElE,IAAM9J,UAAU,GACdr+B,OAAO,CAACq+B,UAAU,KAAK9iC,SAAS,GAAGyE,OAAO,CAACq+B,UAAU,GAAG+J,iBAAiB;EAE3E,IAAM9vB,UAAU,GACdtY,OAAO,CAACsY,UAAU,KAAK/c,SAAS,GAAGyE,OAAO,CAACsY,UAAU,GAAG,KAAK;EAE/D,IAAMnI,MAAM,GACVnQ,OAAO,CAACqoC,0BAA0B,KAAK9sC,SAAS,GAC5CyE,OAAO,CAACqoC,0BAA0B,GAClC,IAAI;EAEV,IAAMtN,cAAc,GAClB/6B,OAAO,CAAC+6B,cAAc,KAAKx/B,SAAS,GAAGyE,OAAO,CAAC+6B,cAAc,GAAG,KAAK;EAEvE,IAAMhjB,UAAU,GAAG,IAAA6R,sBAAgB,EAAC5pB,OAAO,CAAC+X,UAAU,EAAE,WAAW,CAAC;EACpE,IAAMuwB,UAAU,GAAGvwB,UAAU,CAACE,SAAS,CAAC,CAAC;EACzC,IAAIgwB,mBAAmB,GAAGjoC,OAAO,CAACioC,mBAAmB;EACrD,IAAIh4B,MAAM,GAAGjQ,OAAO,CAACiQ,MAAM;EAC3B,IAAI,CAACqI,UAAU,IAAI,CAACrI,MAAM,IAAI8H,UAAU,CAACmI,QAAQ,CAAC,CAAC,EAAE;IACnD+nB,mBAAmB,GAAG,KAAK;IAC3Bh4B,MAAM,GAAGq4B,UAAU;EACrB;EAEA,IAAItoC,OAAO,CAACu7B,WAAW,KAAKhgC,SAAS,EAAE;IACrC,IAAMggC,WAAW,GAAGv7B,OAAO,CAACu7B,WAAW;IACvCJ,aAAa,GAAGI,WAAW,CAACmD,OAAO,CAAC;IACpCtD,aAAa,GACXG,WAAW,CAACwI,OAAO,CAAC,KAAKxoC,SAAS,GAC9BggC,WAAW,CAACwI,OAAO,CAAC,GACpBxI,WAAW,CAACA,WAAW,CAAC/oC,MAAM,GAAG,CAAC,CAAC;IAEzC,IAAIwN,OAAO,CAACokC,mBAAmB,EAAE;MAC/BvF,oBAAoB,GAAG,IAAAvD,6CAAuB,EAC5CC,WAAW,EACXprB,MAAM,EACN,CAAC83B,mBAAmB,IAAIh4B,MAAM,EAC9B8qB,cACF,CAAC;IACH,CAAC,MAAM;MACL8D,oBAAoB,GAAG,IAAA5C,4CAAsB,EAC3Cd,aAAa,EACbC,aAAa,EACbjrB,MAAM,EACN,CAAC83B,mBAAmB,IAAIh4B,MAAM,EAC9B8qB,cACF,CAAC;IACH;EACF,CAAC,MAAM;IACL;IACA,IAAM1qB,IAAI,GAAG,CAACi4B,UAAU;IACpB;IACC,GAAG,GAAG5pB,qBAAe,CAACnE,OAAO,GAAIxC,UAAU,CAACgI,gBAAgB,CAAC,CAAC,GAC/DxY,IAAI,CAACmG,GAAG,CAAC,IAAAuH,iBAAQ,EAACqzB,UAAU,CAAC,EAAE,IAAApzB,kBAAS,EAACozB,UAAU,CAAC,CAAC;IAEzD,IAAMC,oBAAoB,GACxBl4B,IAAI,GAAGisB,yBAAiB,GAAG/0B,IAAI,CAACkI,GAAG,CAAC24B,iBAAiB,EAAErL,gBAAgB,CAAC;IAE1E,IAAMyL,oBAAoB,GACxBD,oBAAoB,GACpBhhC,IAAI,CAACkI,GAAG,CAAC24B,iBAAiB,EAAED,cAAc,GAAGpL,gBAAgB,CAAC;;IAEhE;IACA5B,aAAa,GAAGn7B,OAAO,CAACm7B,aAAa;IACrC,IAAIA,aAAa,KAAK5/B,SAAS,EAAE;MAC/BmjC,OAAO,GAAG,CAAC;IACb,CAAC,MAAM;MACLvD,aAAa,GAAGoN,oBAAoB,GAAGhhC,IAAI,CAACkI,GAAG,CAAC4uB,UAAU,EAAEK,OAAO,CAAC;IACtE;;IAEA;IACAtD,aAAa,GAAGp7B,OAAO,CAACo7B,aAAa;IACrC,IAAIA,aAAa,KAAK7/B,SAAS,EAAE;MAC/B,IAAIyE,OAAO,CAAC+jC,OAAO,KAAKxoC,SAAS,EAAE;QACjC,IAAIyE,OAAO,CAACm7B,aAAa,KAAK5/B,SAAS,EAAE;UACvC6/B,aAAa,GAAGD,aAAa,GAAG5zB,IAAI,CAACkI,GAAG,CAAC4uB,UAAU,EAAE0F,OAAO,CAAC;QAC/D,CAAC,MAAM;UACL3I,aAAa,GAAGmN,oBAAoB,GAAGhhC,IAAI,CAACkI,GAAG,CAAC4uB,UAAU,EAAE0F,OAAO,CAAC;QACtE;MACF,CAAC,MAAM;QACL3I,aAAa,GAAGoN,oBAAoB;MACtC;IACF;;IAEA;IACAzE,OAAO,GACLrF,OAAO,GACPn3B,IAAI,CAACoI,KAAK,CACRpI,IAAI,CAAC0F,GAAG,CAACkuB,aAAa,GAAGC,aAAa,CAAC,GAAG7zB,IAAI,CAAC0F,GAAG,CAACoxB,UAAU,CAC/D,CAAC;IACHjD,aAAa,GAAGD,aAAa,GAAG5zB,IAAI,CAACkI,GAAG,CAAC4uB,UAAU,EAAE0F,OAAO,GAAGrF,OAAO,CAAC;IAEvE,IAAI1+B,OAAO,CAACokC,mBAAmB,EAAE;MAC/BvF,oBAAoB,GAAG,IAAAlD,uCAAiB,EACtC0C,UAAU,EACVlD,aAAa,EACbC,aAAa,EACbjrB,MAAM,EACN,CAAC83B,mBAAmB,IAAIh4B,MAAM,EAC9B8qB,cACF,CAAC;IACH,CAAC,MAAM;MACL8D,oBAAoB,GAAG,IAAA5C,4CAAsB,EAC3Cd,aAAa,EACbC,aAAa,EACbjrB,MAAM,EACN,CAAC83B,mBAAmB,IAAIh4B,MAAM,EAC9B8qB,cACF,CAAC;IACH;EACF;EACA,OAAO;IACL+D,UAAU,EAAED,oBAAoB;IAChC1D,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BsD,OAAO,EAAEA,OAAO;IAChBL,UAAU,EAAEA;EACd,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACO,SAASW,wBAAwBA,CAACh/B,OAAO,EAAE;EAChD,IAAMyoC,cAAc,GAClBzoC,OAAO,CAACyoC,cAAc,KAAKltC,SAAS,GAAGyE,OAAO,CAACyoC,cAAc,GAAG,IAAI;EACtE,IAAIA,cAAc,EAAE;IAClB,IAAMC,iBAAiB,GAAG1oC,OAAO,CAAC0oC,iBAAiB;IACnD,IAAIA,iBAAiB,KAAKntC,SAAS,IAAImtC,iBAAiB,KAAK,IAAI,EAAE;MACjE,OAAO,IAAAtM,oCAAgB,EAAC,CAAC;IAC3B;IACA,IAAIsM,iBAAiB,KAAK,KAAK,EAAE;MAC/B,OAAOC,wBAAY;IACrB;IACA,IAAI,OAAOD,iBAAiB,KAAK,QAAQ,EAAE;MACzC,OAAO,IAAAxM,iCAAa,EAACwM,iBAAiB,CAAC;IACzC;IACA,OAAOC,wBAAY;EACrB;EACA,OAAOzgB,2BAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASsZ,eAAeA,CAACX,SAAS,EAAE;EACzC,IAAIA,SAAS,CAACI,YAAY,IAAIJ,SAAS,CAACK,YAAY,EAAE;IACpD,IAAI,CAAC,IAAA0H,kBAAgB,EAAC/H,SAAS,CAACI,YAAY,EAAEJ,SAAS,CAACK,YAAY,CAAC,EAAE;MACrE,OAAO,KAAK;IACd;EACF;EACA,IAAIL,SAAS,CAACM,gBAAgB,KAAKN,SAAS,CAACO,gBAAgB,EAAE;IAC7D,OAAO,KAAK;EACd;EACA,IAAIP,SAAS,CAACS,cAAc,KAAKT,SAAS,CAACU,cAAc,EAAE;IACzD,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsD,iBAAiBA,CAACviC,UAAU,EAAE+N,IAAI,EAAEi2B,QAAQ,EAAEl2B,UAAU,EAAEoF,QAAQ,EAAE;EAC3E;EACA,IAAM4F,QAAQ,GAAG7T,IAAI,CAAC0O,GAAG,CAAC,CAACT,QAAQ,CAAC;EACpC,IAAI6F,QAAQ,GAAG9T,IAAI,CAAC4O,GAAG,CAAC,CAACX,QAAQ,CAAC;EAClC,IAAIswB,IAAI,GAAGxjC,UAAU,CAAC,CAAC,CAAC,GAAG8Y,QAAQ,GAAG9Y,UAAU,CAAC,CAAC,CAAC,GAAG+Y,QAAQ;EAC9D,IAAI0qB,IAAI,GAAGzjC,UAAU,CAAC,CAAC,CAAC,GAAG8Y,QAAQ,GAAG9Y,UAAU,CAAC,CAAC,CAAC,GAAG+Y,QAAQ;EAC9DyqB,IAAI,IAAI,CAACz1B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGi2B,QAAQ,CAAC,CAAC,CAAC,IAAIl2B,UAAU;EAChD21B,IAAI,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC,GAAGj2B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAID,UAAU;;EAEhD;EACAiL,QAAQ,GAAG,CAACA,QAAQ,CAAC,CAAC;EACtB,IAAM6qB,OAAO,GAAGJ,IAAI,GAAG1qB,QAAQ,GAAG2qB,IAAI,GAAG1qB,QAAQ;EACjD,IAAM8qB,OAAO,GAAGJ,IAAI,GAAG3qB,QAAQ,GAAG0qB,IAAI,GAAGzqB,QAAQ;EAEjD,OAAO,CAAC6qB,OAAO,EAAEC,OAAO,CAAC;AAC3B;AAAC,IAAAn2C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc8sC,IAAI;;;;;;;;AC/mEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM6L,YAAY,GAAA54C,OAAA,CAAA44C,YAAA,GAAG,WAAW;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAA74C,OAAA,CAAA64C,gBAAA,GAAG,eAAe;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,kBAAkB,GAAA94C,OAAA,CAAA84C,kBAAA,GAAG,iBAAiB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAA/4C,OAAA,CAAA+4C,iBAAA,GAAG,gBAAgB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,aAAa,GAAAh5C,OAAA,CAAAg5C,aAAA,GAAG,YAAY;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAj5C,OAAA,CAAAi5C,eAAA,GAAG,cAAc;;AAE7C;AACA;AACA;AACA;AACA,IAAMC,SAAS,GAAG,IAAIC,MAAM,CAC1B,CACE,oDAAoD,EACpD,2CAA2C,EAC3C,6DAA6D,EAC7D,+CAA+C,EAC/C,6EAA6E,EAC7E,+DAA+D,EAC/D,iCAAiC,CAClC,CAACvwB,IAAI,CAAC,EAAE,CAAC,EACV,GACF,CAAC;AACD;AACA,IAAMwwB,mBAAmB,GAAG,CAC1B,OAAO,EACP,SAAS,EACT,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,QAAQ,CACT;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAAr5C,OAAA,CAAAq5C,iBAAA,GAAG,SAApBA,iBAAiBA,CAAaC,QAAQ,EAAE;EACnD,IAAM1iB,KAAK,GAAG0iB,QAAQ,CAAC1iB,KAAK,CAACsiB,SAAS,CAAC;EACvC,IAAI,CAACtiB,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAM2iB,KAAK,GAAG,6BAA+B;IAC3CC,UAAU,EAAE,QAAQ;IACpBp5B,IAAI,EAAE,OAAO;IACbm5B,KAAK,EAAE,QAAQ;IACfE,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;EACX,CAAE;EACF,KAAK,IAAIz2C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGmuC,mBAAmB,CAAC72C,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC5D,IAAMtB,KAAK,GAAGi1B,KAAK,CAAC3zB,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAItB,KAAK,KAAK2J,SAAS,EAAE;MACvBiuC,KAAK,CAACH,mBAAmB,CAACn2C,CAAC,CAAC,CAAC,GAAGtB,KAAK;IACvC;EACF;EACA43C,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACK,MAAM,CAAC3wB,KAAK,CAAC,MAAM,CAAC;EAC3C,OAAOswB,KAAK;AACd,CAAC;;;;;;;;;;;;;;;ACpHD,IAAA3kC,IAAA,GAAA5P,OAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS60C,qBAAqBA,CAAClyB,KAAK,EAAEC,MAAM,EAAEkyB,UAAU,EAAEC,QAAQ,EAAE;EACzE;EACA,IAAIC,MAAM;EACV,IAAIF,UAAU,IAAIA,UAAU,CAACv3C,MAAM,EAAE;IACnCy3C,MAAM,GAAG,gCAAkCF,UAAU,CAACG,KAAK,CAAC,CAAE;EAChE,CAAC,MAAM,IAAIrmC,4BAAuB,EAAE;IAClComC,MAAM,GAAG,IAAIlmC,eAAe,CAAC6T,KAAK,IAAI,GAAG,EAAEC,MAAM,IAAI,GAAG,CAAC;EAC3D,CAAC,MAAM;IACLoyB,MAAM,GAAGE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC3C;EACA,IAAIxyB,KAAK,EAAE;IACTqyB,MAAM,CAACryB,KAAK,GAAGA,KAAK;EACtB;EACA,IAAIC,MAAM,EAAE;IACVoyB,MAAM,CAACpyB,MAAM,GAAGA,MAAM;EACxB;EACA;EACA,OAAO,uCACLoyB,MAAM,CAACI,UAAU,CAAC,IAAI,EAAEL,QAAQ,CAAC;AAErC;;AAEA;AACA,IAAIM,mBAAmB;;AAEvB;AACA;AACA;AACO,SAASC,wBAAwBA,CAAA,EAAG;EACzC,IAAI,CAACD,mBAAmB,EAAE;IACxBA,mBAAmB,GAAGR,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;EACnD;EACA,OAAOQ,mBAAmB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,aAAaA,CAACC,OAAO,EAAE;EACrC,IAAMR,MAAM,GAAGQ,OAAO,CAACR,MAAM;EAC7BA,MAAM,CAACryB,KAAK,GAAG,CAAC;EAChBqyB,MAAM,CAACpyB,MAAM,GAAG,CAAC;EACjB4yB,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAAC/qC,OAAO,EAAE;EAClC,IAAIgY,KAAK,GAAGhY,OAAO,CAACgrC,WAAW;EAC/B,IAAMpB,KAAK,GAAGqB,gBAAgB,CAACjrC,OAAO,CAAC;EACvCgY,KAAK,IAAIyB,QAAQ,CAACmwB,KAAK,CAACsB,UAAU,EAAE,EAAE,CAAC,GAAGzxB,QAAQ,CAACmwB,KAAK,CAACuB,WAAW,EAAE,EAAE,CAAC;EAEzE,OAAOnzB,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASozB,WAAWA,CAACprC,OAAO,EAAE;EACnC,IAAIiY,MAAM,GAAGjY,OAAO,CAACqrC,YAAY;EACjC,IAAMzB,KAAK,GAAGqB,gBAAgB,CAACjrC,OAAO,CAAC;EACvCiY,MAAM,IAAIwB,QAAQ,CAACmwB,KAAK,CAAC0B,SAAS,EAAE,EAAE,CAAC,GAAG7xB,QAAQ,CAACmwB,KAAK,CAAC2B,YAAY,EAAE,EAAE,CAAC;EAE1E,OAAOtzB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAASuzB,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC5C,IAAMC,MAAM,GAAGD,OAAO,CAACE,UAAU;EACjC,IAAID,MAAM,EAAE;IACVA,MAAM,CAACE,YAAY,CAACJ,OAAO,EAAEC,OAAO,CAAC;EACvC;AACF;;AAEA;AACA;AACA;AACO,SAASI,cAAcA,CAACC,IAAI,EAAE;EACnC,OAAOA,IAAI,CAACC,SAAS,EAAE;IACrBD,IAAI,CAACC,SAAS,CAAC/3C,MAAM,CAAC,CAAC;EACzB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASg4C,eAAeA,CAACF,IAAI,EAAEG,QAAQ,EAAE;EAC9C,IAAMC,WAAW,GAAGJ,IAAI,CAACK,UAAU;EAEnC,KAAK,IAAI94C,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAEA,CAAC,EAAE;IACzB,IAAM+4C,QAAQ,GAAGF,WAAW,CAAC74C,CAAC,CAAC;IAC/B,IAAMg5C,QAAQ,GAAGJ,QAAQ,CAAC54C,CAAC,CAAC;;IAE5B;IACA,IAAI,CAAC+4C,QAAQ,IAAI,CAACC,QAAQ,EAAE;MAC1B;IACF;;IAEA;IACA,IAAID,QAAQ,KAAKC,QAAQ,EAAE;MACzB;IACF;;IAEA;IACA,IAAI,CAACD,QAAQ,EAAE;MACbN,IAAI,CAACQ,WAAW,CAACD,QAAQ,CAAC;MAC1B;IACF;;IAEA;IACA,IAAI,CAACA,QAAQ,EAAE;MACbP,IAAI,CAACS,WAAW,CAACH,QAAQ,CAAC;MAC1B,EAAE/4C,CAAC;MACH;IACF;;IAEA;IACAy4C,IAAI,CAACU,YAAY,CAACH,QAAQ,EAAED,QAAQ,CAAC;EACvC;AACF;;;;;;;;ACtJA,IAAAK,aAAA,GAAAl1C,sBAAA,CAAAnC,OAAA;AACA,IAAAuK,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANrC;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA,IAwBM+0C,OAAO,0BAAAzsC,WAAA;EACX;AACF;AACA;EACE,SAAAysC,QAAYvsC,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA+6C,OAAA;IACnBvyC,KAAA,GAAAnB,UAAA,OAAA0zC,OAAA;IAEA,IAAM3sC,OAAO,GAAGI,OAAO,CAACJ,OAAO;IAC/B,IAAIA,OAAO,IAAI,CAACI,OAAO,CAACjN,MAAM,IAAI,CAAC6M,OAAO,CAAC4pC,KAAK,CAACgD,aAAa,EAAE;MAC9D5sC,OAAO,CAAC4pC,KAAK,CAACgD,aAAa,GAAG,MAAM;IACtC;;IAEA;AACJ;AACA;AACA;IACIxyC,KAAA,CAAK4F,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,IAAI;;IAEvC;AACJ;AACA;AACA;IACI5F,KAAA,CAAKyyC,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIzyC,KAAA,CAAKiL,IAAI,GAAG,IAAI;;IAEhB;AACJ;AACA;AACA;IACIjL,KAAA,CAAK0yC,YAAY,GAAG,EAAE;IAEtB,IAAI1sC,OAAO,CAAC2sC,MAAM,EAAE;MAClB3yC,KAAA,CAAK2yC,MAAM,GAAG3sC,OAAO,CAAC2sC,MAAM;IAC9B;IAEA,IAAI3sC,OAAO,CAACjN,MAAM,EAAE;MAClBiH,KAAA,CAAK4yC,SAAS,CAAC5sC,OAAO,CAACjN,MAAM,CAAC;IAChC;IAAC,OAAAiH,KAAA;EACH;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA4yC,OAAA,EAAAzsC,WAAA;EAAA,OAAApO,YAAA,CAAA66C,OAAA;IAAA56C,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAAA,IAAA+6C,aAAA;MAChB,CAAAA,aAAA,OAAI,CAACjtC,OAAO,cAAAitC,aAAA,eAAZA,aAAA,CAAch5C,MAAM,CAAC,CAAC;MACtB0N,aAAA,CAAAgrC,OAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA56C,GAAA;IAAAC,KAAA,EAKA,SAAAk7C,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC7nC,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAtT,GAAA;IAAAC,KAAA,EAQA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAI,IAAI,CAAC6D,IAAI,EAAE;QAAA,IAAA+nC,cAAA;QACb,CAAAA,cAAA,OAAI,CAACptC,OAAO,cAAAotC,cAAA,eAAZA,cAAA,CAAcn5C,MAAM,CAAC,CAAC;MACxB;MACA,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAACwxC,YAAY,CAACl6C,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC1D,IAAA8I,qBAAa,EAAC,IAAI,CAAC0wC,YAAY,CAACx5C,CAAC,CAAC,CAAC;MACrC;MACA,IAAI,CAACw5C,YAAY,CAACl6C,MAAM,GAAG,CAAC;MAC5B,IAAI,CAACyS,IAAI,GAAG7D,GAAG;MACf,IAAIA,GAAG,EAAE;QAAA,IAAA6rC,aAAA;QACP,IAAMl6C,MAAM,IAAAk6C,aAAA,GAAG,IAAI,CAACR,OAAO,cAAAQ,aAAA,cAAAA,aAAA,GAAI7rC,GAAG,CAAC8rC,4BAA4B,CAAC,CAAC;QACjE,IAAI,IAAI,CAACttC,OAAO,EAAE;UAChB7M,MAAM,CAACo5C,WAAW,CAAC,IAAI,CAACvsC,OAAO,CAAC;QAClC;QACA,IAAI,IAAI,CAAC+sC,MAAM,KAAKv3C,eAAI,EAAE;UACxB,IAAI,CAACs3C,YAAY,CAAChyC,IAAI,CACpB,IAAAgB,cAAM,EAAC0F,GAAG,EAAE+rC,qBAAY,CAACxlC,UAAU,EAAE,IAAI,CAACglC,MAAM,EAAE,IAAI,CACxD,CAAC;QACH;QACAvrC,GAAG,CAACurC,MAAM,CAAC,CAAC;MACd;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAh7C,GAAA;IAAAC,KAAA,EAKA,SAAA+6C,MAAMA,CAACS,QAAQ,EAAE,CAAC;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAz7C,GAAA;IAAAC,KAAA,EASA,SAAAg7C,SAASA,CAAC75C,MAAM,EAAE;MAChB,IAAI,CAAC05C,OAAO,GACV,OAAO15C,MAAM,KAAK,QAAQ,GAAGo3C,QAAQ,CAACkD,cAAc,CAACt6C,MAAM,CAAC,GAAGA,MAAM;IACzE;EAAC;AAAA,EAjHmBgL,eAAU;AAAA,IAAA/N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAoHjBq8C,OAAO;;;;;;;;AC7JtB,IAAAv3C,MAAA,GAAAC,OAAA;AACA,IAAAq4C,IAAA,GAAAr4C,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAu4C,SAAA,GAAAp2C,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAA81C,oBAAA,kBAPnC,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAj2C,CAAA,SAAAU,CAAA,EAAAV,CAAA,OAAAS,CAAA,GAAAK,MAAA,CAAA3C,SAAA,EAAA1C,CAAA,GAAAgF,CAAA,CAAAqG,cAAA,EAAA3G,CAAA,GAAAW,MAAA,CAAAC,cAAA,cAAAL,CAAA,EAAAV,CAAA,EAAAS,CAAA,IAAAC,CAAA,CAAAV,CAAA,IAAAS,CAAA,CAAArG,KAAA,KAAAsB,CAAA,wBAAA0E,MAAA,GAAAA,MAAA,OAAAlF,CAAA,GAAAQ,CAAA,CAAA2E,QAAA,kBAAA8sB,CAAA,GAAAzxB,CAAA,CAAAw6C,aAAA,uBAAAziC,CAAA,GAAA/X,CAAA,CAAAy6C,WAAA,8BAAAC,OAAA11C,CAAA,EAAAV,CAAA,EAAAS,CAAA,WAAAK,MAAA,CAAAC,cAAA,CAAAL,CAAA,EAAAV,CAAA,IAAA5F,KAAA,EAAAqG,CAAA,EAAAE,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAH,CAAA,CAAAV,CAAA,WAAAo2C,MAAA,mBAAA11C,CAAA,IAAA01C,MAAA,YAAAA,OAAA11C,CAAA,EAAAV,CAAA,EAAAS,CAAA,WAAAC,CAAA,CAAAV,CAAA,IAAAS,CAAA,gBAAA4X,KAAA3X,CAAA,EAAAV,CAAA,EAAAS,CAAA,EAAAhF,CAAA,QAAAC,CAAA,GAAAsE,CAAA,IAAAA,CAAA,CAAA7B,SAAA,YAAAk4C,SAAA,GAAAr2C,CAAA,GAAAq2C,SAAA,EAAAn7C,CAAA,GAAA4F,MAAA,CAAAsB,MAAA,CAAA1G,CAAA,CAAAyC,SAAA,GAAAgvB,CAAA,OAAAmpB,OAAA,CAAA76C,CAAA,gBAAA0E,CAAA,CAAAjF,CAAA,eAAAd,KAAA,EAAAm8C,gBAAA,CAAA71C,CAAA,EAAAD,CAAA,EAAA0sB,CAAA,MAAAjyB,CAAA,aAAAs7C,SAAA91C,CAAA,EAAAV,CAAA,EAAAS,CAAA,mBAAApB,IAAA,YAAAo3C,GAAA,EAAA/1C,CAAA,CAAArC,IAAA,CAAA2B,CAAA,EAAAS,CAAA,cAAAC,CAAA,aAAArB,IAAA,WAAAo3C,GAAA,EAAA/1C,CAAA,QAAAV,CAAA,CAAAqY,IAAA,GAAAA,IAAA,MAAAozB,CAAA,qBAAAp0B,CAAA,qBAAApO,CAAA,gBAAA8hB,CAAA,gBAAA1U,CAAA,gBAAAggC,UAAA,cAAAK,kBAAA,cAAAC,2BAAA,SAAA3sC,CAAA,OAAAosC,MAAA,CAAApsC,CAAA,EAAA9O,CAAA,qCAAAonB,CAAA,GAAAxhB,MAAA,CAAAkB,cAAA,EAAA40C,CAAA,GAAAt0B,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAA7b,MAAA,QAAAmwC,CAAA,IAAAA,CAAA,KAAAn2C,CAAA,IAAAhF,CAAA,CAAA4C,IAAA,CAAAu4C,CAAA,EAAA17C,CAAA,MAAA8O,CAAA,GAAA4sC,CAAA,OAAAC,CAAA,GAAAF,0BAAA,CAAAx4C,SAAA,GAAAk4C,SAAA,CAAAl4C,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAA4H,CAAA,YAAA8sC,sBAAAp2C,CAAA,gCAAAsI,OAAA,WAAAhJ,CAAA,IAAAo2C,MAAA,CAAA11C,CAAA,EAAAV,CAAA,YAAAU,CAAA,gBAAAq2C,OAAA,CAAA/2C,CAAA,EAAAU,CAAA,sBAAAs2C,cAAAt2C,CAAA,EAAAV,CAAA,aAAAi3C,OAAAx2C,CAAA,EAAAN,CAAA,EAAAzE,CAAA,EAAAR,CAAA,QAAAiyB,CAAA,GAAAqpB,QAAA,CAAA91C,CAAA,CAAAD,CAAA,GAAAC,CAAA,EAAAP,CAAA,mBAAAgtB,CAAA,CAAA9tB,IAAA,QAAAoU,CAAA,GAAA0Z,CAAA,CAAAspB,GAAA,EAAAhL,CAAA,GAAAh4B,CAAA,CAAArZ,KAAA,SAAAqxC,CAAA,gBAAAvrC,OAAA,CAAAurC,CAAA,KAAAhwC,CAAA,CAAA4C,IAAA,CAAAotC,CAAA,eAAAzrC,CAAA,CAAAjB,OAAA,CAAA0sC,CAAA,CAAAyL,OAAA,EAAAC,IAAA,WAAAz2C,CAAA,IAAAu2C,MAAA,SAAAv2C,CAAA,EAAAhF,CAAA,EAAAR,CAAA,gBAAAwF,CAAA,IAAAu2C,MAAA,UAAAv2C,CAAA,EAAAhF,CAAA,EAAAR,CAAA,QAAA8E,CAAA,CAAAjB,OAAA,CAAA0sC,CAAA,EAAA0L,IAAA,WAAAz2C,CAAA,IAAA+S,CAAA,CAAArZ,KAAA,GAAAsG,CAAA,EAAAhF,CAAA,CAAA+X,CAAA,gBAAA/S,CAAA,WAAAu2C,MAAA,UAAAv2C,CAAA,EAAAhF,CAAA,EAAAR,CAAA,SAAAA,CAAA,CAAAiyB,CAAA,CAAAspB,GAAA,SAAAh2C,CAAA,EAAAN,CAAA,oBAAA/F,KAAA,WAAAA,MAAAsG,CAAA,EAAAjF,CAAA,aAAA27C,2BAAA,eAAAp3C,CAAA,WAAAA,CAAA,EAAAS,CAAA,IAAAw2C,MAAA,CAAAv2C,CAAA,EAAAjF,CAAA,EAAAuE,CAAA,EAAAS,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAA02C,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAb,iBAAAv2C,CAAA,EAAAS,CAAA,EAAAhF,CAAA,QAAA0E,CAAA,GAAAsrC,CAAA,mBAAA/vC,CAAA,EAAAR,CAAA,QAAAiF,CAAA,KAAA8I,CAAA,QAAArD,KAAA,sCAAAzF,CAAA,KAAA4qB,CAAA,oBAAArvB,CAAA,QAAAR,CAAA,WAAAd,KAAA,EAAAsG,CAAA,EAAAia,IAAA,eAAAlf,CAAA,CAAA47C,MAAA,GAAA37C,CAAA,EAAAD,CAAA,CAAAg7C,GAAA,GAAAv7C,CAAA,UAAAiyB,CAAA,GAAA1xB,CAAA,CAAA67C,QAAA,MAAAnqB,CAAA,QAAA1Z,CAAA,GAAA8jC,mBAAA,CAAApqB,CAAA,EAAA1xB,CAAA,OAAAgY,CAAA,QAAAA,CAAA,KAAA4C,CAAA,mBAAA5C,CAAA,qBAAAhY,CAAA,CAAA47C,MAAA,EAAA57C,CAAA,CAAA+7C,IAAA,GAAA/7C,CAAA,CAAAg8C,KAAA,GAAAh8C,CAAA,CAAAg7C,GAAA,sBAAAh7C,CAAA,CAAA47C,MAAA,QAAAl3C,CAAA,KAAAsrC,CAAA,QAAAtrC,CAAA,GAAA4qB,CAAA,EAAAtvB,CAAA,CAAAg7C,GAAA,EAAAh7C,CAAA,CAAAi8C,iBAAA,CAAAj8C,CAAA,CAAAg7C,GAAA,uBAAAh7C,CAAA,CAAA47C,MAAA,IAAA57C,CAAA,CAAAk8C,MAAA,WAAAl8C,CAAA,CAAAg7C,GAAA,GAAAt2C,CAAA,GAAA8I,CAAA,MAAAe,CAAA,GAAAwsC,QAAA,CAAAx2C,CAAA,EAAAS,CAAA,EAAAhF,CAAA,oBAAAuO,CAAA,CAAA3K,IAAA,QAAAc,CAAA,GAAA1E,CAAA,CAAAkf,IAAA,GAAAoQ,CAAA,GAAA1T,CAAA,EAAArN,CAAA,CAAAysC,GAAA,KAAApgC,CAAA,qBAAAjc,KAAA,EAAA4P,CAAA,CAAAysC,GAAA,EAAA97B,IAAA,EAAAlf,CAAA,CAAAkf,IAAA,kBAAA3Q,CAAA,CAAA3K,IAAA,KAAAc,CAAA,GAAA4qB,CAAA,EAAAtvB,CAAA,CAAA47C,MAAA,YAAA57C,CAAA,CAAAg7C,GAAA,GAAAzsC,CAAA,CAAAysC,GAAA,mBAAAc,oBAAAv3C,CAAA,EAAAS,CAAA,QAAAhF,CAAA,GAAAgF,CAAA,CAAA42C,MAAA,EAAAl3C,CAAA,GAAAH,CAAA,CAAAK,QAAA,CAAA5E,CAAA,OAAA0E,CAAA,KAAAO,CAAA,SAAAD,CAAA,CAAA62C,QAAA,qBAAA77C,CAAA,IAAAuE,CAAA,CAAAK,QAAA,CAAAua,MAAA,KAAAna,CAAA,CAAA42C,MAAA,aAAA52C,CAAA,CAAAg2C,GAAA,GAAA/1C,CAAA,EAAA62C,mBAAA,CAAAv3C,CAAA,EAAAS,CAAA,eAAAA,CAAA,CAAA42C,MAAA,kBAAA57C,CAAA,KAAAgF,CAAA,CAAA42C,MAAA,YAAA52C,CAAA,CAAAg2C,GAAA,OAAAl2C,SAAA,uCAAA9E,CAAA,iBAAA4a,CAAA,MAAA3a,CAAA,GAAA86C,QAAA,CAAAr2C,CAAA,EAAAH,CAAA,CAAAK,QAAA,EAAAI,CAAA,CAAAg2C,GAAA,mBAAA/6C,CAAA,CAAA2D,IAAA,SAAAoB,CAAA,CAAA42C,MAAA,YAAA52C,CAAA,CAAAg2C,GAAA,GAAA/6C,CAAA,CAAA+6C,GAAA,EAAAh2C,CAAA,CAAA62C,QAAA,SAAAjhC,CAAA,MAAAnb,CAAA,GAAAQ,CAAA,CAAA+6C,GAAA,SAAAv7C,CAAA,GAAAA,CAAA,CAAAyf,IAAA,IAAAla,CAAA,CAAAT,CAAA,CAAA43C,UAAA,IAAA18C,CAAA,CAAAd,KAAA,EAAAqG,CAAA,CAAAia,IAAA,GAAA1a,CAAA,CAAA63C,OAAA,eAAAp3C,CAAA,CAAA42C,MAAA,KAAA52C,CAAA,CAAA42C,MAAA,WAAA52C,CAAA,CAAAg2C,GAAA,GAAA/1C,CAAA,GAAAD,CAAA,CAAA62C,QAAA,SAAAjhC,CAAA,IAAAnb,CAAA,IAAAuF,CAAA,CAAA42C,MAAA,YAAA52C,CAAA,CAAAg2C,GAAA,OAAAl2C,SAAA,sCAAAE,CAAA,CAAA62C,QAAA,SAAAjhC,CAAA,cAAAyhC,aAAAp3C,CAAA,QAAAV,CAAA,KAAA+3C,MAAA,EAAAr3C,CAAA,YAAAA,CAAA,KAAAV,CAAA,CAAAg4C,QAAA,GAAAt3C,CAAA,WAAAA,CAAA,KAAAV,CAAA,CAAAi4C,UAAA,GAAAv3C,CAAA,KAAAV,CAAA,CAAAk4C,QAAA,GAAAx3C,CAAA,WAAAy3C,UAAA,CAAAj1C,IAAA,CAAAlD,CAAA,cAAAo4C,cAAA13C,CAAA,QAAAV,CAAA,GAAAU,CAAA,CAAA23C,UAAA,QAAAr4C,CAAA,CAAAX,IAAA,oBAAAW,CAAA,CAAAy2C,GAAA,EAAA/1C,CAAA,CAAA23C,UAAA,GAAAr4C,CAAA,aAAAs2C,QAAA51C,CAAA,SAAAy3C,UAAA,MAAAJ,MAAA,aAAAr3C,CAAA,CAAAsI,OAAA,CAAA8uC,YAAA,cAAAviB,KAAA,iBAAA9uB,OAAAzG,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAS,CAAA,GAAAT,CAAA,CAAA9E,CAAA,OAAAuF,CAAA,SAAAA,CAAA,CAAApC,IAAA,CAAA2B,CAAA,4BAAAA,CAAA,CAAA0a,IAAA,SAAA1a,CAAA,OAAAi5B,KAAA,CAAAj5B,CAAA,CAAAhF,MAAA,SAAAmF,CAAA,OAAAzE,CAAA,YAAAgf,KAAA,aAAAva,CAAA,GAAAH,CAAA,CAAAhF,MAAA,OAAAS,CAAA,CAAA4C,IAAA,CAAA2B,CAAA,EAAAG,CAAA,UAAAua,IAAA,CAAAtgB,KAAA,GAAA4F,CAAA,CAAAG,CAAA,GAAAua,IAAA,CAAAC,IAAA,OAAAD,IAAA,SAAAA,IAAA,CAAAtgB,KAAA,GAAAsG,CAAA,EAAAga,IAAA,CAAAC,IAAA,OAAAD,IAAA,YAAAhf,CAAA,CAAAgf,IAAA,GAAAhf,CAAA,gBAAA6E,SAAA,CAAAL,OAAA,CAAAF,CAAA,kCAAA02C,iBAAA,CAAAv4C,SAAA,GAAAw4C,0BAAA,EAAAx2C,CAAA,CAAA02C,CAAA,mBAAAz8C,KAAA,EAAAu8C,0BAAA,EAAA/1C,YAAA,SAAAT,CAAA,CAAAw2C,0BAAA,mBAAAv8C,KAAA,EAAAs8C,iBAAA,EAAA91C,YAAA,SAAA81C,iBAAA,CAAA4B,WAAA,GAAAlC,MAAA,CAAAO,0BAAA,EAAAljC,CAAA,wBAAAzT,CAAA,CAAAu4C,mBAAA,aAAA73C,CAAA,QAAAV,CAAA,wBAAAU,CAAA,IAAAA,CAAA,CAAAJ,WAAA,WAAAN,CAAA,KAAAA,CAAA,KAAA02C,iBAAA,6BAAA12C,CAAA,CAAAs4C,WAAA,IAAAt4C,CAAA,CAAAwa,IAAA,OAAAxa,CAAA,CAAAw4C,IAAA,aAAA93C,CAAA,WAAAI,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAArB,CAAA,EAAAi2C,0BAAA,KAAAj2C,CAAA,CAAAwB,SAAA,GAAAy0C,0BAAA,EAAAP,MAAA,CAAA11C,CAAA,EAAA+S,CAAA,yBAAA/S,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAAy0C,CAAA,GAAAn2C,CAAA,KAAAV,CAAA,CAAAy4C,KAAA,aAAA/3C,CAAA,aAAAw2C,OAAA,EAAAx2C,CAAA,OAAAo2C,qBAAA,CAAAE,aAAA,CAAA74C,SAAA,GAAAi4C,MAAA,CAAAY,aAAA,CAAA74C,SAAA,EAAAgvB,CAAA,iCAAAntB,CAAA,CAAAg3C,aAAA,GAAAA,aAAA,EAAAh3C,CAAA,CAAA04C,KAAA,aAAAh4C,CAAA,EAAAD,CAAA,EAAAhF,CAAA,EAAA0E,CAAA,EAAAzE,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAAmD,OAAA,OAAA3D,CAAA,OAAA87C,aAAA,CAAA3+B,IAAA,CAAA3X,CAAA,EAAAD,CAAA,EAAAhF,CAAA,EAAA0E,CAAA,GAAAzE,CAAA,UAAAsE,CAAA,CAAAu4C,mBAAA,CAAA93C,CAAA,IAAAvF,CAAA,GAAAA,CAAA,CAAAwf,IAAA,GAAAy8B,IAAA,WAAAz2C,CAAA,WAAAA,CAAA,CAAAia,IAAA,GAAAja,CAAA,CAAAtG,KAAA,GAAAc,CAAA,CAAAwf,IAAA,WAAAo8B,qBAAA,CAAAD,CAAA,GAAAT,MAAA,CAAAS,CAAA,EAAApjC,CAAA,gBAAA2iC,MAAA,CAAAS,CAAA,EAAA37C,CAAA,iCAAAk7C,MAAA,CAAAS,CAAA,6DAAA72C,CAAA,CAAAiE,IAAA,aAAAvD,CAAA,QAAAV,CAAA,GAAAc,MAAA,CAAAJ,CAAA,GAAAD,CAAA,gBAAAhF,CAAA,IAAAuE,CAAA,EAAAS,CAAA,CAAAyC,IAAA,CAAAzH,CAAA,UAAAgF,CAAA,CAAAqgC,OAAA,aAAApmB,KAAA,WAAAja,CAAA,CAAAzF,MAAA,SAAA0F,CAAA,GAAAD,CAAA,CAAAsI,GAAA,QAAArI,CAAA,IAAAV,CAAA,SAAA0a,IAAA,CAAAtgB,KAAA,GAAAsG,CAAA,EAAAga,IAAA,CAAAC,IAAA,OAAAD,IAAA,WAAAA,IAAA,CAAAC,IAAA,OAAAD,IAAA,QAAA1a,CAAA,CAAAyG,MAAA,GAAAA,MAAA,EAAA6vC,OAAA,CAAAn4C,SAAA,KAAAmC,WAAA,EAAAg2C,OAAA,EAAA/gB,KAAA,WAAAA,MAAAv1B,CAAA,aAAAwJ,IAAA,WAAAkR,IAAA,WAAA88B,IAAA,QAAAC,KAAA,GAAA/2C,CAAA,OAAAia,IAAA,YAAA28B,QAAA,cAAAD,MAAA,gBAAAZ,GAAA,GAAA/1C,CAAA,OAAAy3C,UAAA,CAAAnvC,OAAA,CAAAovC,aAAA,IAAAp4C,CAAA,WAAAS,CAAA,kBAAAA,CAAA,CAAA2iB,MAAA,OAAA3nB,CAAA,CAAA4C,IAAA,OAAAoC,CAAA,MAAAw4B,KAAA,EAAAx4B,CAAA,CAAArC,KAAA,cAAAqC,CAAA,IAAAC,CAAA,MAAAi4C,IAAA,WAAAA,KAAA,SAAAh+B,IAAA,WAAAja,CAAA,QAAAy3C,UAAA,IAAAE,UAAA,kBAAA33C,CAAA,CAAArB,IAAA,QAAAqB,CAAA,CAAA+1C,GAAA,cAAAmC,IAAA,KAAAlB,iBAAA,WAAAA,kBAAA13C,CAAA,aAAA2a,IAAA,QAAA3a,CAAA,MAAAS,CAAA,kBAAAo4C,OAAAp9C,CAAA,EAAA0E,CAAA,WAAAjF,CAAA,CAAAmE,IAAA,YAAAnE,CAAA,CAAAu7C,GAAA,GAAAz2C,CAAA,EAAAS,CAAA,CAAAia,IAAA,GAAAjf,CAAA,EAAA0E,CAAA,KAAAM,CAAA,CAAA42C,MAAA,WAAA52C,CAAA,CAAAg2C,GAAA,GAAA/1C,CAAA,KAAAP,CAAA,aAAAA,CAAA,QAAAg4C,UAAA,CAAAn9C,MAAA,MAAAmF,CAAA,SAAAA,CAAA,QAAAzE,CAAA,QAAAy8C,UAAA,CAAAh4C,CAAA,GAAAjF,CAAA,GAAAQ,CAAA,CAAA28C,UAAA,iBAAA38C,CAAA,CAAAq8C,MAAA,SAAAc,MAAA,aAAAn9C,CAAA,CAAAq8C,MAAA,SAAAvuC,IAAA,QAAA2jB,CAAA,GAAA1xB,CAAA,CAAA4C,IAAA,CAAA3C,CAAA,eAAA+X,CAAA,GAAAhY,CAAA,CAAA4C,IAAA,CAAA3C,CAAA,qBAAAyxB,CAAA,IAAA1Z,CAAA,aAAAjK,IAAA,GAAA9N,CAAA,CAAAs8C,QAAA,SAAAa,MAAA,CAAAn9C,CAAA,CAAAs8C,QAAA,gBAAAxuC,IAAA,GAAA9N,CAAA,CAAAu8C,UAAA,SAAAY,MAAA,CAAAn9C,CAAA,CAAAu8C,UAAA,cAAA9qB,CAAA,aAAA3jB,IAAA,GAAA9N,CAAA,CAAAs8C,QAAA,SAAAa,MAAA,CAAAn9C,CAAA,CAAAs8C,QAAA,qBAAAvkC,CAAA,QAAA7N,KAAA,qDAAA4D,IAAA,GAAA9N,CAAA,CAAAu8C,UAAA,SAAAY,MAAA,CAAAn9C,CAAA,CAAAu8C,UAAA,YAAAN,MAAA,WAAAA,OAAAj3C,CAAA,EAAAV,CAAA,aAAAS,CAAA,QAAA03C,UAAA,CAAAn9C,MAAA,MAAAyF,CAAA,SAAAA,CAAA,QAAAN,CAAA,QAAAg4C,UAAA,CAAA13C,CAAA,OAAAN,CAAA,CAAA43C,MAAA,SAAAvuC,IAAA,IAAA/N,CAAA,CAAA4C,IAAA,CAAA8B,CAAA,wBAAAqJ,IAAA,GAAArJ,CAAA,CAAA83C,UAAA,QAAAv8C,CAAA,GAAAyE,CAAA,aAAAzE,CAAA,iBAAAgF,CAAA,mBAAAA,CAAA,KAAAhF,CAAA,CAAAq8C,MAAA,IAAA/3C,CAAA,IAAAA,CAAA,IAAAtE,CAAA,CAAAu8C,UAAA,KAAAv8C,CAAA,cAAAR,CAAA,GAAAQ,CAAA,GAAAA,CAAA,CAAA28C,UAAA,cAAAn9C,CAAA,CAAAmE,IAAA,GAAAqB,CAAA,EAAAxF,CAAA,CAAAu7C,GAAA,GAAAz2C,CAAA,EAAAtE,CAAA,SAAA27C,MAAA,gBAAA38B,IAAA,GAAAhf,CAAA,CAAAu8C,UAAA,EAAA5hC,CAAA,SAAAizB,QAAA,CAAApuC,CAAA,MAAAouC,QAAA,WAAAA,SAAA5oC,CAAA,EAAAV,CAAA,oBAAAU,CAAA,CAAArB,IAAA,QAAAqB,CAAA,CAAA+1C,GAAA,qBAAA/1C,CAAA,CAAArB,IAAA,mBAAAqB,CAAA,CAAArB,IAAA,QAAAqb,IAAA,GAAAha,CAAA,CAAA+1C,GAAA,gBAAA/1C,CAAA,CAAArB,IAAA,SAAAu5C,IAAA,QAAAnC,GAAA,GAAA/1C,CAAA,CAAA+1C,GAAA,OAAAY,MAAA,kBAAA38B,IAAA,yBAAAha,CAAA,CAAArB,IAAA,IAAAW,CAAA,UAAA0a,IAAA,GAAA1a,CAAA,GAAAqW,CAAA,KAAAyiC,MAAA,WAAAA,OAAAp4C,CAAA,aAAAV,CAAA,QAAAm4C,UAAA,CAAAn9C,MAAA,MAAAgF,CAAA,SAAAA,CAAA,QAAAS,CAAA,QAAA03C,UAAA,CAAAn4C,CAAA,OAAAS,CAAA,CAAAw3C,UAAA,KAAAv3C,CAAA,cAAA4oC,QAAA,CAAA7oC,CAAA,CAAA43C,UAAA,EAAA53C,CAAA,CAAAy3C,QAAA,GAAAE,aAAA,CAAA33C,CAAA,GAAA4V,CAAA,OAAA0iC,KAAA,WAAAC,OAAAt4C,CAAA,aAAAV,CAAA,QAAAm4C,UAAA,CAAAn9C,MAAA,MAAAgF,CAAA,SAAAA,CAAA,QAAAS,CAAA,QAAA03C,UAAA,CAAAn4C,CAAA,OAAAS,CAAA,CAAAs3C,MAAA,KAAAr3C,CAAA,QAAAjF,CAAA,GAAAgF,CAAA,CAAA43C,UAAA,kBAAA58C,CAAA,CAAA4D,IAAA,QAAAc,CAAA,GAAA1E,CAAA,CAAAg7C,GAAA,EAAA2B,aAAA,CAAA33C,CAAA,YAAAN,CAAA,YAAAyF,KAAA,8BAAAqzC,aAAA,WAAAA,cAAAj5C,CAAA,EAAAS,CAAA,EAAAhF,CAAA,gBAAA67C,QAAA,KAAAj3C,QAAA,EAAAoG,MAAA,CAAAzG,CAAA,GAAA43C,UAAA,EAAAn3C,CAAA,EAAAo3C,OAAA,EAAAp8C,CAAA,oBAAA47C,MAAA,UAAAZ,GAAA,GAAA/1C,CAAA,GAAA2V,CAAA,OAAArW,CAAA;AAAA,SAAAk5C,mBAAAz9C,CAAA,EAAAiF,CAAA,EAAAV,CAAA,EAAAS,CAAA,EAAAN,CAAA,EAAAjF,CAAA,EAAAiyB,CAAA,cAAAzxB,CAAA,GAAAD,CAAA,CAAAP,CAAA,EAAAiyB,CAAA,GAAA1Z,CAAA,GAAA/X,CAAA,CAAAtB,KAAA,WAAAqB,CAAA,gBAAAuE,CAAA,CAAAvE,CAAA,KAAAC,CAAA,CAAAif,IAAA,GAAAja,CAAA,CAAA+S,CAAA,IAAA5U,OAAA,CAAAE,OAAA,CAAA0U,CAAA,EAAA0jC,IAAA,CAAA12C,CAAA,EAAAN,CAAA;AAAA,SAAAg5C,kBAAA19C,CAAA,6BAAAiF,CAAA,SAAAV,CAAA,GAAA1B,SAAA,aAAAO,OAAA,WAAA4B,CAAA,EAAAN,CAAA,QAAAjF,CAAA,GAAAO,CAAA,CAAA+C,KAAA,CAAAkC,CAAA,EAAAV,CAAA,YAAAo5C,MAAA39C,CAAA,IAAAy9C,kBAAA,CAAAh+C,CAAA,EAAAuF,CAAA,EAAAN,CAAA,EAAAi5C,KAAA,EAAAC,MAAA,UAAA59C,CAAA,cAAA49C,OAAA59C,CAAA,IAAAy9C,kBAAA,CAAAh+C,CAAA,EAAAuF,CAAA,EAAAN,CAAA,EAAAi5C,KAAA,EAAAC,MAAA,WAAA59C,CAAA,KAAA29C,KAAA;AAAA,SAAAp/C,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KADA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMs5C,WAAW,0BAAAC,QAAA;EACf;AACF;AACA;EACE,SAAAD,YAAY9wC,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAs/C,WAAA;IACnB9wC,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAAi4C,WAAA,GAAM;MACJlxC,OAAO,EAAEuqC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtCuC,MAAM,EAAE3sC,OAAO,CAAC2sC,MAAM;MACtB55C,MAAM,EAAEiN,OAAO,CAACjN;IAClB,CAAC;;IAED;AACJ;AACA;AACA;IACIiH,KAAA,CAAKg3C,UAAU,GAAG7G,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;;IAE9C;AACJ;AACA;AACA;IACIpwC,KAAA,CAAKi3C,UAAU,GACbjxC,OAAO,CAACkxC,SAAS,KAAK31C,SAAS,GAAGyE,OAAO,CAACkxC,SAAS,GAAG,IAAI;;IAE5D;AACJ;AACA;AACA;IACIl3C,KAAA,CAAKm3C,cAAc,GAAGn3C,KAAA,CAAKi3C,UAAU;;IAErC;AACJ;AACA;AACA;IACIj3C,KAAA,CAAKo3C,oBAAoB,GAAGpxC,OAAO,CAACqxC,WAAW,KAAK91C,SAAS;;IAE7D;AACJ;AACA;AACA;IACIvB,KAAA,CAAKs3C,YAAY,GACftxC,OAAO,CAACqxC,WAAW,KAAK91C,SAAS,GAAGyE,OAAO,CAACqxC,WAAW,GAAG,IAAI;IAEhE,IAAI,CAACr3C,KAAA,CAAKs3C,YAAY,EAAE;MACtBt3C,KAAA,CAAKi3C,UAAU,GAAG,KAAK;IACzB;;IAEA;AACJ;AACA;AACA;IACIj3C,KAAA,CAAKu3C,aAAa,GAAGvxC,OAAO,CAACwxC,YAAY;IAEzC,IAAMC,SAAS,GACbzxC,OAAO,CAACyxC,SAAS,KAAKl2C,SAAS,GAAGyE,OAAO,CAACyxC,SAAS,GAAG,gBAAgB;IAExE,IAAMC,QAAQ,GACZ1xC,OAAO,CAAC0xC,QAAQ,KAAKn2C,SAAS,GAAGyE,OAAO,CAAC0xC,QAAQ,GAAG,cAAc;IAEpE,IAAMC,eAAe,GACnB3xC,OAAO,CAAC2xC,eAAe,KAAKp2C,SAAS,GACjCyE,OAAO,CAAC2xC,eAAe,GACvBF,SAAS,GAAG,SAAS;IAE3B,IAAMG,aAAa,GACjB5xC,OAAO,CAAC4xC,aAAa,KAAKr2C,SAAS,GAAGyE,OAAO,CAAC4xC,aAAa,GAAG,QAAQ;IAExE,IAAMC,iBAAiB,GACrB7xC,OAAO,CAAC6xC,iBAAiB,KAAKt2C,SAAS,GACnCyE,OAAO,CAAC6xC,iBAAiB,GACzBJ,SAAS,GAAG,WAAW;IAE7B,IAAI,OAAOG,aAAa,KAAK,QAAQ,EAAE;MACrC;AACN;AACA;AACA;MACM53C,KAAA,CAAK83C,cAAc,GAAG3H,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MACpDpwC,KAAA,CAAK83C,cAAc,CAACC,WAAW,GAAGH,aAAa;MAC/C53C,KAAA,CAAK83C,cAAc,CAACL,SAAS,GAAGI,iBAAiB;IACnD,CAAC,MAAM;MACL73C,KAAA,CAAK83C,cAAc,GAAGF,aAAa;IACrC;IAEA,IAAMI,KAAK,GAAGhyC,OAAO,CAACgyC,KAAK,KAAKz2C,SAAS,GAAGyE,OAAO,CAACgyC,KAAK,GAAG,GAAG;IAE/D,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B;AACN;AACA;AACA;MACMh4C,KAAA,CAAKi4C,MAAM,GAAG9H,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC5CpwC,KAAA,CAAKi4C,MAAM,CAACF,WAAW,GAAGC,KAAK;MAC/Bh4C,KAAA,CAAKi4C,MAAM,CAACR,SAAS,GAAGE,eAAe;IACzC,CAAC,MAAM;MACL33C,KAAA,CAAKi4C,MAAM,GAAGD,KAAK;IACrB;IAEA,IAAME,WAAW,GACfl4C,KAAA,CAAKs3C,YAAY,IAAI,CAACt3C,KAAA,CAAKi3C,UAAU,GAAGj3C,KAAA,CAAK83C,cAAc,GAAG93C,KAAA,CAAKi4C,MAAM;;IAE3E;AACJ;AACA;AACA;IACIj4C,KAAA,CAAKm4C,aAAa,GAAGhI,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACrDpwC,KAAA,CAAKm4C,aAAa,CAACC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACjDp4C,KAAA,CAAKm4C,aAAa,CAACC,YAAY,CAAC,eAAe,EAAEz5C,MAAM,CAAC,CAACqB,KAAA,CAAKi3C,UAAU,CAAC,CAAC;IAC1Ej3C,KAAA,CAAKm4C,aAAa,CAACE,KAAK,GAAGX,QAAQ;IACnC13C,KAAA,CAAKm4C,aAAa,CAAChG,WAAW,CAAC+F,WAAW,CAAC;IAE3Cl4C,KAAA,CAAKm4C,aAAa,CAAC93C,gBAAgB,CACjCwC,kBAAS,CAAClM,KAAK,EACfqJ,KAAA,CAAKs4C,YAAY,CAAC74C,IAAI,CAAAO,KAAK,CAAC,EAC5B,KACF,CAAC;IAED,IAAMu4C,UAAU,GACdd,SAAS,GACT,GAAG,GACH1I,uBAAkB,GAClB,GAAG,GACHE,kBAAa,IACZjvC,KAAA,CAAKi3C,UAAU,IAAIj3C,KAAA,CAAKs3C,YAAY,GAAG,GAAG,GAAGpI,oBAAe,GAAG,EAAE,CAAC,IAClElvC,KAAA,CAAKs3C,YAAY,GAAG,EAAE,GAAG,mBAAmB,CAAC;IAChD,IAAM1xC,OAAO,GAAG5F,KAAA,CAAK4F,OAAO;IAC5BA,OAAO,CAAC6xC,SAAS,GAAGc,UAAU;IAC9B3yC,OAAO,CAACusC,WAAW,CAACnyC,KAAA,CAAKm4C,aAAa,CAAC;IACvCvyC,OAAO,CAACusC,WAAW,CAACnyC,KAAA,CAAKg3C,UAAU,CAAC;;IAEpC;AACJ;AACA;AACA;AACA;IACIh3C,KAAA,CAAKw4C,qBAAqB,GAAG,EAAE;;IAE/B;AACJ;AACA;AACA;IACIx4C,KAAA,CAAKy4C,gBAAgB,GAAG,IAAI;IAAC,OAAAz4C,KAAA;EAC/B;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAm3C,WAAA,EAAAC,QAAA;EAAA,OAAAr/C,YAAA,CAAAo/C,WAAA;IAAAn/C,GAAA;IAAAC,KAAA,EAMA,SAAA8gD,0BAA0BA,CAACrxC,UAAU,EAAE;MACrC,IAAMsxC,MAAM,GAAG,IAAI,CAAC7F,MAAM,CAAC,CAAC,CAAC8F,YAAY,CAAC,CAAC;MAC3C,IAAMC,mBAAmB,GAAG,IAAIC,GAAG,CACjCH,MAAM,CAACI,OAAO,CAAC,UAACC,KAAK;QAAA,OAAKA,KAAK,CAACC,eAAe,CAAC5xC,UAAU,CAAC;MAAA,EAC7D,CAAC;MACD,IAAI,IAAI,CAACkwC,aAAa,KAAKh2C,SAAS,EAAE;QACpC5H,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC29C,aAAa,CAAC,GAC7B,IAAI,CAACA,aAAa,CAAC/wC,OAAO,CAAC,UAACG,IAAI;UAAA,OAAKkyC,mBAAmB,CAACp5B,GAAG,CAAC9Y,IAAI,CAAC;QAAA,EAAC,GACnEkyC,mBAAmB,CAACp5B,GAAG,CAAC,IAAI,CAAC83B,aAAa,CAAC;MACjD;MAEA,IAAI,CAAC,IAAI,CAACH,oBAAoB,EAAE;QAC9B,IAAMC,WAAW,GAAG,CAACsB,MAAM,CAACO,IAAI,CAC9B,UAACF,KAAK;UAAA,IAAAG,gBAAA;UAAA,OAAK,EAAAA,gBAAA,GAAAH,KAAK,CAACI,SAAS,CAAC,CAAC,cAAAD,gBAAA,uBAAjBA,gBAAA,CAAmBE,0BAA0B,CAAC,CAAC,MAAK,KAAK;QAAA,CACtE,CAAC;QACD,IAAI,CAACC,cAAc,CAACjC,WAAW,CAAC;MAClC;MACA,OAAO19C,KAAK,CAACse,IAAI,CAAC4gC,mBAAmB,CAAC;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAAlhD,GAAA;IAAAC,KAAA;MAAA,IAAA2hD,eAAA,GAAA5C,iBAAA,cAAAlD,mBAAA,GAAAuC,IAAA,CAIA,SAAAwD,QAAqBnyC,UAAU;QAAA,IAAAmwC,YAAA,EAAAiC,OAAA,EAAAvgD,CAAA,EAAAgI,EAAA,EAAA0E,OAAA;QAAA,OAAA6tC,mBAAA,GAAA59B,IAAA,UAAA6jC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA3yC,IAAA,GAAA2yC,QAAA,CAAAzhC,IAAA;YAAA;cAAA,IACxB7Q,UAAU;gBAAAsyC,QAAA,CAAAzhC,IAAA;gBAAA;cAAA;cACb,IAAI,IAAI,CAACugC,gBAAgB,EAAE;gBACzB,IAAI,CAAC7yC,OAAO,CAAC4pC,KAAK,CAACoK,OAAO,GAAG,MAAM;gBACnC,IAAI,CAACnB,gBAAgB,GAAG,KAAK;cAC/B;cAAC,OAAAkB,QAAA,CAAAxE,MAAA;YAAA;cAAAwE,QAAA,CAAAzhC,IAAA;cAAA,OAIwB7b,OAAO,CAACw9C,GAAG,CACpC,IAAI,CAACnB,0BAA0B,CAACrxC,UAAU,CAAC,CAACD,GAAG,CAAC,UAAC0yC,WAAW;gBAAA,OAC1D,IAAA79C,oBAAS,EAAC;kBAAA,OAAM69C,WAAW;gBAAA,EAAC;cAAA,CAC9B,CACF,CAAC;YAAA;cAJKtC,YAAY,GAAAmC,QAAA,CAAA3E,IAAA;cAMZyE,OAAO,GAAGjC,YAAY,CAACh/C,MAAM,GAAG,CAAC;cACvC,IAAI,IAAI,CAACigD,gBAAgB,IAAIgB,OAAO,EAAE;gBACpC,IAAI,CAAC7zC,OAAO,CAAC4pC,KAAK,CAACoK,OAAO,GAAGH,OAAO,GAAG,EAAE,GAAG,MAAM;gBAClD,IAAI,CAAChB,gBAAgB,GAAGgB,OAAO;cACjC;cAAC,KAEG,IAAAx/C,aAAM,EAACu9C,YAAY,EAAE,IAAI,CAACgB,qBAAqB,CAAC;gBAAAmB,QAAA,CAAAzhC,IAAA;gBAAA;cAAA;cAAA,OAAAyhC,QAAA,CAAAxE,MAAA;YAAA;cAIpD,IAAAzD,mBAAc,EAAC,IAAI,CAACsF,UAAU,CAAC;;cAE/B;cACA,KAAS99C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGs2C,YAAY,CAACh/C,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;gBAC/C0M,OAAO,GAAGuqC,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;gBAC5CxqC,OAAO,CAACm0C,SAAS,GAAGvC,YAAY,CAACt+C,CAAC,CAAC;gBACnC,IAAI,CAAC89C,UAAU,CAAC7E,WAAW,CAACvsC,OAAO,CAAC;cACtC;cAEA,IAAI,CAAC4yC,qBAAqB,GAAGhB,YAAY;YAAC;YAAA;cAAA,OAAAmC,QAAA,CAAAxD,IAAA;UAAA;QAAA,GAAAqD,OAAA;MAAA,CAC3C;MAAA,SAnCKQ,cAAcA,CAAAC,EAAA;QAAA,OAAAV,eAAA,CAAAv9C,KAAA,OAAAF,SAAA;MAAA;MAAA,OAAdk+C,cAAc;IAAA;IAqCpB;AACF;AACA;AACA;IAHE;EAAA;IAAAriD,GAAA;IAAAC,KAAA,EAIA,SAAA0gD,YAAYA,CAAC13C,KAAK,EAAE;MAClBA,KAAK,CAAC5D,cAAc,CAAC,CAAC;MACtB,IAAI,CAACk9C,aAAa,CAAC,CAAC;MACpB,IAAI,CAAC/C,cAAc,GAAG,IAAI,CAACF,UAAU;IACvC;;IAEA;AACF;AACA;EAFE;IAAAt/C,GAAA;IAAAC,KAAA,EAGA,SAAAsiD,aAAaA,CAAA,EAAG;MACd,IAAI,CAACt0C,OAAO,CAACu0C,SAAS,CAACC,MAAM,CAAClL,oBAAe,CAAC;MAC9C,IAAI,IAAI,CAAC+H,UAAU,EAAE;QACnB,IAAA7F,gBAAW,EAAC,IAAI,CAAC0G,cAAc,EAAE,IAAI,CAACG,MAAM,CAAC;MAC/C,CAAC,MAAM;QACL,IAAA7G,gBAAW,EAAC,IAAI,CAAC6G,MAAM,EAAE,IAAI,CAACH,cAAc,CAAC;MAC/C;MACA,IAAI,CAACb,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;MAClC,IAAI,CAACkB,aAAa,CAACC,YAAY,CAAC,eAAe,EAAEz5C,MAAM,CAAC,CAAC,IAAI,CAACs4C,UAAU,CAAC,CAAC;IAC5E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAt/C,GAAA;IAAAC,KAAA,EAKA,SAAAyiD,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC/C,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3/C,GAAA;IAAAC,KAAA,EAKA,SAAA0hD,cAAcA,CAACjC,WAAW,EAAE;MAC1B,IAAI,IAAI,CAACC,YAAY,KAAKD,WAAW,EAAE;QACrC;MACF;MACA,IAAI,CAACC,YAAY,GAAGD,WAAW;MAC/B,IAAI,CAACzxC,OAAO,CAACu0C,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;MACjD,IAAI,IAAI,CAACjD,cAAc,EAAE;QACvB,IAAI,CAAC+C,aAAa,CAAC,CAAC;MACtB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAviD,GAAA;IAAAC,KAAA,EAOA,SAAA0iD,YAAYA,CAACpD,SAAS,EAAE;MACtB,IAAI,CAACC,cAAc,GAAGD,SAAS;MAC/B,IAAI,CAAC,IAAI,CAACI,YAAY,IAAI,IAAI,CAACL,UAAU,KAAKC,SAAS,EAAE;QACvD;MACF;MACA,IAAI,CAACgD,aAAa,CAAC,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAviD,GAAA;IAAAC,KAAA,EAMA,SAAA2iD,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACtD,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAt/C,GAAA;IAAAC,KAAA,EAKA,SAAA+6C,MAAMA,CAACS,QAAQ,EAAE;MACf,IAAI,CAAC4G,cAAc,CAAC5G,QAAQ,CAAC/rC,UAAU,CAAC;IAC1C;EAAC;AAAA,EAtSuBkrC,iBAAO;AAAA,IAAAv8C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAySlB4gD,WAAW;;;;;;;;ACtV1B,IAAAxD,IAAA,GAAAr4C,OAAA;AACA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAu4C,SAAA,GAAAp2C,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANnC;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMg9C,MAAM,0BAAAzD,QAAA;EACV;AACF;AACA;EACE,SAAAyD,OAAYx0C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAgjD,MAAA;IACnBx0C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAA27C,MAAA,GAAM;MACJ50C,OAAO,EAAEuqC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtCuC,MAAM,EAAE3sC,OAAO,CAAC2sC,MAAM;MACtB55C,MAAM,EAAEiN,OAAO,CAACjN;IAClB,CAAC;IAED,IAAM0+C,SAAS,GACbzxC,OAAO,CAACyxC,SAAS,KAAKl2C,SAAS,GAAGyE,OAAO,CAACyxC,SAAS,GAAG,WAAW;IAEnE,IAAMO,KAAK,GAAGhyC,OAAO,CAACgyC,KAAK,KAAKz2C,SAAS,GAAGyE,OAAO,CAACgyC,KAAK,GAAG,QAAQ;IAEpE,IAAMyC,gBAAgB,GACpBz0C,OAAO,CAACy0C,gBAAgB,KAAKl5C,SAAS,GAClCyE,OAAO,CAACy0C,gBAAgB,GACxB,YAAY;;IAElB;AACJ;AACA;AACA;IACIz6C,KAAA,CAAKi4C,MAAM,GAAG,IAAI;IAElB,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAC7Bh4C,KAAA,CAAKi4C,MAAM,GAAG9H,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC5CpwC,KAAA,CAAKi4C,MAAM,CAACR,SAAS,GAAGgD,gBAAgB;MACxCz6C,KAAA,CAAKi4C,MAAM,CAACF,WAAW,GAAGC,KAAK;IACjC,CAAC,MAAM;MACLh4C,KAAA,CAAKi4C,MAAM,GAAGD,KAAK;MACnBh4C,KAAA,CAAKi4C,MAAM,CAACkC,SAAS,CAAC16B,GAAG,CAACg7B,gBAAgB,CAAC;IAC7C;IAEA,IAAM/C,QAAQ,GAAG1xC,OAAO,CAAC0xC,QAAQ,GAAG1xC,OAAO,CAAC0xC,QAAQ,GAAG,gBAAgB;IAEvE,IAAM3qC,MAAM,GAAGojC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CrjC,MAAM,CAAC0qC,SAAS,GAAGA,SAAS,GAAG,QAAQ;IACvC1qC,MAAM,CAACqrC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACrCrrC,MAAM,CAACsrC,KAAK,GAAGX,QAAQ;IACvB3qC,MAAM,CAAColC,WAAW,CAACnyC,KAAA,CAAKi4C,MAAM,CAAC;IAE/BlrC,MAAM,CAAC1M,gBAAgB,CACrBwC,kBAAS,CAAClM,KAAK,EACfqJ,KAAA,CAAKs4C,YAAY,CAAC74C,IAAI,CAAAO,KAAK,CAAC,EAC5B,KACF,CAAC;IAED,IAAMu4C,UAAU,GACdd,SAAS,GAAG,GAAG,GAAG1I,uBAAkB,GAAG,GAAG,GAAGE,kBAAa;IAC5D,IAAMrpC,OAAO,GAAG5F,KAAA,CAAK4F,OAAO;IAC5BA,OAAO,CAAC6xC,SAAS,GAAGc,UAAU;IAC9B3yC,OAAO,CAACusC,WAAW,CAACplC,MAAM,CAAC;;IAE3B;AACJ;AACA;IACI/M,KAAA,CAAK06C,eAAe,GAAG10C,OAAO,CAAC20C,UAAU,GAAG30C,OAAO,CAAC20C,UAAU,GAAGp5C,SAAS;;IAE1E;AACJ;AACA;AACA;IACIvB,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI/mC,KAAA,CAAK66C,SAAS,GAAG70C,OAAO,CAAC80C,QAAQ,KAAKv5C,SAAS,GAAGyE,OAAO,CAAC80C,QAAQ,GAAG,IAAI;;IAEzE;AACJ;AACA;AACA;IACI96C,KAAA,CAAK+6C,SAAS,GAAGx5C,SAAS;IAE1B,IAAIvB,KAAA,CAAK66C,SAAS,EAAE;MAClB76C,KAAA,CAAK4F,OAAO,CAACu0C,SAAS,CAAC16B,GAAG,CAACovB,iBAAY,CAAC;IAC1C;IAAC,OAAA7uC,KAAA;EACH;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA66C,MAAA,EAAAzD,QAAA;EAAA,OAAAr/C,YAAA,CAAA8iD,MAAA;IAAA7iD,GAAA;IAAAC,KAAA,EAIA,SAAA0gD,YAAYA,CAAC13C,KAAK,EAAE;MAClBA,KAAK,CAAC5D,cAAc,CAAC,CAAC;MACtB,IAAI,IAAI,CAAC09C,eAAe,KAAKn5C,SAAS,EAAE;QACtC,IAAI,CAACm5C,eAAe,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,IAAI,CAACM,WAAW,CAAC,CAAC;MACpB;IACF;;IAEA;AACF;AACA;EAFE;IAAArjD,GAAA;IAAAC,KAAA,EAGA,SAAAojD,WAAWA,CAAA,EAAG;MACZ,IAAM5zC,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAMmI,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAACD,IAAI,EAAE;QACT;QACA;QACA;MACF;MACA,IAAMz/B,QAAQ,GAAGy/B,IAAI,CAACjV,WAAW,CAAC,CAAC;MACnC,IAAIxqB,QAAQ,KAAKja,SAAS,EAAE;QAC1B,IAAI,IAAI,CAACq5C,SAAS,GAAG,CAAC,IAAIp/B,QAAQ,IAAI,CAAC,GAAGjO,IAAI,CAAC0H,EAAE,CAAC,KAAK,CAAC,EAAE;UACxDgmC,IAAI,CAAChV,OAAO,CAAC;YACXzqB,QAAQ,EAAE,CAAC;YACXurB,QAAQ,EAAE,IAAI,CAAC6T,SAAS;YACxB5T,MAAM,EAAEjlB;UACV,CAAC,CAAC;QACJ,CAAC,MAAM;UACLk5B,IAAI,CAAC/V,WAAW,CAAC,CAAC,CAAC;QACrB;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAvtC,GAAA;IAAAC,KAAA,EAKA,SAAA+6C,MAAMA,CAACS,QAAQ,EAAE;MACf,IAAM/rC,UAAU,GAAG+rC,QAAQ,CAAC/rC,UAAU;MACtC,IAAI,CAACA,UAAU,EAAE;QACf;MACF;MACA,IAAMmU,QAAQ,GAAGnU,UAAU,CAACyL,SAAS,CAAC0I,QAAQ;MAC9C,IAAIA,QAAQ,IAAI,IAAI,CAACu/B,SAAS,EAAE;QAC9B,IAAM/3B,SAAS,GAAG,SAAS,GAAGxH,QAAQ,GAAG,MAAM;QAC/C,IAAI,IAAI,CAACq/B,SAAS,EAAE;UAClB,IAAMM,QAAQ,GAAG,IAAI,CAACv1C,OAAO,CAACu0C,SAAS,CAACgB,QAAQ,CAACtM,iBAAY,CAAC;UAC9D,IAAI,CAACsM,QAAQ,IAAI3/B,QAAQ,KAAK,CAAC,EAAE;YAC/B,IAAI,CAAC5V,OAAO,CAACu0C,SAAS,CAAC16B,GAAG,CAACovB,iBAAY,CAAC;UAC1C,CAAC,MAAM,IAAIsM,QAAQ,IAAI3/B,QAAQ,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC5V,OAAO,CAACu0C,SAAS,CAACtgD,MAAM,CAACg1C,iBAAY,CAAC;UAC7C;QACF;QACA,IAAI,CAACoJ,MAAM,CAACzI,KAAK,CAACxsB,SAAS,GAAGA,SAAS;MACzC;MACA,IAAI,CAAC+3B,SAAS,GAAGv/B,QAAQ;IAC3B;EAAC;AAAA,EApJkB+2B,iBAAO;AAAA,IAAAv8C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuJbskD,MAAM;;;;;;;;ACrLrB,IAAAlH,IAAA,GAAAr4C,OAAA;AACA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAu4C,SAAA,GAAAp2C,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANnC;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQM49C,IAAI,0BAAArE,QAAA;EACR;AACF;AACA;EACE,SAAAqE,KAAYp1C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA4jD,IAAA;IACnBp1C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAAu8C,IAAA,GAAM;MACJx1C,OAAO,EAAEuqC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtCr3C,MAAM,EAAEiN,OAAO,CAACjN;IAClB,CAAC;IAED,IAAM0+C,SAAS,GACbzxC,OAAO,CAACyxC,SAAS,KAAKl2C,SAAS,GAAGyE,OAAO,CAACyxC,SAAS,GAAG,SAAS;IAEjE,IAAM/3B,KAAK,GAAG1Z,OAAO,CAAC0Z,KAAK,KAAKne,SAAS,GAAGyE,OAAO,CAAC0Z,KAAK,GAAG,CAAC;IAE7D,IAAM27B,eAAe,GACnBr1C,OAAO,CAACq1C,eAAe,KAAK95C,SAAS,GACjCyE,OAAO,CAACq1C,eAAe,GACvB5D,SAAS,GAAG,KAAK;IAEvB,IAAM6D,gBAAgB,GACpBt1C,OAAO,CAACs1C,gBAAgB,KAAK/5C,SAAS,GAClCyE,OAAO,CAACs1C,gBAAgB,GACxB7D,SAAS,GAAG,MAAM;IAExB,IAAM8D,WAAW,GACfv1C,OAAO,CAACu1C,WAAW,KAAKh6C,SAAS,GAAGyE,OAAO,CAACu1C,WAAW,GAAG,GAAG;IAC/D,IAAMC,YAAY,GAChBx1C,OAAO,CAACw1C,YAAY,KAAKj6C,SAAS,GAAGyE,OAAO,CAACw1C,YAAY,GAAG,QAAQ;IAEtE,IAAMC,cAAc,GAClBz1C,OAAO,CAACy1C,cAAc,KAAKl6C,SAAS,GAAGyE,OAAO,CAACy1C,cAAc,GAAG,SAAS;IAC3E,IAAMC,eAAe,GACnB11C,OAAO,CAAC01C,eAAe,KAAKn6C,SAAS,GACjCyE,OAAO,CAAC01C,eAAe,GACvB,UAAU;IAEhB,IAAMC,SAAS,GAAGxL,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAClDuL,SAAS,CAAClE,SAAS,GAAG4D,eAAe;IACrCM,SAAS,CAACvD,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACxCuD,SAAS,CAACtD,KAAK,GAAGoD,cAAc;IAChCE,SAAS,CAACxJ,WAAW,CACnB,OAAOoJ,WAAW,KAAK,QAAQ,GAC3BpL,QAAQ,CAACyL,cAAc,CAACL,WAAW,CAAC,GACpCA,WACN,CAAC;IAEDI,SAAS,CAACt7C,gBAAgB,CACxBwC,kBAAS,CAAClM,KAAK,EACfqJ,KAAA,CAAKs4C,YAAY,CAAC74C,IAAI,CAAAO,KAAA,EAAO0f,KAAK,CAAC,EACnC,KACF,CAAC;IAED,IAAMm8B,UAAU,GAAG1L,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACnDyL,UAAU,CAACpE,SAAS,GAAG6D,gBAAgB;IACvCO,UAAU,CAACzD,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACzCyD,UAAU,CAACxD,KAAK,GAAGqD,eAAe;IAClCG,UAAU,CAAC1J,WAAW,CACpB,OAAOqJ,YAAY,KAAK,QAAQ,GAC5BrL,QAAQ,CAACyL,cAAc,CAACJ,YAAY,CAAC,GACrCA,YACN,CAAC;IAEDK,UAAU,CAACx7C,gBAAgB,CACzBwC,kBAAS,CAAClM,KAAK,EACfqJ,KAAA,CAAKs4C,YAAY,CAAC74C,IAAI,CAAAO,KAAA,EAAO,CAAC0f,KAAK,CAAC,EACpC,KACF,CAAC;IAED,IAAM64B,UAAU,GACdd,SAAS,GAAG,GAAG,GAAG1I,uBAAkB,GAAG,GAAG,GAAGE,kBAAa;IAC5D,IAAMrpC,OAAO,GAAG5F,KAAA,CAAK4F,OAAO;IAC5BA,OAAO,CAAC6xC,SAAS,GAAGc,UAAU;IAC9B3yC,OAAO,CAACusC,WAAW,CAACwJ,SAAS,CAAC;IAC9B/1C,OAAO,CAACusC,WAAW,CAAC0J,UAAU,CAAC;;IAE/B;AACJ;AACA;AACA;IACI77C,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;IAAC,OAAA/mC,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAy7C,IAAA,EAAArE,QAAA;EAAA,OAAAr/C,YAAA,CAAA0jD,IAAA;IAAAzjD,GAAA;IAAAC,KAAA,EAKA,SAAA0gD,YAAYA,CAAC54B,KAAK,EAAE9e,KAAK,EAAE;MACzBA,KAAK,CAAC5D,cAAc,CAAC,CAAC;MACtB,IAAI,CAAC8+C,YAAY,CAACp8B,KAAK,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAA/nB,GAAA;IAAAC,KAAA,EAIA,SAAAkkD,YAAYA,CAACp8B,KAAK,EAAE;MAClB,IAAMtY,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAMmI,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAACD,IAAI,EAAE;QACT;QACA;QACA;MACF;MACA,IAAMc,WAAW,GAAGd,IAAI,CAAClV,OAAO,CAAC,CAAC;MAClC,IAAIgW,WAAW,KAAKx6C,SAAS,EAAE;QAC7B,IAAMy6C,OAAO,GAAGf,IAAI,CAACrN,kBAAkB,CAACmO,WAAW,GAAGr8B,KAAK,CAAC;QAC5D,IAAI,IAAI,CAACk7B,SAAS,GAAG,CAAC,EAAE;UACtB,IAAIK,IAAI,CAAC7U,YAAY,CAAC,CAAC,EAAE;YACvB6U,IAAI,CAACpT,gBAAgB,CAAC,CAAC;UACzB;UACAoT,IAAI,CAAChV,OAAO,CAAC;YACXZ,IAAI,EAAE2W,OAAO;YACbjV,QAAQ,EAAE,IAAI,CAAC6T,SAAS;YACxB5T,MAAM,EAAEjlB;UACV,CAAC,CAAC;QACJ,CAAC,MAAM;UACLk5B,IAAI,CAAC3V,OAAO,CAAC0W,OAAO,CAAC;QACvB;MACF;IACF;EAAC;AAAA,EA3HgBzJ,iBAAO;AAAA,IAAAv8C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8HXklD,IAAI;;;;;;;;AC5JnB,IAAAa,WAAA,GAAA7+C,sBAAA,CAAAnC,OAAA;AACA,IAAAihD,YAAA,GAAA9+C,sBAAA,CAAAnC,OAAA;AACA,IAAAkhD,OAAA,GAAA/+C,sBAAA,CAAAnC,OAAA;AACA,IAAAmhD,KAAA,GAAAh/C,sBAAA,CAAAnC,OAAA;AAA6B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAN7B;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6+C,QAAQA,CAACr2C,OAAO,EAAE;EAChCA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;EAEhC;EACA,IAAMs2C,QAAQ,GAAG,IAAIz2C,mBAAU,CAAC,CAAC;EAEjC,IAAM02C,WAAW,GAAGv2C,OAAO,CAACq/B,IAAI,KAAK9jC,SAAS,GAAGyE,OAAO,CAACq/B,IAAI,GAAG,IAAI;EACpE,IAAIkX,WAAW,EAAE;IACfD,QAAQ,CAAC57C,IAAI,CAAC,IAAI06C,aAAI,CAACp1C,OAAO,CAACw2C,WAAW,CAAC,CAAC;EAC9C;EAEA,IAAMC,aAAa,GAAGz2C,OAAO,CAACkb,MAAM,KAAK3f,SAAS,GAAGyE,OAAO,CAACkb,MAAM,GAAG,IAAI;EAC1E,IAAIu7B,aAAa,EAAE;IACjBH,QAAQ,CAAC57C,IAAI,CAAC,IAAI85C,eAAM,CAACx0C,OAAO,CAAC02C,aAAa,CAAC,CAAC;EAClD;EAEA,IAAMC,kBAAkB,GACtB32C,OAAO,CAAC8zC,WAAW,KAAKv4C,SAAS,GAAGyE,OAAO,CAAC8zC,WAAW,GAAG,IAAI;EAChE,IAAI6C,kBAAkB,EAAE;IACtBL,QAAQ,CAAC57C,IAAI,CAAC,IAAIo2C,oBAAW,CAAC9wC,OAAO,CAAC42C,kBAAkB,CAAC,CAAC;EAC5D;EAEA,OAAON,QAAQ;AACjB;;;;;;;;;;;;;;AC3DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMO,OAAO;EACX;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,QAAYC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAAAxlD,eAAA,OAAAqlD,OAAA;IACrC;AACJ;AACA;AACA;IACI,IAAI,CAACI,MAAM,GAAGH,KAAK;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACI,YAAY,GAAGH,WAAW;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACI,MAAM,GAAGH,KAAK;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACI,OAAO,GAAG,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACJ;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GAAG,CAAC;EAC3B;;EAEA;AACF;AACA;EAFE,OAAA5lD,YAAA,CAAAmlD,OAAA;IAAAllD,GAAA;IAAAC,KAAA,EAGA,SAAAyB,KAAKA,CAAA,EAAG;MACN,IAAI,CAAC+jD,OAAO,CAAC5kD,MAAM,GAAG,CAAC;MACvB,IAAI,CAAC6kD,MAAM,GAAG,CAAC;MACf,IAAI,CAACC,gBAAgB,GAAG,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAA3lD,GAAA;IAAAC,KAAA,EAIA,SAAA2lD,MAAMA,CAAC3pC,CAAC,EAAEC,CAAC,EAAE;MACX,IAAI,CAACupC,OAAO,CAAC18C,IAAI,CAACkT,CAAC,EAAEC,CAAC,EAAE6yB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IACrC;;IAEA;AACF;AACA;EAFE;IAAAhvC,GAAA;IAAAC,KAAA,EAGA,SAAA0B,GAAGA,CAAA,EAAG;MACJ,IAAI,IAAI,CAAC8jD,OAAO,CAAC5kD,MAAM,GAAG,CAAC,EAAE;QAC3B;QACA;QACA,OAAO,KAAK;MACd;MACA,IAAMwkD,KAAK,GAAGtW,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACwW,MAAM;MACtC,IAAMK,SAAS,GAAG,IAAI,CAACJ,OAAO,CAAC5kD,MAAM,GAAG,CAAC;MACzC,IAAI,IAAI,CAAC4kD,OAAO,CAACI,SAAS,GAAG,CAAC,CAAC,GAAGR,KAAK,EAAE;QACvC;QACA;QACA,OAAO,KAAK;MACd;;MAEA;MACA,IAAIS,UAAU,GAAGD,SAAS,GAAG,CAAC;MAC9B,OAAOC,UAAU,GAAG,CAAC,IAAI,IAAI,CAACL,OAAO,CAACK,UAAU,GAAG,CAAC,CAAC,GAAGT,KAAK,EAAE;QAC7DS,UAAU,IAAI,CAAC;MACjB;MAEA,IAAM1W,QAAQ,GAAG,IAAI,CAACqW,OAAO,CAACI,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACK,UAAU,GAAG,CAAC,CAAC;MAC3E;MACA;MACA;MACA,IAAI1W,QAAQ,GAAG,IAAI,GAAG,EAAE,EAAE;QACxB,OAAO,KAAK;MACd;MAEA,IAAM7yB,EAAE,GAAG,IAAI,CAACkpC,OAAO,CAACI,SAAS,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACK,UAAU,CAAC;MAC7D,IAAMtpC,EAAE,GAAG,IAAI,CAACipC,OAAO,CAACI,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACK,UAAU,GAAG,CAAC,CAAC;MACrE,IAAI,CAACJ,MAAM,GAAG9vC,IAAI,CAACqV,KAAK,CAACzO,EAAE,EAAED,EAAE,CAAC;MAChC,IAAI,CAACopC,gBAAgB,GAAG/vC,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC,GAAG4yB,QAAQ;MAC/D,OAAO,IAAI,CAACuW,gBAAgB,GAAG,IAAI,CAACJ,YAAY;IAClD;;IAEA;AACF;AACA;EAFE;IAAAvlD,GAAA;IAAAC,KAAA,EAGA,SAAAwqB,WAAWA,CAAA,EAAG;MACZ,OAAO,CAAC,IAAI,CAAC86B,YAAY,GAAG,IAAI,CAACI,gBAAgB,IAAI,IAAI,CAACL,MAAM;IAClE;;IAEA;AACF;AACA;EAFE;IAAAtlD,GAAA;IAAAC,KAAA,EAGA,SAAA8lD,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACL,MAAM;IACpB;EAAC;AAAA;AAAA,IAAArnD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY2mD,OAAO;;;;;;;;AC7HtB;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA7mD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACbynD,MAAM,EAAE;AACV,CAAC;;;;;;;;;;ACND,IAAAn4C,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAA2iD,SAAA,GAAAxgD,sBAAA,CAAAnC,OAAA;AAAgD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALhD;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMqgD,WAAW,0BAAA/3C,WAAA;EACf;AACF;AACA;EACE,SAAA+3C,YAAY73C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAqmD,WAAA;IACnB79C,KAAA,GAAAnB,UAAA,OAAAg/C,WAAA;;IAEA;AACJ;AACA;IACI79C,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;IAEP,IAAIuD,OAAO,IAAIA,OAAO,CAAC7E,WAAW,EAAE;MAClCnB,KAAA,CAAKmB,WAAW,GAAG6E,OAAO,CAAC7E,WAAW;IACxC;;IAEA;AACJ;AACA;AACA;IACInB,KAAA,CAAKiL,IAAI,GAAG,IAAI;IAEhBjL,KAAA,CAAK89C,SAAS,CAAC,IAAI,CAAC;IAAC,OAAA99C,KAAA;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAk+C,WAAA,EAAA/3C,WAAA;EAAA,OAAApO,YAAA,CAAAmmD,WAAA;IAAAlmD,GAAA;IAAAC,KAAA,EAMA,SAAAmmD,SAASA,CAAA,EAAG;MACV,OAAO,sBAAwB,IAAI,CAAC15C,GAAG,CAAC25C,iBAAmB,CAACL,MAAM,CAAC;IACrE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhmD,GAAA;IAAAC,KAAA,EAKA,SAAAk7C,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC7nC,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtT,GAAA;IAAAC,KAAA,EAMA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtmD,GAAA;IAAAC,KAAA,EAMA,SAAAkmD,SAASA,CAACI,MAAM,EAAE;MAChB,IAAI,CAACh5C,GAAG,CAAC84C,iBAAmB,CAACL,MAAM,EAAEO,MAAM,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAvmD,GAAA;IAAAC,KAAA,EAMA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAI,CAAC6D,IAAI,GAAG7D,GAAG;IACjB;EAAC;AAAA,EAlFuBrD,eAAU;AAqFpC;AACA;AACA;AACA;AACA;AACO,SAASo6C,GAAGA,CAAClD,IAAI,EAAEv7B,KAAK,EAAEqnB,QAAQ,EAAE;EACzC,IAAM6B,aAAa,GAAGqS,IAAI,CAACzV,iBAAiB,CAAC,CAAC;EAC9C,IAAIoD,aAAa,EAAE;IACjB,IAAM/1B,MAAM,GAAG,CAAC+1B,aAAa,CAAC,CAAC,CAAC,GAAGlpB,KAAK,CAAC,CAAC,CAAC,EAAEkpB,aAAa,CAAC,CAAC,CAAC,GAAGlpB,KAAK,CAAC,CAAC,CAAC,CAAC;IACzEu7B,IAAI,CAAC1U,eAAe,CAAC;MACnBQ,QAAQ,EAAEA,QAAQ,KAAKxlC,SAAS,GAAGwlC,QAAQ,GAAG,GAAG;MACjDC,MAAM,EAAE/kB,cAAM;MACdpP,MAAM,EAAEooC,IAAI,CAAC7O,oBAAoB,CAACv5B,MAAM;IAC1C,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASurC,WAAWA,CAACnD,IAAI,EAAEv7B,KAAK,EAAEoV,MAAM,EAAEiS,QAAQ,EAAE;EACzD,IAAMgV,WAAW,GAAGd,IAAI,CAAClV,OAAO,CAAC,CAAC;EAElC,IAAIgW,WAAW,KAAKx6C,SAAS,EAAE;IAC7B;EACF;EAEA,IAAMy6C,OAAO,GAAGf,IAAI,CAACrN,kBAAkB,CAACmO,WAAW,GAAGr8B,KAAK,CAAC;EAC5D,IAAMsiB,aAAa,GAAGiZ,IAAI,CAAC5T,oBAAoB,CAAC2U,OAAO,CAAC;EAExD,IAAIf,IAAI,CAAC7U,YAAY,CAAC,CAAC,EAAE;IACvB6U,IAAI,CAACpT,gBAAgB,CAAC,CAAC;EACzB;EACAoT,IAAI,CAAChV,OAAO,CAAC;IACX7vB,UAAU,EAAE4rB,aAAa;IACzBlN,MAAM,EAAEA,MAAM;IACdiS,QAAQ,EAAEA,QAAQ,KAAKxlC,SAAS,GAAGwlC,QAAQ,GAAG,GAAG;IACjDC,MAAM,EAAEjlB;EACV,CAAC,CAAC;AACJ;AAAC,IAAA/rB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc2nD,WAAW;;;;;;;;ACtK1B,IAAAlzC,oBAAA,GAAAvN,sBAAA,CAAAnC,OAAA;AACA,IAAAojD,aAAA,GAAAxtC,uBAAA,CAAA5V,OAAA;AAA0D,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ1D;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKM8gD,eAAe,0BAAAC,YAAA;EACnB;AACF;AACA;EACE,SAAAD,gBAAYt4C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA8mD,eAAA;IACnBt+C,KAAA,GAAAnB,UAAA,OAAAy/C,eAAA;IAEAt4C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;AACA;IACIhG,KAAA,CAAKw+C,MAAM,GAAGx4C,OAAO,CAAC0Z,KAAK,GAAG1Z,OAAO,CAAC0Z,KAAK,GAAG,CAAC;;IAE/C;AACJ;AACA;AACA;IACI1f,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;IAAC,OAAA/mC,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEL,SAAA,CAAA2+C,eAAA,EAAAC,YAAA;EAAA,OAAA7mD,YAAA,CAAA4mD,eAAA;IAAA3mD,GAAA;IAAAC,KAAA,EAOA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,IAAIQ,SAAS,GAAG,KAAK;MACrB,IAAIR,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC3V,QAAQ,EAAE;QACxD,IAAM8nD,YAAY,GAAG;QACnBT,eAAe,CAACn2C,aACjB;QACD,IAAMV,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAM0tB,MAAM,GAAGmpB,eAAe,CAAC31C,UAAU;QACzC,IAAMoX,KAAK,GAAGg/B,YAAY,CAACC,QAAQ,GAAG,CAAC,IAAI,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM;QAChE,IAAMvD,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;QAC1B,IAAAkD,yBAAW,EAACnD,IAAI,EAAEv7B,KAAK,EAAEoV,MAAM,EAAE,IAAI,CAAC8lB,SAAS,CAAC;QAChD8D,YAAY,CAAC1hD,cAAc,CAAC,CAAC;QAC7ByhD,SAAS,GAAG,IAAI;MAClB;MACA,OAAO,CAACA,SAAS;IACnB;EAAC;AAAA,EA5C2BZ,qBAAW;AAAA,IAAA7nD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA+C1BooD,eAAe;;;;;;;;;AC7D9B,IAAA3zC,oBAAA,GAAAvN,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AAAsC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AANtC;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASq8C,GAAGA,CAAC3T,QAAQ,EAAE;EAC5B,IAAM0Y,UAAU,GAAG9iD,SAAS;EAC5B;AACF;AACA;AACA;EACE,OAAO,UAAU8E,KAAK,EAAE;IACtB,IAAIi+C,IAAI,GAAG,IAAI;IACf,KAAK,IAAI3lD,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG09C,UAAU,CAACpmD,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MACnD2lD,IAAI,GAAGA,IAAI,IAAID,UAAU,CAAC1lD,CAAC,CAAC,CAAC0H,KAAK,CAAC;MACnC,IAAI,CAACi+C,IAAI,EAAE;QACT;MACF;IACF;IACA,OAAOA,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,UAAU,GAAA7oD,OAAA,CAAA6oD,UAAA,GAAG,SAAbA,UAAUA,CAAab,eAAe,EAAE;EACnD,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OACEA,aAAa,CAACi3C,MAAM,IACpB,EAAEj3C,aAAa,CAACk3C,OAAO,IAAIl3C,aAAa,CAACm3C,OAAO,CAAC,IACjD,CAACn3C,aAAa,CAAC62C,QAAQ;AAE3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMO,gBAAgB,GAAAjpD,OAAA,CAAAipD,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAajB,eAAe,EAAE;EACzD,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OACEA,aAAa,CAACi3C,MAAM,IACpB,EAAEj3C,aAAa,CAACk3C,OAAO,IAAIl3C,aAAa,CAACm3C,OAAO,CAAC,IACjDn3C,aAAa,CAAC62C,QAAQ;AAE1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMQ,KAAK,GAAAlpD,OAAA,CAAAkpD,KAAA,GAAG,SAARA,KAAKA,CAAav+C,KAAK,EAAE;EACpC,IAAMw+C,aAAa,GAAGx+C,KAAK,CAACwG,GAAG,CAACi4C,gBAAgB,CAAC,CAAC;EAClD,IAAMC,QAAQ,GAAGF,aAAa,CAAChyC,WAAW,CAAC,CAAC;EAC5C,IAAMmyC,aAAa,GAAG3+C,KAAK,CAACwG,GAAG,CAAC8F,gBAAgB,CAAC,CAAC,CAACqyC,aAAa;EAEhE,OAAOD,QAAQ,YAAYE,UAAU,GACjCF,QAAQ,CAACG,IAAI,CAACtE,QAAQ,CAACoE,aAAa,CAAC,GACrCH,aAAa,CAACjE,QAAQ,CAACoE,aAAa,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMG,iBAAiB,GAAAzpD,OAAA,CAAAypD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAa9+C,KAAK,EAAE;EAChD,IAAMw+C,aAAa,GAAGx+C,KAAK,CAACwG,GAAG,CAACi4C,gBAAgB,CAAC,CAAC;EAClD,IAAMC,QAAQ,GAAGF,aAAa,CAAChyC,WAAW,CAAC,CAAC;EAC5C,IAAMuyC,iBAAiB,GACrBL,QAAQ,YAAYE,UAAU,GAAGF,QAAQ,CAACG,IAAI,GAAGL,aAAa;EAEhE,OAAOO,iBAAiB,CAACC,YAAY,CAAC,UAAU,CAAC,GAAGT,KAAK,CAACv+C,KAAK,CAAC,GAAG,IAAI;AACzE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMi/C,MAAM,GAAA5pD,OAAA,CAAA4pD,MAAA,GAAG3kD,eAAI;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM4kD,KAAK,GAAA7pD,OAAA,CAAA6pD,KAAA,GAAG,SAARA,KAAKA,CAAa7B,eAAe,EAAE;EAC9C,OAAOA,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC5V,KAAK;AAC1D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMopD,iBAAiB,GAAA9pD,OAAA,CAAA8pD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAa9B,eAAe,EAAE;EAC1D,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OAAOA,aAAa,CAACiF,MAAM,IAAI,CAAC,IAAI,EAAEtD,WAAM,IAAIC,QAAG,IAAI5B,aAAa,CAACm3C,OAAO,CAAC;AAC/E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMe,KAAK,GAAA/pD,OAAA,CAAA+pD,KAAA,GAAG7kD,gBAAK;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM8kD,WAAW,GAAAhqD,OAAA,CAAAgqD,WAAA,GAAG,SAAdA,WAAWA,CAAahC,eAAe,EAAE;EACpD,OAAOA,eAAe,CAACphD,IAAI,IAAI,aAAa;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMqjD,WAAW,GAAAjqD,OAAA,CAAAiqD,WAAA,GAAG,SAAdA,WAAWA,CAAajC,eAAe,EAAE;EACpD,OAAOA,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAChE,WAAW;AAChE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM43C,WAAW,GAAAlqD,OAAA,CAAAkqD,WAAA,GAAG,SAAdA,WAAWA,CAAalC,eAAe,EAAE;EACpD,OAAOA,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC3V,QAAQ;AAC7D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMwpD,cAAc,GAAAnqD,OAAA,CAAAmqD,cAAA,GAAG,SAAjBA,cAAcA,CAAanC,eAAe,EAAE;EACvD,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OACE,CAACA,aAAa,CAACi3C,MAAM,IACrB,EAAEj3C,aAAa,CAACk3C,OAAO,IAAIl3C,aAAa,CAACm3C,OAAO,CAAC,IACjD,CAACn3C,aAAa,CAAC62C,QAAQ;AAE3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM0B,uBAAuB,GAAApqD,OAAA,CAAAoqD,uBAAA,GAAG,SAA1BA,uBAAuBA,CAAapC,eAAe,EAAE;EAChE,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OACE,CAACA,aAAa,CAACi3C,MAAM,KACpBr1C,QAAG,GAAG5B,aAAa,CAACk3C,OAAO,GAAGl3C,aAAa,CAACm3C,OAAO,CAAC,IACrD,CAACn3C,aAAa,CAAC62C,QAAQ;AAE3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM2B,mBAAmB,GAAArqD,OAAA,CAAAqqD,mBAAA,GAAG,SAAtBA,mBAAmBA,CAAarC,eAAe,EAAE;EAC5D,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OAAO4B,QAAG,GAAG5B,aAAa,CAACk3C,OAAO,GAAGl3C,aAAa,CAACm3C,OAAO;AAC5D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMsB,YAAY,GAAAtqD,OAAA,CAAAsqD,YAAA,GAAG,SAAfA,YAAYA,CAAatC,eAAe,EAAE;EACrD,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,OACE,CAACA,aAAa,CAACi3C,MAAM,IACrB,EAAEj3C,aAAa,CAACk3C,OAAO,IAAIl3C,aAAa,CAACm3C,OAAO,CAAC,IACjDn3C,aAAa,CAAC62C,QAAQ;AAE1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM6B,iBAAiB,GAAAvqD,OAAA,CAAAuqD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAavC,eAAe,EAAE;EAC1D,IAAMn2C,aAAa,GAAG;EACpBm2C,eAAe,CAACn2C,aACjB;EACD,IAAM24C,OAAO,GAAG,sBAAwB34C,aAAa,CAAC/O,MAAM,CAAE0nD,OAAO;EACrE,OACEA,OAAO,KAAK,OAAO,IACnBA,OAAO,KAAK,QAAQ,IACpBA,OAAO,KAAK,UAAU;EACtB;EACA;EACA;EACA,CAAC34C,aAAa,CAAC/O,MAAM,CAAC2nD,iBAAiB;AAE3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAA1qD,OAAA,CAAA0qD,SAAA,GAAG,SAAZA,SAASA,CAAa1C,eAAe,EAAE;EAClD,IAAM5xC,YAAY,GAAG,mDACnB4xC,eAAe,CACfn2C,aAAa;EACf,IAAA0G,eAAM,EACJnC,YAAY,KAAK9K,SAAS,EAC1B,qDACF,CAAC;EACD;EACA,OAAO8K,YAAY,CAACu0C,WAAW,IAAI,OAAO;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAA5qD,OAAA,CAAA4qD,SAAA,GAAG,SAAZA,SAASA,CAAa5C,eAAe,EAAE;EAClD,IAAM6C,UAAU,GAAG,mDACjB7C,eAAe,CACfn2C,aAAa;EACf,IAAA0G,eAAM,EACJsyC,UAAU,KAAKv/C,SAAS,EACxB,qDACF,CAAC;EACD;EACA,OAAOu/C,UAAU,CAACF,WAAW,KAAK,OAAO;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMG,OAAO,GAAA9qD,OAAA,CAAA8qD,OAAA,GAAG,SAAVA,OAAOA,CAAa9C,eAAe,EAAE;EAChD,IAAM6C,UAAU,GAAG,mDACjB7C,eAAe,CACfn2C,aAAa;EACf,IAAA0G,eAAM,EACJsyC,UAAU,KAAKv/C,SAAS,EACxB,qDACF,CAAC;EACD;EACA,OAAOu/C,UAAU,CAACF,WAAW,KAAK,KAAK;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMI,aAAa,GAAA/qD,OAAA,CAAA+qD,aAAA,GAAG,SAAhBA,aAAaA,CAAa/C,eAAe,EAAE;EACtD,IAAM5xC,YAAY,GAAG,mDACnB4xC,eAAe,CACfn2C,aAAa;EACf,IAAA0G,eAAM,EACJnC,YAAY,KAAK9K,SAAS,EAC1B,qDACF,CAAC;EACD,OAAO8K,YAAY,CAAC40C,SAAS,IAAI50C,YAAY,CAACU,MAAM,KAAK,CAAC;AAC5D,CAAC;;;;;;;;;ACtWD,IAAApC,oBAAA,GAAAvN,sBAAA,CAAAnC,OAAA;AACA,IAAAojD,aAAA,GAAAjhD,sBAAA,CAAAnC,OAAA;AAA2C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ3C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAWM0jD,kBAAkB,0BAAA3C,YAAA;EACtB;AACF;AACA;EACE,SAAA2C,mBAAYl7C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA0pD,kBAAA;IACnBl7C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAAqiD,kBAAA,IACE,4DAA8Dl7C,OAAO;IAGvE,IAAIA,OAAO,CAACm7C,eAAe,EAAE;MAC3BnhD,KAAA,CAAKmhD,eAAe,GAAGn7C,OAAO,CAACm7C,eAAe;IAChD;IAEA,IAAIn7C,OAAO,CAACo7C,eAAe,EAAE;MAC3BphD,KAAA,CAAKohD,eAAe,GAAGp7C,OAAO,CAACo7C,eAAe;IAChD;IAEA,IAAIp7C,OAAO,CAACq7C,eAAe,EAAE;MAC3BrhD,KAAA,CAAKqhD,eAAe,GAAGr7C,OAAO,CAACq7C,eAAe;IAChD;IAEA,IAAIr7C,OAAO,CAACs7C,aAAa,EAAE;MACzBthD,KAAA,CAAKshD,aAAa,GAAGt7C,OAAO,CAACs7C,aAAa;IAC5C;IAEA,IAAIt7C,OAAO,CAACu7C,QAAQ,EAAE;MACpBvhD,KAAA,CAAKuhD,QAAQ,GAAGv7C,OAAO,CAACu7C,QAAQ;IAClC;;IAEA;AACJ;AACA;AACA;IACIvhD,KAAA,CAAKwhD,sBAAsB,GAAG,KAAK;;IAEnC;AACJ;AACA;AACA;IACIxhD,KAAA,CAAKyhD,cAAc,GAAG,EAAE;IAAC,OAAAzhD,KAAA;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAuhD,kBAAA,EAAA3C,YAAA;EAAA,OAAA7mD,YAAA,CAAAwpD,kBAAA;IAAAvpD,GAAA;IAAAC,KAAA,EAMA,SAAA8pD,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACD,cAAc,CAACjpD,MAAM;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAb,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtmD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE,CAAC;;IAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAtmD,GAAA;IAAAC,KAAA,EASA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,IAAI,CAACA,eAAe,CAACn2C,aAAa,EAAE;QAClC,OAAO,IAAI;MACb;MAEA,IAAI22C,SAAS,GAAG,KAAK;MACrB,IAAI,CAACkD,sBAAsB,CAAC1D,eAAe,CAAC;MAC5C,IAAI,IAAI,CAACuD,sBAAsB,EAAE;QAC/B,IAAIvD,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC/D,WAAW,EAAE;UAC3D,IAAI,CAAC44C,eAAe,CAACnD,eAAe,CAAC;UACrC;UACAA,eAAe,CAACn2C,aAAa,CAAC9K,cAAc,CAAC,CAAC;QAChD,CAAC,MAAM,IAAIihD,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC5D,SAAS,EAAE;UAChE,IAAMi5C,SAAS,GAAG,IAAI,CAACN,aAAa,CAACrD,eAAe,CAAC;UACrD,IAAI,CAACuD,sBAAsB,GACzBI,SAAS,IAAI,IAAI,CAACH,cAAc,CAACjpD,MAAM,GAAG,CAAC;QAC/C;MACF,CAAC,MAAM;QACL,IAAIylD,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC7D,WAAW,EAAE;UAC3D,IAAMm5C,OAAO,GAAG,IAAI,CAACV,eAAe,CAAClD,eAAe,CAAC;UACrD,IAAI,CAACuD,sBAAsB,GAAGK,OAAO;UACrCpD,SAAS,GAAG,IAAI,CAAC8C,QAAQ,CAACM,OAAO,CAAC;QACpC,CAAC,MAAM,IAAI5D,eAAe,CAACphD,IAAI,IAAI0P,4BAAmB,CAAC9D,WAAW,EAAE;UAClE,IAAI,CAAC44C,eAAe,CAACpD,eAAe,CAAC;QACvC;MACF;MACA,OAAO,CAACQ,SAAS;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA9mD,GAAA;IAAAC,KAAA,EAKA,SAAAypD,eAAeA,CAACpD,eAAe,EAAE,CAAC;;IAElC;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtmD,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtmD,GAAA;IAAAC,KAAA,EAMA,SAAA2pD,QAAQA,CAACM,OAAO,EAAE;MAChB,OAAOA,OAAO;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAlqD,GAAA;IAAAC,KAAA,EAIA,SAAA+pD,sBAAsBA,CAAC1D,eAAe,EAAE;MACtC,IAAIA,eAAe,CAACj2C,cAAc,EAAE;QAClC,IAAI,CAACy5C,cAAc,GAAGxD,eAAe,CAACj2C,cAAc;MACtD;IACF;EAAC;AAAA,EAhJ8B61C,qBAAW;AAmJ5C;AACA;AACA;AACA;AACO,SAASiE,QAAQA,CAACtP,aAAa,EAAE;EACtC,IAAMh6C,MAAM,GAAGg6C,aAAa,CAACh6C,MAAM;EACnC,IAAIiV,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,KAAK,IAAIxU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;IAC/BuU,OAAO,IAAI+kC,aAAa,CAACt5C,CAAC,CAAC,CAACuU,OAAO;IACnCC,OAAO,IAAI8kC,aAAa,CAACt5C,CAAC,CAAC,CAACwU,OAAO;EACrC;EACA,OAAO;IAACD,OAAO,EAAEA,OAAO,GAAGjV,MAAM;IAAEkV,OAAO,EAAEA,OAAO,GAAGlV;EAAM,CAAC;AAC/D;AAAC,IAAAxC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcgrD,kBAAkB;;;;;;;;AC3MjC,IAAA7zB,WAAA,GAAApyB,OAAA;AAIA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AAMA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA+mD,QAAA,GAAAnxC,uBAAA,CAAA5V,OAAA;AAEsB,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAjBtB;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMykD,OAAO,0BAAAC,mBAAA;EACX;AACF;AACA;EACE,SAAAD,QAAYj8C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAyqD,OAAA;IACnBjiD,KAAA,GAAAnB,UAAA,OAAAojD,OAAA,GAAM;MACJV,QAAQ,EAAEpmD;IACZ,CAAC;IAED6K,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;AACA;IACIhG,KAAA,CAAKmiD,QAAQ,GAAGn8C,OAAO,CAACo8C,OAAO;;IAE/B;AACJ;AACA;IACIpiD,KAAA,CAAKqiD,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACIriD,KAAA,CAAKsiD,kBAAkB;;IAEvB;AACJ;AACA;AACA;IACItiD,KAAA,CAAKuiD,QAAQ,GAAG,KAAK;IAErB,IAAMC,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAC/Bx8C,OAAO,CAACw8C,SAAS,GACjB,IAAA3I,cAAG,EAACuG,yBAAc,EAAEY,wBAAa,CAAC;;IAEtC;AACJ;AACA;AACA;IACIhhD,KAAA,CAAKyiD,UAAU,GAAGz8C,OAAO,CAAC08C,WAAW,GACjC,IAAA7I,cAAG,EAAC6F,4BAAiB,EAAE8C,SAAS,CAAC,GACjCA,SAAS;;IAEb;AACJ;AACA;AACA;IACIxiD,KAAA,CAAK2iD,UAAU,GAAG,KAAK;IAAC,OAAA3iD,KAAA;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAsiD,OAAA,EAAAC,mBAAA;EAAA,OAAAxqD,YAAA,CAAAuqD,OAAA;IAAAtqD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE;MAC/B,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAI,CAAC,IAAI,CAACm7C,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,IAAI;QACpBn7C,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAACzN,gBAAgB,CAAC,CAAC;MAClC;MACA,IAAMgU,cAAc,GAAG,IAAI,CAACA,cAAc;MAC1C,IAAMK,QAAQ,GAAG16C,GAAG,CAACe,aAAa,CAAC,IAAAy6C,iBAAoB,EAACnB,cAAc,CAAC,CAAC;MACxE,IAAIA,cAAc,CAACjpD,MAAM,IAAI,IAAI,CAAC8pD,kBAAkB,EAAE;QACpD,IAAI,IAAI,CAACH,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,CAAC5E,MAAM,CAACuE,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD;QACA,IAAI,IAAI,CAACO,YAAY,EAAE;UACrB,IAAM3iC,KAAK,GAAG,CACZ,IAAI,CAAC2iC,YAAY,CAAC,CAAC,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,EAClCA,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAACO,YAAY,CAAC,CAAC,CAAC,CACnC;UACD,IAAMj7C,IAAG,GAAG62C,eAAe,CAAC72C,GAAG;UAC/B,IAAM6zC,IAAI,GAAG7zC,IAAG,CAAC8zC,OAAO,CAAC,CAAC;UAC1B,IAAA2H,iBAAe,EAACnjC,KAAK,EAAEu7B,IAAI,CAACvV,aAAa,CAAC,CAAC,CAAC;UAC5C,IAAAmD,kBAAgB,EAACnpB,KAAK,EAAEu7B,IAAI,CAACjV,WAAW,CAAC,CAAC,CAAC;UAC3CiV,IAAI,CAACpO,oBAAoB,CAACntB,KAAK,CAAC;QAClC;MACF,CAAC,MAAM,IAAI,IAAI,CAACyiC,QAAQ,EAAE;QACxB;QACA;QACA,IAAI,CAACA,QAAQ,CAAC9oD,KAAK,CAAC,CAAC;MACvB;MACA,IAAI,CAACgpD,YAAY,GAAGP,QAAQ;MAC5B,IAAI,CAACQ,kBAAkB,GAAGb,cAAc,CAACjpD,MAAM;MAC/CylD,eAAe,CAACn2C,aAAa,CAAC9K,cAAc,CAAC,CAAC;IAChD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArF,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAI,IAAI,CAACuG,cAAc,CAACjpD,MAAM,KAAK,CAAC,EAAE;QACpC,IAAI,CAAC,IAAI,CAACmqD,UAAU,IAAI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC7oD,GAAG,CAAC,CAAC,EAAE;UAC5D,IAAMmoB,QAAQ,GAAG,IAAI,CAAC0gC,QAAQ,CAAC//B,WAAW,CAAC,CAAC;UAC5C,IAAMjB,KAAK,GAAG,IAAI,CAACghC,QAAQ,CAACzE,QAAQ,CAAC,CAAC;UACtC,IAAM7qC,MAAM,GAAGooC,IAAI,CAACzV,iBAAiB,CAAC,CAAC;UACvC,IAAMsd,QAAQ,GAAG17C,GAAG,CAAC27C,8BAA8B,CAAClwC,MAAM,CAAC;UAC3D,IAAM+F,IAAI,GAAGxR,GAAG,CAAC47C,8BAA8B,CAAC,CAC9CF,QAAQ,CAAC,CAAC,CAAC,GAAGrhC,QAAQ,GAAGlU,IAAI,CAAC0O,GAAG,CAACkF,KAAK,CAAC,EACxC2hC,QAAQ,CAAC,CAAC,CAAC,GAAGrhC,QAAQ,GAAGlU,IAAI,CAAC4O,GAAG,CAACgF,KAAK,CAAC,CACzC,CAAC;UACF85B,IAAI,CAAC1U,eAAe,CAAC;YACnB1zB,MAAM,EAAEooC,IAAI,CAAC7O,oBAAoB,CAACxzB,IAAI,CAAC;YACvCmuB,QAAQ,EAAE,GAAG;YACbC,MAAM,EAAEjlB;UACV,CAAC,CAAC;QACJ;QACA,IAAI,IAAI,CAACwgC,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,GAAG,KAAK;UACrBtH,IAAI,CAACvN,cAAc,CAAC,CAAC;QACvB;QACA,OAAO,KAAK;MACd;MACA,IAAI,IAAI,CAACyU,QAAQ,EAAE;QACjB;QACA;QACA,IAAI,CAACA,QAAQ,CAAC9oD,KAAK,CAAC,CAAC;MACvB;MACA,IAAI,CAACgpD,YAAY,GAAG,IAAI;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1qD,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,IAAI,IAAI,CAACwD,cAAc,CAACjpD,MAAM,GAAG,CAAC,IAAI,IAAI,CAACiqD,UAAU,CAACxE,eAAe,CAAC,EAAE;QACtE,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAACmH,YAAY,GAAG,IAAI;QACxB;QACA,IAAIpH,IAAI,CAAC7U,YAAY,CAAC,CAAC,EAAE;UACvB6U,IAAI,CAACpT,gBAAgB,CAAC,CAAC;QACzB;QACA,IAAI,IAAI,CAACsa,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,CAAC9oD,KAAK,CAAC,CAAC;QACvB;QACA;QACA;QACA,IAAI,CAACspD,UAAU,GAAG,IAAI,CAAClB,cAAc,CAACjpD,MAAM,GAAG,CAAC;QAChD,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;AAAA,EA3JmB0oD,gBAAkB;AAAA,IAAAlrD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8JzB+rD,OAAO;;;;;;;;AC7LtB,IAAAF,UAAA,GAAA9mD,OAAA;AAKA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA4nC,mBAAA,GAAA5nC,OAAA;AACA,IAAA+mD,QAAA,GAAA5kD,sBAAA,CAAAnC,OAAA;AAA8C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAV9C;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMylD,UAAU,0BAAAf,mBAAA;EACd;AACF;AACA;EACE,SAAAe,WAAYj9C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAyrD,UAAA;IACnBj9C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAAokD,UAAA,GAAM;MACJ1B,QAAQ,EAAEpmD;IACZ,CAAC;;IAED;AACJ;AACA;AACA;IACI6E,KAAA,CAAKyiD,UAAU,GAAGz8C,OAAO,CAACw8C,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAAGtD,2BAAgB;;IAE1E;AACJ;AACA;AACA;IACIl/C,KAAA,CAAKkjD,UAAU,GAAG3hD,SAAS;;IAE3B;AACJ;AACA;AACA;IACIvB,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;IAAC,OAAA/mC,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAsjD,UAAA,EAAAf,mBAAA;EAAA,OAAAxqD,YAAA,CAAAurD,UAAA;IAAAtrD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE;MAC/B,IAAI,CAAC,IAAA0C,oBAAS,EAAC1C,eAAe,CAAC,EAAE;QAC/B;MACF;MAEA,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAID,IAAI,CAAC9R,cAAc,CAAC,CAAC,CAAC3tB,QAAQ,KAAK0S,2BAAO,EAAE;QAC9C;MACF;MACA,IAAM7X,IAAI,GAAGjP,GAAG,CAACyV,OAAO,CAAC,CAAC;MAC1B,IAAM9C,MAAM,GAAGkkC,eAAe,CAAC71C,KAAK;MACpC,IAAM+5B,KAAK,GAAG50B,IAAI,CAACqV,KAAK,CAACvM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG0D,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAG1D,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1E,IAAI,IAAI,CAAC6sC,UAAU,KAAK3hD,SAAS,EAAE;QACjC,IAAMme,KAAK,GAAGyiB,KAAK,GAAG,IAAI,CAAC+gB,UAAU;QACrCjI,IAAI,CAAC/N,sBAAsB,CAAC,CAACxtB,KAAK,CAAC;MACrC;MACA,IAAI,CAACwjC,UAAU,GAAG/gB,KAAK;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxqC,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,IAAI,CAAC,IAAA0C,oBAAS,EAAC1C,eAAe,CAAC,EAAE;QAC/B,OAAO,IAAI;MACb;MAEA,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1BD,IAAI,CAACvN,cAAc,CAAC,IAAI,CAACkN,SAAS,CAAC;MACnC,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjjD,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,IAAI,CAAC,IAAA0C,oBAAS,EAAC1C,eAAe,CAAC,EAAE;QAC/B,OAAO,KAAK;MACd;MAEA,IACE,IAAA8B,4BAAiB,EAAC9B,eAAe,CAAC,IAClC,IAAI,CAACwE,UAAU,CAACxE,eAAe,CAAC,EAChC;QACA,IAAM72C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/BA,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAACzN,gBAAgB,CAAC,CAAC;QAChC,IAAI,CAACyV,UAAU,GAAG3hD,SAAS;QAC3B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;AAAA,EA7FsB2/C,gBAAkB;AAAA,IAAAlrD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAgG5B+sD,UAAU;;;;;;;;AC1HzB,IAAA9lD,YAAA,GAAAC,sBAAA,CAAAnC,OAAA;AACA,IAAA0nC,QAAA,GAAAvlC,sBAAA,CAAAnC,OAAA;AAAyC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALzC;AACA;AACA;AAFA,IAOM2lD,SAAS,0BAAApjD,WAAA;EACb;AACF;AACA;EACE,SAAAojD,UAAY1L,SAAS,EAAE;IAAA,IAAAz3C,KAAA;IAAAxI,eAAA,OAAA2rD,SAAA;IACrBnjD,KAAA,GAAAnB,UAAA,OAAAskD,SAAA;;IAEA;AACJ;AACA;AACA;IACInjD,KAAA,CAAKojD,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACIpjD,KAAA,CAAK2L,QAAQ,GAAGwkC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7CpwC,KAAA,CAAK2L,QAAQ,CAAC6jC,KAAK,CAAClD,QAAQ,GAAG,UAAU;IACzCtsC,KAAA,CAAK2L,QAAQ,CAAC6jC,KAAK,CAACgD,aAAa,GAAG,MAAM;IAC1CxyC,KAAA,CAAK2L,QAAQ,CAAC8rC,SAAS,GAAG,SAAS,GAAGA,SAAS;;IAE/C;AACJ;AACA;AACA;IACIz3C,KAAA,CAAKiL,IAAI,GAAG,IAAI;;IAEhB;AACJ;AACA;AACA;IACIjL,KAAA,CAAKqjD,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;IACIrjD,KAAA,CAAKsjD,SAAS,GAAG,IAAI;IAAC,OAAAtjD,KAAA;EACxB;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAwjD,SAAA,EAAApjD,WAAA;EAAA,OAAArI,YAAA,CAAAyrD,SAAA;IAAAxrD,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACi7C,MAAM,CAAC,IAAI,CAAC;IACnB;;IAEA;AACF;AACA;EAFE;IAAAp7C,GAAA;IAAAC,KAAA,EAGA,SAAA2rD,OAAOA,CAAA,EAAG;MACR,IAAMC,UAAU,GAAG,IAAI,CAACH,WAAW;MACnC,IAAMI,QAAQ,GAAG,IAAI,CAACH,SAAS;MAC/B,IAAMI,EAAE,GAAG,IAAI;MACf,IAAMlU,KAAK,GAAG,IAAI,CAAC7jC,QAAQ,CAAC6jC,KAAK;MACjCA,KAAK,CAACmU,IAAI,GAAGp2C,IAAI,CAACkG,GAAG,CAAC+vC,UAAU,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGC,EAAE;MACtDlU,KAAK,CAACoU,GAAG,GAAGr2C,IAAI,CAACkG,GAAG,CAAC+vC,UAAU,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGC,EAAE;MACrDlU,KAAK,CAAC5xB,KAAK,GAAGrQ,IAAI,CAACC,GAAG,CAACi2C,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGE,EAAE;MACxDlU,KAAK,CAAC3xB,MAAM,GAAGtQ,IAAI,CAACC,GAAG,CAACi2C,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGE,EAAE;IAC3D;;IAEA;AACF;AACA;EAFE;IAAA/rD,GAAA;IAAAC,KAAA,EAGA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAI,IAAI,CAAC6D,IAAI,EAAE;QACb,IAAI,CAACA,IAAI,CAAC44C,mBAAmB,CAAC,CAAC,CAACzR,WAAW,CAAC,IAAI,CAACzmC,QAAQ,CAAC;QAC1D,IAAM6jC,KAAK,GAAG,IAAI,CAAC7jC,QAAQ,CAAC6jC,KAAK;QACjCA,KAAK,CAACmU,IAAI,GAAG,SAAS;QACtBnU,KAAK,CAACoU,GAAG,GAAG,SAAS;QACrBpU,KAAK,CAAC5xB,KAAK,GAAG,SAAS;QACvB4xB,KAAK,CAAC3xB,MAAM,GAAG,SAAS;MAC1B;MACA,IAAI,CAAC5S,IAAI,GAAG7D,GAAG;MACf,IAAI,IAAI,CAAC6D,IAAI,EAAE;QACb,IAAI,CAACA,IAAI,CAAC44C,mBAAmB,CAAC,CAAC,CAAC1R,WAAW,CAAC,IAAI,CAACxmC,QAAQ,CAAC;MAC5D;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAhU,GAAA;IAAAC,KAAA,EAIA,SAAAksD,SAASA,CAACN,UAAU,EAAEC,QAAQ,EAAE;MAC9B,IAAI,CAACJ,WAAW,GAAGG,UAAU;MAC7B,IAAI,CAACF,SAAS,GAAGG,QAAQ;MACzB,IAAI,CAACM,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACR,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAA5rD,GAAA;IAAAC,KAAA,EAGA,SAAAmsD,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAAC94C,IAAI,EAAE;QACd;MACF;MAEA,IAAMu4C,UAAU,GAAG,IAAI,CAACH,WAAW;MACnC,IAAMI,QAAQ,GAAG,IAAI,CAACH,SAAS;MAC/B,IAAMU,MAAM,GAAG,CACbR,UAAU,EACV,CAACA,UAAU,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC5BA,QAAQ,EACR,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,CAAC,CAAC,CAAC,CAC7B;MACD,IAAMlrC,WAAW,GAAG0rC,MAAM,CAAC58C,GAAG,CAC5B,IAAI,CAAC6D,IAAI,CAAC+3C,8BAA8B,EACxC,IAAI,CAAC/3C,IACP,CAAC;MACD;MACAqN,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,CAAC1c,KAAK,CAAC,CAAC;MACvC,IAAI,CAAC,IAAI,CAACwnD,SAAS,EAAE;QACnB,IAAI,CAACA,SAAS,GAAG,IAAIlkB,gBAAO,CAAC,CAAC5mB,WAAW,CAAC,CAAC;MAC7C,CAAC,MAAM;QACL,IAAI,CAAC8qC,SAAS,CAACnrB,cAAc,CAAC,CAAC3f,WAAW,CAAC,CAAC;MAC9C;IACF;;IAEA;AACF;AACA;EAFE;IAAA3gB,GAAA;IAAAC,KAAA,EAGA,SAAAqsD,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACb,SAAS;IACvB;EAAC;AAAA,EA9HqB7rD,oBAAU;AAAA,IAAAvB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAiInBitD,SAAS;;;;;;;;ACpIxB,IAAAx/C,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AACA,IAAAipD,IAAA,GAAA9mD,sBAAA,CAAAnC,OAAA;AACA,IAAA+mD,QAAA,GAAA5kD,sBAAA,CAAAnC,OAAA;AAA8C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAA4J,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAF,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAP9C;AACA;AACA,GAFA,CAGA;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAM2mD,gBAAgB,GAAG;EACvB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,UAAU;EAEpB;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAE,SAAS;EAElB;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE,QAAQ;EAEhB;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAE;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,IAKaC,YAAY,GAAAvuD,OAAA,CAAAuuD,YAAA,0BAAAjnD,MAAA;EACvB;AACF;AACA;AACA;AACA;EACE,SAAAinD,aAAY3nD,IAAI,EAAEyL,UAAU,EAAE21C,eAAe,EAAE;IAAA,IAAAj+C,KAAA;IAAAxI,eAAA,OAAAgtD,YAAA;IAC7CxkD,KAAA,GAAAnB,UAAA,OAAA2lD,YAAA,GAAM3nD,IAAI;;IAEV;AACJ;AACA;AACA;AACA;AACA;IACImD,KAAA,CAAKsI,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;AACA;IACItI,KAAA,CAAKi+C,eAAe,GAAGA,eAAe;IAAC,OAAAj+C,KAAA;EACzC;EAACL,SAAA,CAAA6kD,YAAA,EAAAjnD,MAAA;EAAA,OAAA7F,YAAA,CAAA8sD,YAAA;AAAA,EAvB+B1jD,eAAK;AA0BvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYM2jD,OAAO,0BAAAvC,mBAAA;EACX;AACF;AACA;EACE,SAAAuC,QAAYz+C,OAAO,EAAE;IAAA,IAAA0+C,gBAAA,EAAAC,kBAAA,EAAAC,qBAAA;IAAA,IAAA1gD,MAAA;IAAA1M,eAAA,OAAAitD,OAAA;IACnBvgD,MAAA,GAAArF,UAAA,OAAA4lD,OAAA;;IAEA;AACJ;AACA;IACIvgD,MAAA,CAAK5B,EAAE;;IAEP;AACJ;AACA;IACI4B,MAAA,CAAKtC,IAAI;;IAET;AACJ;AACA;IACIsC,MAAA,CAAKzB,EAAE;IAEPuD,OAAO,GAAGA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI9B,MAAA,CAAK2gD,IAAI,GAAG,IAAI1B,YAAS,CAACn9C,OAAO,CAACyxC,SAAS,IAAI,YAAY,CAAC;;IAE5D;AACJ;AACA;AACA;IACIvzC,MAAA,CAAK4gD,QAAQ,IAAAJ,gBAAA,GAAG1+C,OAAO,CAAC++C,OAAO,cAAAL,gBAAA,cAAAA,gBAAA,GAAI,EAAE;IAErC,IAAI1+C,OAAO,CAACg/C,QAAQ,EAAE;MACpB9gD,MAAA,CAAK8gD,QAAQ,GAAGh/C,OAAO,CAACg/C,QAAQ;IAClC;;IAEA;AACJ;AACA;AACA;IACI9gD,MAAA,CAAKm/C,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;IACIn/C,MAAA,CAAKu+C,UAAU,IAAAkC,kBAAA,GAAG3+C,OAAO,CAACw8C,SAAS,cAAAmC,kBAAA,cAAAA,kBAAA,GAAI5E,4BAAiB;;IAExD;AACJ;AACA;AACA;IACI77C,MAAA,CAAK+gD,gBAAgB,IAAAL,qBAAA,GACnB5+C,OAAO,CAACk/C,eAAe,cAAAN,qBAAA,cAAAA,qBAAA,GAAI1gD,MAAA,CAAKihD,sBAAsB;IAAC,OAAAjhD,MAAA;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAREvE,SAAA,CAAA8kD,OAAA,EAAAvC,mBAAA;EAAA,OAAAxqD,YAAA,CAAA+sD,OAAA;IAAA9sD,GAAA;IAAAC,KAAA,EASA,SAAAutD,sBAAsBA,CAAClH,eAAe,EAAEuF,UAAU,EAAEC,QAAQ,EAAE;MAC5D,IAAM7lC,KAAK,GAAG6lC,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC;MACzC,IAAM3lC,MAAM,GAAG4lC,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC;MAC1C,OAAO5lC,KAAK,GAAGA,KAAK,GAAGC,MAAM,GAAGA,MAAM,IAAI,IAAI,CAACinC,QAAQ;IACzD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAntD,GAAA;IAAAC,KAAA,EAKA,SAAAqsD,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACY,IAAI,CAACZ,WAAW,CAAC,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtsD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE;MAC/B,IAAI,CAAC,IAAI,CAACoF,WAAW,EAAE;QACrB;MACF;MAEA,IAAI,CAACwB,IAAI,CAACf,SAAS,CAAC,IAAI,CAACT,WAAW,EAAEpF,eAAe,CAAC71C,KAAK,CAAC;MAE5D,IAAI,CAACzH,aAAa,CAChB,IAAI6jD,YAAY,CACdL,gBAAgB,CAACE,OAAO,EACxBpG,eAAe,CAAC31C,UAAU,EAC1B21C,eACF,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtmD,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,IAAI,CAAC,IAAI,CAACoF,WAAW,EAAE;QACrB,OAAO,KAAK;MACd;MAEA,IAAM+B,WAAW,GAAG,IAAI,CAACH,gBAAgB,CACvChH,eAAe,EACf,IAAI,CAACoF,WAAW,EAChBpF,eAAe,CAAC71C,KAClB,CAAC;MACD,IAAIg9C,WAAW,EAAE;QACf,IAAI,CAACJ,QAAQ,CAAC/G,eAAe,CAAC;MAChC;MACA,IAAI,CAACt9C,aAAa,CAChB,IAAI6jD,YAAY,CACdY,WAAW,GAAGjB,gBAAgB,CAACG,MAAM,GAAGH,gBAAgB,CAACI,SAAS,EAClEtG,eAAe,CAAC31C,UAAU,EAC1B21C,eACF,CACF,CAAC;MAED,IAAI,CAAC4G,IAAI,CAAC9R,MAAM,CAAC,IAAI,CAAC;MACtB,IAAI,CAACsQ,WAAW,GAAG,IAAI;MAEvB,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1rD,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,IAAI,IAAI,CAACwE,UAAU,CAACxE,eAAe,CAAC,EAAE;QACpC,IAAI,CAACoF,WAAW,GAAGpF,eAAe,CAAC71C,KAAK;QACxC,IAAI,CAACy8C,IAAI,CAAC9R,MAAM,CAACkL,eAAe,CAAC72C,GAAG,CAAC;QACrC,IAAI,CAACy9C,IAAI,CAACf,SAAS,CAAC,IAAI,CAACT,WAAW,EAAE,IAAI,CAACA,WAAW,CAAC;QACvD,IAAI,CAAC1iD,aAAa,CAChB,IAAI6jD,YAAY,CACdL,gBAAgB,CAACC,QAAQ,EACzBnG,eAAe,CAAC31C,UAAU,EAC1B21C,eACF,CACF,CAAC;QACD,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;EAHE;IAAAtmD,GAAA;IAAAC,KAAA,EAIA,SAAAotD,QAAQA,CAACpkD,KAAK,EAAE,CAAC;;IAEjB;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjJ,GAAA;IAAAC,KAAA,EAOA,SAAAkmD,SAASA,CAACI,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,EAAE;QACX,IAAI,CAAC2G,IAAI,CAAC9R,MAAM,CAAC,IAAI,CAAC;QACtB,IAAI,IAAI,CAACsQ,WAAW,EAAE;UACpB,IAAI,CAAC1iD,aAAa,CAChB,IAAI6jD,YAAY,CAACL,gBAAgB,CAACI,SAAS,EAAE,IAAI,CAAClB,WAAW,EAAE,IAAI,CACrE,CAAC;UACD,IAAI,CAACA,WAAW,GAAG,IAAI;QACzB;MACF;MAEA97C,aAAA,CAAAk9C,OAAA,yBAAgBvG,MAAM;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAAvmD,GAAA;IAAAC,KAAA,EAIA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAMi+C,MAAM,GAAG,IAAI,CAACvS,MAAM,CAAC,CAAC;MAE5B,IAAIuS,MAAM,EAAE;QACV,IAAI,CAACR,IAAI,CAAC9R,MAAM,CAAC,IAAI,CAAC;QAEtB,IAAI,IAAI,CAACsQ,WAAW,EAAE;UACpB,IAAI,CAAC1iD,aAAa,CAChB,IAAI6jD,YAAY,CAACL,gBAAgB,CAACI,SAAS,EAAE,IAAI,CAAClB,WAAW,EAAE,IAAI,CACrE,CAAC;UACD,IAAI,CAACA,WAAW,GAAG,IAAI;QACzB;MACF;MAEA97C,aAAA,CAAAk9C,OAAA,sBAAar9C,GAAG;IAClB;EAAC;AAAA,EA/MmB85C,gBAAkB;AAAA,IAAAlrD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkNzBuuD,OAAO;;;;;;;;ACpUtB,IAAA/hB,OAAA,GAAAznC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AACA,IAAAqqD,SAAA,GAAAloD,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALnC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUM+nD,QAAQ,0BAAAC,QAAA;EACZ;AACF;AACA;EACE,SAAAD,SAAYv/C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA+tD,QAAA;IACnBv/C,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMw8C,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAAGjC,uBAAY;IAEtEvgD,KAAA,GAAAnB,UAAA,OAAA0mD,QAAA,GAAM;MACJ/C,SAAS,EAAEA,SAAS;MACpB/K,SAAS,EAAEzxC,OAAO,CAACyxC,SAAS,IAAI,aAAa;MAC7CsN,OAAO,EAAE/+C,OAAO,CAAC++C;IACnB,CAAC;;IAED;AACJ;AACA;AACA;IACI/kD,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI/mC,KAAA,CAAKylD,IAAI,GAAGz/C,OAAO,CAAC0/C,GAAG,KAAKnkD,SAAS,GAAGyE,OAAO,CAAC0/C,GAAG,GAAG,KAAK;IAAC,OAAA1lD,KAAA;EAC9D;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA4lD,QAAA,EAAAC,QAAA;EAAA,OAAA9tD,YAAA,CAAA6tD,QAAA;IAAA5tD,GAAA;IAAAC,KAAA,EAKA,SAAAotD,QAAQA,CAACpkD,KAAK,EAAE;MACd,IAAMwG,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAMmI,IAAI,GAAG,4CAA8C7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAE;MACzE,IAAIp4B,QAAQ,GAAG,IAAI,CAACmhC,WAAW,CAAC,CAAC;MAEjC,IAAI,IAAI,CAACwB,IAAI,EAAE;QACb,IAAMzZ,aAAa,GAAGiP,IAAI,CAACxP,wBAAwB,CAAC3oB,QAAQ,CAAC;QAC7D,IAAM1M,UAAU,GAAG6kC,IAAI,CAAC1Q,8BAA8B,CAACyB,aAAa,CAAC;QACrE,IAAMx2B,MAAM,GAAGylC,IAAI,CAACvV,aAAa,CAAC,CAAC,GAAGtvB,UAAU;QAChD0M,QAAQ,GAAGA,QAAQ,CAAC/J,KAAK,CAAC,CAAC;QAC3B+J,QAAQ,CAACxB,KAAK,CAAC9L,MAAM,GAAGA,MAAM,CAAC;MACjC;MAEAylC,IAAI,CAACzP,WAAW,CAAC1oB,QAAQ,EAAE;QACzBikB,QAAQ,EAAE,IAAI,CAAC6T,SAAS;QACxB5T,MAAM,EAAEjlB;MACV,CAAC,CAAC;IACJ;EAAC;AAAA,EAlDoB0iC,iBAAO;AAAA,IAAAzuD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAqDfqvD,QAAQ;;;;;;;;ACpFvB;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAAAvvD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIe;EACbqhB,IAAI,EAAE,WAAW;EACjBouC,EAAE,EAAE,SAAS;EACbtuC,KAAK,EAAE,YAAY;EACnBuuC,IAAI,EAAE;AACR,CAAC;;;;;;;;ACVD,IAAAv4B,WAAA,GAAApyB,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA4qD,IAAA,GAAAzoD,sBAAA,CAAAnC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AACA,IAAAojD,aAAA,GAAAxtC,uBAAA,CAAA5V,OAAA;AAAkD,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAPlD;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMsoD,WAAW,0BAAAvH,YAAA;EACf;AACF;AACA;EACE,SAAAuH,YAAY9/C,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAsuD,WAAA;IACnB9lD,KAAA,GAAAnB,UAAA,OAAAinD,WAAA;IAEA9/C,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;AACA;IACIhG,KAAA,CAAK+lD,iBAAiB,GAAG,UAAU9H,eAAe,EAAE;MAClD,OACE,IAAAmC,yBAAc,EAACnC,eAAe,CAAC,IAAI,IAAAuC,4BAAiB,EAACvC,eAAe,CAAC;IAEzE,CAAC;;IAED;AACJ;AACA;AACA;IACIj+C,KAAA,CAAKyiD,UAAU,GACbz8C,OAAO,CAACw8C,SAAS,KAAKjhD,SAAS,GAC3ByE,OAAO,CAACw8C,SAAS,GACjBxiD,KAAA,CAAK+lD,iBAAiB;;IAE5B;AACJ;AACA;AACA;IACI/lD,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI/mC,KAAA,CAAKgmD,WAAW,GACdhgD,OAAO,CAACigD,UAAU,KAAK1kD,SAAS,GAAGyE,OAAO,CAACigD,UAAU,GAAG,GAAG;IAAC,OAAAjmD,KAAA;EAChE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPEL,SAAA,CAAAmmD,WAAA,EAAAvH,YAAA;EAAA,OAAA7mD,YAAA,CAAAouD,WAAA;IAAAnuD,GAAA;IAAAC,KAAA,EAQA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,IAAIQ,SAAS,GAAG,KAAK;MACrB,IAAIR,eAAe,CAACphD,IAAI,IAAIgG,kBAAS,CAAC5L,OAAO,EAAE;QAC7C,IAAMivD,QAAQ,GAAG;QACfjI,eAAe,CAACn2C,aACjB;QACD,IAAMnQ,GAAG,GAAGuuD,QAAQ,CAACvuD,GAAG;QACxB,IACE,IAAI,CAAC8qD,UAAU,CAACxE,eAAe,CAAC,KAC/BtmD,GAAG,IAAIwuD,YAAG,CAACP,IAAI,IACdjuD,GAAG,IAAIwuD,YAAG,CAAC5uC,IAAI,IACf5f,GAAG,IAAIwuD,YAAG,CAAC9uC,KAAK,IAChB1f,GAAG,IAAIwuD,YAAG,CAACR,EAAE,CAAC,EAChB;UACA,IAAMv+C,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;UAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;UAC1B,IAAMkL,aAAa,GAAGnL,IAAI,CAACvV,aAAa,CAAC,CAAC,GAAG,IAAI,CAACsgB,WAAW;UAC7D,IAAIjzC,MAAM,GAAG,CAAC;YACZC,MAAM,GAAG,CAAC;UACZ,IAAIrb,GAAG,IAAIwuD,YAAG,CAACP,IAAI,EAAE;YACnB5yC,MAAM,GAAG,CAACozC,aAAa;UACzB,CAAC,MAAM,IAAIzuD,GAAG,IAAIwuD,YAAG,CAAC5uC,IAAI,EAAE;YAC1BxE,MAAM,GAAG,CAACqzC,aAAa;UACzB,CAAC,MAAM,IAAIzuD,GAAG,IAAIwuD,YAAG,CAAC9uC,KAAK,EAAE;YAC3BtE,MAAM,GAAGqzC,aAAa;UACxB,CAAC,MAAM;YACLpzC,MAAM,GAAGozC,aAAa;UACxB;UACA,IAAM1mC,KAAK,GAAG,CAAC3M,MAAM,EAAEC,MAAM,CAAC;UAC9B,IAAA61B,kBAAgB,EAACnpB,KAAK,EAAEu7B,IAAI,CAACjV,WAAW,CAAC,CAAC,CAAC;UAC3C,IAAAmY,iBAAG,EAAClD,IAAI,EAAEv7B,KAAK,EAAE,IAAI,CAACk7B,SAAS,CAAC;UAChCsL,QAAQ,CAAClpD,cAAc,CAAC,CAAC;UACzByhD,SAAS,GAAG,IAAI;QAClB;MACF;MACA,OAAO,CAACA,SAAS;IACnB;EAAC;AAAA,EAvFuBZ,qBAAW;AAAA,IAAA7nD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA0FtB4vD,WAAW;;;;;;;;ACzH1B,IAAA7jD,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AACA,IAAAojD,aAAA,GAAAxtC,uBAAA,CAAA5V,OAAA;AAA0D,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAL1D;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaM6oD,YAAY,0BAAA9H,YAAA;EAChB;AACF;AACA;EACE,SAAA8H,aAAYrgD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA6uD,YAAA;IACnBrmD,KAAA,GAAAnB,UAAA,OAAAwnD,YAAA;IAEArgD,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;AACA;IACIhG,KAAA,CAAKyiD,UAAU,GAAGz8C,OAAO,CAACw8C,SAAS,GAC/Bx8C,OAAO,CAACw8C,SAAS,GACjB,UAAUvE,eAAe,EAAE;MACzB,OACE,CAAC,IAAAqC,8BAAmB,EAACrC,eAAe,CAAC,IACrC,IAAAuC,4BAAiB,EAACvC,eAAe,CAAC;IAEtC,CAAC;;IAEL;AACJ;AACA;AACA;IACIj+C,KAAA,CAAKw+C,MAAM,GAAGx4C,OAAO,CAAC0Z,KAAK,GAAG1Z,OAAO,CAAC0Z,KAAK,GAAG,CAAC;;IAE/C;AACJ;AACA;AACA;IACI1f,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;IAAC,OAAA/mC,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPEL,SAAA,CAAA0mD,YAAA,EAAA9H,YAAA;EAAA,OAAA7mD,YAAA,CAAA2uD,YAAA;IAAA1uD,GAAA;IAAAC,KAAA,EAQA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,IAAIQ,SAAS,GAAG,KAAK;MACrB,IACER,eAAe,CAACphD,IAAI,IAAIgG,kBAAS,CAAC5L,OAAO,IACzCgnD,eAAe,CAACphD,IAAI,IAAIgG,kBAAS,CAAC3L,QAAQ,EAC1C;QACA,IAAMgvD,QAAQ,GAAG;QACfjI,eAAe,CAACn2C,aACjB;QACD,IAAMnQ,GAAG,GAAGuuD,QAAQ,CAACvuD,GAAG;QACxB,IAAI,IAAI,CAAC8qD,UAAU,CAACxE,eAAe,CAAC,KAAKtmD,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,CAAC,EAAE;UACpE,IAAMyP,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;UAC/B,IAAMsY,KAAK,GAAG/nB,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC6mD,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;UACtD,IAAMvD,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;UAC1B,IAAAkD,yBAAW,EAACnD,IAAI,EAAEv7B,KAAK,EAAEne,SAAS,EAAE,IAAI,CAACq5C,SAAS,CAAC;UACnDsL,QAAQ,CAAClpD,cAAc,CAAC,CAAC;UACzByhD,SAAS,GAAG,IAAI;QAClB;MACF;MACA,OAAO,CAACA,SAAS;IACnB;EAAC;AAAA,EA/DwBZ,qBAAW;AAAA,IAAA7nD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkEvBmwD,YAAY;;;;;;;;AC/F3B,IAAApkD,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA8mD,UAAA,GAAA9mD,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAojD,aAAA,GAAAxtC,uBAAA,CAAA5V,OAAA;AAA0D,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAP1D;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKM8oD,cAAc,0BAAA/H,YAAA;EAClB;AACF;AACA;EACE,SAAA+H,eAAYtgD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA8uD,cAAA;IACnBtgD,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhChG,KAAA,GAAAnB,UAAA,OAAAynD,cAAA,IACE,4DAA8DtgD,OAAO;;IAGvE;AACJ;AACA;AACA;IACIhG,KAAA,CAAKumD,WAAW,GAAG,CAAC;;IAEpB;AACJ;AACA;AACA;IACIvmD,KAAA,CAAKwmD,UAAU,GAAG,CAAC;;IAEnB;AACJ;AACA;AACA;IACIxmD,KAAA,CAAK87B,SAAS,GAAG91B,OAAO,CAACuzB,QAAQ,KAAKh4B,SAAS,GAAGyE,OAAO,CAACuzB,QAAQ,GAAG,CAAC;;IAEtE;AACJ;AACA;AACA;IACIv5B,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI/mC,KAAA,CAAKymD,QAAQ,GAAGzgD,OAAO,CAAC0gD,OAAO,KAAKnlD,SAAS,GAAGyE,OAAO,CAAC0gD,OAAO,GAAG,EAAE;;IAEpE;AACJ;AACA;AACA;IACI1mD,KAAA,CAAK2mD,UAAU,GACb3gD,OAAO,CAAC4gD,SAAS,KAAKrlD,SAAS,GAAGyE,OAAO,CAAC4gD,SAAS,GAAG,IAAI;;IAE5D;AACJ;AACA;AACA;IACI5mD,KAAA,CAAK6mD,oBAAoB,GACvB7gD,OAAO,CAACokC,mBAAmB,KAAK7oC,SAAS,GACrCyE,OAAO,CAACokC,mBAAmB,GAC3B,KAAK;IAEX,IAAMoY,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAAGx8C,OAAO,CAACw8C,SAAS,GAAG3C,iBAAM;;IAEhE;AACJ;AACA;AACA;IACI7/C,KAAA,CAAKyiD,UAAU,GAAGz8C,OAAO,CAAC08C,WAAW,GACjC,IAAA7I,cAAG,EAAC6F,4BAAiB,EAAE8C,SAAS,CAAC,GACjCA,SAAS;;IAEb;AACJ;AACA;AACA;IACIxiD,KAAA,CAAK8mD,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;IACI9mD,KAAA,CAAK+mD,UAAU,GAAGxlD,SAAS;;IAE3B;AACJ;AACA;AACA;IACIvB,KAAA,CAAKgnD,UAAU;;IAEf;AACJ;AACA;AACA;IACIhnD,KAAA,CAAKinD,KAAK,GAAG1lD,SAAS;;IAEtB;AACJ;AACA;AACA;AACA;AACA;IACIvB,KAAA,CAAKknD,iBAAiB,GAAG,GAAG;;IAE5B;AACJ;AACA;AACA;IACIlnD,KAAA,CAAKmnD,kBAAkB;;IAEvB;AACJ;AACA;AACA;AACA;IACInnD,KAAA,CAAKonD,aAAa,GAAG,GAAG;IAAC,OAAApnD,KAAA;EAC3B;;EAEA;AACF;AACA;EAFEL,SAAA,CAAA2mD,cAAA,EAAA/H,YAAA;EAAA,OAAA7mD,YAAA,CAAA4uD,cAAA;IAAA3uD,GAAA;IAAAC,KAAA,EAGA,SAAAyvD,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACF,kBAAkB,GAAG5lD,SAAS;MACnC,IAAM6F,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAI,CAAC1rC,GAAG,EAAE;QACR;MACF;MACA,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1BD,IAAI,CAACvN,cAAc,CACjBnsC,SAAS,EACT,IAAI,CAACilD,UAAU,GAAI,IAAI,CAACA,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,EACpD,IAAI,CAACM,WAAW,GAAG1/C,GAAG,CAACiB,sBAAsB,CAAC,IAAI,CAACy+C,WAAW,CAAC,GAAG,IACpE,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnvD,GAAA;IAAAC,KAAA,EAOA,SAAAuJ,WAAWA,CAAC88C,eAAe,EAAE;MAC3B,IAAI,CAAC,IAAI,CAACwE,UAAU,CAACxE,eAAe,CAAC,EAAE;QACrC,OAAO,IAAI;MACb;MACA,IAAMphD,IAAI,GAAGohD,eAAe,CAACphD,IAAI;MACjC,IAAIA,IAAI,KAAKgG,kBAAS,CAACvL,KAAK,EAAE;QAC5B,OAAO,IAAI;MACb;MAEA,IAAM8P,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAMkgD,UAAU,GAAG;MACjBrJ,eAAe,CAACn2C,aACjB;MACDw/C,UAAU,CAACtqD,cAAc,CAAC,CAAC;MAE3B,IAAI,IAAI,CAAC2pD,UAAU,EAAE;QACnB,IAAI,CAACG,WAAW,GAAG7I,eAAe,CAAC71C,KAAK;MAC1C;;MAEA;MACA;MACA,IAAIsX,KAAK;MACT,IAAIu+B,eAAe,CAACphD,IAAI,IAAIgG,kBAAS,CAACvL,KAAK,EAAE;QAC3CooB,KAAK,GAAG4nC,UAAU,CAACt0C,MAAM;QACzB,IAAI3J,YAAO,IAAIi+C,UAAU,CAACC,SAAS,KAAKC,UAAU,CAACC,eAAe,EAAE;UAClE/nC,KAAK,IAAI/V,uBAAkB;QAC7B;QACA,IAAI29C,UAAU,CAACC,SAAS,KAAKC,UAAU,CAACE,cAAc,EAAE;UACtDhoC,KAAK,IAAI,EAAE;QACb;MACF;MAEA,IAAIA,KAAK,KAAK,CAAC,EAAE;QACf,OAAO,KAAK;MACd;MACA,IAAI,CAAC8mC,UAAU,GAAG9mC,KAAK;MAEvB,IAAMinB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MAEtB,IAAI,IAAI,CAACogB,UAAU,KAAKxlD,SAAS,EAAE;QACjC,IAAI,CAACwlD,UAAU,GAAGpgB,GAAG;MACvB;MAEA,IAAI,CAAC,IAAI,CAACsgB,KAAK,IAAItgB,GAAG,GAAG,IAAI,CAACogB,UAAU,GAAG,IAAI,CAACG,iBAAiB,EAAE;QACjE,IAAI,CAACD,KAAK,GAAG15C,IAAI,CAACC,GAAG,CAACkS,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,OAAO;MACzD;MAEA,IAAMu7B,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IACE,IAAI,CAAC+L,KAAK,KAAK,UAAU,IACzB,EAAEhM,IAAI,CAAC7R,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAACyd,oBAAoB,CAAC,EAC7D;QACA,IAAI,IAAI,CAACM,kBAAkB,EAAE;UAC3B36C,YAAY,CAAC,IAAI,CAAC26C,kBAAkB,CAAC;QACvC,CAAC,MAAM;UACL,IAAIlM,IAAI,CAAC7U,YAAY,CAAC,CAAC,EAAE;YACvB6U,IAAI,CAACpT,gBAAgB,CAAC,CAAC;UACzB;UACAoT,IAAI,CAACxN,gBAAgB,CAAC,CAAC;QACzB;QACA,IAAI,CAAC0Z,kBAAkB,GAAG16C,UAAU,CAClC,IAAI,CAAC46C,eAAe,CAAC5nD,IAAI,CAAC,IAAI,CAAC,EAC/B,IAAI,CAACgnD,QACP,CAAC;QACDxL,IAAI,CAACjO,UAAU,CACb,CAACttB,KAAK,GAAG,IAAI,CAAC0nC,aAAa,EAC3B,IAAI,CAACN,WAAW,GAAG1/C,GAAG,CAACiB,sBAAsB,CAAC,IAAI,CAACy+C,WAAW,CAAC,GAAG,IACpE,CAAC;QACD,IAAI,CAACC,UAAU,GAAGpgB,GAAG;QACrB,OAAO,KAAK;MACd;MAEA,IAAI,CAAC4f,WAAW,IAAI7mC,KAAK;MAEzB,IAAMioC,QAAQ,GAAGp6C,IAAI,CAACmG,GAAG,CAAC,IAAI,CAAC+yC,QAAQ,IAAI9f,GAAG,GAAG,IAAI,CAACogB,UAAU,CAAC,EAAE,CAAC,CAAC;MAErEv6C,YAAY,CAAC,IAAI,CAACw6C,UAAU,CAAC;MAC7B,IAAI,CAACA,UAAU,GAAGv6C,UAAU,CAC1B,IAAI,CAACm7C,gBAAgB,CAACnoD,IAAI,CAAC,IAAI,EAAE2H,GAAG,CAAC,EACrCugD,QACF,CAAC;MAED,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;EAHE;IAAAhwD,GAAA;IAAAC,KAAA,EAIA,SAAAgwD,gBAAgBA,CAACxgD,GAAG,EAAE;MACpB,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAID,IAAI,CAAC7U,YAAY,CAAC,CAAC,EAAE;QACvB6U,IAAI,CAACpT,gBAAgB,CAAC,CAAC;MACzB;MACA,IAAInoB,KAAK,GACP,CAAC,IAAAlM,WAAK,EACJ,IAAI,CAAC+yC,WAAW,EAChB,CAAC,IAAI,CAACzqB,SAAS,GAAG,IAAI,CAACsrB,aAAa,EACpC,IAAI,CAACtrB,SAAS,GAAG,IAAI,CAACsrB,aACxB,CAAC,GAAG,IAAI,CAACA,aAAa;MACxB,IAAInM,IAAI,CAAC7R,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAACyd,oBAAoB,EAAE;QAC9D;QACAnnC,KAAK,GAAGA,KAAK,GAAIA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC;MAC1C;MACA,IAAA0+B,yBAAW,EACTnD,IAAI,EACJv7B,KAAK,EACL,IAAI,CAAConC,WAAW,GAAG1/C,GAAG,CAACiB,sBAAsB,CAAC,IAAI,CAACy+C,WAAW,CAAC,GAAG,IAAI,EACtE,IAAI,CAAClM,SACP,CAAC;MAED,IAAI,CAACqM,KAAK,GAAG1lD,SAAS;MACtB,IAAI,CAACglD,WAAW,GAAG,CAAC;MACpB,IAAI,CAACO,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,UAAU,GAAGxlD,SAAS;MAC3B,IAAI,CAACylD,UAAU,GAAGzlD,SAAS;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5J,GAAA;IAAAC,KAAA,EAMA,SAAAiwD,cAAcA,CAACjB,SAAS,EAAE;MACxB,IAAI,CAACD,UAAU,GAAGC,SAAS;MAC3B,IAAI,CAACA,SAAS,EAAE;QACd,IAAI,CAACE,WAAW,GAAG,IAAI;MACzB;IACF;EAAC;AAAA,EA1Q0BjJ,qBAAW;AAAA,IAAA7nD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA6QzBowD,cAAc;;;;;;;;AC/S7B,IAAAjpD,UAAA,GAAApC,OAAA;AACA,IAAA4nC,mBAAA,GAAA5nC,OAAA;AACA,IAAA+mD,QAAA,GAAAnxC,uBAAA,CAAA5V,OAAA;AAEsB,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAPtB;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMsqD,WAAW,0BAAA5F,mBAAA;EACf;AACF;AACA;EACE,SAAA4F,YAAY9hD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAswD,WAAA;IACnB9hD,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAM+hD,cAAc,GAAG;IACrB/hD,OACD;IAED,IAAI,CAAC+hD,cAAc,CAACxG,QAAQ,EAAE;MAC5BwG,cAAc,CAACxG,QAAQ,GAAGpmD,gBAAK;IACjC;IAEA6E,KAAA,GAAAnB,UAAA,OAAAipD,WAAA,GAAMC,cAAc;;IAEpB;AACJ;AACA;AACA;IACI/nD,KAAA,CAAKgoD,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIhoD,KAAA,CAAKkjD,UAAU,GAAG3hD,SAAS;;IAE3B;AACJ;AACA;AACA;IACIvB,KAAA,CAAKioD,SAAS,GAAG,KAAK;;IAEtB;AACJ;AACA;AACA;IACIjoD,KAAA,CAAKkoD,cAAc,GAAG,GAAG;;IAEzB;AACJ;AACA;AACA;IACIloD,KAAA,CAAKmoD,UAAU,GAAGniD,OAAO,CAACoiD,SAAS,KAAK7mD,SAAS,GAAGyE,OAAO,CAACoiD,SAAS,GAAG,GAAG;;IAE3E;AACJ;AACA;AACA;IACIpoD,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;IAAC,OAAA/mC,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAmoD,WAAA,EAAA5F,mBAAA;EAAA,OAAAxqD,YAAA,CAAAowD,WAAA;IAAAnwD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE;MAC/B,IAAIoK,aAAa,GAAG,GAAG;MAEvB,IAAMC,MAAM,GAAG,IAAI,CAAC7G,cAAc,CAAC,CAAC,CAAC;MACrC,IAAM8G,MAAM,GAAG,IAAI,CAAC9G,cAAc,CAAC,CAAC,CAAC;;MAErC;MACA,IAAMtgC,KAAK,GAAG5T,IAAI,CAACqV,KAAK,CACtB2lC,MAAM,CAAC76C,OAAO,GAAG46C,MAAM,CAAC56C,OAAO,EAC/B66C,MAAM,CAAC96C,OAAO,GAAG66C,MAAM,CAAC76C,OAC1B,CAAC;MAED,IAAI,IAAI,CAACy1C,UAAU,KAAK3hD,SAAS,EAAE;QACjC,IAAMme,KAAK,GAAGyB,KAAK,GAAG,IAAI,CAAC+hC,UAAU;QACrC,IAAI,CAACgF,cAAc,IAAIxoC,KAAK;QAC5B,IAAI,CAAC,IAAI,CAACuoC,SAAS,IAAI16C,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC06C,cAAc,CAAC,GAAG,IAAI,CAACC,UAAU,EAAE;UACtE,IAAI,CAACF,SAAS,GAAG,IAAI;QACvB;QACAI,aAAa,GAAG3oC,KAAK;MACvB;MACA,IAAI,CAACwjC,UAAU,GAAG/hC,KAAK;MAEvB,IAAM/Z,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAC1B,IAAID,IAAI,CAAC9R,cAAc,CAAC,CAAC,CAAC3tB,QAAQ,KAAK0S,2BAAO,EAAE;QAC9C;MACF;;MAEA;MACA;MACA;MACA,IAAI,CAAC85B,OAAO,GAAG5gD,GAAG,CAAC47C,8BAA8B,CAC/C57C,GAAG,CAACe,aAAa,CAAC,IAAAy6C,iBAAoB,EAAC,IAAI,CAACnB,cAAc,CAAC,CAC7D,CAAC;;MAED;MACA,IAAI,IAAI,CAACwG,SAAS,EAAE;QAClB7gD,GAAG,CAACurC,MAAM,CAAC,CAAC;QACZsI,IAAI,CAAC/N,sBAAsB,CAACmb,aAAa,EAAE,IAAI,CAACL,OAAO,CAAC;MAC1D;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArwD,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,IAAI,IAAI,CAACwD,cAAc,CAACjpD,MAAM,GAAG,CAAC,EAAE;QAClC,IAAM4O,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;QAC1BD,IAAI,CAACvN,cAAc,CAAC,IAAI,CAACkN,SAAS,CAAC;QACnC,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjjD,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,IAAI,IAAI,CAACwD,cAAc,CAACjpD,MAAM,IAAI,CAAC,EAAE;QACnC,IAAM4O,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAI,CAAC4gD,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC9E,UAAU,GAAG3hD,SAAS;QAC3B,IAAI,CAAC0mD,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,cAAc,GAAG,GAAG;QACzB,IAAI,CAAC,IAAI,CAAC1G,sBAAsB,EAAE;UAChCp6C,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAACzN,gBAAgB,CAAC,CAAC;QAClC;QACA,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;AAAA,EAxIuByT,gBAAkB;AAAA,IAAAlrD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA2I7B4xD,WAAW;;;;;;;;AC9J1B,IAAAzqD,UAAA,GAAApC,OAAA;AACA,IAAA+mD,QAAA,GAAAnxC,uBAAA,CAAA5V,OAAA;AAEsB,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANtB;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMgrD,SAAS,0BAAAtG,mBAAA;EACb;AACF;AACA;EACE,SAAAsG,UAAYxiD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAgxD,SAAA;IACnBxiD,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAM+hD,cAAc,GAAG;IACrB/hD,OACD;IAED,IAAI,CAAC+hD,cAAc,CAACxG,QAAQ,EAAE;MAC5BwG,cAAc,CAACxG,QAAQ,GAAGpmD,gBAAK;IACjC;IAEA6E,KAAA,GAAAnB,UAAA,OAAA2pD,SAAA,GAAMT,cAAc;;IAEpB;AACJ;AACA;AACA;IACI/nD,KAAA,CAAKgoD,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIhoD,KAAA,CAAK46C,SAAS,GAAG50C,OAAO,CAAC+gC,QAAQ,KAAKxlC,SAAS,GAAGyE,OAAO,CAAC+gC,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI/mC,KAAA,CAAKyoD,aAAa,GAAGlnD,SAAS;;IAE9B;AACJ;AACA;AACA;IACIvB,KAAA,CAAK0oD,eAAe,GAAG,CAAC;IAAC,OAAA1oD,KAAA;EAC3B;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA6oD,SAAA,EAAAtG,mBAAA;EAAA,OAAAxqD,YAAA,CAAA8wD,SAAA;IAAA7wD,GAAA;IAAAC,KAAA,EAKA,SAAAwpD,eAAeA,CAACnD,eAAe,EAAE;MAC/B,IAAI0K,UAAU,GAAG,GAAG;MAEpB,IAAML,MAAM,GAAG,IAAI,CAAC7G,cAAc,CAAC,CAAC,CAAC;MACrC,IAAM8G,MAAM,GAAG,IAAI,CAAC9G,cAAc,CAAC,CAAC,CAAC;MACrC,IAAMvtC,EAAE,GAAGo0C,MAAM,CAAC76C,OAAO,GAAG86C,MAAM,CAAC96C,OAAO;MAC1C,IAAM0G,EAAE,GAAGm0C,MAAM,CAAC56C,OAAO,GAAG66C,MAAM,CAAC76C,OAAO;;MAE1C;MACA,IAAM+T,QAAQ,GAAGlU,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;MAE7C,IAAI,IAAI,CAACs0C,aAAa,KAAKlnD,SAAS,EAAE;QACpConD,UAAU,GAAG,IAAI,CAACF,aAAa,GAAGhnC,QAAQ;MAC5C;MACA,IAAI,CAACgnC,aAAa,GAAGhnC,QAAQ;MAE7B,IAAMra,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;MAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MAE1B,IAAIyN,UAAU,IAAI,GAAG,EAAE;QACrB,IAAI,CAACD,eAAe,GAAGC,UAAU;MACnC;;MAEA;MACA,IAAI,CAACX,OAAO,GAAG5gD,GAAG,CAAC47C,8BAA8B,CAC/C57C,GAAG,CAACe,aAAa,CAAC,IAAAy6C,iBAAoB,EAAC,IAAI,CAACnB,cAAc,CAAC,CAC7D,CAAC;;MAED;MACAr6C,GAAG,CAACurC,MAAM,CAAC,CAAC;MACZsI,IAAI,CAAClO,wBAAwB,CAAC4b,UAAU,EAAE,IAAI,CAACX,OAAO,CAAC;IACzD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArwD,GAAA;IAAAC,KAAA,EAMA,SAAA0pD,aAAaA,CAACrD,eAAe,EAAE;MAC7B,IAAI,IAAI,CAACwD,cAAc,CAACjpD,MAAM,GAAG,CAAC,EAAE;QAClC,IAAM4O,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAM6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;QAC1B,IAAMliD,SAAS,GAAG,IAAI,CAAC0vD,eAAe,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnDzN,IAAI,CAACvN,cAAc,CAAC,IAAI,CAACkN,SAAS,EAAE5hD,SAAS,CAAC;QAC9C,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArB,GAAA;IAAAC,KAAA,EAMA,SAAAupD,eAAeA,CAAClD,eAAe,EAAE;MAC/B,IAAI,IAAI,CAACwD,cAAc,CAACjpD,MAAM,IAAI,CAAC,EAAE;QACnC,IAAM4O,GAAG,GAAG62C,eAAe,CAAC72C,GAAG;QAC/B,IAAI,CAAC4gD,OAAO,GAAG,IAAI;QACnB,IAAI,CAACS,aAAa,GAAGlnD,SAAS;QAC9B,IAAI,CAACmnD,eAAe,GAAG,CAAC;QACxB,IAAI,CAAC,IAAI,CAAClH,sBAAsB,EAAE;UAChCp6C,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAACzN,gBAAgB,CAAC,CAAC;QAClC;QACA,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;AAAA,EAnHqByT,gBAAkB;AAAA,IAAAlrD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsH3BsyD,SAAS;;;;;;;;ACtIxB,IAAAvM,WAAA,GAAA7+C,sBAAA,CAAAnC,OAAA;AACA,IAAA2tD,QAAA,GAAAxrD,sBAAA,CAAAnC,OAAA;AACA,IAAA4tD,gBAAA,GAAAzrD,sBAAA,CAAAnC,OAAA;AACA,IAAA6tD,QAAA,GAAA1rD,sBAAA,CAAAnC,OAAA;AACA,IAAA8tD,WAAA,GAAA3rD,sBAAA,CAAAnC,OAAA;AACA,IAAA+tD,SAAA,GAAA5rD,sBAAA,CAAAnC,OAAA;AACA,IAAAguD,YAAA,GAAA7rD,sBAAA,CAAAnC,OAAA;AACA,IAAAiuD,aAAA,GAAA9rD,sBAAA,CAAAnC,OAAA;AACA,IAAAkuD,eAAA,GAAA/rD,sBAAA,CAAAnC,OAAA;AACA,IAAAmuD,YAAA,GAAAhsD,sBAAA,CAAAnC,OAAA;AACA,IAAAouD,UAAA,GAAAjsD,sBAAA,CAAAnC,OAAA;AAAuC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAbvC;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6+C,QAAQA,CAACr2C,OAAO,EAAE;EAChCA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;EAEhC;EACA,IAAMsjD,YAAY,GAAG,IAAIzjD,mBAAU,CAAC,CAAC;EAErC,IAAMu8C,OAAO,GAAG,IAAIvF,gBAAO,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;EAE9C,IAAM0M,kBAAkB,GACtBvjD,OAAO,CAACujD,kBAAkB,KAAKhoD,SAAS,GACpCyE,OAAO,CAACujD,kBAAkB,GAC1B,IAAI;EACV,IAAIA,kBAAkB,EAAE;IACtBD,YAAY,CAAC5oD,IAAI,CAAC,IAAIuiD,mBAAU,CAAC,CAAC,CAAC;EACrC;EAEA,IAAMuG,eAAe,GACnBxjD,OAAO,CAACwjD,eAAe,KAAKjoD,SAAS,GAAGyE,OAAO,CAACwjD,eAAe,GAAG,IAAI;EACxE,IAAIA,eAAe,EAAE;IACnBF,YAAY,CAAC5oD,IAAI,CACf,IAAI49C,wBAAe,CAAC;MAClB5+B,KAAK,EAAE1Z,OAAO,CAACyjD,SAAS;MACxB1iB,QAAQ,EAAE/gC,OAAO,CAAC0jD;IACpB,CAAC,CACH,CAAC;EACH;EAEA,IAAMC,OAAO,GAAG3jD,OAAO,CAAC2jD,OAAO,KAAKpoD,SAAS,GAAGyE,OAAO,CAAC2jD,OAAO,GAAG,IAAI;EACtE,IAAIA,OAAO,EAAE;IACXL,YAAY,CAAC5oD,IAAI,CACf,IAAIuhD,gBAAO,CAAC;MACVS,WAAW,EAAE18C,OAAO,CAAC08C,WAAW;MAChCN,OAAO,EAAEA;IACX,CAAC,CACH,CAAC;EACH;EAEA,IAAMwH,WAAW,GACf5jD,OAAO,CAAC4jD,WAAW,KAAKroD,SAAS,GAAGyE,OAAO,CAAC4jD,WAAW,GAAG,IAAI;EAChE,IAAIA,WAAW,EAAE;IACfN,YAAY,CAAC5oD,IAAI,CAAC,IAAIonD,oBAAW,CAAC,CAAC,CAAC;EACtC;EAEA,IAAM+B,SAAS,GAAG7jD,OAAO,CAAC6jD,SAAS,KAAKtoD,SAAS,GAAGyE,OAAO,CAAC6jD,SAAS,GAAG,IAAI;EAC5E,IAAIA,SAAS,EAAE;IACbP,YAAY,CAAC5oD,IAAI,CACf,IAAI8nD,kBAAS,CAAC;MACZzhB,QAAQ,EAAE/gC,OAAO,CAAC0jD;IACpB,CAAC,CACH,CAAC;EACH;EAEA,IAAMI,QAAQ,GAAG9jD,OAAO,CAAC8jD,QAAQ,KAAKvoD,SAAS,GAAGyE,OAAO,CAAC8jD,QAAQ,GAAG,IAAI;EACzE,IAAIA,QAAQ,EAAE;IACZR,YAAY,CAAC5oD,IAAI,CAAC,IAAIolD,oBAAW,CAAC,CAAC,CAAC;IACpCwD,YAAY,CAAC5oD,IAAI,CACf,IAAI2lD,qBAAY,CAAC;MACf3mC,KAAK,EAAE1Z,OAAO,CAACyjD,SAAS;MACxB1iB,QAAQ,EAAE/gC,OAAO,CAAC0jD;IACpB,CAAC,CACH,CAAC;EACH;EAEA,IAAMK,cAAc,GAClB/jD,OAAO,CAAC+jD,cAAc,KAAKxoD,SAAS,GAAGyE,OAAO,CAAC+jD,cAAc,GAAG,IAAI;EACtE,IAAIA,cAAc,EAAE;IAClBT,YAAY,CAAC5oD,IAAI,CACf,IAAI4lD,uBAAc,CAAC;MACjB5D,WAAW,EAAE18C,OAAO,CAAC08C,WAAW;MAChC3b,QAAQ,EAAE/gC,OAAO,CAAC0jD;IACpB,CAAC,CACH,CAAC;EACH;EAEA,IAAMM,aAAa,GACjBhkD,OAAO,CAACgkD,aAAa,KAAKzoD,SAAS,GAAGyE,OAAO,CAACgkD,aAAa,GAAG,IAAI;EACpE,IAAIA,aAAa,EAAE;IACjBV,YAAY,CAAC5oD,IAAI,CACf,IAAI6kD,iBAAQ,CAAC;MACXxe,QAAQ,EAAE/gC,OAAO,CAAC0jD;IACpB,CAAC,CACH,CAAC;EACH;EAEA,OAAOJ,YAAY;AACrB;;;;;;;;ACnJA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAtzD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb+zD,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBpjC,MAAM,EAAE,QAAQ;EAChBqjC,OAAO,EAAE,QAAQ;EACjBC,cAAc,EAAE,eAAe;EAC/BC,cAAc,EAAE,eAAe;EAC/BC,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE,SAAS;EACnBC,MAAM,EAAE,QAAQ;EAChBC,GAAG,EAAE;AACP,CAAC;;;;;;;;ACfD,IAAAjlD,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAA2iD,SAAA,GAAAxgD,sBAAA,CAAAnC,OAAA;AAA0C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAP1C;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUMktD,SAAS,0BAAA5kD,WAAA;EACb;AACF;AACA;EACE,SAAA4kD,UAAY1kD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAkzD,SAAA;IACnB1qD,KAAA,GAAAnB,UAAA,OAAA6rD,SAAA;;IAEA;AACJ;AACA;IACI1qD,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAK2qD,WAAW,GAAG3kD,OAAO,CAAC4kD,UAAU;;IAErC;AACJ;AACA;IACI,IAAM9mB,UAAU,GAAGxlC,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;IAC7C,IAAItI,OAAA,CAAOsI,OAAO,CAAC89B,UAAU,MAAK,QAAQ,EAAE;MAC1C,OAAOA,UAAU,CAACA,UAAU;MAC5BxlC,MAAM,CAACmG,MAAM,CAACq/B,UAAU,EAAE99B,OAAO,CAAC89B,UAAU,CAAC;IAC/C;IAEAA,UAAU,CAAC+mB,iBAAa,CAACZ,OAAO,CAAC,GAC/BjkD,OAAO,CAAC8kD,OAAO,KAAKvpD,SAAS,GAAGyE,OAAO,CAAC8kD,OAAO,GAAG,CAAC;IACrD,IAAAt8C,eAAM,EACJ,OAAOs1B,UAAU,CAAC+mB,iBAAa,CAACZ,OAAO,CAAC,KAAK,QAAQ,EACrD,gCACF,CAAC;IAEDnmB,UAAU,CAAC+mB,iBAAa,CAACX,OAAO,CAAC,GAC/BlkD,OAAO,CAACyzC,OAAO,KAAKl4C,SAAS,GAAGyE,OAAO,CAACyzC,OAAO,GAAG,IAAI;IACxD3V,UAAU,CAAC+mB,iBAAa,CAACV,OAAO,CAAC,GAAGnkD,OAAO,CAAC+kD,MAAM;IAClDjnB,UAAU,CAAC+mB,iBAAa,CAACT,cAAc,CAAC,GACtCpkD,OAAO,CAACm7B,aAAa,KAAK5/B,SAAS,GAAGyE,OAAO,CAACm7B,aAAa,GAAGvyB,QAAQ;IACxEk1B,UAAU,CAAC+mB,iBAAa,CAACR,cAAc,CAAC,GACtCrkD,OAAO,CAACo7B,aAAa,KAAK7/B,SAAS,GAAGyE,OAAO,CAACo7B,aAAa,GAAG,CAAC;IACjE0C,UAAU,CAAC+mB,iBAAa,CAACN,QAAQ,CAAC,GAChCvkD,OAAO,CAAC0+B,OAAO,KAAKnjC,SAAS,GAAGyE,OAAO,CAAC0+B,OAAO,GAAG,CAAC91B,QAAQ;IAC7Dk1B,UAAU,CAAC+mB,iBAAa,CAACP,QAAQ,CAAC,GAChCtkD,OAAO,CAAC+jC,OAAO,KAAKxoC,SAAS,GAAGyE,OAAO,CAAC+jC,OAAO,GAAGn7B,QAAQ;;IAE5D;AACJ;AACA;AACA;IACI5O,KAAA,CAAKgrD,UAAU,GACblnB,UAAU,CAAC2T,SAAS,KAAKl2C,SAAS,GAAGuiC,UAAU,CAAC2T,SAAS,GAAG,UAAU;IACxE,OAAO3T,UAAU,CAAC2T,SAAS;IAE3Bz3C,KAAA,CAAKoE,aAAa,CAAC0/B,UAAU,CAAC;;IAE9B;AACJ;AACA;AACA;IACI9jC,KAAA,CAAKirD,MAAM,GAAG,IAAI;IAAC,OAAAjrD,KAAA;EACrB;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA+qD,SAAA,EAAA5kD,WAAA;EAAA,OAAApO,YAAA,CAAAgzD,SAAA;IAAA/yD,GAAA;IAAAC,KAAA,EAIA,SAAAszD,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACP,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAAhzD,GAAA;IAAAC,KAAA,EAGA,SAAAuzD,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACH,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAArzD,GAAA;IAAAC,KAAA,EAOA,SAAAwzD,aAAaA,CAACC,OAAO,EAAE;MACrB;MACA,IAAMt5C,KAAK,GACT,IAAI,CAACk5C,MAAM,KACX,gBAAkB;QAChBjS,KAAK,EAAE,IAAI;QACXqS,OAAO,EAAEA,OAAO,KAAK9pD,SAAS,GAAG,IAAI,GAAG8pD;MAC1C,CAAC,CAAC;MACJ,IAAMN,MAAM,GAAG,IAAI,CAACO,SAAS,CAAC,CAAC;MAC/Bv5C,KAAK,CAAC+4C,OAAO,GAAG,IAAAt3C,WAAK,EAACjG,IAAI,CAACmI,KAAK,CAAC,IAAI,CAAC61C,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;MACtEx5C,KAAK,CAAC0nC,OAAO,GAAG,IAAI,CAAC+R,UAAU,CAAC,CAAC;MACjCz5C,KAAK,CAACkE,MAAM,GAAG,IAAI,CAACgI,SAAS,CAAC,CAAC;MAC/BlM,KAAK,CAACg5C,MAAM,GAAGA,MAAM,KAAKxpD,SAAS,IAAI,CAACwQ,KAAK,CAACs5C,OAAO,GAAGz8C,QAAQ,GAAGm8C,MAAM;MACzEh5C,KAAK,CAACovB,aAAa,GAAG,IAAI,CAACuI,gBAAgB,CAAC,CAAC;MAC7C33B,KAAK,CAACqvB,aAAa,GAAG7zB,IAAI,CAACmG,GAAG,CAAC,IAAI,CAACi2B,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1D53B,KAAK,CAAC2yB,OAAO,GAAG,IAAI,CAACsF,UAAU,CAAC,CAAC;MACjCj4B,KAAK,CAACg4B,OAAO,GAAG,IAAI,CAACH,UAAU,CAAC,CAAC;MACjC,IAAI,CAACqhB,MAAM,GAAGl5C,KAAK;MAEnB,OAAOA,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApa,GAAA;IAAAC,KAAA,EAMA,SAAA6zD,cAAcA,CAAC1lD,KAAK,EAAE;MACpB,OAAO,IAAA5C,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAA8zD,mBAAmBA,CAACC,MAAM,EAAE;MAC1B,OAAO,IAAAxoD,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAxL,GAAA;IAAAC,KAAA,EAOA,SAAAqmB,SAASA,CAAA,EAAG;MACV,OAAO,sDACL,IAAI,CAAC5Z,GAAG,CAACwmD,iBAAa,CAAC/jC,MAAM,CAAC;IAElC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnvB,GAAA;IAAAC,KAAA,EAOA,SAAA8xC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,qBAAuB,IAAI,CAACrlC,GAAG,CAACwmD,iBAAa,CAACT,cAAc,CAAC;IACtE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAzyD,GAAA;IAAAC,KAAA,EAOA,SAAA+xC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,qBAAuB,IAAI,CAACtlC,GAAG,CAACwmD,iBAAa,CAACR,cAAc,CAAC;IACtE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1yD,GAAA;IAAAC,KAAA,EAOA,SAAAoyC,UAAUA,CAAA,EAAG;MACX,OAAO,qBAAuB,IAAI,CAAC3lC,GAAG,CAACwmD,iBAAa,CAACN,QAAQ,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5yD,GAAA;IAAAC,KAAA,EAOA,SAAAgyC,UAAUA,CAAA,EAAG;MACX,OAAO,qBAAuB,IAAI,CAACvlC,GAAG,CAACwmD,iBAAa,CAACP,QAAQ,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3yD,GAAA;IAAAC,KAAA,EAMA,SAAA2zD,UAAUA,CAAA,EAAG;MACX,OAAO,qBAAuB,IAAI,CAAClnD,GAAG,CAACwmD,iBAAa,CAACZ,OAAO,CAAC;IAC/D;;IAEA;AACF;AACA;AACA;EAHE;IAAAtyD,GAAA;IAAAC,KAAA,EAIA,SAAAg0D,cAAcA,CAAA,EAAG;MACf,OAAO,IAAAzoD,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAxL,GAAA;IAAAC,KAAA,EAOA,SAAA4zD,UAAUA,CAAA,EAAG;MACX,OAAO,sBAAwB,IAAI,CAACnnD,GAAG,CAACwmD,iBAAa,CAACX,OAAO,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAvyD,GAAA;IAAAC,KAAA,EAOA,SAAA0zD,SAASA,CAAA,EAAG;MACV,OAAO,+BAAiC,IAAI,CAACjnD,GAAG,CAACwmD,iBAAa,CAACV,OAAO,CAAC;IACzE;;IAEA;AACF;AACA;AACA;EAHE;IAAAxyD,GAAA;IAAAC,KAAA,EAIA,SAAAi0D,aAAaA,CAACjB,UAAU,EAAE;MACxB,IAAI,CAACD,WAAW,GAAGC,UAAU;MAC7B,IAAI,CAAChoD,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAA2uB,SAASA,CAACtQ,MAAM,EAAE;MAChB,IAAI,CAAC/Q,GAAG,CAAC2lD,iBAAa,CAAC/jC,MAAM,EAAE7Q,MAAM,CAAC;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAte,GAAA;IAAAC,KAAA,EAMA,SAAAk0D,gBAAgBA,CAAC3qB,aAAa,EAAE;MAC9B,IAAI,CAACj8B,GAAG,CAAC2lD,iBAAa,CAACT,cAAc,EAAEjpB,aAAa,CAAC;IACvD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxpC,GAAA;IAAAC,KAAA,EAMA,SAAAm0D,gBAAgBA,CAAC3qB,aAAa,EAAE;MAC9B,IAAI,CAACl8B,GAAG,CAAC2lD,iBAAa,CAACR,cAAc,EAAEjpB,aAAa,CAAC;IACvD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAzpC,GAAA;IAAAC,KAAA,EAQA,SAAAkyC,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAAC7kC,GAAG,CAAC2lD,iBAAa,CAACP,QAAQ,EAAEvgB,OAAO,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApyC,GAAA;IAAAC,KAAA,EAQA,SAAAqyC,UAAUA,CAACvF,OAAO,EAAE;MAClB,IAAI,CAACx/B,GAAG,CAAC2lD,iBAAa,CAACN,QAAQ,EAAE7lB,OAAO,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/sC,GAAA;IAAAC,KAAA,EAMA,SAAAo0D,UAAUA,CAAClB,OAAO,EAAE;MAClB,IAAAt8C,eAAM,EAAC,OAAOs8C,OAAO,KAAK,QAAQ,EAAE,gCAAgC,CAAC;MACrE,IAAI,CAAC5lD,GAAG,CAAC2lD,iBAAa,CAACZ,OAAO,EAAEa,OAAO,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAnzD,GAAA;IAAAC,KAAA,EAMA,SAAAq0D,UAAUA,CAACxS,OAAO,EAAE;MAClB,IAAI,CAACv0C,GAAG,CAAC2lD,iBAAa,CAACX,OAAO,EAAEzQ,OAAO,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA9hD,GAAA;IAAAC,KAAA,EAOA,SAAAs0D,SAASA,CAACC,MAAM,EAAE;MAChB,IAAI,CAACjnD,GAAG,CAAC2lD,iBAAa,CAACV,OAAO,EAAEgC,MAAM,CAAC;IACzC;;IAEA;AACF;AACA;AACA;EAHE;IAAAx0D,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACmzD,MAAM,EAAE;QACf,IAAI,CAACA,MAAM,CAACjS,KAAK,GAAG,IAAI;QACxB,IAAI,CAACiS,MAAM,GAAG,IAAI;MACpB;MACA1jD,aAAA,CAAAmjD,SAAA;IACF;EAAC;AAAA,EApVqB3mD,eAAU;AAAA,IAAA/N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuVnBw0D,SAAS;;;;;;;;AClZxB,IAAAzO,WAAA,GAAA7+C,sBAAA,CAAAnC,OAAA;AACA,IAAAsK,oBAAA,GAAAnI,sBAAA,CAAAnC,OAAA;AACA,IAAAwI,gBAAA,GAAArG,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAA0I,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAmxD,KAAA,GAAAhvD,sBAAA,CAAAnC,OAAA;AAAkC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAblC;AACA;AACA;AAaA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMa6uD,UAAU,GAAAp2D,OAAA,CAAAo2D,UAAA,0BAAA9uD,MAAA;EACrB;AACF;AACA;AACA;EACE,SAAA8uD,WAAYxvD,IAAI,EAAEm8C,KAAK,EAAE;IAAA,IAAAh5C,KAAA;IAAAxI,eAAA,OAAA60D,UAAA;IACvBrsD,KAAA,GAAAnB,UAAA,OAAAwtD,UAAA,GAAMxvD,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACImD,KAAA,CAAKg5C,KAAK,GAAGA,KAAK;IAAC,OAAAh5C,KAAA;EACrB;EAACL,SAAA,CAAA0sD,UAAA,EAAA9uD,MAAA;EAAA,OAAA7F,YAAA,CAAA20D,UAAA;AAAA,EAd6BvrD,eAAK;AAiBrC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,IAAM2E,QAAQ,GAAG;EACf6mD,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMC,UAAU,0BAAAC,UAAA;EACd;AACF;AACA;EACE,SAAAD,WAAYvmD,OAAO,EAAE;IAAA,IAAA9B,MAAA;IAAA1M,eAAA,OAAA+0D,UAAA;IACnBvmD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAMymD,WAAW,GAAG,sBAAwBnuD,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAE;IACvE,OAAOymD,WAAW,CAAC9T,MAAM;IAEzB,IAAIA,MAAM,GAAG3yC,OAAO,CAAC2yC,MAAM;IAE3Bz0C,MAAA,GAAArF,UAAA,OAAA0tD,UAAA,GAAME,WAAW;;IAEjB;AACJ;AACA;IACIvoD,MAAA,CAAK5B,EAAE;;IAEP;AACJ;AACA;IACI4B,MAAA,CAAKtC,IAAI;;IAET;AACJ;AACA;IACIsC,MAAA,CAAKzB,EAAE;;IAEP;AACJ;AACA;AACA;IACIyB,MAAA,CAAKwoD,mBAAmB,GAAG,EAAE;;IAE7B;AACJ;AACA;AACA;IACIxoD,MAAA,CAAKyoD,aAAa,GAAG,CAAC,CAAC;IAEvBzoD,MAAA,CAAKc,iBAAiB,CAACS,QAAQ,CAAC6mD,MAAM,EAAEpoD,MAAA,CAAK0oD,oBAAoB,CAAC;IAElE,IAAIjU,MAAM,EAAE;MACV,IAAIh/C,KAAK,CAACC,OAAO,CAAC++C,MAAM,CAAC,EAAE;QACzBA,MAAM,GAAG,IAAI9yC,mBAAU,CAAC8yC,MAAM,CAAC/8C,KAAK,CAAC,CAAC,EAAE;UAACsK,MAAM,EAAE;QAAI,CAAC,CAAC;MACzD,CAAC,MAAM;QACL,IAAAsI,eAAM,EACJ,QAAQ,gBAAkBmqC,MAAM,CAAEjyC,QAAQ,CAAC,KAAK,UAAU,EAC1D,oDACF,CAAC;MACH;IACF,CAAC,MAAM;MACLiyC,MAAM,GAAG,IAAI9yC,mBAAU,CAACtE,SAAS,EAAE;QAAC2E,MAAM,EAAE;MAAI,CAAC,CAAC;IACpD;IAEAhC,MAAA,CAAK2oD,SAAS,CAAClU,MAAM,CAAC;IAAC,OAAAz0C,MAAA;EACzB;;EAEA;AACF;AACA;EAFEvE,SAAA,CAAA4sD,UAAA,EAAAC,UAAA;EAAA,OAAA90D,YAAA,CAAA60D,UAAA;IAAA50D,GAAA;IAAAC,KAAA,EAGA,SAAAk1D,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAAClqD,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAAg1D,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACF,mBAAmB,CAAClmD,OAAO,CAACxE,qBAAa,CAAC;MAC/C,IAAI,CAAC0qD,mBAAmB,CAACl0D,MAAM,GAAG,CAAC;MAEnC,IAAMmgD,MAAM,GAAG,IAAI,CAACoU,SAAS,CAAC,CAAC;MAC/B,IAAI,CAACL,mBAAmB,CAAChsD,IAAI,CAC3B,IAAAgB,cAAM,EAACi3C,MAAM,EAAE7xC,4BAAmB,CAAC3Q,GAAG,EAAE,IAAI,CAAC62D,gBAAgB,EAAE,IAAI,CAAC,EACpE,IAAAtrD,cAAM,EACJi3C,MAAM,EACN7xC,4BAAmB,CAAC1Q,MAAM,EAC1B,IAAI,CAAC62D,mBAAmB,EACxB,IACF,CACF,CAAC;MAED,KAAK,IAAMtgD,EAAE,IAAI,IAAI,CAACggD,aAAa,EAAE;QACnC,IAAI,CAACA,aAAa,CAAChgD,EAAE,CAAC,CAACnG,OAAO,CAACxE,qBAAa,CAAC;MAC/C;MACA,IAAAxF,UAAK,EAAC,IAAI,CAACmwD,aAAa,CAAC;MAEzB,IAAMO,WAAW,GAAGvU,MAAM,CAACjyC,QAAQ,CAAC,CAAC;MACrC,KAAK,IAAIxN,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGgsD,WAAW,CAAC10D,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,EAAE,EAAE;QACpD,IAAM8/C,KAAK,GAAGkU,WAAW,CAACh0D,CAAC,CAAC;QAC5B,IAAI,CAACi0D,uBAAuB,CAACnU,KAAK,CAAC;QACnC,IAAI,CAACr4C,aAAa,CAAC,IAAI0rD,UAAU,CAAC,UAAU,EAAErT,KAAK,CAAC,CAAC;MACvD;MACA,IAAI,CAACp2C,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAAu1D,uBAAuBA,CAACnU,KAAK,EAAE;MAC7B,IAAMtG,YAAY,GAAG,CACnB,IAAAhxC,cAAM,EACJs3C,KAAK,EACLj0C,wBAAe,CAAC1O,cAAc,EAC9B,IAAI,CAACy2D,kBAAkB,EACvB,IACF,CAAC,EACD,IAAAprD,cAAM,EAACs3C,KAAK,EAAEn2C,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACw2D,kBAAkB,EAAE,IAAI,CAAC,CAC/D;MAED,IAAI9T,KAAK,YAAYuT,UAAU,EAAE;QAC/B7Z,YAAY,CAAChyC,IAAI,CACf,IAAAgB,cAAM,EAACs3C,KAAK,EAAE,UAAU,EAAE,IAAI,CAACoU,oBAAoB,EAAE,IAAI,CAAC,EAC1D,IAAA1rD,cAAM,EAACs3C,KAAK,EAAE,aAAa,EAAE,IAAI,CAACqU,uBAAuB,EAAE,IAAI,CACjE,CAAC;MACH;MAEA,IAAI,CAACV,aAAa,CAAC,IAAArpD,YAAM,EAAC01C,KAAK,CAAC,CAAC,GAAGtG,YAAY;IAClD;;IAEA;AACF;AACA;EAFE;IAAA/6C,GAAA;IAAAC,KAAA,EAGA,SAAAw1D,oBAAoBA,CAACxsD,KAAK,EAAE;MAC1B,IAAI,CAACD,aAAa,CAAC,IAAI0rD,UAAU,CAAC,UAAU,EAAEzrD,KAAK,CAACo4C,KAAK,CAAC,CAAC;IAC7D;;IAEA;AACF;AACA;EAFE;IAAArhD,GAAA;IAAAC,KAAA,EAGA,SAAAy1D,uBAAuBA,CAACzsD,KAAK,EAAE;MAC7B,IAAI,CAACD,aAAa,CAAC,IAAI0rD,UAAU,CAAC,aAAa,EAAEzrD,KAAK,CAACo4C,KAAK,CAAC,CAAC;IAChE;;IAEA;AACF;AACA;AACA;EAHE;IAAArhD,GAAA;IAAAC,KAAA,EAIA,SAAAo1D,gBAAgBA,CAACM,eAAe,EAAE;MAChC,IAAMtU,KAAK,GAAGsU,eAAe,CAAC1nD,OAAO;MACrC,IAAI,CAACunD,uBAAuB,CAACnU,KAAK,CAAC;MACnC,IAAI,CAACr4C,aAAa,CAAC,IAAI0rD,UAAU,CAAC,UAAU,EAAErT,KAAK,CAAC,CAAC;MACrD,IAAI,CAACp2C,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAAq1D,mBAAmBA,CAACK,eAAe,EAAE;MACnC,IAAMtU,KAAK,GAAGsU,eAAe,CAAC1nD,OAAO;MACrC,IAAMjO,GAAG,GAAG,IAAA2L,YAAM,EAAC01C,KAAK,CAAC;MACzB,IAAI,CAAC2T,aAAa,CAACh1D,GAAG,CAAC,CAAC6O,OAAO,CAACxE,qBAAa,CAAC;MAC9C,OAAO,IAAI,CAAC2qD,aAAa,CAACh1D,GAAG,CAAC;MAC9B,IAAI,CAACgJ,aAAa,CAAC,IAAI0rD,UAAU,CAAC,aAAa,EAAErT,KAAK,CAAC,CAAC;MACxD,IAAI,CAACp2C,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAm1D,SAASA,CAAA,EAAG;MACV,OAAO,uDACL,IAAI,CAAC1oD,GAAG,CAACoB,QAAQ,CAAC6mD,MAAM,CAAC;IAE7B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA30D,GAAA;IAAAC,KAAA,EAQA,SAAAi1D,SAASA,CAAClU,MAAM,EAAE;MAChB,IAAM4U,UAAU,GAAG,IAAI,CAACR,SAAS,CAAC,CAAC;MACnC,IAAIQ,UAAU,EAAE;QACd,IAAMC,aAAa,GAAGD,UAAU,CAAC7mD,QAAQ,CAAC,CAAC;QAC3C,KAAK,IAAIxN,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGssD,aAAa,CAACh1D,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UACtD,IAAI,CAACyH,aAAa,CAAC,IAAI0rD,UAAU,CAAC,aAAa,EAAEmB,aAAa,CAACt0D,CAAC,CAAC,CAAC,CAAC;QACrE;MACF;MAEA,IAAI,CAACgM,GAAG,CAACO,QAAQ,CAAC6mD,MAAM,EAAE3T,MAAM,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhhD,GAAA;IAAAC,KAAA,EAKA,SAAA6zD,cAAcA,CAAC1lD,KAAK,EAAE;MACpBA,KAAK,GAAGA,KAAK,KAAKxE,SAAS,GAAGwE,KAAK,GAAG,EAAE;MACxC,IAAI,CAACgnD,SAAS,CAAC,CAAC,CAACvmD,OAAO,CAAC,UAAUwyC,KAAK,EAAE;QACxCA,KAAK,CAACyS,cAAc,CAAC1lD,KAAK,CAAC;MAC7B,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAApO,GAAA;IAAAC,KAAA,EAUA,SAAA8zD,mBAAmBA,CAAC9yC,IAAI,EAAE;MACxB,IAAM+yC,MAAM,GAAG/yC,IAAI,KAAKrX,SAAS,GAAGqX,IAAI,GAAG,EAAE;MAC7C,IAAM60C,GAAG,GAAG9B,MAAM,CAACnzD,MAAM;MAEzB,IAAI,CAACu0D,SAAS,CAAC,CAAC,CAACvmD,OAAO,CAAC,UAAUwyC,KAAK,EAAE;QACxCA,KAAK,CAAC0S,mBAAmB,CAACC,MAAM,CAAC;MACnC,CAAC,CAAC;MAEF,IAAM+B,aAAa,GAAG,IAAI,CAACtC,aAAa,CAAC,CAAC;MAC1C,IAAIuC,aAAa,GAAGD,aAAa,CAAC3C,MAAM;MACxC,IAAI,CAACnyC,IAAI,IAAI80C,aAAa,CAAC3C,MAAM,KAAKxpD,SAAS,EAAE;QAC/CosD,aAAa,GAAG,CAAC;MACnB;MACA,KAAK,IAAIz0D,CAAC,GAAGu0D,GAAG,EAAEvsD,EAAE,GAAGyqD,MAAM,CAACnzD,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,EAAE,EAAE;QACjD,IAAM00D,UAAU,GAAGjC,MAAM,CAACzyD,CAAC,CAAC;QAC5B00D,UAAU,CAAC9C,OAAO,IAAI4C,aAAa,CAAC5C,OAAO;QAC3C8C,UAAU,CAACnU,OAAO,GAAGmU,UAAU,CAACnU,OAAO,IAAIiU,aAAa,CAACjU,OAAO;QAChEmU,UAAU,CAACzsB,aAAa,GAAG5zB,IAAI,CAACkG,GAAG,CACjCm6C,UAAU,CAACzsB,aAAa,EACxBusB,aAAa,CAACvsB,aAChB,CAAC;QACDysB,UAAU,CAACxsB,aAAa,GAAG7zB,IAAI,CAACmG,GAAG,CACjCk6C,UAAU,CAACxsB,aAAa,EACxBssB,aAAa,CAACtsB,aAChB,CAAC;QACDwsB,UAAU,CAAClpB,OAAO,GAAGn3B,IAAI,CAACmG,GAAG,CAACk6C,UAAU,CAAClpB,OAAO,EAAEgpB,aAAa,CAAChpB,OAAO,CAAC;QACxEkpB,UAAU,CAAC7jB,OAAO,GAAGx8B,IAAI,CAACkG,GAAG,CAACm6C,UAAU,CAAC7jB,OAAO,EAAE2jB,aAAa,CAAC3jB,OAAO,CAAC;QACxE,IAAI2jB,aAAa,CAACz3C,MAAM,KAAK1U,SAAS,EAAE;UACtC,IAAIqsD,UAAU,CAAC33C,MAAM,KAAK1U,SAAS,EAAE;YACnCqsD,UAAU,CAAC33C,MAAM,GAAG,IAAAyG,uBAAe,EACjCkxC,UAAU,CAAC33C,MAAM,EACjBy3C,aAAa,CAACz3C,MAChB,CAAC;UACH,CAAC,MAAM;YACL23C,UAAU,CAAC33C,MAAM,GAAGy3C,aAAa,CAACz3C,MAAM;UAC1C;QACF;QACA,IAAI23C,UAAU,CAAC7C,MAAM,KAAKxpD,SAAS,EAAE;UACnCqsD,UAAU,CAAC7C,MAAM,GAAG4C,aAAa;QACnC;MACF;MAEA,OAAOhC,MAAM;IACf;;IAEA;AACF;AACA;AACA;EAHE;IAAAh0D,GAAA;IAAAC,KAAA,EAIA,SAAAg0D,cAAcA,CAAA,EAAG;MACf,OAAO,OAAO;IAChB;EAAC;AAAA,EA3QsBlB,aAAS;AAAA,IAAA10D,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8QnBq2D,UAAU;;;;;;;;ACtWzB;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAv2D,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACE23D,SAAS,EAAE,WAAW;EAEtB;AACF;AACA;AACA;AACA;EACElgD,UAAU,EAAE,YAAY;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;EACEmgD,UAAU,EAAE,YAAY;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE;AAClB,CAAC;AAED;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;ACrDA,IAAAC,KAAA,GAAA7wD,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA6P,WAAA,GAAA1N,sBAAA,CAAAnC,OAAA;AACA,IAAAmxD,KAAA,GAAAhvD,sBAAA,CAAAnC,OAAA;AACA,IAAA2iD,SAAA,GAAAxgD,sBAAA,CAAAnC,OAAA;AAA0C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAuwD,eAAAjwD,CAAA,cAAAF,SAAA,OAAAE,CAAA;AAAA,SAAAzG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAV1C;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA,IA0BM2wD,KAAK,0BAAA3B,UAAA;EACT;AACF;AACA;EACE,SAAA2B,MAAYnoD,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA22D,KAAA;IACnB,IAAM1B,WAAW,GAAGnuD,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;IAC9C,OAAOymD,WAAW,CAACpnD,MAAM;IAEzBrF,KAAA,GAAAnB,UAAA,OAAAsvD,KAAA,GAAM1B,WAAW;;IAEjB;AACJ;AACA;IACIzsD,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAKouD,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACIpuD,KAAA,CAAKquD,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACIruD,KAAA,CAAKsuD,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACItuD,KAAA,CAAKuuD,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACIvuD,KAAA,CAAKwuD,YAAY,GAAG,KAAK;;IAEzB;AACJ;AACA;AACA;IACIxuD,KAAA,CAAKyuD,QAAQ,GAAG,KAAK;;IAErB;IACA,IAAIzoD,OAAO,CAAC2sC,MAAM,EAAE;MAClB3yC,KAAA,CAAK2yC,MAAM,GAAG3sC,OAAO,CAAC2sC,MAAM;IAC9B;IAEA,IAAI3sC,OAAO,CAACoB,GAAG,EAAE;MACfpH,KAAA,CAAK+yC,MAAM,CAAC/sC,OAAO,CAACoB,GAAG,CAAC;IAC1B;IAEApH,KAAA,CAAKgF,iBAAiB,CACpB6lD,iBAAa,CAACL,MAAM,EACpBxqD,KAAA,CAAK0uD,2BACP,CAAC;IAED,IAAMrpD,MAAM,GAAGW,OAAO,CAACX,MAAM,IACzB,yBAA2BW,OAAO,CAACX,MAAM,IACzC,IAAI;IACRrF,KAAA,CAAK2uD,SAAS,CAACtpD,MAAM,CAAC;IAAC,OAAArF,KAAA;EACzB;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAwuD,KAAA,EAAA3B,UAAA;EAAA,OAAA90D,YAAA,CAAAy2D,KAAA;IAAAx2D,GAAA;IAAAC,KAAA,EAKA,SAAA6zD,cAAcA,CAAC1lD,KAAK,EAAE;MACpBA,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAG,EAAE;MAC1BA,KAAK,CAACrF,IAAI,CAAC,IAAI,CAAC;MAChB,OAAOqF,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApO,GAAA;IAAAC,KAAA,EAKA,SAAA8zD,mBAAmBA,CAACC,MAAM,EAAE;MAC1BA,MAAM,GAAGA,MAAM,GAAGA,MAAM,GAAG,EAAE;MAC7BA,MAAM,CAACjrD,IAAI,CAAC,IAAI,CAAC0qD,aAAa,CAAC,CAAC,CAAC;MACjC,OAAOO,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAh0D,GAAA;IAAAC,KAAA,EAMA,SAAAwhD,SAASA,CAAA,EAAG;MACV,OAAO,yBAA2B,IAAI,CAAC/0C,GAAG,CAACwmD,iBAAa,CAACL,MAAM,CAAC,IAAK,IAAI;IAC3E;;IAEA;AACF;AACA;EAFE;IAAA7yD,GAAA;IAAAC,KAAA,EAGA,SAAAg3D,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACxV,SAAS,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;AACA;EAHE;IAAAzhD,GAAA;IAAAC,KAAA,EAIA,SAAAg0D,cAAcA,CAAA,EAAG;MACf,IAAMvmD,MAAM,GAAG,IAAI,CAAC+zC,SAAS,CAAC,CAAC;MAC/B,OAAO,CAAC/zC,MAAM,GAAG,WAAW,GAAGA,MAAM,CAAC2M,QAAQ,CAAC,CAAC;IAClD;;IAEA;AACF;AACA;EAFE;IAAAra,GAAA;IAAAC,KAAA,EAGA,SAAAi3D,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACjsD,OAAO,CAAC,CAAC;MACd,IAAI,IAAI,CAAC4rD,YAAY,IAAI,IAAI,CAACpV,SAAS,CAAC,CAAC,CAACpnC,QAAQ,CAAC,CAAC,KAAK,OAAO,EAAE;QAChE;MACF;MACA,IAAI,CAACw8C,YAAY,GAAG,IAAI;MACxB,IAAI,CAAC7tD,aAAa,CAAC,aAAa,CAAC;IACnC;;IAEA;AACF;AACA;EAFE;IAAAhJ,GAAA;IAAAC,KAAA,EAGA,SAAA82D,2BAA2BA,CAAA,EAAG;MAAA,IAAAxqD,MAAA;MAC5B,IAAI,IAAI,CAACoqD,gBAAgB,EAAE;QACzB,IAAAtsD,qBAAa,EAAC,IAAI,CAACssD,gBAAgB,CAAC;QACpC,IAAI,CAACA,gBAAgB,GAAG,IAAI;MAC9B;MACA,IAAI,CAACE,YAAY,GAAG,KAAK;MACzB,IAAMnpD,MAAM,GAAG,IAAI,CAAC+zC,SAAS,CAAC,CAAC;MAC/B,IAAI/zC,MAAM,EAAE;QACV,IAAI,CAACipD,gBAAgB,GAAG,IAAA5sD,cAAM,EAC5B2D,MAAM,EACNxC,kBAAS,CAACvM,MAAM,EAChB,IAAI,CAACu4D,mBAAmB,EACxB,IACF,CAAC;QACD,IAAIxpD,MAAM,CAAC2M,QAAQ,CAAC,CAAC,KAAK,OAAO,EAAE;UACjC,IAAI,CAACw8C,YAAY,GAAG,IAAI;UACxB/hD,UAAU,CAAC,YAAM;YACfvI,MAAI,CAACvD,aAAa,CAAC,aAAa,CAAC;UACnC,CAAC,EAAE,CAAC,CAAC;QACP;QACA,IAAI,CAACmuD,aAAa,CAAC,CAAC;MACtB;MACA,IAAI,CAAClsD,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAm3D,WAAWA,CAAC3mD,KAAK,EAAE;MACjB,IAAI,CAAC,IAAI,CAACmmD,SAAS,EAAE;QACnB,OAAOlyD,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;MAC5B;MACA,OAAO,IAAI,CAACgyD,SAAS,CAACQ,WAAW,CAAC3mD,KAAK,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAAzQ,GAAA;IAAAC,KAAA,EAIA,SAAAo3D,OAAOA,CAAC5mD,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACmmD,SAAS,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE;QACrC,OAAO,IAAI;MACb;MACA,OAAO,IAAI,CAACF,SAAS,CAACS,OAAO,CAAC5mD,KAAK,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAzQ,GAAA;IAAAC,KAAA,EASA,SAAAq3D,SAASA,CAAChU,IAAI,EAAE;MAAA,IAAAiU,MAAA;MACd,IAAI7nD,UAAU;MACd,IAAMD,GAAG,GAAG,IAAI,CAAC+nD,cAAc,CAAC,CAAC;MACjC,IAAI,CAAClU,IAAI,IAAI7zC,GAAG,EAAE;QAChB6zC,IAAI,GAAG7zC,GAAG,CAAC8zC,OAAO,CAAC,CAAC;MACtB;MACA,IAAID,IAAI,YAAYjY,aAAI,EAAE;QACxB37B,UAAU,GAAG;UACXyL,SAAS,EAAEmoC,IAAI,CAACjpC,QAAQ,CAAC,CAAC;UAC1BiE,MAAM,EAAEglC,IAAI,CAAC1R,eAAe,CAAC;QAC/B,CAAC;MACH,CAAC,MAAM;QACLliC,UAAU,GAAG4zC,IAAI;MACnB;MACA,IAAI,CAAC5zC,UAAU,CAAC+nD,gBAAgB,IAAIhoD,GAAG,EAAE;QACvCC,UAAU,CAAC+nD,gBAAgB,GAAGhoD,GAAG,CAACioD,aAAa,CAAC,CAAC,CAAC3D,mBAAmB,CAAC,CAAC;MACzE;MACA,IAAIkC,UAAU;MACd,IAAIvmD,UAAU,CAAC+nD,gBAAgB,EAAE;QAC/BxB,UAAU,GAAGvmD,UAAU,CAAC+nD,gBAAgB,CAACE,IAAI,CAC3C,UAAC1B,UAAU;UAAA,OAAKA,UAAU,CAAC5U,KAAK,KAAKkW,MAAI;QAAA,CAC3C,CAAC;QACD,IAAI,CAACtB,UAAU,EAAE;UACf,OAAO,KAAK;QACd;MACF,CAAC,MAAM;QACLA,UAAU,GAAG,IAAI,CAACxC,aAAa,CAAC,CAAC;MACnC;MAEA,IAAMmE,WAAW,GAAG,IAAI,CAACtxC,SAAS,CAAC,CAAC;MAEpC,OACEuxC,MAAM,CAAC5B,UAAU,EAAEvmD,UAAU,CAACyL,SAAS,CAAC,KACvC,CAACy8C,WAAW,IAAI,IAAA5yC,kBAAU,EAAC4yC,WAAW,EAAEloD,UAAU,CAAC4O,MAAM,CAAC,CAAC;IAEhE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAte,GAAA;IAAAC,KAAA,EAOA,SAAAqhD,eAAeA,CAACgC,IAAI,EAAE;MAAA,IAAAwU,eAAA;MACpB,IAAI,CAAC,IAAI,CAACR,SAAS,CAAChU,IAAI,CAAC,EAAE;QACzB,OAAO,EAAE;MACX;MACA,IAAMhC,eAAe,IAAAwW,eAAA,GAAG,IAAI,CAACrW,SAAS,CAAC,CAAC,cAAAqW,eAAA,uBAAhBA,eAAA,CAAkBxW,eAAe,CAAC,CAAC;MAC3D,IAAI,CAACA,eAAe,EAAE;QACpB,OAAO,EAAE;MACX;MACA,IAAM5xC,UAAU,GACd4zC,IAAI,YAAYjY,aAAI,GAAGiY,IAAI,CAAChQ,qBAAqB,CAAC,CAAC,GAAGgQ,IAAI;MAC5D,IAAIzD,YAAY,GAAGyB,eAAe,CAAC5xC,UAAU,CAAC;MAC9C,IAAI,CAAC1N,KAAK,CAACC,OAAO,CAAC49C,YAAY,CAAC,EAAE;QAChCA,YAAY,GAAG,CAACA,YAAY,CAAC;MAC/B;MACA,OAAOA,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA7/C,GAAA;IAAAC,KAAA,EAQA,SAAA+6C,MAAMA,CAACtrC,UAAU,EAAEtO,MAAM,EAAE;MACzB,IAAM22D,aAAa,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;MAExC,IAAID,aAAa,CAACE,YAAY,CAACvoD,UAAU,CAAC,EAAE;QAC1C,IAAI,CAAConD,QAAQ,GAAG,IAAI;QACpB,OAAOiB,aAAa,CAACG,WAAW,CAACxoD,UAAU,EAAEtO,MAAM,CAAC;MACtD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAApB,GAAA;IAAAC,KAAA,EAGA,SAAAk4D,QAAQA,CAAA,EAAG;MACT,IAAI,CAACrB,QAAQ,GAAG,KAAK;IACvB;;IAEA;EAAA;IAAA92D,GAAA;IAAAC,KAAA,EACA,SAAAm4D,YAAYA,CAAA,EAAG;MACb,OAAOxuD,SAAS;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAA5J,GAAA;IAAAC,KAAA,EAIA,SAAAo4D,eAAeA,CAAC3oD,UAAU,EAAEumD,UAAU,EAAE,CAAC;;IAEzC;AACF;AACA;AACA;EAHE;IAAAj2D,GAAA;IAAAC,KAAA,EAIA,SAAAq4D,cAAcA,CAAC5oD,UAAU,EAAE;MACzB,IAAMqoD,aAAa,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;MACxC,IAAI,CAACD,aAAa,EAAE;QAClB;MACF;MACAA,aAAa,CAACO,cAAc,CAAC5oD,UAAU,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAA1P,GAAA;IAAAC,KAAA,EAIA,SAAAs4D,cAAcA,CAAC9oD,GAAG,EAAE;MAClB,IAAI,CAACA,GAAG,EAAE;QACR,IAAI,CAAC0oD,QAAQ,CAAC,CAAC;MACjB;MACA,IAAI,CAAC5qD,GAAG,CAAC2lD,iBAAa,CAACJ,GAAG,EAAErjD,GAAG,CAAC;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAAzP,GAAA;IAAAC,KAAA,EAIA,SAAAu3D,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC9qD,GAAG,CAACwmD,iBAAa,CAACJ,GAAG,CAAC;IACpC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAA9yD,GAAA;IAAAC,KAAA,EAWA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAI,IAAI,CAACgnD,iBAAiB,EAAE;QAC1B,IAAApsD,qBAAa,EAAC,IAAI,CAACosD,iBAAiB,CAAC;QACrC,IAAI,CAACA,iBAAiB,GAAG,IAAI;MAC/B;MACA,IAAI,CAAChnD,GAAG,EAAE;QACR,IAAI,CAACxE,OAAO,CAAC,CAAC;MAChB;MACA,IAAI,IAAI,CAACyrD,aAAa,EAAE;QACtB,IAAArsD,qBAAa,EAAC,IAAI,CAACqsD,aAAa,CAAC;QACjC,IAAI,CAACA,aAAa,GAAG,IAAI;MAC3B;MACA,IAAIjnD,GAAG,EAAE;QACP,IAAI,CAACgnD,iBAAiB,GAAG,IAAA1sD,cAAM,EAC7B0F,GAAG,EACH+oD,mBAAe,CAACrC,UAAU,EAC1B,IAAI,CAACsC,iBAAiB,EACtB,IACF,CAAC;QACD,IAAI,CAAC/B,aAAa,GAAG,IAAA3sD,cAAM,EAAC,IAAI,EAAEmB,kBAAS,CAACvM,MAAM,EAAE8Q,GAAG,CAACurC,MAAM,EAAEvrC,GAAG,CAAC;QACpE,IAAI,CAACxE,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAAw4D,iBAAiBA,CAACC,WAAW,EAAE;MAC7B,IAAMjB,gBAAgB,GACpB,mDAAqDiB,WAAW,CAC7DhpD,UAAU,CAAC+nD,gBAAgB;MAChC,IAAMxB,UAAU,GAAG,IAAI,CAACxC,aAAa,CAAC,KAAK,CAAC;MAC5C,IAAA58C,eAAM,EACJ,CAAC4gD,gBAAgB,CAAClW,IAAI,CACpB,UAACoX,eAAe;QAAA,OAAKA,eAAe,CAACtX,KAAK,KAAK4U,UAAU,CAAC5U,KAAK;MAAA,CACjE,CAAC,EACD,uGACF,CAAC;MACDoW,gBAAgB,CAAC1uD,IAAI,CAACktD,UAAU,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAj2D,GAAA;IAAAC,KAAA,EAMA,SAAA+2D,SAASA,CAACtpD,MAAM,EAAE;MAChB,IAAI,CAACH,GAAG,CAAC2lD,iBAAa,CAACL,MAAM,EAAEnlD,MAAM,CAAC;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAA1N,GAAA;IAAAC,KAAA,EAIA,SAAA+3D,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACpB,SAAS,EAAE;QACnB,IAAI,CAACA,SAAS,GAAG,IAAI,CAACgC,cAAc,CAAC,CAAC;MACxC;MACA,OAAO,IAAI,CAAChC,SAAS;IACvB;;IAEA;AACF;AACA;EAFE;IAAA52D,GAAA;IAAAC,KAAA,EAGA,SAAA44D,WAAWA,CAAA,EAAG;MACZ,OAAO,CAAC,CAAC,IAAI,CAACjC,SAAS;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA52D,GAAA;IAAAC,KAAA,EAKA,SAAA24D,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAA54D,GAAA;IAAAC,KAAA,EAGA,SAAAk3D,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACP,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAAC12D,OAAO,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC02D,SAAS;MACvB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA52D,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACg3D,aAAa,CAAC,CAAC;MACpB,IAAI,CAACH,SAAS,CAAC,IAAI,CAAC;MACpBpnD,aAAA,CAAA4mD,KAAA;IACF;EAAC;AAAA,EArbiBzD,aAAS;AAwb7B;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8E,MAAMA,CAAC5B,UAAU,EAAE96C,SAAS,EAAE;EAC5C,IAAI,CAAC86C,UAAU,CAACnU,OAAO,EAAE;IACvB,OAAO,KAAK;EACd;EACA,IAAMrjC,UAAU,GAAGtD,SAAS,CAACsD,UAAU;EACvC,IACEA,UAAU,GAAGw3C,UAAU,CAACxsB,aAAa,IACrChrB,UAAU,IAAIw3C,UAAU,CAACzsB,aAAa,EACtC;IACA,OAAO,KAAK;EACd;EACA,IAAMkE,IAAI,GAAGvyB,SAAS,CAACuyB,IAAI;EAC3B,OAAOA,IAAI,GAAGuoB,UAAU,CAAClpB,OAAO,IAAIW,IAAI,IAAIuoB,UAAU,CAAC7jB,OAAO;AAChE;AAAC,IAAA/zC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEci4D,KAAK;;;ACjjBpB;AACA;;;;;;;;iCCDe;EACdsC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EACnBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChBC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACjBC,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAC1BC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACpBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACzBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EACzBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EACrBC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACtBC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EACnBC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACrBC,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EAC7BC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EACtBC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;EAC1BC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;EAC7BC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACzBC,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAC1BC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACpBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC5BC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3BC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3BC,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5BC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;EACzBC,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACxBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,UAAU,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACxBC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5BC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;EAC1BC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;EACtBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACnBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EACzBC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EAC3BC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrBC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACxBC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;EACpBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACxBC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,oBAAoB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrCC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5BC,aAAa,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5BC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EACjBC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;EACxBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;EACtBC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACnBC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACjCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACvBC,YAAY,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7BC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCC,iBAAiB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCC,eAAe,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/BC,eAAe,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAC/BC,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC3BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5BC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACjBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACpBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EACzBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACrBC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;EACvBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EACpBC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrBC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;EACrBC,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAC7BC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAChBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EAC1BC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EAC1BC,QAAQ,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;EACvBC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACzBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAC1BC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBhyC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpBiyC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EACnBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EACzBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3BC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACrBC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;AAC3B,CAAC;;;;;;;;AClJD,IAAAC,UAAA,GAAAx8D,sBAAA,CAAAnC,OAAA;AAA8B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAH9B;AACA;AACA;AAFA,IAAAxH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAKe2jE,KAAK;AAEpB;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG;EACd7B,GAAG,EAAE,CAAC;EACNf,MAAM,EAAE,EAAE;EACVwC,MAAM,EAAE,GAAG;EACX3F,KAAK,EAAE,GAAG;EACV7C,IAAI,EAAE,GAAG;EACT6G,MAAM,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS8B,KAAKA,CAACE,IAAI,EAAE;EACpB,IAAIjlD,CAAC;IAAEklD,KAAK,GAAG,EAAE;IAAEC,KAAK,GAAG,CAAC;IAAEC,KAAK;;EAEnC;EACA,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;IAC7B,OAAO;MAAEG,KAAK,EAAE,KAAK;MAAEj2D,MAAM,EAAE,CAAC81D,IAAI,KAAK,EAAE,EAAE,CAACA,IAAI,GAAG,QAAQ,MAAM,CAAC,EAAEA,IAAI,GAAG,QAAQ,CAAC;MAAEE,KAAK,EAAE;IAAE,CAAC;EACnG;EACA,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE,OAAO;IAAEG,KAAK,EAAE,KAAK;IAAEj2D,MAAM,EAAE,CAAC81D,IAAI,KAAK,EAAE,EAAE,CAACA,IAAI,GAAG,QAAQ,MAAM,CAAC,EAAEA,IAAI,GAAG,QAAQ,CAAC;IAAEE,KAAK,EAAE;EAAE,CAAC;EAEhIF,IAAI,GAAGp7D,MAAM,CAACo7D,IAAI,CAAC,CAAC3wD,WAAW,CAAC,CAAC;;EAEjC;EACA,IAAI+wD,kBAAK,CAACJ,IAAI,CAAC,EAAE;IAChBC,KAAK,GAAGG,kBAAK,CAACJ,IAAI,CAAC,CAACn+D,KAAK,CAAC,CAAC;IAC3Bs+D,KAAK,GAAG,KAAK;EACd;;EAEA;EAAA,KACK,IAAIH,IAAI,KAAK,aAAa,EAAE;IAChCE,KAAK,GAAG,CAAC;IACTC,KAAK,GAAG,KAAK;IACbF,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB;;EAEA;EAAA,KACK,IAAID,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzB,IAAIK,IAAI,GAAGL,IAAI,CAACn+D,KAAK,CAAC,CAAC,CAAC;IACxB,IAAIya,IAAI,GAAG+jD,IAAI,CAAC5hE,MAAM;IACtB,IAAI6hE,OAAO,GAAGhkD,IAAI,IAAI,CAAC;IACvB4jD,KAAK,GAAG,CAAC;IAET,IAAII,OAAO,EAAE;MACZL,KAAK,GAAG,CACP36C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAC/B/6C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAC/B/6C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAC/B;MACD,IAAI/jD,IAAI,KAAK,CAAC,EAAE;QACf4jD,KAAK,GAAG56C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG;MAC9C;IACD,CAAC,MACI;MACJJ,KAAK,GAAG,CACP36C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAC/B/6C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAC/B/6C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAC/B;MACD,IAAI/jD,IAAI,KAAK,CAAC,EAAE;QACf4jD,KAAK,GAAG56C,QAAQ,CAAC+6C,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG;MAC9C;IACD;IAEA,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3B,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3B,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAE3BE,KAAK,GAAG,KAAK;EACd;;EAEA;EAAA,KACK,IAAIplD,CAAC,GAAG,wGAAwG,CAACwlD,IAAI,CAACP,IAAI,CAAC,EAAE;IACjI,IAAI/hD,IAAI,GAAGlD,CAAC,CAAC,CAAC,CAAC;IACfolD,KAAK,GAAGliD,IAAI,CAAC+I,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC9B,IAAIw5C,IAAI,GAAGL,KAAK,KAAK,MAAM,GAAG,CAAC,GAAGA,KAAK,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC;IAC1DF,KAAK,GAAGllD,CAAC,CAAC,CAAC,CAAC,CAAC0lD,IAAI,CAAC,CAAC,CAACt7C,KAAK,CAAC,iBAAiB,CAAC;;IAE5C;IACA,IAAIg7C,KAAK,KAAK,OAAO,EAAEA,KAAK,GAAGF,KAAK,CAAC9pB,KAAK,CAAC,CAAC;IAE5C8pB,KAAK,GAAGA,KAAK,CAAC5yD,GAAG,CAAC,UAAUwM,CAAC,EAAE1a,CAAC,EAAE;MACjC;MACA,IAAI0a,CAAC,CAACA,CAAC,CAACpb,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5Bob,CAAC,GAAG6mD,UAAU,CAAC7mD,CAAC,CAAC,GAAG,GAAG;QACvB;QACA,IAAI1a,CAAC,KAAK,CAAC,EAAE,OAAO0a,CAAC;QACrB;QACA,IAAIsmD,KAAK,KAAK,KAAK,EAAE,OAAOtmD,CAAC,GAAG,GAAG;QACnC;QACA,IAAIsmD,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOtmD,CAAC,GAAG,GAAG;QACpC;QACA,IAAIsmD,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAChhE,CAAC,EAAE,OAAO0a,CAAC,GAAG,GAAG;QAC1C;QACA,IAAIsmD,KAAK,KAAK,KAAK,EAAE,OAAOtmD,CAAC,GAAG,GAAG;QACnC;QACA,IAAIsmD,KAAK,KAAK,KAAK,EAAE,OAAOhhE,CAAC,GAAG,CAAC,GAAG0a,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAG,GAAG;QACrD;QACA,IAAIsmD,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAChhE,CAAC,EAAE,OAAO0a,CAAC;QACpC;QACA,IAAIsmD,KAAK,KAAK,OAAO,EAAE,OAAOtmD,CAAC,GAAG,GAAG;QACrC;QACA,IAAIsmD,KAAK,KAAK,OAAO,EAAE,OAAOhhE,CAAC,GAAG,CAAC,GAAG0a,CAAC,GAAG,GAAG,GAAGA,CAAC,GAAG,GAAG;QACvD;QACA,OAAOA,CAAC;MACT;;MAEA;MACA,IAAIsmD,KAAK,CAAChhE,CAAC,CAAC,KAAK,GAAG,IAAKA,CAAC,KAAK,CAAC,IAAIghE,KAAK,CAACA,KAAK,CAAC1hE,MAAM,GAAG,CAAC,CAAC,KAAK,GAAI,EAAE;QACrE;QACA,IAAIshE,QAAQ,CAAClmD,CAAC,CAAC,KAAKrS,SAAS,EAAE,OAAOu4D,QAAQ,CAAClmD,CAAC,CAAC;QACjD;QACA,IAAIA,CAAC,CAAC8mD,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAOD,UAAU,CAAC7mD,CAAC,CAAC;QAC3C;QACA,IAAIA,CAAC,CAAC8mD,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAOD,UAAU,CAAC7mD,CAAC,CAAC,GAAG,GAAG;QAClD,IAAIA,CAAC,CAAC8mD,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAOD,UAAU,CAAC7mD,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;QACxD,IAAIA,CAAC,CAAC8mD,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAOD,UAAU,CAAC7mD,CAAC,CAAC,GAAG,GAAG,GAAGrG,IAAI,CAAC0H,EAAE;MAC5D;MACA,IAAIrB,CAAC,KAAK,MAAM,EAAE,OAAO,CAAC;MAC1B,OAAO6mD,UAAU,CAAC7mD,CAAC,CAAC;IACrB,CAAC,CAAC;IAEFqmD,KAAK,GAAGD,KAAK,CAACxhE,MAAM,GAAG+hE,IAAI,GAAGP,KAAK,CAACzzD,GAAG,CAAC,CAAC,GAAG,CAAC;EAC9C;;EAEA;EAAA,KACK,IAAI,kBAAkB,CAACiD,IAAI,CAACuwD,IAAI,CAAC,EAAE;IACvCC,KAAK,GAAGD,IAAI,CAACltC,KAAK,CAAC,WAAW,CAAC,CAACzlB,GAAG,CAAC,UAAUxP,KAAK,EAAE;MACpD,OAAO6iE,UAAU,CAAC7iE,KAAK,CAAC;IACzB,CAAC,CAAC;IAEFsiE,KAAK,GAAGH,IAAI,CAACltC,KAAK,CAAC,WAAW,CAAC,EAAEhO,IAAI,CAAC,EAAE,CAAC,EAAEzV,WAAW,CAAC,CAAC,IAAI,KAAK;EAClE;EAEA,OAAO;IACN8wD,KAAK;IACLj2D,MAAM,EAAE+1D,KAAK;IACbC;EACD,CAAC;AACF;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA,MAAMU,GAAG,GAAG;EACX3iD,IAAI,EAAE,KAAK;EACXvE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACdC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpBknD,OAAO,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;EACjCC,KAAK,EAAE,CAAC,KAAK;AACd,CAAC;AAAC,IAAA7kE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEaykE,GAAG;;;;;;;;ACVlB,IAAAG,IAAA,GAAA19D,sBAAA,CAAAnC,OAAA;AAA2B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAH3B;AACA;AACA;;AAGA,IAAIu9D,GAAG,GAAG;EACT/iD,IAAI,EAAE,KAAK;EACXvE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACdC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpBknD,OAAO,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,WAAW,CAAC;EAC3CC,KAAK,EAAE,CAAC,KAAK,CAAC;EAEdF,GAAG,EAAE,SAAAA,CAAUI,GAAG,EAAE;IACnB,IAAI9xB,CAAC,GAAG8xB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;MAAExyC,CAAC,GAAGwyC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;MAAElmD,CAAC,GAAGkmD,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;MAAE9pC,EAAE;MAAEC,EAAE;MAAE8pC,EAAE;MAAEL,GAAG;MAAEjgD,GAAG;MAAExhB,CAAC,GAAG,CAAC;IAErF,IAAIqvB,CAAC,KAAK,CAAC,EAAE,OAAO7N,GAAG,GAAG7F,CAAC,GAAG,GAAG,EAAE,CAAC6F,GAAG,EAAEA,GAAG,EAAEA,GAAG,CAAC;IAElDwW,EAAE,GAAGrc,CAAC,GAAG,GAAG,GAAGA,CAAC,IAAI,CAAC,GAAG0T,CAAC,CAAC,GAAG1T,CAAC,GAAG0T,CAAC,GAAG1T,CAAC,GAAG0T,CAAC;IAC1C0I,EAAE,GAAG,CAAC,GAAGpc,CAAC,GAAGqc,EAAE;IAEfypC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACf,OAAOzhE,CAAC,GAAG,CAAC,GAAG;MACd8hE,EAAE,GAAG/xB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAG/vC,CAAC,GAAG,CAAC,CAAC;MAC1B8hE,EAAE,GAAG,CAAC,GAAGA,EAAE,EAAE,GAAGA,EAAE,GAAG,CAAC,IAAIA,EAAE,EAAE;MAC9BtgD,GAAG,GAAG,CAAC,GAAGsgD,EAAE,GAAG,CAAC,GAAG/pC,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAE,IAAI,CAAC,GAAG+pC,EAAE,GACzC,CAAC,GAAGA,EAAE,GAAG,CAAC,GAAG9pC,EAAE,GACd,CAAC,GAAG8pC,EAAE,GAAG,CAAC,GAAG/pC,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG+pC,EAAE,CAAC,GAAG,CAAC,GAC7C/pC,EAAE;MACL0pC,GAAG,CAACzhE,CAAC,EAAE,CAAC,GAAGwhB,GAAG,GAAG,GAAG;IACrB;IAEA,OAAOigD,GAAG;EACX;AACD,CAAC;AAAC,IAAA3kE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc6kE,GAAG,EAGnB;AACAJ,YAAG,CAACI,GAAG,GAAG,UAAUJ,GAAG,EAAE;EACxB,IAAI18D,CAAC,GAAG08D,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IACnBtmB,CAAC,GAAGsmB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IAChBhiE,CAAC,GAAGgiE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IAChBlnD,GAAG,GAAGlG,IAAI,CAACkG,GAAG,CAACxV,CAAC,EAAEo2C,CAAC,EAAE17C,CAAC,CAAC;IACvB+a,GAAG,GAAGnG,IAAI,CAACmG,GAAG,CAACzV,CAAC,EAAEo2C,CAAC,EAAE17C,CAAC,CAAC;IACvB+mB,KAAK,GAAGhM,GAAG,GAAGD,GAAG;IACjBw1B,CAAC;IAAE1gB,CAAC;IAAE1T,CAAC;EAER,IAAInB,GAAG,KAAKD,GAAG,EAAE;IAChBw1B,CAAC,GAAG,CAAC;EACN,CAAC,MACI,IAAIhrC,CAAC,KAAKyV,GAAG,EAAE;IACnBu1B,CAAC,GAAG,CAACoL,CAAC,GAAG17C,CAAC,IAAI+mB,KAAK;EACpB,CAAC,MACI,IAAI20B,CAAC,KAAK3gC,GAAG,EAAE;IACnBu1B,CAAC,GAAG,CAAC,GAAG,CAACtwC,CAAC,GAAGsF,CAAC,IAAIyhB,KAAK;EACxB,CAAC,MACI,IAAI/mB,CAAC,KAAK+a,GAAG,EAAE;IACnBu1B,CAAC,GAAG,CAAC,GAAG,CAAChrC,CAAC,GAAGo2C,CAAC,IAAI30B,KAAK;EACxB;;EAEA;EACA;EACAupB,CAAC,GAAG17B,IAAI,CAACkG,GAAG,CAACw1B,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC;EAEzB,IAAIA,CAAC,GAAG,CAAC,EAAE;IACVA,CAAC,IAAI,GAAG;EACT;EAEAp0B,CAAC,GAAG,CAACpB,GAAG,GAAGC,GAAG,IAAI,CAAC;EAEnB,IAAIA,GAAG,KAAKD,GAAG,EAAE;IAChB8U,CAAC,GAAG,CAAC;EACN,CAAC,MACI,IAAI1T,CAAC,IAAI,GAAG,EAAE;IAClB0T,CAAC,GAAG7I,KAAK,IAAIhM,GAAG,GAAGD,GAAG,CAAC;EACxB,CAAC,MACI;IACJ8U,CAAC,GAAG7I,KAAK,IAAI,CAAC,GAAGhM,GAAG,GAAGD,GAAG,CAAC;EAC5B;EAEA,OAAO,CAACw1B,CAAC,EAAE1gB,CAAC,GAAG,GAAG,EAAE1T,CAAC,GAAG,GAAG,CAAC;AAC7B,CAAC;;;;;;;;ACjFD,IAAAomD,WAAA,GAAA79D,sBAAA,CAAAnC,OAAA;AACA,IAAA6/D,IAAA,GAAA19D,sBAAA,CAAAnC,OAAA;AACA,IAAAigE,IAAA,GAAA99D,sBAAA,CAAAnC,OAAA;AAAoC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAHpC;;AAKe,SAAS29D,IAAIA,CAACC,KAAK,EAAE;EACnC;EACA,IAAIzhE,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,IAAIA,KAAK,CAACC,GAAG,EAAED,KAAK,GAAGz8D,MAAM,CAAC08D,GAAG,CAAC,GAAGv/D,SAAS,CAAC;EACvE,IAAIs/D,KAAK,YAAYx8D,MAAM,EAAEw8D,KAAK,GAAG,CAACA,KAAK;EAE3C,IAAIn3D,MAAM,EAAE/K,CAAC,EAAE2b,CAAC;;EAEhB;EACA,IAAIymD,MAAM,GAAG,IAAAzB,mBAAK,EAACuB,KAAK,CAAC;EAEzB,IAAI,CAACE,MAAM,CAACpB,KAAK,EAAE,OAAO,EAAE;EAE5B,MAAMzmD,GAAG,GAAG6nD,MAAM,CAACpB,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGa,YAAG,CAACtnD,GAAG,GAAGknD,YAAG,CAAClnD,GAAG;EACvD,MAAMC,GAAG,GAAG4nD,MAAM,CAACpB,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGa,YAAG,CAACrnD,GAAG,GAAGinD,YAAG,CAACjnD,GAAG;EAEvDzP,MAAM,GAAGtK,KAAK,CAAC,CAAC,CAAC;EACjBsK,MAAM,CAAC,CAAC,CAAC,GAAGsJ,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC4nD,MAAM,CAACr3D,MAAM,CAAC,CAAC,CAAC,EAAEwP,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChEzP,MAAM,CAAC,CAAC,CAAC,GAAGsJ,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC4nD,MAAM,CAACr3D,MAAM,CAAC,CAAC,CAAC,EAAEwP,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChEzP,MAAM,CAAC,CAAC,CAAC,GAAGsJ,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC4nD,MAAM,CAACr3D,MAAM,CAAC,CAAC,CAAC,EAAEwP,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEhE,IAAI4nD,MAAM,CAACpB,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5Bj2D,MAAM,GAAG82D,YAAG,CAACJ,GAAG,CAAC12D,MAAM,CAAC;EACzB;EAEAA,MAAM,CAACvD,IAAI,CAAC6M,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC4nD,MAAM,CAACrB,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEnD,OAAOh2D,MAAM;AACd;;;;;;;;AC3BA,IAAA62D,IAAA,GAAA19D,sBAAA,CAAAnC,OAAA;AAA2B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAL3B;AACA;AACA;AACA;AACA;;AAGA,MAAM+9D,GAAG,GAAG;EACXvjD,IAAI,EAAE,KAAK;EACXvE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACdmnD,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBC,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;EAEnC;EACA;EACAW,UAAU,EAAE;IACX;IACA,CAAC,EAAE;MACF;MACAC,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MACxB;MACAC,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MACzBC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MAC1BC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MAC1B;MACAC,GAAG,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE,iBAAiB,CAAC;MAC9CC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MAC3B;MACA;MACAC,EAAE,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MACzB;MACA;MACA;MACA;MACAC,EAAE,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MAC1B;MACA;MACA;MACAC,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;MAC3B;MACAxzC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IAClB,CAAC;IAED;IACA,EAAE,EAAE;MACH;MACAgzC,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;MACzBC,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MACzBC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MAC1BC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;MAC1B;MACAC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MAC3BC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MAC3B;MACAC,EAAE,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;MAC1BC,EAAE,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;MAC1BC,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC;MAC3BxzC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IAClB;EACD;AACD,CAAC;;AAGD;AACA;AACA;AACA8yC,GAAG,CAAC7nD,GAAG,GAAG6nD,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAACK,GAAG;;AAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACZ,GAAG,GAAG,UAAUuB,IAAI,EAAE1C,KAAK,EAAE;EAChC;EACAA,KAAK,GAAGA,KAAK,IAAI+B,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC/yC,CAAC;EAEpC,IAAI7U,CAAC,GAAGsoD,IAAI,CAAC,CAAC,CAAC,GAAG1C,KAAK,CAAC,CAAC,CAAC;IACzB3lD,CAAC,GAAGqoD,IAAI,CAAC,CAAC,CAAC,GAAG1C,KAAK,CAAC,CAAC,CAAC;IACtB93B,CAAC,GAAGw6B,IAAI,CAAC,CAAC,CAAC,GAAG1C,KAAK,CAAC,CAAC,CAAC;IACtBv7D,CAAC;IAAEo2C,CAAC;IAAE17C,CAAC;;EAER;EACA;EACAsF,CAAC,GAAI2V,CAAC,GAAG,iBAAiB,GAAKC,CAAC,GAAG,CAAC,iBAAkB,GAAI6tB,CAAC,GAAG,CAAC,cAAe;EAC9E2S,CAAC,GAAIzgC,CAAC,GAAG,CAAC,gBAAgB,GAAKC,CAAC,GAAG,gBAAiB,GAAI6tB,CAAC,GAAG,iBAAkB;EAC9E/oC,CAAC,GAAIib,CAAC,GAAG,iBAAiB,GAAKC,CAAC,GAAG,CAAC,gBAAiB,GAAI6tB,CAAC,GAAG,iBAAkB;EAE/EzjC,CAAC,GAAGA,CAAC,GAAG,SAAS,GAAK,KAAK,GAAGsP,IAAI,CAACkI,GAAG,CAACxX,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,GAAI,KAAK,GAC1DA,CAAC,GAAIA,CAAC,GAAG,KAAM;EAElBo2C,CAAC,GAAGA,CAAC,GAAG,SAAS,GAAK,KAAK,GAAG9mC,IAAI,CAACkI,GAAG,CAAC4+B,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,GAAI,KAAK,GAC1DA,CAAC,GAAIA,CAAC,GAAG,KAAM;EAElB17C,CAAC,GAAGA,CAAC,GAAG,SAAS,GAAK,KAAK,GAAG4U,IAAI,CAACkI,GAAG,CAAC9c,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,GAAI,KAAK,GAC1DA,CAAC,GAAIA,CAAC,GAAG,KAAM;EAElBsF,CAAC,GAAGsP,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEzV,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/Bo2C,CAAC,GAAG9mC,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAE2gC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/B17C,CAAC,GAAG4U,IAAI,CAACkG,GAAG,CAAClG,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAE/a,CAAC,CAAC,EAAE,CAAC,CAAC;EAE/B,OAAO,CAACsF,CAAC,GAAG,GAAG,EAAEo2C,CAAC,GAAG,GAAG,EAAE17C,CAAC,GAAG,GAAG,CAAC;AACnC,CAAC;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACAgiE,YAAG,CAACY,GAAG,GAAG,UAAUZ,GAAG,EAAEnB,KAAK,EAAE;EAC/B,IAAIv7D,CAAC,GAAG08D,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IACnBtmB,CAAC,GAAGsmB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IAChBhiE,CAAC,GAAGgiE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;;EAEjB;EACA18D,CAAC,GAAGA,CAAC,GAAG,OAAO,GAAGsP,IAAI,CAACkI,GAAG,CAAE,CAACxX,CAAC,GAAG,KAAK,IAAI,KAAK,EAAG,GAAG,CAAC,GAAIA,CAAC,GAAG,KAAM;EACpEo2C,CAAC,GAAGA,CAAC,GAAG,OAAO,GAAG9mC,IAAI,CAACkI,GAAG,CAAE,CAAC4+B,CAAC,GAAG,KAAK,IAAI,KAAK,EAAG,GAAG,CAAC,GAAIA,CAAC,GAAG,KAAM;EACpE17C,CAAC,GAAGA,CAAC,GAAG,OAAO,GAAG4U,IAAI,CAACkI,GAAG,CAAE,CAAC9c,CAAC,GAAG,KAAK,IAAI,KAAK,EAAG,GAAG,CAAC,GAAIA,CAAC,GAAG,KAAM;EAEpE,IAAIib,CAAC,GAAI3V,CAAC,GAAG,gBAAgB,GAAKo2C,CAAC,GAAG,gBAAiB,GAAI17C,CAAC,GAAG,gBAAiB;EAChF,IAAIkb,CAAC,GAAI5V,CAAC,GAAG,gBAAgB,GAAKo2C,CAAC,GAAG,gBAAiB,GAAI17C,CAAC,GAAG,iBAAkB;EACjF,IAAI+oC,CAAC,GAAIzjC,CAAC,GAAG,iBAAiB,GAAKo2C,CAAC,GAAG,gBAAiB,GAAI17C,CAAC,GAAG,gBAAiB;EAEjF6gE,KAAK,GAAGA,KAAK,IAAI+B,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC/yC,CAAC;EAEpC,OAAO,CAAC7U,CAAC,GAAG4lD,KAAK,CAAC,CAAC,CAAC,EAAE3lD,CAAC,GAAG2lD,KAAK,CAAC,CAAC,CAAC,EAAE93B,CAAC,GAAG83B,KAAK,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC;AAAC,IAAAxjE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIaqlE,GAAG;;;;;;;;ACpIlB,IAAAW,IAAA,GAAA9+D,sBAAA,CAAAnC,OAAA;AAA2B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAL3B;AACA;AACA;AACA;AACA;;AAGA,IAAI2+D,GAAG,GAAG;EACTnkD,IAAI,EAAE,KAAK;EACX;EACA;EACA;EACA;EACAvE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;EACpBC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpBknD,OAAO,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCC,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;EAEnCU,GAAG,EAAE,SAAAA,CAAUtnB,GAAG,EAAE/6C,CAAC,EAAEyE,CAAC,EAAE;IACzB,IAAIy+D,EAAE,EAAEC,EAAE,EAAExnD,CAAC,EAAE5D,CAAC,EAAEmjC,CAAC,EAAExgC,CAAC,EAAEC,CAAC,EAAE6tB,CAAC,EAAE46B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE/5D,EAAE,EAAEg6D,EAAE;IAChD5nD,CAAC,GAAGo/B,GAAG,CAAC,CAAC,CAAC,EAAEhjC,CAAC,GAAGgjC,GAAG,CAAC,CAAC,CAAC,EAAEG,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC;IAElC,IAAIp/B,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAE7B;IACA;IACA,IAAID,CAAC,GAAG,qBAAqB,CAAC,CAAC;;IAE/B;IACA1b,CAAC,GAAGA,CAAC,IAAI,KAAK;IACdyE,CAAC,GAAGA,CAAC,IAAI,CAAC;IAEV2+D,EAAE,GAAGf,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5BqjE,EAAE,GAAGhB,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5BsjE,EAAE,GAAGjB,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5BuJ,EAAE,GAAI,CAAC,GAAG65D,EAAE,IAAKA,EAAE,GAAI,EAAE,GAAGC,EAAG,GAAI,CAAC,GAAGC,EAAG,CAAC;IAC3CC,EAAE,GAAI,CAAC,GAAGF,EAAE,IAAKD,EAAE,GAAI,EAAE,GAAGC,EAAG,GAAI,CAAC,GAAGC,EAAG,CAAC;IAC3C;IACA;;IAGAJ,EAAE,GAAGnrD,CAAC,IAAI,EAAE,GAAG4D,CAAC,CAAC,GAAGpS,EAAE,IAAI,CAAC;IAC3B45D,EAAE,GAAGjoB,CAAC,IAAI,EAAE,GAAGv/B,CAAC,CAAC,GAAG4nD,EAAE,IAAI,CAAC;IAE3B5oD,CAAC,GAAGgB,CAAC,GAAG,CAAC,GAAG0nD,EAAE,GAAGhvD,IAAI,CAACkI,GAAG,CAAC,CAACZ,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG0nD,EAAE,GAAG1nD,CAAC,GAAGD,CAAC;;IAEzD;IACAhB,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGuoD,EAAE,IAAI,CAAC,GAAGC,EAAE,CAAC,IAAI,CAAC;IAC9B36B,CAAC,GAAG7tB,CAAC,IAAI,EAAE,GAAG,CAAC,GAAGuoD,EAAE,GAAG,EAAE,GAAGC,EAAE,CAAC,IAAI,CAAC,GAAGA,EAAE,CAAC,IAAI,CAAC;;IAE/C;IACA;IACA;IACA;;IAEA,OAAO,CAACzoD,CAAC,EAAEC,CAAC,EAAE6tB,CAAC,CAAC;EACjB;AACD,CAAC;AAAC,IAAA1rC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcimE,GAAG,EAEnB;AACA;AACA;AACA;AACAZ,YAAG,CAACY,GAAG,GAAG,UAAUloB,GAAG,EAAE/6C,CAAC,EAAEyE,CAAC,EAAE;EAC9B,IAAIy+D,EAAE,EAAEC,EAAE,EAAExnD,CAAC,EAAE5D,CAAC,EAAEmjC,CAAC,EAAExgC,CAAC,EAAEC,CAAC,EAAE6tB,CAAC,EAAE46B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE/5D,EAAE,EAAEg6D,EAAE;;EAEhD;EACA,IAAIj/D,CAAC,GAAG,oBAAoB,CAAC,CAAC;EAC9B,IAAIoX,CAAC,GAAG,iBAAiB,CAAC,CAAC;;EAE3B;EACA1b,CAAC,GAAGA,CAAC,IAAI,KAAK;EACdyE,CAAC,GAAGA,CAAC,IAAI,CAAC;EAEV2+D,EAAE,GAAGf,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5BqjE,EAAE,GAAGhB,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5BsjE,EAAE,GAAGjB,YAAG,CAACC,UAAU,CAAC79D,CAAC,CAAC,CAACzE,CAAC,CAAC,CAAC,CAAC,CAAC;EAE5BuJ,EAAE,GAAI,CAAC,GAAG65D,EAAE,IAAKA,EAAE,GAAI,EAAE,GAAGC,EAAG,GAAI,CAAC,GAAGC,EAAG,CAAC;EAC3CC,EAAE,GAAI,CAAC,GAAGF,EAAE,IAAKD,EAAE,GAAI,EAAE,GAAGC,EAAG,GAAI,CAAC,GAAGC,EAAG,CAAC;EAG3C5oD,CAAC,GAAGqgC,GAAG,CAAC,CAAC,CAAC,EAAEpgC,CAAC,GAAGogC,GAAG,CAAC,CAAC,CAAC,EAAEvS,CAAC,GAAGuS,GAAG,CAAC,CAAC,CAAC;EAGlCmoB,EAAE,GAAI,CAAC,GAAGxoD,CAAC,IAAKA,CAAC,GAAI,EAAE,GAAGC,CAAE,GAAI,CAAC,GAAG6tB,CAAE,CAAC,IAAI,CAAC;EAC5C26B,EAAE,GAAI,CAAC,GAAGxoD,CAAC,IAAKD,CAAC,GAAI,EAAE,GAAGC,CAAE,GAAI,CAAC,GAAG6tB,CAAE,CAAC,IAAI,CAAC;EAE5C,IAAIg7B,EAAE,GAAG7oD,CAAC,GAAG0oD,EAAE;EAEf1nD,CAAC,GAAG6nD,EAAE,IAAIl/D,CAAC,GAAGoX,CAAC,GAAG8nD,EAAE,GAAG,GAAG,GAAGnvD,IAAI,CAACkI,GAAG,CAACinD,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;EAErDzrD,CAAC,GAAG,EAAE,GAAG4D,CAAC,IAAIunD,EAAE,GAAG35D,EAAE,CAAC;EACtB2xC,CAAC,GAAG,EAAE,GAAGv/B,CAAC,IAAIwnD,EAAE,GAAGI,EAAE,CAAC;EAEtB,OAAO,CAAC5nD,CAAC,EAAE5D,CAAC,EAAEmjC,CAAC,CAAC;AACjB,CAAC;;;;;;;;AC9FD,IAAAuoB,IAAA,GAAAv/D,sBAAA,CAAAnC,OAAA;AACA,IAAAihE,IAAA,GAAA9+D,sBAAA,CAAAnC,OAAA;AAA2B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAN3B;AACA;AACA;AACA;AACA;;AAIA;AACA,IAAIo/D,KAAK,GAAG;EACX5kD,IAAI,EAAE,OAAO;EACb4iD,OAAO,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC;EACvCC,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;EAC5BpnD,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACdC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEpByoD,GAAG,EAAE,SAAAA,CAAUA,GAAG,EAAE;IACnB,IAAItnD,CAAC,GAAGsnD,GAAG,CAAC,CAAC,CAAC;MACbxxC,CAAC,GAAGwxC,GAAG,CAAC,CAAC,CAAC;MACVlzB,CAAC,GAAGkzB,GAAG,CAAC,CAAC,CAAC;MACVlrD,CAAC;MAAEmjC,CAAC;MAAEyoB,EAAE;IAETA,EAAE,GAAG5zB,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG17B,IAAI,CAAC0H,EAAE;IAC1BhE,CAAC,GAAG0Z,CAAC,GAAGpd,IAAI,CAAC0O,GAAG,CAAC4gD,EAAE,CAAC;IACpBzoB,CAAC,GAAGzpB,CAAC,GAAGpd,IAAI,CAAC4O,GAAG,CAAC0gD,EAAE,CAAC;IACpB,OAAO,CAAChoD,CAAC,EAAE5D,CAAC,EAAEmjC,CAAC,CAAC;EACjB,CAAC;EAEDmnB,GAAG,EAAE,SAAAA,CAAUtnB,GAAG,EAAE;IACnB,OAAOkoB,YAAG,CAACZ,GAAG,CAACqB,KAAK,CAACT,GAAG,CAACloB,GAAG,CAAC,CAAC;EAC/B;AACD,CAAC;AAAC,IAAAj+C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc0mE,KAAK;AAErBT,YAAG,CAACS,KAAK,GAAG,UAAUT,GAAG,EAAE;EAC1B,IAAItnD,CAAC,GAAGsnD,GAAG,CAAC,CAAC,CAAC;IAAElrD,CAAC,GAAGkrD,GAAG,CAAC,CAAC,CAAC;IAAE/nB,CAAC,GAAG+nB,GAAG,CAAC,CAAC,CAAC;EAEtC,IAAIxxC,CAAC,GAAGpd,IAAI,CAAC2F,IAAI,CAACjC,CAAC,GAAGA,CAAC,GAAGmjC,CAAC,GAAGA,CAAC,CAAC;EAChC,IAAIyoB,EAAE,GAAGtvD,IAAI,CAACqV,KAAK,CAACwxB,CAAC,EAAEnjC,CAAC,CAAC;EACzB,IAAIg4B,CAAC,GAAG4zB,EAAE,GAAG,GAAG,GAAG,CAAC,GAAGtvD,IAAI,CAAC0H,EAAE;EAC9B,IAAIg0B,CAAC,GAAG,CAAC,EAAE;IACVA,CAAC,IAAI,GAAG;EACT;EAEA,OAAO,CAACp0B,CAAC,EAAE8V,CAAC,EAAEse,CAAC,CAAC;AACjB,CAAC;AAEDsyB,YAAG,CAACqB,KAAK,GAAG,UAAU3oB,GAAG,EAAE;EAC1B,OAAOkoB,YAAG,CAACS,KAAK,CAACrB,YAAG,CAACY,GAAG,CAACloB,GAAG,CAAC,CAAC;AAC/B,CAAC;;;;;;;;;;;;;;;;;AC/CD,IAAA6oB,UAAA,GAAA1/D,sBAAA,CAAAnC,OAAA;AACA,IAAA8hE,MAAA,GAAA3/D,sBAAA,CAAAnC,OAAA;AACA,IAAA6/D,IAAA,GAAA19D,sBAAA,CAAAnC,OAAA;AACA,IAAAihE,IAAA,GAAA9+D,sBAAA,CAAAnC,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AAAgC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAA4qB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA,IAPhC;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAM+jE,QAAQ,GAAA/mE,OAAA,CAAA+mE,QAAA,GAAG,CAACxnC,GAAG,EAAEA,GAAG,EAAEA,GAAG,EAAE,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACO,SAASynC,QAAQA,CAAC7B,KAAK,EAAE;EAC9B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EACA,OAAOrjD,QAAQ,CAACqjD,KAAK,CAAC;AACxB;;AAEA;AACA;AACA;AACA,IAAM8B,cAAc,GAAG,IAAI;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAMn1C,KAAK,GAAG,CAAC,CAAC;;AAEhB;AACA;AACA;AACA,IAAIo1C,SAAS,GAAG,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAASA,CAAChC,KAAK,EAAE;EAC/B,IAAIA,KAAK,CAAC5iE,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO4iE,KAAK;EACd;EACA,IAAM3zC,MAAM,GAAG2zC,KAAK,CAACx/D,KAAK,CAAC,CAAC;EAC5B6rB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;EACb,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAAS41C,UAAUA,CAACjC,KAAK,EAAE;EAChC,IAAM3zC,MAAM,GAAG8zC,YAAG,CAACqB,KAAK,CAACjC,YAAG,CAACY,GAAG,CAACH,KAAK,CAAC,CAAC;EACxC3zC,MAAM,CAAC,CAAC,CAAC,GAAG2zC,KAAK,CAAC,CAAC,CAAC;EACpB,OAAO3zC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAAS61C,UAAUA,CAAClC,KAAK,EAAE;EAChC,IAAM3zC,MAAM,GAAG8zC,YAAG,CAACZ,GAAG,CAACiC,cAAK,CAACrB,GAAG,CAACH,KAAK,CAAC,CAAC;EACxC3zC,MAAM,CAAC,CAAC,CAAC,GAAG2zC,KAAK,CAAC,CAAC,CAAC;EACpB,OAAO3zC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAAS81C,UAAUA,CAACh1C,CAAC,EAAE;EAC5B,IAAIA,CAAC,KAAK,MAAM,EAAE;IAChB,OAAOy0C,QAAQ;EACjB;EACA,IAAIj1C,KAAK,CAACzjB,cAAc,CAACikB,CAAC,CAAC,EAAE;IAC3B,OAAOR,KAAK,CAACQ,CAAC,CAAC;EACjB;EACA,IAAI40C,SAAS,IAAID,cAAc,EAAE;IAC/B,IAAIhkE,CAAC,GAAG,CAAC;IACT,KAAK,IAAMvB,GAAG,IAAIowB,KAAK,EAAE;MACvB,IAAI,CAAC7uB,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;QACnB,OAAO6uB,KAAK,CAACpwB,GAAG,CAAC;QACjB,EAAEwlE,SAAS;MACb;IACF;EACF;EAEA,IAAM/B,KAAK,GAAG,IAAAoC,kBAAS,EAACj1C,CAAC,CAAC;EAC1B,IAAI6yC,KAAK,CAAC5iE,MAAM,KAAK,CAAC,EAAE;IACtB,MAAM,IAAI4K,KAAK,CAAC,mBAAmB,GAAGmlB,CAAC,GAAG,YAAY,CAAC;EACzD;EAAC,IAAAmE,SAAA,GAAAtE,0BAAA,CACegzC,KAAK;IAAAzuC,KAAA;EAAA;IAArB,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAAuB;MAAA,IAAZwS,CAAC,GAAAgC,KAAA,CAAA/0B,KAAA;MACV,IAAI6+B,KAAK,CAAC9L,CAAC,CAAC,EAAE;QACZ,MAAM,IAAIvnB,KAAK,CAAC,mBAAmB,GAAGmlB,CAAC,GAAG,YAAY,CAAC;MACzD;IACF;EAAC,SAAAnsB,GAAA;IAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;EAAA;IAAAswB,SAAA,CAAAjmB,CAAA;EAAA;EACDg3D,SAAS,CAACrC,KAAK,CAAC;EAChBrzC,KAAK,CAACQ,CAAC,CAAC,GAAG6yC,KAAK;EAChB,EAAE+B,SAAS;EACX,OAAO/B,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsC,OAAOA,CAACtC,KAAK,EAAE;EAC7B,IAAIzhE,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK;EACd;EACA,OAAOmC,UAAU,CAACnC,KAAK,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASqC,SAASA,CAACrC,KAAK,EAAE;EAC/BA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAA5nD,WAAK,EAAE4nD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC9CA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAA5nD,WAAK,EAAE4nD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC9CA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAA5nD,WAAK,EAAE4nD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EAC9CA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAA5nD,WAAK,EAAC4nD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACO,SAASrjD,QAAQA,CAACqjD,KAAK,EAAE;EAC9B,IAAIn9D,CAAC,GAAGm9D,KAAK,CAAC,CAAC,CAAC;EAChB,IAAIn9D,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,EAAE;IAChBA,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,CAAC;EACnB;EACA,IAAIo2C,CAAC,GAAG+mB,KAAK,CAAC,CAAC,CAAC;EAChB,IAAI/mB,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,EAAE;IAChBA,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,CAAC;EACnB;EACA,IAAI17C,CAAC,GAAGyiE,KAAK,CAAC,CAAC,CAAC;EAChB,IAAIziE,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,EAAE;IAChBA,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,CAAC;EACnB;EACA,IAAMD,CAAC,GAAG0iE,KAAK,CAAC,CAAC,CAAC,KAAK75D,SAAS,GAAG,CAAC,GAAGgM,IAAI,CAACmI,KAAK,CAAC0lD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI;EACzE,OAAO,OAAO,GAAGn9D,CAAC,GAAG,GAAG,GAAGo2C,CAAC,GAAG,GAAG,GAAG17C,CAAC,GAAG,GAAG,GAAGD,CAAC,GAAG,GAAG;AACxD;;AAEA;AACA;AACA;AACA;AACO,SAASilE,aAAaA,CAACp1C,CAAC,EAAE;EAC/B,IAAI;IACFg1C,UAAU,CAACh1C,CAAC,CAAC;IACb,OAAO,IAAI;EACb,CAAC,CAAC,OAAA9d,OAAA,EAAM;IACN,OAAO,KAAK;EACd;AACF;;;;;;;;;;;AC1LA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqO,MAAMA,CAACzC,IAAI,EAAEunD,GAAG,EAAEhlD,IAAI,EAAE;EACtC,IAAIA,IAAI,KAAKrX,SAAS,EAAE;IACtBqX,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACf;EACAA,IAAI,CAAC,CAAC,CAAC,GAAGvC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGunD,GAAG;EAC3BhlD,IAAI,CAAC,CAAC,CAAC,GAAGvC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGunD,GAAG;EAC3B,OAAOhlD,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASilD,OAAOA,CAACxnD,IAAI,EAAE;EAC5B,OAAOA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiL,KAAKA,CAACjL,IAAI,EAAEW,KAAK,EAAE4B,IAAI,EAAE;EACvC,IAAIA,IAAI,KAAKrX,SAAS,EAAE;IACtBqX,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACf;EACAA,IAAI,CAAC,CAAC,CAAC,GAAIvC,IAAI,CAAC,CAAC,CAAC,GAAGW,KAAK,GAAG,GAAG,GAAI,CAAC;EACrC4B,IAAI,CAAC,CAAC,CAAC,GAAIvC,IAAI,CAAC,CAAC,CAAC,GAAGW,KAAK,GAAG,GAAG,GAAI,CAAC;EACrC,OAAO4B,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASklD,MAAMA,CAACznD,IAAI,EAAEuC,IAAI,EAAE;EACjC,IAAIjf,KAAK,CAACC,OAAO,CAACyc,IAAI,CAAC,EAAE;IACvB,OAAOA,IAAI;EACb;EACA,IAAIuC,IAAI,KAAKrX,SAAS,EAAE;IACtBqX,IAAI,GAAG,CAACvC,IAAI,EAAEA,IAAI,CAAC;EACrB,CAAC,MAAM;IACLuC,IAAI,CAAC,CAAC,CAAC,GAAGvC,IAAI;IACduC,IAAI,CAAC,CAAC,CAAC,GAAGvC,IAAI;EAChB;EACA,OAAOuC,IAAI;AACb;;;;;;;;;;;;;;;ACpEA,IAAA5d,MAAA,GAAAC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AAAkC,IAAAgjE,QAAA;AAAA,SAAAC,WAAAhgE,CAAA,EAAAV,CAAA,EAAAS,CAAA,QAAAe,yBAAA,WAAAC,OAAA,CAAAC,SAAA,CAAAlD,KAAA,OAAAF,SAAA,OAAA6B,CAAA,WAAAA,CAAA,CAAA+C,IAAA,CAAA1E,KAAA,CAAA2B,CAAA,EAAAH,CAAA,OAAAgK,CAAA,QAAAtJ,CAAA,CAAAuB,IAAA,CAAAzD,KAAA,CAAAkC,CAAA,EAAAP,CAAA,aAAAM,CAAA,IAAA4B,eAAA,CAAA2H,CAAA,EAAAvJ,CAAA,CAAAtC,SAAA,GAAA6L,CAAA;AAAA,SAAA3H,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAigE,mBAAAlgE,CAAA,WAAAmgE,kBAAA,CAAAngE,CAAA,KAAAogE,gBAAA,CAAApgE,CAAA,KAAA2Z,2BAAA,CAAA3Z,CAAA,KAAAqgE,kBAAA;AAAA,SAAAA,mBAAA,cAAAvgE,SAAA;AAAA,SAAAsgE,iBAAApgE,CAAA,8BAAAL,MAAA,YAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,aAAAI,CAAA,uBAAAtE,KAAA,CAAAse,IAAA,CAAAha,CAAA;AAAA,SAAAmgE,mBAAAngE,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAA6Z,iBAAA,CAAA7Z,CAAA;AAAA,SAAAP,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAhG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAqqB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAAslE,gBAAA/gE,CAAA,EAAAS,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAO,cAAA,CAAAP,CAAA,MAAAT,CAAA,GAAAc,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAS,CAAA,IAAArG,KAAA,EAAAsG,CAAA,EAAAC,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAb,CAAA,CAAAS,CAAA,IAAAC,CAAA,EAAAV,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KALlsgE,QAAQ,GAAG,CAAC;AACT,IAAMC,QAAQ,GAAAxoE,OAAA,CAAAwoE,QAAA,GAAG,CAAC;AAClB,IAAMC,WAAW,GAAAzoE,OAAA,CAAAyoE,WAAA,GAAG,CAAC,IAAIF,QAAQ,EAAE;AACnC,IAAMG,UAAU,GAAA1oE,OAAA,CAAA0oE,UAAA,GAAG,CAAC,IAAIH,QAAQ,EAAE;AAClC,IAAMI,UAAU,GAAA3oE,OAAA,CAAA2oE,UAAA,GAAG,CAAC,IAAIJ,QAAQ,EAAE;AAClC,IAAMK,SAAS,GAAA5oE,OAAA,CAAA4oE,SAAA,GAAG,CAAC,IAAIL,QAAQ,EAAE;AACjC,IAAMM,eAAe,GAAA7oE,OAAA,CAAA6oE,eAAA,GAAG,CAAC,IAAIN,QAAQ,EAAE;AACvC,IAAMO,QAAQ,GAAA9oE,OAAA,CAAA8oE,QAAA,GAAG,CAAC,IAAIP,QAAQ,EAAE;AAChC,IAAMQ,OAAO,GAAA/oE,OAAA,CAAA+oE,OAAA,GAAGzxD,IAAI,CAACkI,GAAG,CAAC,CAAC,EAAE+oD,QAAQ,CAAC,GAAG,CAAC;AAEhD,IAAMS,SAAS,GAAAV,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KACZG,WAAW,EAAG,SAAS,GACvBC,UAAU,EAAG,QAAQ,GACrBC,UAAU,EAAG,QAAQ,GACrBC,SAAS,EAAG,OAAO,GACnBC,eAAe,EAAG,UAAU,GAC5BC,QAAQ,EAAG,MAAM,CACnB;AAED,IAAMG,UAAU,GAAG5gE,MAAM,CAACmD,IAAI,CAACw9D,SAAS,CAAC,CAAC73D,GAAG,CAACxI,MAAM,CAAC,CAACpE,IAAI,CAACnC,gBAAS,CAAC;;AAErE;AACA;AACA;AACA;AACA,SAAS8mE,UAAUA,CAACtiE,IAAI,EAAE;EACxB,OAAOA,IAAI,IAAIoiE,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASG,QAAQA,CAACviE,IAAI,EAAE;EAC7B,IAAMs9D,KAAK,GAAG,EAAE;EAAC,IAAAztC,SAAA,GAAAtE,0BAAA,CACO82C,UAAU;IAAAvyC,KAAA;EAAA;IAAlC,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAAoC;MAAA,IAAzBknD,SAAS,GAAA1yC,KAAA,CAAA/0B,KAAA;MAClB,IAAI0nE,YAAY,CAACziE,IAAI,EAAEwiE,SAAS,CAAC,EAAE;QACjClF,KAAK,CAACz5D,IAAI,CAACu+D,SAAS,CAACI,SAAS,CAAC,CAAC;MAClC;IACF;EAAC,SAAAjjE,GAAA;IAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;EAAA;IAAAswB,SAAA,CAAAjmB,CAAA;EAAA;EACD,IAAI0zD,KAAK,CAAC3hE,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,SAAS;EAClB;EACA,IAAI2hE,KAAK,CAAC3hE,MAAM,GAAG,CAAC,EAAE;IACpB,OAAO2hE,KAAK,CAACt7C,IAAI,CAAC,MAAM,CAAC;EAC3B;EACA,OAAOs7C,KAAK,CAACv+D,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACijB,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,GAAGs7C,KAAK,CAACA,KAAK,CAAC3hE,MAAM,GAAG,CAAC,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS8mE,YAAYA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC5C,OAAO,CAACD,KAAK,GAAGC,QAAQ,MAAMA,QAAQ;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC/C,OAAO,CAAC,EAAED,OAAO,GAAGC,SAAS,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,MAAMA,CAAC/iE,IAAI,EAAEgjE,QAAQ,EAAE;EACrC,OAAOhjE,IAAI,KAAKgjE,QAAQ;AAC1B;;AAEA;AACA;AACA;AAFA,IAIaC,iBAAiB,GAAA7pE,OAAA,CAAA6pE,iBAAA,gBAAApoE,YAAA;AAC5B;AACF;AACA;AACA;AACE,SAAAooE,kBAAYjjE,IAAI,EAAEjF,KAAK,EAAE;EAAAJ,eAAA,OAAAsoE,iBAAA;EACvB,IAAI,CAACX,UAAU,CAACtiE,IAAI,CAAC,EAAE;IACrB,MAAM,IAAIuG,KAAK,uDAAA0B,MAAA,CACyCs6D,QAAQ,CAACviE,IAAI,CAAC,CACtE,CAAC;EACH;EACA,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACjF,KAAK,GAAGA,KAAK;AACpB,CAAC;AAAA,IAGUmoE,cAAc,GAAA9pE,OAAA,CAAA8pE,cAAA,gBAAAroE,YAAA;AACzB;AACF;AACA;AACA;AACA;AACE,SAAAqoE,eAAYljE,IAAI,EAAEmjE,QAAQ,EAAW;EAAAxoE,eAAA,OAAAuoE,cAAA;EACnC,IAAI,CAACljE,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACmjE,QAAQ,GAAGA,QAAQ;EAAC,SAAAC,IAAA,GAAAnkE,SAAA,CAAAtD,MAAA,EAFI8tC,IAAI,OAAA3sC,KAAA,CAAAsmE,IAAA,OAAAA,IAAA,WAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;IAAJ55B,IAAI,CAAA45B,IAAA,QAAApkE,SAAA,CAAAokE,IAAA;EAAA;EAGjC,IAAI,CAAC55B,IAAI,GAAGA,IAAI;AAClB,CAAC;AAGH;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACO,SAAS65B,iBAAiBA,CAAA,EAAG;EAClC,OAAO;IACLC,SAAS,EAAE,IAAItnB,GAAG,CAAC,CAAC;IACpBhV,UAAU,EAAE,IAAIgV,GAAG,CAAC,CAAC;IACrBunB,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACZ,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS1G,KAAKA,CAAC2G,OAAO,EAAEC,YAAY,EAAEhwB,OAAO,EAAE;EACpD,QAAA/yC,OAAA,CAAe8iE,OAAO;IACpB,KAAK,SAAS;MAAE;QACd,IAAIZ,MAAM,CAACa,YAAY,EAAE7B,UAAU,CAAC,EAAE;UACpC,OAAO,IAAIkB,iBAAiB,CAAClB,UAAU,EAAE4B,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;QACtE;QACA,IAAI,CAAClB,YAAY,CAACmB,YAAY,EAAE/B,WAAW,CAAC,EAAE;UAC5C,MAAM,IAAIt7D,KAAK,gCAAA0B,MAAA,CACkBs6D,QAAQ,CAACqB,YAAY,CAAC,CACvD,CAAC;QACH;QACA,OAAO,IAAIX,iBAAiB,CAACpB,WAAW,EAAE8B,OAAO,CAAC;MACpD;IACA,KAAK,QAAQ;MAAE;QACb,IAAIZ,MAAM,CAACa,YAAY,EAAE1B,QAAQ,CAAC,EAAE;UAClC,OAAO,IAAIe,iBAAiB,CAACf,QAAQ,EAAE,IAAAjB,YAAM,EAAC0C,OAAO,CAAC,CAAC;QACzD;QACA,IAAIZ,MAAM,CAACa,YAAY,EAAE/B,WAAW,CAAC,EAAE;UACrC,OAAO,IAAIoB,iBAAiB,CAACpB,WAAW,EAAE,CAAC,CAAC8B,OAAO,CAAC;QACtD;QACA,IAAIZ,MAAM,CAACa,YAAY,EAAE7B,UAAU,CAAC,EAAE;UACpC,OAAO,IAAIkB,iBAAiB,CAAClB,UAAU,EAAE4B,OAAO,CAACzoD,QAAQ,CAAC,CAAC,CAAC;QAC9D;QACA,IAAI,CAACunD,YAAY,CAACmB,YAAY,EAAE9B,UAAU,CAAC,EAAE;UAC3C,MAAM,IAAIv7D,KAAK,+BAAA0B,MAAA,CAA+Bs6D,QAAQ,CAACqB,YAAY,CAAC,CAAE,CAAC;QACzE;QACA,OAAO,IAAIX,iBAAiB,CAACnB,UAAU,EAAE6B,OAAO,CAAC;MACnD;IACA,KAAK,QAAQ;MAAE;QACb,IAAIZ,MAAM,CAACa,YAAY,EAAE5B,SAAS,CAAC,EAAE;UACnC,OAAO,IAAIiB,iBAAiB,CAACjB,SAAS,EAAE,IAAA6B,iBAAe,EAACF,OAAO,CAAC,CAAC;QACnE;QACA,IAAIZ,MAAM,CAACa,YAAY,EAAE/B,WAAW,CAAC,EAAE;UACrC,OAAO,IAAIoB,iBAAiB,CAACpB,WAAW,EAAE,CAAC,CAAC8B,OAAO,CAAC;QACtD;QACA,IAAI,CAAClB,YAAY,CAACmB,YAAY,EAAE7B,UAAU,CAAC,EAAE;UAC3C,MAAM,IAAIx7D,KAAK,+BAAA0B,MAAA,CAA+Bs6D,QAAQ,CAACqB,YAAY,CAAC,CAAE,CAAC;QACzE;QACA,OAAO,IAAIX,iBAAiB,CAAClB,UAAU,EAAE4B,OAAO,CAAC;MACnD;IACA;MAAS;QACP;MAAA;EAEJ;EAEA,IAAI,CAAC7mE,KAAK,CAACC,OAAO,CAAC4mE,OAAO,CAAC,EAAE;IAC3B,MAAM,IAAIp9D,KAAK,CAAC,kDAAkD,CAAC;EACrE;EAEA,IAAIo9D,OAAO,CAAChoE,MAAM,KAAK,CAAC,EAAE;IACxB,MAAM,IAAI4K,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,IAAI,OAAOo9D,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAClC,OAAOG,mBAAmB,CAACH,OAAO,EAAEC,YAAY,EAAEhwB,OAAO,CAAC;EAC5D;EAAC,IAAA9f,UAAA,GAAAvI,0BAAA,CAEkBo4C,OAAO;IAAA5vC,MAAA;EAAA;IAA1B,KAAAD,UAAA,CAAApI,CAAA,MAAAqI,MAAA,GAAAD,UAAA,CAAA13B,CAAA,IAAAkf,IAAA,GAA4B;MAAA,IAAjBxR,IAAI,GAAAiqB,MAAA,CAAAh5B,KAAA;MACb,IAAI,OAAO+O,IAAI,KAAK,QAAQ,EAAE;QAC5B,MAAM,IAAIvD,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF;EAAC,SAAAhH,GAAA;IAAAu0B,UAAA,CAAAnzB,CAAA,CAAApB,GAAA;EAAA;IAAAu0B,UAAA,CAAAlqB,CAAA;EAAA;EAED,IAAIm5D,MAAM,CAACa,YAAY,EAAE1B,QAAQ,CAAC,EAAE;IAClC,IAAIyB,OAAO,CAAChoE,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAI4K,KAAK,oDAAA0B,MAAA,CACsC07D,OAAO,CAAChoE,MAAM,CACnE,CAAC;IACH;IACA,OAAO,IAAIsnE,iBAAiB,CAACf,QAAQ,EAAEyB,OAAO,CAAC;EACjD;EAEA,IAAIZ,MAAM,CAACa,YAAY,EAAE5B,SAAS,CAAC,EAAE;IACnC,IAAI2B,OAAO,CAAChoE,MAAM,KAAK,CAAC,EAAE;MACxB,OAAO,IAAIsnE,iBAAiB,CAACjB,SAAS,KAAA/5D,MAAA,CAAAq5D,kBAAA,CAAMqC,OAAO,IAAE,CAAC,EAAC,CAAC;IAC1D;IACA,IAAIA,OAAO,CAAChoE,MAAM,KAAK,CAAC,EAAE;MACxB,OAAO,IAAIsnE,iBAAiB,CAACjB,SAAS,EAAE2B,OAAO,CAAC;IAClD;IACA,MAAM,IAAIp9D,KAAK,wDAAA0B,MAAA,CAC0C07D,OAAO,CAAChoE,MAAM,CACvE,CAAC;EACH;EAEA,IAAI,CAAC8mE,YAAY,CAACmB,YAAY,EAAE3B,eAAe,CAAC,EAAE;IAChD,MAAM,IAAI17D,KAAK,0CAAA0B,MAAA,CAC4Bs6D,QAAQ,CAACqB,YAAY,CAAC,CACjE,CAAC;EACH;EAEA,OAAO,IAAIX,iBAAiB,CAAChB,eAAe,EAAE0B,OAAO,CAAC;AACxD;;AAEA;AACA;AACA;AACO,IAAMI,GAAG,GAAA3qE,OAAA,CAAA2qE,GAAA,GAAG;EACjBC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE,eAAe;EAC7BC,UAAU,EAAE,aAAa;EACzBC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,GAAG;EACRC,UAAU,EAAE,YAAY;EACxBjmB,IAAI,EAAE,MAAM;EACZkmB,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,GAAG;EAChBC,oBAAoB,EAAE,IAAI;EAC1BC,QAAQ,EAAE,GAAG;EACbC,iBAAiB,EAAE,IAAI;EACvBC,QAAQ,EAAE,GAAG;EACbC,MAAM,EAAE,GAAG;EACXC,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,GAAG;EACRC,GAAG,EAAE,GAAG;EACRC,GAAG,EAAE,KAAK;EACVC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,EAAE,EAAE,IAAI;EACRrkE,MAAM,EAAE,QAAQ;EAChBD,MAAM,EAAE,QAAQ;EAChBhF,KAAK,EAAE,OAAO;EACdupE,KAAK,EAAE,OAAO;EACdC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,WAAW;EACrBC,GAAG,EAAE;AACP,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMC,OAAO,IAAAvF,QAAA,OAAAM,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAN,QAAA,EACV2C,GAAG,CAACC,GAAG,EAAG4C,0BAA0B,CAACC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EAAE+0D,WAAW,CAAC,GAC5E/C,GAAG,CAACE,GAAG,EAAG2C,0BAA0B,CAACC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEE,WAAW,CAAC,GACrEhD,GAAG,CAAC2C,GAAG,EAAGE,0BAA0B,CAACC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EAAE+0D,WAAW,CAAC,GAC5E/C,GAAG,CAACuC,EAAE,EAAGM,0BAA0B,CAACI,aAAa,EAAEC,UAAU,CAAC,GAC9DlD,GAAG,CAACG,MAAM,EAAG0C,0BAA0B,CACtCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAACnF,UAAU,CAC3B,CAAC,GACAgC,GAAG,CAACI,YAAY,EAAGyC,0BAA0B,CAACO,gBAAgB,EAAEF,UAAU,CAAC,GAC3ElD,GAAG,CAACK,UAAU,EAAGwC,0BAA0B,CAACK,UAAU,CAAC,GACvDlD,GAAG,CAACS,UAAU,EAAGoC,0BAA0B,CAACQ,YAAY,EAAEH,UAAU,CAAC,GACrElD,GAAG,CAACxlB,IAAI,EAAGqoB,0BAA0B,CAACQ,YAAY,EAAEH,UAAU,CAAC,GAC/DlD,GAAG,CAACU,IAAI,EAAGmC,0BAA0B,CAACQ,YAAY,EAAEH,UAAU,CAAC,GAAAvF,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAN,QAAA,EAC/D2C,GAAG,CAACM,GAAG,EAAGuC,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAACrF,WAAW,CAC5B,CAAC,GACAkC,GAAG,CAACO,GAAG,EAAGsC,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAACrF,WAAW,CAC5B,CAAC,GACAkC,GAAG,CAACQ,GAAG,EAAGqC,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACrF,WAAW,CAC5B,CAAC,GACAkC,GAAG,CAACW,KAAK,EAAGkC,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAAC/E,OAAO,CACxB,CAAC,GACA4B,GAAG,CAACY,QAAQ,EAAGiC,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAAC/E,OAAO,CACxB,CAAC,GACA4B,GAAG,CAACa,WAAW,EAAGgC,0BAA0B,CAC3CC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACc,oBAAoB,EAAG+B,0BAA0B,CACpDC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACe,QAAQ,EAAG8B,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACgB,iBAAiB,EAAG6B,0BAA0B,CACjDC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACiB,QAAQ,EAAG4B,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBs1D,oBACF,CAAC,GAAA3F,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAN,QAAA,EACA2C,GAAG,CAACmC,QAAQ,EAAGU,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBs1D,oBACF,CAAC,GACAtD,GAAG,CAACkB,MAAM,EAAG2B,0BAA0B,CACtCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACmB,GAAG,EAAG0B,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACoB,QAAQ,EAAGyB,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACqB,KAAK,EAAGwB,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACsB,GAAG,EAAGuB,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACuB,GAAG,EAAGsB,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACwB,GAAG,EAAGqB,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACyB,KAAK,EAAGoB,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAAC0B,IAAI,EAAGmB,0BAA0B,CACpCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GAAAJ,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAN,QAAA,EACA2C,GAAG,CAAC2B,KAAK,EAAGkB,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAAC4B,GAAG,EAAGiB,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAAC6B,GAAG,EAAGgB,0BAA0B,CACnCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAAC8B,IAAI,EAAGe,0BAA0B,CACpCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAAC+B,IAAI,EAAGc,0BAA0B,CACpCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACgC,KAAK,EAAGa,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBu1D,WAAW,EACXC,aACF,CAAC,GACAxD,GAAG,CAACiC,OAAO,EAAGY,0BAA0B,CACvCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACkC,WAAW,EAAGW,0BAA0B,CAC3CC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBu1D,WAAW,EACXE,mBACF,CAAC,GACAzD,GAAG,CAACoC,IAAI,EAAGS,0BAA0B,CACpCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzB01D,UAAU,EACVC,YACF,CAAC,GACA3D,GAAG,CAACqC,EAAE,EAAGQ,0BAA0B,CAACC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEc,UAAU,CAAC,GAAAjG,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAN,QAAA,EACnE2C,GAAG,CAAChiE,MAAM,EAAG6kE,0BAA0B,CACtCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAAC/E,OAAO,CACxB,CAAC,GACA4B,GAAG,CAACjiE,MAAM,EAAG8kE,0BAA0B,CACtCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAAC/E,OAAO,CACxB,CAAC,GACA4B,GAAG,CAACjnE,KAAK,EAAG8pE,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE90D,QAAQ,CAAC,EACzBm1D,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACsC,KAAK,EAAGO,0BAA0B,CACrCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACwC,IAAI,EAAGK,0BAA0B,CACpCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACpF,UAAU,CAC3B,CAAC,GACAiC,GAAG,CAACyC,OAAO,EAAGI,0BAA0B,CACvCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBe,eACF,CAAC,GACA7D,GAAG,CAAC0C,QAAQ,EAAGG,0BAA0B,CACxCC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClBK,cAAc,CAACrF,WAAW,GAAGC,UAAU,GAAGC,UAAU,GAAGC,SAAS,CAClE,CAAC,EACF;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS8E,WAAWA,CAACnD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACjD,IAAMk0B,SAAS,GAAGnE,OAAO,CAAChoE,MAAM,GAAG,CAAC;EACpC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACgrE,SAAS,CAAC;EACjC,KAAK,IAAIzrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyrE,SAAS,EAAE,EAAEzrE,CAAC,EAAE;IAClC,IAAMvB,GAAG,GAAG6oE,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC;IAC1B,QAAAwE,OAAA,CAAe/F,GAAG;MAChB,KAAK,QAAQ;QAAE;UACb2uC,IAAI,CAACptC,CAAC,CAAC,GAAG,IAAI4mE,iBAAiB,CAACnB,UAAU,EAAEhnE,GAAG,CAAC;UAChD;QACF;MACA,KAAK,QAAQ;QAAE;UACb2uC,IAAI,CAACptC,CAAC,CAAC,GAAG,IAAI4mE,iBAAiB,CAAClB,UAAU,EAAEjnE,GAAG,CAAC;UAChD;QACF;MACA;QAAS;UACP,MAAM,IAAIyL,KAAK,0EAAA0B,MAAA,CAC4DnN,GAAG,CAC9E,CAAC;QACH;IACF;IACA,IAAIuB,CAAC,KAAK,CAAC,EAAE;MACXu3C,OAAO,CAAC3M,UAAU,CAACrkB,GAAG,CAAC9gB,MAAM,CAAChH,GAAG,CAAC,CAAC;IACrC;EACF;EACA,OAAO2uC,IAAI;AACb;;AAEA;AACA;AACA;AACA,SAASs9B,WAAWA,CAACpD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACjD,IAAMz4B,IAAI,GAAGwoD,OAAO,CAAC,CAAC,CAAC;EACvB,IAAI,OAAOxoD,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAI5U,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACAqtC,OAAO,CAAC2vB,SAAS,CAAC3gD,GAAG,CAACzH,IAAI,CAAC;EAE3B,OAAO,CAAC,IAAI8nD,iBAAiB,CAAClB,UAAU,EAAE5mD,IAAI,CAAC,CAAC;AAClD;;AAEA;AACA;AACA;AACA,SAAS6rD,aAAaA,CAACrD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACnDA,OAAO,CAAC4vB,SAAS,GAAG,IAAI;AAC1B;;AAEA;AACA;AACA;AACA,SAAS2D,gBAAgBA,CAACxD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACtDA,OAAO,CAAC6vB,YAAY,GAAG,IAAI;AAC7B;;AAEA;AACA;AACA;AACA,SAAS2D,YAAYA,CAACzD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAClDA,OAAO,CAAC8vB,QAAQ,GAAG,IAAI;AACzB;;AAEA;AACA;AACA;AACA,SAASuD,UAAUA,CAACtD,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAChD,IAAMm0B,SAAS,GAAGpE,OAAO,CAAC,CAAC,CAAC;EAC5B,IAAIA,OAAO,CAAChoE,MAAM,KAAK,CAAC,EAAE;IACxB,MAAM,IAAI4K,KAAK,8BAAA0B,MAAA,CAA8B8/D,SAAS,eAAY,CAAC;EACrE;EACA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASlB,YAAYA,CAACmB,OAAO,EAAEC,OAAO,EAAE;EACtC,OAAO,UAAUtE,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;IAC7C,IAAMm0B,SAAS,GAAGpE,OAAO,CAAC,CAAC,CAAC;IAC5B,IAAMuE,QAAQ,GAAGvE,OAAO,CAAChoE,MAAM,GAAG,CAAC;IACnC,IAAIqsE,OAAO,KAAKC,OAAO,EAAE;MACvB,IAAIC,QAAQ,KAAKF,OAAO,EAAE;QACxB,IAAMG,MAAM,GAAGH,OAAO,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG;QACvC,MAAM,IAAIzhE,KAAK,aAAA0B,MAAA,CACD+/D,OAAO,eAAA//D,MAAA,CAAYkgE,MAAM,WAAAlgE,MAAA,CAAQ8/D,SAAS,YAAA9/D,MAAA,CAASigE,QAAQ,CACzE,CAAC;MACH;IACF,CAAC,MAAM,IAAIA,QAAQ,GAAGF,OAAO,IAAIE,QAAQ,GAAGD,OAAO,EAAE;MACnD,IAAMhvD,KAAK,GACTgvD,OAAO,KAAKl2D,QAAQ,MAAA9J,MAAA,CACb+/D,OAAO,mBAAA//D,MAAA,CACP+/D,OAAO,UAAA//D,MAAA,CAAOggE,OAAO,CAAE;MAChC,MAAM,IAAI1hE,KAAK,aAAA0B,MAAA,CACDgR,KAAK,qBAAAhR,MAAA,CAAkB8/D,SAAS,YAAA9/D,MAAA,CAASigE,QAAQ,CAC/D,CAAC;IACH;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA,SAASb,oBAAoBA,CAAC1D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAC1D,IAAMs0B,QAAQ,GAAGvE,OAAO,CAAChoE,MAAM,GAAG,CAAC;EACnC;AACF;AACA;EACE,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACorE,QAAQ,CAAC;EAChC,KAAK,IAAI7rE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6rE,QAAQ,EAAE,EAAE7rE,CAAC,EAAE;IACjC,IAAM+rE,UAAU,GAAGpL,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEwrE,UAAU,EAAEj0B,OAAO,CAAC;IAC7DnK,IAAI,CAACptC,CAAC,CAAC,GAAG+rE,UAAU;EACtB;EACA,OAAO3+B,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA,SAASy9B,cAAcA,CAACmB,OAAO,EAAE;EAC/B,OAAO,UAAU1E,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;IAC7C,IAAMs0B,QAAQ,GAAGvE,OAAO,CAAChoE,MAAM,GAAG,CAAC;IACnC;AACJ;AACA;IACI,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACorE,QAAQ,CAAC;IAChC,KAAK,IAAI7rE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6rE,QAAQ,EAAE,EAAE7rE,CAAC,EAAE;MACjC,IAAM+rE,UAAU,GAAGpL,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEgsE,OAAO,EAAEz0B,OAAO,CAAC;MAC1DnK,IAAI,CAACptC,CAAC,CAAC,GAAG+rE,UAAU;IACtB;IACA,OAAO3+B,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;AACA,SAASg+B,UAAUA,CAAC9D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAChD,IAAMm0B,SAAS,GAAGpE,OAAO,CAAC,CAAC,CAAC;EAC5B,IAAMuE,QAAQ,GAAGvE,OAAO,CAAChoE,MAAM,GAAG,CAAC;EACnC,IAAIusE,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;IACtB,MAAM,IAAI3hE,KAAK,4CAAA0B,MAAA,CAC8B8/D,SAAS,YAAA9/D,MAAA,CAASigE,QAAQ,aACvE,CAAC;EACH;AACF;;AAEA;AACA;AACA;AACA,SAASZ,WAAWA,CAAC3D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACjD,IAAMm0B,SAAS,GAAGpE,OAAO,CAAC,CAAC,CAAC;EAC5B,IAAMuE,QAAQ,GAAGvE,OAAO,CAAChoE,MAAM,GAAG,CAAC;EACnC,IAAIusE,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;IACtB,MAAM,IAAI3hE,KAAK,uDAAA0B,MAAA,CACyC8/D,SAAS,YAAA9/D,MAAA,CAASigE,QAAQ,aAClF,CAAC;EACH;AACF;;AAEA;AACA;AACA;AACA,SAASX,aAAaA,CAAC5D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACnD,IAAMk0B,SAAS,GAAGnE,OAAO,CAAChoE,MAAM,GAAG,CAAC;EAEpC,IAAM2sE,SAAS,GAAGvG,UAAU,GAAGD,UAAU,GAAGD,WAAW;EAEvD,IAAMl3C,KAAK,GAAGqyC,KAAK,CAAC2G,OAAO,CAAC,CAAC,CAAC,EAAE2E,SAAS,EAAE10B,OAAO,CAAC;EAEnD,IAAM20B,QAAQ,GAAGvL,KAAK,CAAC2G,OAAO,CAACA,OAAO,CAAChoE,MAAM,GAAG,CAAC,CAAC,EAAEksE,UAAU,EAAEj0B,OAAO,CAAC;EAExE,IAAMnK,IAAI,GAAG,IAAI3sC,KAAK,CAACgrE,SAAS,GAAG,CAAC,CAAC;EACrC,KAAK,IAAIzrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyrE,SAAS,GAAG,CAAC,EAAEzrE,CAAC,IAAI,CAAC,EAAE;IACzC,IAAI;MACF,IAAM2zB,KAAK,GAAGgtC,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEsuB,KAAK,CAAC3qB,IAAI,EAAE4zC,OAAO,CAAC;MACxDnK,IAAI,CAACptC,CAAC,CAAC,GAAG2zB,KAAK;IACjB,CAAC,CAAC,OAAOzwB,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,GAAG,CAAC,4BAAA4L,MAAA,CAAyB1I,GAAG,CAACipE,OAAO,CACvE,CAAC;IACH;IACA,IAAI;MACF,IAAM59C,MAAM,GAAGoyC,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEksE,QAAQ,CAACvoE,IAAI,EAAE4zC,OAAO,CAAC;MAC5DnK,IAAI,CAACptC,CAAC,GAAG,CAAC,CAAC,GAAGuuB,MAAM;IACtB,CAAC,CAAC,OAAOrrB,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,GAAG,CAAC,4BAAA4L,MAAA,CAAyB1I,GAAG,CAACipE,OAAO,CACvE,CAAC;IACH;EACF;EAEA,QAAQ79C,KAAK,EAAA1iB,MAAA,CAAKwhC,IAAI,GAAE8+B,QAAQ;AAClC;;AAEA;AACA;AACA;AACA,SAASf,mBAAmBA,CAAC7D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACzD,IAAM60B,iBAAiB,GAAG9E,OAAO,CAAC,CAAC,CAAC;EACpC;AACF;AACA;EACE,IAAIpG,IAAI;EACR,QAAQkL,iBAAiB,CAAC,CAAC,CAAC;IAC1B,KAAK,QAAQ;MACXlL,IAAI,GAAG,CAAC;MACR;IACF,KAAK,aAAa;MAChB,IAAMzhE,CAAC,GAAG2sE,iBAAiB,CAAC,CAAC,CAAC;MAC9B,IAAI,OAAO3sE,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI,CAAC,EAAE;QACnC,MAAM,IAAIyK,KAAK,CACb,kEAAA0B,MAAA,CACWygE,IAAI,CAACC,SAAS,CAAC7sE,CAAC,CAAC,aAC9B,CAAC;MACH;MACAyhE,IAAI,GAAGzhE,CAAC;MACR;IACF;MACE,MAAM,IAAIyK,KAAK,gCAAA0B,MAAA,CACkBygE,IAAI,CAACC,SAAS,CAACF,iBAAiB,CAAC,CAClE,CAAC;EACL;EAEA,IAAMG,aAAa,GAAG,IAAI3F,iBAAiB,CAACnB,UAAU,EAAEvE,IAAI,CAAC;EAE7D,IAAI5yC,KAAK;EACT,IAAI;IACFA,KAAK,GAAGqyC,KAAK,CAAC2G,OAAO,CAAC,CAAC,CAAC,EAAE7B,UAAU,EAAEluB,OAAO,CAAC;EAChD,CAAC,CAAC,OAAOr0C,GAAG,EAAE;IACZ,MAAM,IAAIgH,KAAK,0DAAA0B,MAAA,CAC4C1I,GAAG,CAACipE,OAAO,CACtE,CAAC;EACH;EAEA,IAAM/+B,IAAI,GAAG,IAAI3sC,KAAK,CAAC6mE,OAAO,CAAChoE,MAAM,GAAG,CAAC,CAAC;EAC1C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGotC,IAAI,CAAC9tC,MAAM,EAAEU,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI;MACF,IAAMi9C,IAAI,GAAG0jB,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEylE,UAAU,EAAEluB,OAAO,CAAC;MACvDnK,IAAI,CAACptC,CAAC,CAAC,GAAGi9C,IAAI;IAChB,CAAC,CAAC,OAAO/5C,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,GAAG,CAAC,mCAAA4L,MAAA,CAAgC1I,GAAG,CAACipE,OAAO,CAC9E,CAAC;IACH;IACA,IAAI;MACF,IAAM59C,MAAM,GAAGoyC,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEwrE,UAAU,EAAEj0B,OAAO,CAAC;MACzDnK,IAAI,CAACptC,CAAC,GAAG,CAAC,CAAC,GAAGuuB,MAAM;IACtB,CAAC,CAAC,OAAOrrB,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,GAAG,CAAC,mCAAA4L,MAAA,CAAgC1I,GAAG,CAACipE,OAAO,CAC9E,CAAC;IACH;EACF;EAEA,QAAQI,aAAa,EAAEj+C,KAAK,EAAA1iB,MAAA,CAAKwhC,IAAI;AACvC;;AAEA;AACA;AACA;AACA,SAASi+B,YAAYA,CAAC/D,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAClD,IAAM20B,QAAQ,GAAGvL,KAAK,CAAC2G,OAAO,CAACA,OAAO,CAAChoE,MAAM,GAAG,CAAC,CAAC,EAAEksE,UAAU,EAAEj0B,OAAO,CAAC;EAExE,IAAMnK,IAAI,GAAG,IAAI3sC,KAAK,CAAC6mE,OAAO,CAAChoE,MAAM,GAAG,CAAC,CAAC;EAC1C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGotC,IAAI,CAAC9tC,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE;IAC3C,IAAI;MACF,IAAMspD,SAAS,GAAGqX,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEwlE,WAAW,EAAEjuB,OAAO,CAAC;MAC7DnK,IAAI,CAACptC,CAAC,CAAC,GAAGspD,SAAS;IACrB,CAAC,CAAC,OAAOpmD,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,2BAAA4L,MAAA,CAAwB1I,GAAG,CAACipE,OAAO,CAClE,CAAC;IACH;IACA,IAAI;MACF,IAAM59C,MAAM,GAAGoyC,KAAK,CAAC2G,OAAO,CAACtnE,CAAC,GAAG,CAAC,CAAC,EAAEksE,QAAQ,CAACvoE,IAAI,EAAE4zC,OAAO,CAAC;MAC5DnK,IAAI,CAACptC,CAAC,GAAG,CAAC,CAAC,GAAGuuB,MAAM;IACtB,CAAC,CAAC,OAAOrrB,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,6BAAA0B,MAAA,CACe5L,CAAC,GAAG,CAAC,2BAAA4L,MAAA,CAAwB1I,GAAG,CAACipE,OAAO,CACtE,CAAC;IACH;EACF;EAEA/+B,IAAI,CAACA,IAAI,CAAC9tC,MAAM,GAAG,CAAC,CAAC,GAAG4sE,QAAQ;EAChC,OAAO9+B,IAAI;AACb;;AAEA;AACA;AACA;AACA,SAASk+B,UAAUA,CAAChE,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EAChD,IAAIz4C,QAAQ,GAAGwoE,OAAO,CAAC,CAAC,CAAC;EACzB,IAAI,CAAC7mE,KAAK,CAACC,OAAO,CAAC5B,QAAQ,CAAC,EAAE;IAC5B,MAAM,IAAIoL,KAAK,+DAEf,CAAC;EACH;EACA;AACF;AACA;EACE,IAAIsiE,UAAU;EACd,IAAI,OAAO1tE,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IACnC,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;MAC7B,MAAM,IAAIoL,KAAK,uHAEf,CAAC;IACH;IACA,IAAI,CAACzJ,KAAK,CAACC,OAAO,CAAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/B,MAAM,IAAIoL,KAAK,uFAEf,CAAC;IACH;IACApL,QAAQ,GAAGA,QAAQ,CAAC,CAAC,CAAC;IACtB0tE,UAAU,GAAG9G,UAAU;EACzB,CAAC,MAAM;IACL8G,UAAU,GAAG/G,UAAU;EACzB;EAEA,IAAMr4B,IAAI,GAAG,IAAI3sC,KAAK,CAAC3B,QAAQ,CAACQ,MAAM,CAAC;EACvC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGotC,IAAI,CAAC9tC,MAAM,EAAEU,CAAC,EAAE,EAAE;IACpC,IAAI;MACF,IAAM+6C,GAAG,GAAG4lB,KAAK,CAAC7hE,QAAQ,CAACkB,CAAC,CAAC,EAAEwsE,UAAU,EAAEj1B,OAAO,CAAC;MACnDnK,IAAI,CAACptC,CAAC,CAAC,GAAG+6C,GAAG;IACf,CAAC,CAAC,OAAO73C,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,kCAAA0B,MAAA,CACoB5L,CAAC,8BAAA4L,MAAA,CAAyB1I,GAAG,CAACipE,OAAO,CACxE,CAAC;IACH;EACF;EAEA,IAAMptE,MAAM,GAAG4hE,KAAK,CAAC2G,OAAO,CAAC,CAAC,CAAC,EAAEkF,UAAU,EAAEj1B,OAAO,CAAC;EACrD,QAAQx4C,MAAM,EAAA6M,MAAA,CAAKwhC,IAAI;AACzB;;AAEA;AACA;AACA;AACA,SAASm+B,eAAeA,CAACjE,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACrD,IAAIl2C,KAAK;EACT,IAAI;IACFA,KAAK,GAAGs/D,KAAK,CAAC2G,OAAO,CAAC,CAAC,CAAC,EAAE7B,UAAU,EAAEluB,OAAO,CAAC;EAChD,CAAC,CAAC,OAAOr0C,GAAG,EAAE;IACZ,MAAM,IAAIgH,KAAK,0DAAA0B,MAAA,CAC4C1I,GAAG,CAACipE,OAAO,CACtE,CAAC;EACH;EACA,IAAMM,MAAM,GAAGnF,OAAO,CAAC,CAAC,CAAC;EACzB,IAAI,CAAC7mE,KAAK,CAACC,OAAO,CAAC+rE,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIviE,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,IAAMwiE,YAAY,GAAG,IAAIjsE,KAAK,CAACgsE,MAAM,CAACntE,MAAM,CAAC;EAC7C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0sE,YAAY,CAACptE,MAAM,EAAEU,CAAC,EAAE,EAAE;IAC5C,IAAIkiE,KAAK;IACT,IAAI;MACFA,KAAK,GAAGvB,KAAK,CAAC8L,MAAM,CAACzsE,CAAC,CAAC,EAAE2lE,SAAS,EAAEpuB,OAAO,CAAC;IAC9C,CAAC,CAAC,OAAOr0C,GAAG,EAAE;MACZ,MAAM,IAAIgH,KAAK,mCAAA0B,MAAA,CACqB5L,CAAC,8BAAA4L,MAAA,CAA2B1I,GAAG,CAACipE,OAAO,CAC3E,CAAC;IACH;IACA,IAAI,EAAEjK,KAAK,YAAY0E,iBAAiB,CAAC,EAAE;MACzC,MAAM,IAAI18D,KAAK,+BAAA0B,MAAA,CACiB5L,CAAC,6BACjC,CAAC;IACH;IACA0sE,YAAY,CAAC1sE,CAAC,CAAC,GAAGkiE,KAAK;EACzB;EACA,QAAQ7gE,KAAK,EAAAuK,MAAA,CAAK8gE,YAAY;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASnC,0BAA0BA,CAAA,EAAgB;EAAA,SAAAoC,KAAA,GAAA/pE,SAAA,CAAAtD,MAAA,EAAZstE,UAAU,OAAAnsE,KAAA,CAAAksE,KAAA,GAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;IAAVD,UAAU,CAAAC,KAAA,IAAAjqE,SAAA,CAAAiqE,KAAA;EAAA;EAC/C,OAAO,UAAUvF,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;IAC7C,IAAMuvB,QAAQ,GAAGQ,OAAO,CAAC,CAAC,CAAC;;IAE3B;AACJ;AACA;IACI,IAAIl6B,IAAI;IACR,KAAK,IAAIptC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4sE,UAAU,CAACttE,MAAM,EAAEU,CAAC,EAAE,EAAE;MAC1C,IAAMoiE,MAAM,GAAGwK,UAAU,CAAC5sE,CAAC,CAAC,CAACsnE,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,CAAC;MAC1D,IAAIv3C,CAAC,IAAI4sE,UAAU,CAACttE,MAAM,GAAG,CAAC,EAAE;QAC9B,IAAI,CAAC8iE,MAAM,EAAE;UACX,MAAM,IAAIl4D,KAAK,CACb,4DACF,CAAC;QACH;QACAkjC,IAAI,GAAGg1B,MAAM;MACf;IACF;IACA,OAAA4C,UAAA,CAAW6B,cAAc,GAAC2E,UAAU,EAAE1E,QAAQ,EAAAl7D,MAAA,CAAAq5D,kBAAA,CAAK73B,IAAI;EACzD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASq6B,mBAAmBA,CAACH,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,EAAE;EACzD,IAAMuvB,QAAQ,GAAGQ,OAAO,CAAC,CAAC,CAAC;EAE3B,IAAMwF,MAAM,GAAGxC,OAAO,CAACxD,QAAQ,CAAC;EAChC,IAAI,CAACgG,MAAM,EAAE;IACX,MAAM,IAAI5iE,KAAK,sBAAA0B,MAAA,CAAsBk7D,QAAQ,CAAE,CAAC;EAClD;EACA,OAAOgG,MAAM,CAACxF,OAAO,EAAEkE,UAAU,EAAEj0B,OAAO,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASw1B,mBAAmBA,CAACnjD,QAAQ,EAAE;EAC5C,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,EAAE;EACX;EACA,IAAMjmB,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;EAC/B,QAAQlmB,IAAI;IACV,KAAK,OAAO;IACZ,KAAK,YAAY;IACjB,KAAK,SAAS;MACZ,OAAOA,IAAI;IACb,KAAK,YAAY;IACjB,KAAK,iBAAiB;IACtB,KAAK,cAAc;MACjB,OAAO,6CAA+CA,IAAI,CAACqpE,SAAS,CAAC,CAAC,CAAC;IACzE,KAAK,QAAQ;MACX,OAAO,SAAS;IAClB,KAAK,oBAAoB;MACvB,OAAOD,mBAAmB,CACxB,8DACEnjD,QAAQ,CACRO,aAAa,CAAC,CAAC,CAAC,CAAC,CACrB,CAAC;IACH;MACE,OAAO,EAAE;EACb;AACF;;;;;;;;;AC5hCA,IAAA06C,MAAA,GAAA9iE,OAAA;AAQA,IAAAkrE,WAAA,GAAAlrE,OAAA;AAAyE,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAwgE,mBAAAlgE,CAAA,WAAAmgE,kBAAA,CAAAngE,CAAA,KAAAogE,gBAAA,CAAApgE,CAAA,KAAA2Z,2BAAA,CAAA3Z,CAAA,KAAAqgE,kBAAA;AAAA,SAAAA,mBAAA,cAAAvgE,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAA2lE,iBAAApgE,CAAA,8BAAAL,MAAA,YAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,aAAAI,CAAA,uBAAAtE,KAAA,CAAAse,IAAA,CAAAha,CAAA;AAAA,SAAAmgE,mBAAAngE,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAA6Z,iBAAA,CAAA7Z,CAAA;AAAA,SAAA6Z,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA,IAZzE;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,SAASmtE,oBAAoBA,CAAA,EAAG;EACrC,OAAO;IACLhG,SAAS,EAAE,CAAC,CAAC;IACbt8B,UAAU,EAAE,CAAC,CAAC;IACd1tB,UAAU,EAAEof,GAAG;IACf6qC,SAAS,EAAE,IAAI;IACfC,YAAY,EAAE;EAChB,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+F,eAAeA,CAAC7F,OAAO,EAAE3jE,IAAI,EAAE4zC,OAAO,EAAE;EACtD,IAAMw0B,UAAU,GAAG,IAAApL,iBAAK,EAAC2G,OAAO,EAAE3jE,IAAI,EAAE4zC,OAAO,CAAC;EAChD,OAAO61B,iBAAiB,CAACrB,UAAU,EAAEx0B,OAAO,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS61B,iBAAiBA,CAACrB,UAAU,EAAEx0B,OAAO,EAAE;EAC9C,IAAIw0B,UAAU,YAAYnF,6BAAiB,EAAE;IAC3C;IACA,IAAImF,UAAU,CAACpoE,IAAI,KAAKgiE,qBAAS,IAAI,OAAOoG,UAAU,CAACrtE,KAAK,KAAK,QAAQ,EAAE;MACzE,IAAM2uE,UAAU,GAAG,IAAAhJ,iBAAU,EAAC0H,UAAU,CAACrtE,KAAK,CAAC;MAC/C,OAAO,YAAY;QACjB,OAAO2uE,UAAU;MACnB,CAAC;IACH;IACA,OAAO,YAAY;MACjB,OAAOtB,UAAU,CAACrtE,KAAK;IACzB,CAAC;EACH;EACA,IAAMooE,QAAQ,GAAGiF,UAAU,CAACjF,QAAQ;EACpC,QAAQA,QAAQ;IACd,KAAKY,eAAG,CAAChiE,MAAM;IACf,KAAKgiE,eAAG,CAACjiE,MAAM;IACf,KAAKiiE,eAAG,CAACmC,QAAQ;MAAE;QACjB,OAAOyD,0BAA0B,CAACvB,UAAU,EAAEx0B,OAAO,CAAC;MACxD;IACA,KAAKmwB,eAAG,CAACC,GAAG;IACZ,KAAKD,eAAG,CAACE,GAAG;IACZ,KAAKF,eAAG,CAAC2C,GAAG;MAAE;QACZ,OAAOkD,yBAAyB,CAACxB,UAAU,EAAEx0B,OAAO,CAAC;MACvD;IACA,KAAKmwB,eAAG,CAACuC,EAAE;MAAE;QACX,OAAO,UAAC1yB,OAAO;UAAA,OAAKA,OAAO,CAAC4vB,SAAS;QAAA;MACvC;IACA,KAAKO,eAAG,CAACI,YAAY;MAAE;QACrB,OAAO,UAACvwB,OAAO;UAAA,OAAKA,OAAO,CAAC6vB,YAAY;QAAA;MAC1C;IACA,KAAKM,eAAG,CAACG,MAAM;MAAE;QACf,IAAMz6B,IAAI,GAAG2+B,UAAU,CAAC3+B,IAAI,CAACl/B,GAAG,CAAC,UAAC5J,CAAC;UAAA,OAAK8oE,iBAAiB,CAAC9oE,CAAC,EAAEizC,OAAO,CAAC;QAAA,EAAC;QACtE,OAAO,UAACA,OAAO;UAAA,IAAAi2B,IAAA;UAAA,OACb,CAAAA,IAAA,KAAE,EAAC5hE,MAAM,CAAA9I,KAAA,CAAA0qE,IAAA,EAAAvI,kBAAA,CAAI73B,IAAI,CAACl/B,GAAG,CAAC,UAAC6sC,GAAG;YAAA,OAAKA,GAAG,CAACxD,OAAO,CAAC,CAAC14B,QAAQ,CAAC,CAAC;UAAA,EAAC,EAAC;QAAA;MAC5D;IACA,KAAK6oD,eAAG,CAACS,UAAU;MAAE;QACnB,OAAO,UAAC5wB,OAAO;UAAA,OAAKA,OAAO,CAACr6B,UAAU;QAAA;MACxC;IACA,KAAKwqD,eAAG,CAACM,GAAG;IACZ,KAAKN,eAAG,CAACO,GAAG;IACZ,KAAKP,eAAG,CAACiC,OAAO;IAChB,KAAKjC,eAAG,CAACqC,EAAE;IACX,KAAKrC,eAAG,CAACQ,GAAG;MAAE;QACZ,OAAOuF,wBAAwB,CAAC1B,UAAU,EAAEx0B,OAAO,CAAC;MACtD;IACA,KAAKmwB,eAAG,CAACW,KAAK;IACd,KAAKX,eAAG,CAACY,QAAQ;IACjB,KAAKZ,eAAG,CAACe,QAAQ;IACjB,KAAKf,eAAG,CAACgB,iBAAiB;IAC1B,KAAKhB,eAAG,CAACa,WAAW;IACpB,KAAKb,eAAG,CAACc,oBAAoB;MAAE;QAC7B,OAAOkF,2BAA2B,CAAC3B,UAAU,EAAEx0B,OAAO,CAAC;MACzD;IACA,KAAKmwB,eAAG,CAACiB,QAAQ;IACjB,KAAKjB,eAAG,CAACkB,MAAM;IACf,KAAKlB,eAAG,CAACmB,GAAG;IACZ,KAAKnB,eAAG,CAACoB,QAAQ;IACjB,KAAKpB,eAAG,CAACqB,KAAK;IACd,KAAKrB,eAAG,CAACsB,GAAG;IACZ,KAAKtB,eAAG,CAACuB,GAAG;IACZ,KAAKvB,eAAG,CAACwB,GAAG;IACZ,KAAKxB,eAAG,CAACyB,KAAK;IACd,KAAKzB,eAAG,CAAC0B,IAAI;IACb,KAAK1B,eAAG,CAAC2B,KAAK;IACd,KAAK3B,eAAG,CAAC4B,GAAG;IACZ,KAAK5B,eAAG,CAAC6B,GAAG;IACZ,KAAK7B,eAAG,CAAC8B,IAAI;IACb,KAAK9B,eAAG,CAAC+B,IAAI;MAAE;QACb,OAAOkE,wBAAwB,CAAC5B,UAAU,EAAEx0B,OAAO,CAAC;MACtD;IACA,KAAKmwB,eAAG,CAACoC,IAAI;MAAE;QACb,OAAO8D,qBAAqB,CAAC7B,UAAU,EAAEx0B,OAAO,CAAC;MACnD;IACA,KAAKmwB,eAAG,CAACgC,KAAK;MAAE;QACd,OAAOmE,sBAAsB,CAAC9B,UAAU,EAAEx0B,OAAO,CAAC;MACpD;IACA,KAAKmwB,eAAG,CAACkC,WAAW;MAAE;QACpB,OAAOkE,4BAA4B,CAAC/B,UAAU,EAAEx0B,OAAO,CAAC;MAC1D;IACA,KAAKmwB,eAAG,CAAC0C,QAAQ;MAAE;QACjB,OAAO2D,wBAAwB,CAAChC,UAAU,EAAEx0B,OAAO,CAAC;MACtD;IACA;MAAS;QACP,MAAM,IAAIrtC,KAAK,yBAAA0B,MAAA,CAAyBk7D,QAAQ,CAAE,CAAC;MACrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASwG,0BAA0BA,CAACvB,UAAU,EAAEx0B,OAAO,EAAE;EACvD,IAAM5zC,IAAI,GAAGooE,UAAU,CAACjF,QAAQ;EAChC,IAAMxnE,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EAErC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,QAAQ5zC,IAAI;IACV,KAAK+jE,eAAG,CAACmC,QAAQ;MAAE;QACjB,OAAO,UAACtyB,OAAO,EAAK;UAClB,KAAK,IAAIv3C,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGV,MAAM,EAAE,EAAEU,EAAC,EAAE;YAC/B,IAAMtB,KAAK,GAAG0uC,IAAI,CAACptC,EAAC,CAAC,CAACu3C,OAAO,CAAC;YAC9B,IAAI,OAAO74C,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE;cAClD,OAAOA,KAAK;YACd;UACF;UACA,MAAM,IAAIwL,KAAK,CAAC,2CAA2C,CAAC;QAC9D,CAAC;MACH;IACA,KAAKw9D,eAAG,CAAChiE,MAAM;IACf,KAAKgiE,eAAG,CAACjiE,MAAM;MAAE;QACf,OAAO,UAAC8xC,OAAO,EAAK;UAClB,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/B,IAAMtB,KAAK,GAAG0uC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC;YAC9B,IAAI/yC,OAAA,CAAO9F,KAAK,MAAKiF,IAAI,EAAE;cACzB,OAAOjF,KAAK;YACd;UACF;UACA,MAAM,IAAIwL,KAAK,uCAAA0B,MAAA,CAAuCjI,IAAI,CAAE,CAAC;QAC/D,CAAC;MACH;IACA;MAAS;QACP,MAAM,IAAIuG,KAAK,mCAAA0B,MAAA,CAAmCjI,IAAI,CAAE,CAAC;MAC3D;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS4pE,yBAAyBA,CAACxB,UAAU,EAAEx0B,OAAO,EAAE;EACtD,IAAMy2B,cAAc,GAAG,gCAAkCjC,UAAU,CAAC3+B,IAAI,CAAC,CAAC,CAAE;EAC5E,IAAMtuB,IAAI,GAAG,qBAAuBkvD,cAAc,CAACtvE,KAAM;EACzD,QAAQqtE,UAAU,CAACjF,QAAQ;IACzB,KAAKY,eAAG,CAACC,GAAG;MAAE;QACZ,OAAO,UAACpwB,OAAO,EAAK;UAClB,IAAMnK,IAAI,GAAG2+B,UAAU,CAAC3+B,IAAI;UAC5B,IAAI1uC,KAAK,GAAG64C,OAAO,CAAC3M,UAAU,CAAC9rB,IAAI,CAAC;UACpC,KAAK,IAAI9e,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGolC,IAAI,CAAC9tC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;YAC7C,IAAMiuE,aAAa,GAAG,gCAAkC7gC,IAAI,CAACptC,CAAC,CAAE;YAChE,IAAMvB,GAAG,GAAG,4BAA8BwvE,aAAa,CAACvvE,KAAM;YAC9DA,KAAK,GAAGA,KAAK,CAACD,GAAG,CAAC;UACpB;UACA,OAAOC,KAAK;QACd,CAAC;MACH;IACA,KAAKgpE,eAAG,CAACE,GAAG;MAAE;QACZ,OAAO,UAACrwB,OAAO;UAAA,OAAKA,OAAO,CAAC2vB,SAAS,CAACpoD,IAAI,CAAC;QAAA;MAC7C;IACA,KAAK4oD,eAAG,CAAC2C,GAAG;MAAE;QACZ,OAAO,UAAC9yB,OAAO,EAAK;UAClB,IAAMnK,IAAI,GAAG2+B,UAAU,CAAC3+B,IAAI;UAC5B,IAAI,EAAEtuB,IAAI,IAAIy4B,OAAO,CAAC3M,UAAU,CAAC,EAAE;YACjC,OAAO,KAAK;UACd;UACA,IAAIlsC,KAAK,GAAG64C,OAAO,CAAC3M,UAAU,CAAC9rB,IAAI,CAAC;UACpC,KAAK,IAAI9e,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGolC,IAAI,CAAC9tC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;YAC7C,IAAMiuE,aAAa,GAAG,gCAAkC7gC,IAAI,CAACptC,CAAC,CAAE;YAChE,IAAMvB,GAAG,GAAG,4BAA8BwvE,aAAa,CAACvvE,KAAM;YAC9D,IAAI,CAACA,KAAK,IAAI,CAAC0G,MAAM,CAAC8oE,MAAM,CAACxvE,KAAK,EAAED,GAAG,CAAC,EAAE;cACxC,OAAO,KAAK;YACd;YACAC,KAAK,GAAGA,KAAK,CAACD,GAAG,CAAC;UACpB;UACA,OAAO,IAAI;QACb,CAAC;MACH;IACA;MAAS;QACP,MAAM,IAAIyL,KAAK,kCAAA0B,MAAA,CAAkCmgE,UAAU,CAACjF,QAAQ,CAAE,CAAC;MACzE;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS4G,2BAA2BA,CAAC3B,UAAU,EAAEx0B,OAAO,EAAE;EACxD,IAAM42B,EAAE,GAAGpC,UAAU,CAACjF,QAAQ;EAC9B,IAAMrc,IAAI,GAAG2iB,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAAC,CAAC,CAAC,EAAEmK,OAAO,CAAC;EAC3D,IAAMvS,KAAK,GAAGooC,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAAC,CAAC,CAAC,EAAEmK,OAAO,CAAC;EAC5D,QAAQ42B,EAAE;IACR,KAAKzG,eAAG,CAACW,KAAK;MAAE;QACd,OAAO,UAAC9wB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,KAAKvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACtD;IACA,KAAKmwB,eAAG,CAACY,QAAQ;MAAE;QACjB,OAAO,UAAC/wB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,KAAKvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACtD;IACA,KAAKmwB,eAAG,CAACe,QAAQ;MAAE;QACjB,OAAO,UAAClxB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,GAAGvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACpD;IACA,KAAKmwB,eAAG,CAACgB,iBAAiB;MAAE;QAC1B,OAAO,UAACnxB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,IAAIvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACrD;IACA,KAAKmwB,eAAG,CAACa,WAAW;MAAE;QACpB,OAAO,UAAChxB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,GAAGvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACpD;IACA,KAAKmwB,eAAG,CAACc,oBAAoB;MAAE;QAC7B,OAAO,UAACjxB,OAAO;UAAA,OAAKkT,IAAI,CAAClT,OAAO,CAAC,IAAIvS,KAAK,CAACuS,OAAO,CAAC;QAAA;MACrD;IACA;MAAS;QACP,MAAM,IAAIrtC,KAAK,oCAAA0B,MAAA,CAAoCuiE,EAAE,CAAE,CAAC;MAC1D;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASV,wBAAwBA,CAAC1B,UAAU,EAAEx0B,OAAO,EAAE;EACrD,IAAM42B,EAAE,GAAGpC,UAAU,CAACjF,QAAQ;EAC9B,IAAMxnE,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EAErC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,QAAQ42B,EAAE;IACR,KAAKzG,eAAG,CAACM,GAAG;MAAE;QACZ,OAAO,UAACzwB,OAAO,EAAK;UAClB,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/B,IAAIotC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC,EAAE;cACpB,OAAO,IAAI;YACb;UACF;UACA,OAAO,KAAK;QACd,CAAC;MACH;IACA,KAAKmwB,eAAG,CAACO,GAAG;MAAE;QACZ,OAAO,UAAC1wB,OAAO,EAAK;UAClB,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/B,IAAI,CAACotC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC,EAAE;cACrB,OAAO,KAAK;YACd;UACF;UACA,OAAO,IAAI;QACb,CAAC;MACH;IACA,KAAKmwB,eAAG,CAACiC,OAAO;MAAE;QAChB,OAAO,UAACpyB,OAAO,EAAK;UAClB,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC9B,IAAMh9B,GAAG,GAAG6yB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC5B,IAAM/8B,GAAG,GAAG4yB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC5B,OAAO74C,KAAK,IAAI6b,GAAG,IAAI7b,KAAK,IAAI8b,GAAG;QACrC,CAAC;MACH;IACA,KAAKktD,eAAG,CAACqC,EAAE;MAAE;QACX,OAAO,UAACxyB,OAAO,EAAK;UAClB,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC9B,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/B,IAAItB,KAAK,KAAK0uC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC,EAAE;cAC9B,OAAO,IAAI;YACb;UACF;UACA,OAAO,KAAK;QACd,CAAC;MACH;IACA,KAAKmwB,eAAG,CAACQ,GAAG;MAAE;QACZ,OAAO,UAAC3wB,OAAO;UAAA,OAAK,CAACnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;QAAA;MACvC;IACA;MAAS;QACP,MAAM,IAAIrtC,KAAK,iCAAA0B,MAAA,CAAiCuiE,EAAE,CAAE,CAAC;MACvD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASR,wBAAwBA,CAAC5B,UAAU,EAAEx0B,OAAO,EAAE;EACrD,IAAM42B,EAAE,GAAGpC,UAAU,CAACjF,QAAQ;EAC9B,IAAMxnE,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EAErC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,QAAQ42B,EAAE;IACR,KAAKzG,eAAG,CAACiB,QAAQ;MAAE;QACjB,OAAO,UAACpxB,OAAO,EAAK;UAClB,IAAI74C,KAAK,GAAG,CAAC;UACb,KAAK,IAAIsB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/BtB,KAAK,IAAI0uC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC;UAC3B;UACA,OAAO74C,KAAK;QACd,CAAC;MACH;IACA,KAAKgpE,eAAG,CAACkB,MAAM;MAAE;QACf,OAAO,UAACrxB,OAAO;UAAA,OAAKnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,GAAGnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;QAAA;MACzD;IACA,KAAKmwB,eAAG,CAACmB,GAAG;MAAE;QACZ,OAAO,UAACtxB,OAAO,EAAK;UAClB,IAAI74C,KAAK,GAAG,CAAC;UACb,KAAK,IAAIsB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;YAC/BtB,KAAK,IAAI0uC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC;UAC3B;UACA,OAAO74C,KAAK;QACd,CAAC;MACH;IACA,KAAKgpE,eAAG,CAACoB,QAAQ;MAAE;QACjB,OAAO,UAACvxB,OAAO;UAAA,OAAKnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,GAAGnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;QAAA;MACzD;IACA,KAAKmwB,eAAG,CAACqB,KAAK;MAAE;QACd,OAAO,UAACxxB,OAAO,EAAK;UAClB,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC9B,IAAMh9B,GAAG,GAAG6yB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC5B,IAAI74C,KAAK,GAAG6b,GAAG,EAAE;YACf,OAAOA,GAAG;UACZ;UACA,IAAMC,GAAG,GAAG4yB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC5B,IAAI74C,KAAK,GAAG8b,GAAG,EAAE;YACf,OAAOA,GAAG;UACZ;UACA,OAAO9b,KAAK;QACd,CAAC;MACH;IACA,KAAKgpE,eAAG,CAACsB,GAAG;MAAE;QACZ,OAAO,UAACzxB,OAAO;UAAA,OAAKnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,GAAGnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;QAAA;MACzD;IACA,KAAKmwB,eAAG,CAACuB,GAAG;MAAE;QACZ,OAAO,UAAC1xB,OAAO;UAAA,OAAKljC,IAAI,CAACkI,GAAG,CAAC6wB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,EAAEnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAClE;IACA,KAAKmwB,eAAG,CAACwB,GAAG;MAAE;QACZ,OAAO,UAAC3xB,OAAO;UAAA,OAAKljC,IAAI,CAACC,GAAG,CAAC84B,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAChD;IACA,KAAKmwB,eAAG,CAACyB,KAAK;MAAE;QACd,OAAO,UAAC5xB,OAAO;UAAA,OAAKljC,IAAI,CAACoI,KAAK,CAAC2wB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAClD;IACA,KAAKmwB,eAAG,CAAC0B,IAAI;MAAE;QACb,OAAO,UAAC7xB,OAAO;UAAA,OAAKljC,IAAI,CAACqI,IAAI,CAAC0wB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MACjD;IACA,KAAKmwB,eAAG,CAAC2B,KAAK;MAAE;QACd,OAAO,UAAC9xB,OAAO;UAAA,OAAKljC,IAAI,CAACmI,KAAK,CAAC4wB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAClD;IACA,KAAKmwB,eAAG,CAAC4B,GAAG;MAAE;QACZ,OAAO,UAAC/xB,OAAO;UAAA,OAAKljC,IAAI,CAAC4O,GAAG,CAACmqB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAChD;IACA,KAAKmwB,eAAG,CAAC6B,GAAG;MAAE;QACZ,OAAO,UAAChyB,OAAO;UAAA,OAAKljC,IAAI,CAAC0O,GAAG,CAACqqB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MAChD;IACA,KAAKmwB,eAAG,CAAC8B,IAAI;MAAE;QACb,IAAIlqE,MAAM,KAAK,CAAC,EAAE;UAChB,OAAO,UAACi4C,OAAO;YAAA,OAAKljC,IAAI,CAACqV,KAAK,CAAC0jB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,EAAEnK,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;UAAA;QACpE;QACA,OAAO,UAACA,OAAO;UAAA,OAAKljC,IAAI,CAACqa,IAAI,CAAC0e,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MACjD;IACA,KAAKmwB,eAAG,CAAC+B,IAAI;MAAE;QACb,OAAO,UAAClyB,OAAO;UAAA,OAAKljC,IAAI,CAAC2F,IAAI,CAACozB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC,CAAC;QAAA;MACjD;IACA;MAAS;QACP,MAAM,IAAIrtC,KAAK,iCAAA0B,MAAA,CAAiCuiE,EAAE,CAAE,CAAC;MACvD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASP,qBAAqBA,CAAC7B,UAAU,EAAEx0B,OAAO,EAAE;EAClD,IAAMj4C,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EACrC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,OAAO,UAACA,OAAO,EAAK;IAClB,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,GAAG,CAAC,EAAEU,GAAC,IAAI,CAAC,EAAE;MACtC,IAAMspD,SAAS,GAAGlc,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC;MAClC,IAAI+R,SAAS,EAAE;QACb,OAAOlc,IAAI,CAACptC,GAAC,GAAG,CAAC,CAAC,CAACu3C,OAAO,CAAC;MAC7B;IACF;IACA,OAAOnK,IAAI,CAAC9tC,MAAM,GAAG,CAAC,CAAC,CAACi4C,OAAO,CAAC;EAClC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASs2B,sBAAsBA,CAAC9B,UAAU,EAAEx0B,OAAO,EAAE;EACnD,IAAMj4C,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EACrC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,OAAO,UAACA,OAAO,EAAK;IAClB,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;IAC9B,KAAK,IAAIv3C,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAEU,GAAC,IAAI,CAAC,EAAE;MAClC,IAAItB,KAAK,KAAK0uC,IAAI,CAACptC,GAAC,CAAC,CAACu3C,OAAO,CAAC,EAAE;QAC9B,OAAOnK,IAAI,CAACptC,GAAC,GAAG,CAAC,CAAC,CAACu3C,OAAO,CAAC;MAC7B;IACF;IACA,OAAOnK,IAAI,CAAC9tC,MAAM,GAAG,CAAC,CAAC,CAACi4C,OAAO,CAAC;EAClC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASu2B,4BAA4BA,CAAC/B,UAAU,EAAEx0B,OAAO,EAAE;EACzD,IAAMj4C,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EACrC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,OAAO,UAACA,OAAO,EAAK;IAClB,IAAM2pB,IAAI,GAAG9zB,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;IAC7B,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;IAE9B,IAAI62B,aAAa;IACjB,IAAIC,cAAc;IAClB,KAAK,IAAIruE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGV,MAAM,EAAEU,IAAC,IAAI,CAAC,EAAE;MAClC,IAAMsuB,KAAK,GAAG8e,IAAI,CAACptC,IAAC,CAAC,CAACu3C,OAAO,CAAC;MAC9B,IAAIhpB,MAAM,GAAG6e,IAAI,CAACptC,IAAC,GAAG,CAAC,CAAC,CAACu3C,OAAO,CAAC;MACjC,IAAM+2B,OAAO,GAAG7tE,KAAK,CAACC,OAAO,CAAC6tB,MAAM,CAAC;MACrC,IAAI+/C,OAAO,EAAE;QACX//C,MAAM,GAAG,IAAA21C,gBAAS,EAAC31C,MAAM,CAAC;MAC5B;MACA,IAAID,KAAK,IAAI5vB,KAAK,EAAE;QAClB,IAAIsB,IAAC,KAAK,CAAC,EAAE;UACX,OAAOuuB,MAAM;QACf;QACA,IAAI+/C,OAAO,EAAE;UACX,OAAOC,gBAAgB,CACrBrN,IAAI,EACJxiE,KAAK,EACL0vE,aAAa,EACbC,cAAc,EACd//C,KAAK,EACLC,MACF,CAAC;QACH;QACA,OAAOigD,iBAAiB,CACtBtN,IAAI,EACJxiE,KAAK,EACL0vE,aAAa,EACbC,cAAc,EACd//C,KAAK,EACLC,MACF,CAAC;MACH;MACA6/C,aAAa,GAAG9/C,KAAK;MACrB+/C,cAAc,GAAG9/C,MAAM;IACzB;IACA,OAAO8/C,cAAc;EACvB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASN,wBAAwBA,CAAChC,UAAU,EAAEx0B,OAAO,EAAE;EACrD,IAAM42B,EAAE,GAAGpC,UAAU,CAACjF,QAAQ;EAC9B,IAAMxnE,MAAM,GAAGysE,UAAU,CAAC3+B,IAAI,CAAC9tC,MAAM;EAErC,IAAM8tC,IAAI,GAAG,IAAI3sC,KAAK,CAACnB,MAAM,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BotC,IAAI,CAACptC,CAAC,CAAC,GAAGotE,iBAAiB,CAACrB,UAAU,CAAC3+B,IAAI,CAACptC,CAAC,CAAC,EAAEu3C,OAAO,CAAC;EAC1D;EACA,QAAQ42B,EAAE;IACR,KAAKzG,eAAG,CAAC0C,QAAQ;MAAE;QACjB,OAAO,UAAC7yB,OAAO,EAAK;UAClB,IAAM74C,KAAK,GAAG0uC,IAAI,CAAC,CAAC,CAAC,CAACmK,OAAO,CAAC;UAC9B,IAAIw0B,UAAU,CAAC3+B,IAAI,CAAC,CAAC,CAAC,CAACzpC,IAAI,KAAKgiE,qBAAS,EAAE;YACzC,OAAO,IAAA9mD,eAAQ,EAACngB,KAAK,CAAC;UACxB;UACA,OAAOA,KAAK,CAACmgB,QAAQ,CAAC,CAAC;QACzB,CAAC;MACH;IACA;MAAS;QACP,MAAM,IAAI3U,KAAK,iCAAA0B,MAAA,CAAiCuiE,EAAE,CAAE,CAAC;MACvD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,iBAAiBA,CAACtN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACxE,IAAMpoD,KAAK,GAAGmoD,MAAM,GAAGF,MAAM;EAC7B,IAAIjoD,KAAK,KAAK,CAAC,EAAE;IACf,OAAOkoD,OAAO;EAChB;EACA,IAAM3nD,KAAK,GAAGroB,KAAK,GAAG+vE,MAAM;EAC5B,IAAMnyD,MAAM,GACV4kD,IAAI,KAAK,CAAC,GACNn6C,KAAK,GAAGP,KAAK,GACb,CAACnS,IAAI,CAACkI,GAAG,CAAC2kD,IAAI,EAAEn6C,KAAK,CAAC,GAAG,CAAC,KAAK1S,IAAI,CAACkI,GAAG,CAAC2kD,IAAI,EAAE16C,KAAK,CAAC,GAAG,CAAC,CAAC;EAC/D,OAAOkoD,OAAO,GAAGpyD,MAAM,IAAIsyD,OAAO,GAAGF,OAAO,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,gBAAgBA,CAACrN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAEI,KAAK,EAAEF,MAAM,EAAEG,KAAK,EAAE;EACnE,IAAMtoD,KAAK,GAAGmoD,MAAM,GAAGF,MAAM;EAC7B,IAAIjoD,KAAK,KAAK,CAAC,EAAE;IACf,OAAOqoD,KAAK;EACd;EACA,IAAME,KAAK,GAAG,IAAA5K,iBAAU,EAAC0K,KAAK,CAAC;EAC/B,IAAMG,KAAK,GAAG,IAAA7K,iBAAU,EAAC2K,KAAK,CAAC;EAC/B,IAAIG,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;EAClC,IAAIE,QAAQ,GAAG,GAAG,EAAE;IAClBA,QAAQ,IAAI,GAAG;EACjB,CAAC,MAAM,IAAIA,QAAQ,GAAG,CAAC,GAAG,EAAE;IAC1BA,QAAQ,IAAI,GAAG;EACjB;EAEA,IAAMC,IAAI,GAAG,CACXV,iBAAiB,CAACtN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAEM,KAAK,CAAC,CAAC,CAAC,EAAEJ,MAAM,EAAEK,KAAK,CAAC,CAAC,CAAC,CAAC,EAClER,iBAAiB,CAACtN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAEM,KAAK,CAAC,CAAC,CAAC,EAAEJ,MAAM,EAAEK,KAAK,CAAC,CAAC,CAAC,CAAC,EAClED,KAAK,CAAC,CAAC,CAAC,GAAGP,iBAAiB,CAACtN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAE,CAAC,EAAEE,MAAM,EAAEM,QAAQ,CAAC,EACtET,iBAAiB,CAACtN,IAAI,EAAExiE,KAAK,EAAE+vE,MAAM,EAAEI,KAAK,CAAC,CAAC,CAAC,EAAEF,MAAM,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC,CACnE;EACD,OAAO,IAAAvK,gBAAS,EAAC,IAAAH,iBAAU,EAAC8K,IAAI,CAAC,CAAC;AACpC;;;;;;;;ACzoBA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAApyE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACbkY,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CAAC;EACT/X,KAAK,EAAE,CAAC;EACRgY,KAAK,EAAE;AACT,CAAC;;;;;;;;;;;;ACVD,IAAA85D,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAiH,OAAA,GAAA9E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AAA2D,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAR3D;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAOM8qE,YAAY,0BAAAjmE,YAAA;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAimE,aAAYryD,MAAM,EAAEG,UAAU,EAAEmyD,UAAU,EAAEC,aAAa,EAAE;IAAA,IAAAxoE,KAAA;IAAAxI,eAAA,OAAA8wE,YAAA;IACzDtoE,KAAA,GAAAnB,UAAA,OAAAypE,YAAA;;IAEA;AACJ;AACA;AACA;IACItoE,KAAA,CAAKiW,MAAM,GAAGA,MAAM;;IAEpB;AACJ;AACA;AACA;IACIjW,KAAA,CAAKyoE,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACIvoE,KAAA,CAAKoW,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;IACIpW,KAAA,CAAK+R,KAAK,GACR,OAAOy2D,aAAa,KAAK,UAAU,GAAGE,mBAAU,CAACt6D,IAAI,GAAGo6D,aAAa;;IAEvE;AACJ;AACA;AACA;IACIxoE,KAAA,CAAK2oE,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI3oE,KAAA,CAAK4oE,MAAM,GAAG,OAAOJ,aAAa,KAAK,UAAU,GAAGA,aAAa,GAAG,IAAI;IAAC,OAAAxoE,KAAA;EAC3E;;EAEA;AACF;AACA;EAFEL,SAAA,CAAA2oE,YAAA,EAAAjmE,YAAA;EAAA,OAAA3K,YAAA,CAAA4wE,YAAA;IAAA3wE,GAAA;IAAAC,KAAA,EAGA,SAAAgL,OAAOA,CAAA,EAAG;MACR,IAAI,CAACjC,aAAa,CAACkC,kBAAS,CAACvM,MAAM,CAAC;IACtC;;IAEA;AACF;AACA;EAFE;IAAAqB,GAAA;IAAAC,KAAA,EAGA,SAAAqmB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAChI,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAte,GAAA;IAAAC,KAAA,EAGA,SAAAixE,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACF,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAhxE,GAAA;IAAAC,KAAA,EAGA,SAAAkxE,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACL,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAA9wE,GAAA;IAAAC,KAAA,EAGA,SAAA8tC,aAAaA,CAAA,EAAG;MACd,OAAO,qBAAuB,IAAI,CAACtvB,UAAU;IAC/C;;IAEA;AACF;AACA;EAFE;IAAAze,GAAA;IAAAC,KAAA,EAGA,SAAAoa,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACD,KAAK;IACnB;;IAEA;AACF;AACA;EAFE;IAAApa,GAAA;IAAAC,KAAA,EAGA,SAAA2a,IAAIA,CAAA,EAAG;MAAA,IAAArO,MAAA;MACL,IAAI,IAAI,CAAC6N,KAAK,IAAI22D,mBAAU,CAACt6D,IAAI,EAAE;QACjC,IAAI,IAAI,CAACw6D,MAAM,EAAE;UACf,IAAI,CAAC72D,KAAK,GAAG22D,mBAAU,CAACr6D,OAAO;UAC/B,IAAI,CAACzL,OAAO,CAAC,CAAC;UACd,IAAMwT,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC,CAAC;UACvC,IAAMqjC,iBAAiB,GAAGpvE,KAAK,CAACC,OAAO,CAACwc,UAAU,CAAC,GAC/CA,UAAU,CAAC,CAAC,CAAC,GACbA,UAAU;UACd,IAAAna,oBAAS,EAAC;YAAA,OACRiI,MAAI,CAAC0kE,MAAM,CACT1kE,MAAI,CAAC+Z,SAAS,CAAC,CAAC,EAChB8qD,iBAAiB,EACjB7kE,MAAI,CAAC4kE,aAAa,CAAC,CACrB,CAAC;UAAA,CACH,CAAC,CACEn0B,IAAI,CAAC,UAACq0B,KAAK,EAAK;YACf,IAAI,OAAO,IAAIA,KAAK,EAAE;cACpB9kE,MAAI,CAACykE,MAAM,GAAGK,KAAK,CAACA,KAAK;YAC3B;YACA,IAAI,QAAQ,IAAIA,KAAK,EAAE;cACrB9kE,MAAI,CAAC+R,MAAM,GAAG+yD,KAAK,CAAC/yD,MAAM;YAC5B;YACA,IAAI,YAAY,IAAI+yD,KAAK,EAAE;cACzB9kE,MAAI,CAACkS,UAAU,GAAG4yD,KAAK,CAAC5yD,UAAU;YACpC;YACA,IAAI,YAAY,IAAI4yD,KAAK,EAAE;cACzB9kE,MAAI,CAACukE,WAAW,GAAGO,KAAK,CAACT,UAAU;YACrC;YACA,IACES,KAAK,YAAYC,gBAAgB,IAChC7+D,wBAAmB,IAAI4+D,KAAK,YAAYE,WAAY,IACrDF,KAAK,YAAYG,iBAAiB,IAClCH,KAAK,YAAYI,gBAAgB,EACjC;cACAllE,MAAI,CAACykE,MAAM,GAAGK,KAAK;YACrB;YACA9kE,MAAI,CAAC6N,KAAK,GAAG22D,mBAAU,CAACp6D,MAAM;UAChC,CAAC,CAAC,CACDioC,KAAK,CAAC,UAACvyB,KAAK,EAAK;YAChB9f,MAAI,CAAC6N,KAAK,GAAG22D,mBAAU,CAACnyE,KAAK;YAC7B6tB,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CACDqlD,OAAO,CAAC;YAAA,OAAMnlE,MAAI,CAACtB,OAAO,CAAC,CAAC;UAAA,EAAC;QAClC;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAA0xE,QAAQA,CAACN,KAAK,EAAE;MACd,IAAI,CAACL,MAAM,GAAGK,KAAK;IACrB;;IAEA;AACF;AACA;EAFE;IAAArxE,GAAA;IAAAC,KAAA,EAGA,SAAAwtC,aAAaA,CAAChvB,UAAU,EAAE;MACxB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B;EAAC;AAAA,EA1JwBlT,eAAW;AA6JtC;AACA;AACA;AACA;AACA;AACA;AACO,SAASqmE,WAAWA,CAACP,KAAK,EAAEQ,WAAW,EAAEC,YAAY,EAAE;EAC5D,IAAMC,GAAG,GAAG,+BAAiCV,KAAM;EACnD,IAAIW,SAAS,GAAG,IAAI;EACpB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,MAAM,GAAG,KAAK;EAElB,IAAMn3B,YAAY,GAAG,CACnB,IAAA3wC,kBAAU,EAAC2nE,GAAG,EAAE7mE,kBAAS,CAAC1L,IAAI,EAAE,YAAY;IAC1C0yE,MAAM,GAAG,IAAI;IACb,IAAI,CAACD,QAAQ,EAAE;MACbJ,WAAW,CAAC,CAAC;IACf;EACF,CAAC,CAAC,CACH;EAED,IAAIE,GAAG,CAACI,GAAG,IAAI7/D,iBAAY,EAAE;IAC3B2/D,QAAQ,GAAG,IAAI;IACfF,GAAG,CACAv/D,MAAM,CAAC,CAAC,CACRwqC,IAAI,CAAC,YAAY;MAChB,IAAIg1B,SAAS,EAAE;QACbH,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC,CACDjzB,KAAK,CAAC,UAAUvyB,KAAK,EAAE;MACtB,IAAI2lD,SAAS,EAAE;QACb,IAAIE,MAAM,EAAE;UACVL,WAAW,CAAC,CAAC;QACf,CAAC,MAAM;UACLC,YAAY,CAAC,CAAC;QAChB;MACF;IACF,CAAC,CAAC;EACN,CAAC,MAAM;IACL/2B,YAAY,CAAChyC,IAAI,CAAC,IAAAqB,kBAAU,EAAC2nE,GAAG,EAAE7mE,kBAAS,CAACtM,KAAK,EAAEkzE,YAAY,CAAC,CAAC;EACnE;EAEA,OAAO,SAASM,QAAQA,CAAA,EAAG;IACzBJ,SAAS,GAAG,KAAK;IACjBj3B,YAAY,CAAClsC,OAAO,CAACxE,qBAAa,CAAC;EACrC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuQ,IAAIA,CAACy2D,KAAK,EAAEc,GAAG,EAAE;EAC/B,OAAO,IAAIztE,OAAO,CAAC,UAACE,OAAO,EAAED,MAAM,EAAK;IACtC,SAAS0tE,UAAUA,CAAA,EAAG;MACpBD,QAAQ,CAAC,CAAC;MACVxtE,OAAO,CAACysE,KAAK,CAAC;IAChB;IACA,SAASiB,WAAWA,CAAA,EAAG;MACrBF,QAAQ,CAAC,CAAC;MACVztE,MAAM,CAAC,IAAI8G,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACvC;IACA,SAAS2mE,QAAQA,CAAA,EAAG;MAClBf,KAAK,CAAC3nE,mBAAmB,CAAC,MAAM,EAAE2oE,UAAU,CAAC;MAC7ChB,KAAK,CAAC3nE,mBAAmB,CAAC,OAAO,EAAE4oE,WAAW,CAAC;IACjD;IACAjB,KAAK,CAAC3oE,gBAAgB,CAAC,MAAM,EAAE2pE,UAAU,CAAC;IAC1ChB,KAAK,CAAC3oE,gBAAgB,CAAC,OAAO,EAAE4pE,WAAW,CAAC;IAC5C,IAAIH,GAAG,EAAE;MACPd,KAAK,CAACc,GAAG,GAAGA,GAAG;IACjB;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASI,cAAcA,CAAClB,KAAK,EAAEc,GAAG,EAAE;EACzC,IAAIA,GAAG,EAAE;IACPd,KAAK,CAACc,GAAG,GAAGA,GAAG;EACjB;EACA,OAAOd,KAAK,CAACc,GAAG,IAAI7/D,iBAAY,GAC5B,IAAI5N,OAAO,CAAC,UAACE,OAAO,EAAED,MAAM;IAAA,OAC1B0sE,KAAK,CACF7+D,MAAM,CAAC,CAAC,CACRwqC,IAAI,CAAC;MAAA,OAAMp4C,OAAO,CAACysE,KAAK,CAAC;IAAA,EAAC,CAC1BzyB,KAAK,CAAC,UAAC/4C,CAAC;MAAA,OACPwrE,KAAK,CAACliC,QAAQ,IAAIkiC,KAAK,CAACprD,KAAK,GAAGrhB,OAAO,CAACysE,KAAK,CAAC,GAAG1sE,MAAM,CAACkB,CAAC,CAAC;IAAA,CAC5D,CAAC;EAAA,CACL,CAAC,GACD+U,IAAI,CAACy2D,KAAK,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS7+D,MAAMA,CAAC6+D,KAAK,EAAEc,GAAG,EAAE;EACjC,IAAIA,GAAG,EAAE;IACPd,KAAK,CAACc,GAAG,GAAGA,GAAG;EACjB;EACA,OAAOd,KAAK,CAACc,GAAG,IAAI7/D,iBAAY,IAAIG,wBAAmB,GACnD4+D,KAAK,CACF7+D,MAAM,CAAC,CAAC,CACRwqC,IAAI,CAAC;IAAA,OAAMtqC,iBAAiB,CAAC2+D,KAAK,CAAC;EAAA,EAAC,CACpCzyB,KAAK,CAAC,UAAC/4C,CAAC,EAAK;IACZ,IAAIwrE,KAAK,CAACliC,QAAQ,IAAIkiC,KAAK,CAACprD,KAAK,EAAE;MACjC,OAAOorD,KAAK;IACd;IACA,MAAMxrE,CAAC;EACT,CAAC,CAAC,GACJ0sE,cAAc,CAAClB,KAAK,CAAC;AAC3B;AAAC,IAAAhzE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcoyE,YAAY;;;;;;;;;;ACjV3B,IAAAD,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AAAmD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KALnD;AACA;AACA;AAKA;AACA;AACA;AACA;AAHA,IAIMisE,cAAc;EAClB,SAAAA,eAAA,EAAc;IAAA3yE,eAAA,OAAA2yE,cAAA;IACZ;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;;IAEhB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,IAAI;EAC3B;;EAEA;AACF;AACA;EAFE,OAAA7yE,YAAA,CAAAyyE,cAAA;IAAAxyE,GAAA;IAAAC,KAAA,EAGA,SAAA4E,KAAKA,CAAA,EAAG;MACN,IAAI,CAAC4tE,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;MACvB,IAAI,CAACC,UAAU,GAAG,CAAC;IACrB;;IAEA;AACF;AACA;EAFE;IAAA3yE,GAAA;IAAAC,KAAA,EAGA,SAAA4yE,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACF,UAAU,GAAG,IAAI,CAACC,aAAa;IAC7C;;IAEA;AACF;AACA;EAFE;IAAA5yE,GAAA;IAAAC,KAAA,EAGA,SAAA6yE,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACD,cAAc,CAAC,CAAC,EAAE;QACzB,IAAItxE,CAAC,GAAG,CAAC;QACT,KAAK,IAAMvB,GAAG,IAAI,IAAI,CAACyyE,MAAM,EAAE;UAC7B,IAAMM,SAAS,GAAG,IAAI,CAACN,MAAM,CAACzyE,GAAG,CAAC;UAClC,IAAI,CAACuB,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAACwxE,SAAS,CAAClpE,WAAW,CAAC,CAAC,EAAE;YAC/C,OAAO,IAAI,CAAC4oE,MAAM,CAACzyE,GAAG,CAAC;YACvB,OAAO,IAAI,CAAC0yE,aAAa,CAAC1yE,GAAG,CAAC;YAC9B,EAAE,IAAI,CAAC2yE,UAAU;UACnB;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3yE,GAAA;IAAAC,KAAA,EAMA,SAAAyM,GAAGA,CAACylE,GAAG,EAAEa,WAAW,EAAEvP,KAAK,EAAE;MAC3B,IAAMzjE,GAAG,GAAGizE,WAAW,CAACd,GAAG,EAAEa,WAAW,EAAEvP,KAAK,CAAC;MAChD,OAAOzjE,GAAG,IAAI,IAAI,CAACyyE,MAAM,GAAG,IAAI,CAACA,MAAM,CAACzyE,GAAG,CAAC,GAAG,IAAI;IACrD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAAizE,UAAUA,CAACf,GAAG,EAAEa,WAAW,EAAEvP,KAAK,EAAE;MAClC,IAAMzjE,GAAG,GAAGizE,WAAW,CAACd,GAAG,EAAEa,WAAW,EAAEvP,KAAK,CAAC;MAChD,OAAOzjE,GAAG,IAAI,IAAI,CAAC0yE,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC1yE,GAAG,CAAC,GAAG,IAAI;IACnE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAA,GAAA;IAAAC,KAAA,EAOA,SAAAsN,GAAGA,CAAC4kE,GAAG,EAAEa,WAAW,EAAEvP,KAAK,EAAEsP,SAAS,EAAEI,OAAO,EAAE;MAAA,IAAA9qE,KAAA;MAC/C,IAAMrI,GAAG,GAAGizE,WAAW,CAACd,GAAG,EAAEa,WAAW,EAAEvP,KAAK,CAAC;MAChD,IAAM7d,MAAM,GAAG5lD,GAAG,IAAI,IAAI,CAACyyE,MAAM;MACjC,IAAI,CAACA,MAAM,CAACzyE,GAAG,CAAC,GAAG+yE,SAAS;MAC5B,IAAII,OAAO,EAAE;QACX,IAAIJ,SAAS,CAACK,aAAa,CAAC,CAAC,KAAKrC,mBAAU,CAACt6D,IAAI,EAAE;UACjDs8D,SAAS,CAACn4D,IAAI,CAAC,CAAC;QAClB;QACA,IAAIm4D,SAAS,CAACK,aAAa,CAAC,CAAC,KAAKrC,mBAAU,CAACr6D,OAAO,EAAE;UACpDq8D,SAAS,CAACM,KAAK,CAAC,CAAC,CAACr2B,IAAI,CAAC,YAAM;YAC3B30C,KAAI,CAACqqE,aAAa,CAAC1yE,GAAG,CAAC,GAAG,IAAA44C,6BAAwB,EAAC,CAAC,CAAC06B,aAAa,CAChEP,SAAS,CAAC7B,QAAQ,CAAC,CAAC,CAAC,EACrB,QACF,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,IAAI,CAACwB,aAAa,CAAC1yE,GAAG,CAAC,GAAG,IAAA44C,6BAAwB,EAAC,CAAC,CAAC06B,aAAa,CAChEP,SAAS,CAAC7B,QAAQ,CAAC,CAAC,CAAC,EACrB,QACF,CAAC;QACH;MACF;MACA,IAAI,CAACtrB,MAAM,EAAE;QACX,EAAE,IAAI,CAAC+sB,UAAU;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3yE,GAAA;IAAAC,KAAA,EAOA,SAAAszE,OAAOA,CAACC,YAAY,EAAE;MACpB,IAAI,CAACZ,aAAa,GAAGY,YAAY;MACjC,IAAI,CAACV,MAAM,CAAC,CAAC;IACf;EAAC;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,WAAWA,CAACd,GAAG,EAAEa,WAAW,EAAEvP,KAAK,EAAE;EACnD,IAAMgQ,WAAW,GAAGhQ,KAAK,GAAG,IAAAsC,cAAO,EAACtC,KAAK,CAAC,GAAG,MAAM;EACnD,OAAOuP,WAAW,GAAG,GAAG,GAAGb,GAAG,GAAG,GAAG,GAAGsB,WAAW;AACpD;AAAC,IAAAp1E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEci0E,cAAc;AAE7B;AACA;AACA;AACA;AACA;AACO,IAAMkB,MAAM,GAAAp1E,OAAA,CAAAo1E,MAAA,GAAG,IAAIlB,cAAc,CAAC,CAAC;;;;;;;;;AC1J1C,IAAAmB,MAAA,GAAArwE,OAAA;AACA,IAAAotE,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAiH,OAAA,GAAA9E,sBAAA,CAAAnC,OAAA;AACA,IAAAswE,eAAA,GAAAtwE,OAAA;AAA6D,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAV7D;AACA;AACA;AAUA;AACA;AACA;AACA,IAAIguE,kBAAkB,GAAG,IAAI;AAAC,IAExBC,SAAS,0BAAAppE,YAAA;EACb;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAopE,UAAYzC,KAAK,EAAEc,GAAG,EAAEa,WAAW,EAAEe,UAAU,EAAEtQ,KAAK,EAAE;IAAA,IAAAp7D,KAAA;IAAAxI,eAAA,OAAAi0E,SAAA;IACtDzrE,KAAA,GAAAnB,UAAA,OAAA4sE,SAAA;;IAEA;AACJ;AACA;AACA;IACIzrE,KAAA,CAAK2rE,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACI3rE,KAAA,CAAK2oE,MAAM,GAAGK,KAAK;;IAEnB;AACJ;AACA;AACA;IACIhpE,KAAA,CAAK4rE,YAAY,GAAGjB,WAAW;;IAE/B;AACJ;AACA;AACA;IACI3qE,KAAA,CAAK6rE,OAAO,GAAG,CAAC,CAAC;;IAEjB;AACJ;AACA;AACA;IACI7rE,KAAA,CAAK8rE,MAAM,GAAG1Q,KAAK;;IAEnB;AACJ;AACA;AACA;IACIp7D,KAAA,CAAK+rE,WAAW,GAAGL,UAAU,KAAKnqE,SAAS,GAAGmnE,mBAAU,CAACt6D,IAAI,GAAGs9D,UAAU;;IAE1E;AACJ;AACA;AACA;IACI1rE,KAAA,CAAKgsE,KAAK,GACRhD,KAAK,IAAIA,KAAK,CAACprD,KAAK,IAAIorD,KAAK,CAACnrD,MAAM,GAAG,CAACmrD,KAAK,CAACprD,KAAK,EAAEorD,KAAK,CAACnrD,MAAM,CAAC,GAAG,IAAI;;IAE3E;AACJ;AACA;AACA;IACI7d,KAAA,CAAKisE,IAAI,GAAGnC,GAAG;;IAEf;AACJ;AACA;IACI9pE,KAAA,CAAKksE,QAAQ;;IAEb;AACJ;AACA;AACA;IACIlsE,KAAA,CAAKmsE,MAAM,GAAG,IAAI;IAAC,OAAAnsE,KAAA;EACrB;;EAEA;AACF;AACA;EAFEL,SAAA,CAAA8rE,SAAA,EAAAppE,YAAA;EAAA,OAAA3K,YAAA,CAAA+zE,SAAA;IAAA9zE,GAAA;IAAAC,KAAA,EAGA,SAAAw0E,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACzD,MAAM,GAAG,IAAIz+D,KAAK,CAAC,CAAC;MACzB,IAAI,IAAI,CAAC0hE,YAAY,KAAK,IAAI,EAAE;QAC9B,IAAI,CAACjD,MAAM,CAACgC,WAAW,GAAG,IAAI,CAACiB,YAAY;MAC7C;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAj0E,GAAA;IAAAC,KAAA,EAIA,SAAAy0E,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACH,QAAQ,KAAK3qE,SAAS,IAAI,IAAI,CAACwqE,WAAW,KAAKrD,mBAAU,CAACp6D,MAAM,EAAE;QACzE,IAAI,CAACk9D,kBAAkB,EAAE;UACvBA,kBAAkB,GAAG,IAAA17B,0BAAqB,EAAC,CAAC,EAAE,CAAC,EAAEvuC,SAAS,EAAE;YAC1D+qE,kBAAkB,EAAE;UACtB,CAAC,CAAC;QACJ;QACAd,kBAAkB,CAACe,SAAS,CAAC,IAAI,CAAC5D,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI;UACF6C,kBAAkB,CAACgB,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC3C,IAAI,CAACN,QAAQ,GAAG,KAAK;QACvB,CAAC,CAAC,OAAAzhE,OAAA,EAAM;UACN+gE,kBAAkB,GAAG,IAAI;UACzB,IAAI,CAACU,QAAQ,GAAG,IAAI;QACtB;MACF;MACA,OAAO,IAAI,CAACA,QAAQ,KAAK,IAAI;IAC/B;;IAEA;AACF;AACA;EAFE;IAAAv0E,GAAA;IAAAC,KAAA,EAGA,SAAA60E,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC9rE,aAAa,CAACkC,kBAAS,CAACvM,MAAM,CAAC;IACtC;;IAEA;AACF;AACA;EAFE;IAAAqB,GAAA;IAAAC,KAAA,EAGA,SAAA80E,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACX,WAAW,GAAGrD,mBAAU,CAACnyE,KAAK;MACnC,IAAI,CAACk2E,oBAAoB,CAAC,CAAC;IAC7B;;IAEA;AACF;AACA;EAFE;IAAA90E,GAAA;IAAAC,KAAA,EAGA,SAAA+0E,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACZ,WAAW,GAAGrD,mBAAU,CAACp6D,MAAM;MACpC,IAAI,CAAC09D,KAAK,GAAG,CAAC,IAAI,CAACrD,MAAM,CAAC/qD,KAAK,EAAE,IAAI,CAAC+qD,MAAM,CAAC9qD,MAAM,CAAC;MACpD,IAAI,CAAC4uD,oBAAoB,CAAC,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;EAHE;IAAA90E,GAAA;IAAAC,KAAA,EAIA,SAAAixE,QAAQA,CAACN,UAAU,EAAE;MACnB,IAAI,CAAC,IAAI,CAACI,MAAM,EAAE;QAChB,IAAI,CAACyD,gBAAgB,CAAC,CAAC;MACzB;MACA,IAAI,CAACQ,aAAa,CAACrE,UAAU,CAAC;MAC9B,OAAO,IAAI,CAACsD,OAAO,CAACtD,UAAU,CAAC,GAAG,IAAI,CAACsD,OAAO,CAACtD,UAAU,CAAC,GAAG,IAAI,CAACI,MAAM;IAC1E;;IAEA;AACF;AACA;AACA;EAHE;IAAAhxE,GAAA;IAAAC,KAAA,EAIA,SAAAkxE,aAAaA,CAACP,UAAU,EAAE;MACxB,IAAI,CAACqE,aAAa,CAACrE,UAAU,CAAC;MAC9B,OAAO,IAAI,CAACsD,OAAO,CAACtD,UAAU,CAAC,GAAGA,UAAU,GAAG,CAAC;IAClD;;IAEA;AACF;AACA;EAFE;IAAA5wE,GAAA;IAAAC,KAAA,EAGA,SAAAmzE,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACgB,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAAp0E,GAAA;IAAAC,KAAA,EAGA,SAAAi1E,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAAClE,MAAM,EAAE;QAChB,IAAI,CAACyD,gBAAgB,CAAC,CAAC;MACzB;MACA,IAAI,CAAC,IAAI,CAACT,kBAAkB,EAAE;QAC5B,IAAI,IAAI,CAACU,UAAU,CAAC,CAAC,EAAE;UACrB,IAAMzuD,KAAK,GAAG,IAAI,CAACouD,KAAK,CAAC,CAAC,CAAC;UAC3B,IAAMnuD,MAAM,GAAG,IAAI,CAACmuD,KAAK,CAAC,CAAC,CAAC;UAC5B,IAAMv7B,OAAO,GAAG,IAAAX,0BAAqB,EAAClyB,KAAK,EAAEC,MAAM,CAAC;UACpD4yB,OAAO,CAACq8B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAElvD,KAAK,EAAEC,MAAM,CAAC;UACrC,IAAI,CAAC8tD,kBAAkB,GAAGl7B,OAAO,CAACR,MAAM;QAC1C,CAAC,MAAM;UACL,IAAI,CAAC07B,kBAAkB,GAAG,IAAI,CAAChD,MAAM;QACvC;MACF;MACA,OAAO,IAAI,CAACgD,kBAAkB;IAChC;;IAEA;AACF;AACA;AACA;EAHE;IAAAh0E,GAAA;IAAAC,KAAA,EAIA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACmvD,KAAK;IACnB;;IAEA;AACF;AACA;EAFE;IAAAr0E,GAAA;IAAAC,KAAA,EAGA,SAAAm1E,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACd,IAAI;IAClB;;IAEA;AACF;AACA;EAFE;IAAAt0E,GAAA;IAAAC,KAAA,EAGA,SAAA2a,IAAIA,CAAA,EAAG;MAAA,IAAArO,MAAA;MACL,IAAI,IAAI,CAAC6nE,WAAW,KAAKrD,mBAAU,CAACt6D,IAAI,EAAE;QACxC;MACF;MACA,IAAI,CAAC,IAAI,CAACu6D,MAAM,EAAE;QAChB,IAAI,CAACyD,gBAAgB,CAAC,CAAC;MACzB;MAEA,IAAI,CAACL,WAAW,GAAGrD,mBAAU,CAACr6D,OAAO;MACrC,IAAI;QACF,IAAI,IAAI,CAAC49D,IAAI,KAAK1qE,SAAS,EAAE;UAC3B,+BAAiC,IAAI,CAAConE,MAAM,CAAEmB,GAAG,GAAG,IAAI,CAACmC,IAAI;QAC/D;MACF,CAAC,CAAC,OAAAe,QAAA,EAAM;QACN,IAAI,CAACN,iBAAiB,CAAC,CAAC;MAC1B;MACA,IAAI,IAAI,CAAC/D,MAAM,YAAYM,gBAAgB,EAAE;QAC3C,IAAAiB,qBAAc,EAAC,IAAI,CAACvB,MAAM,EAAE,IAAI,CAACsD,IAAI,CAAC,CACnCt3B,IAAI,CAAC,UAACq0B,KAAK,EAAK;UACf9kE,MAAI,CAACykE,MAAM,GAAGK,KAAK;UACnB9kE,MAAI,CAACyoE,gBAAgB,CAAC,CAAC;QACzB,CAAC,CAAC,CACDp2B,KAAK,CAAC,IAAI,CAACm2B,iBAAiB,CAACjtE,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7C;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA9H,GAAA;IAAAC,KAAA,EAIA,SAAAg1E,aAAaA,CAACrE,UAAU,EAAE;MACxB,IACE,CAAC,IAAI,CAACuD,MAAM,IACZ,IAAI,CAACD,OAAO,CAACtD,UAAU,CAAC,IACxB,IAAI,CAACwD,WAAW,KAAKrD,mBAAU,CAACp6D,MAAM,EACtC;QACA;MACF;MAEA,IAAM06D,KAAK,GAAG,IAAI,CAACL,MAAM;MACzB,IAAMsE,GAAG,GAAG,IAAAn9B,0BAAqB,EAC/BviC,IAAI,CAACqI,IAAI,CAACozD,KAAK,CAACprD,KAAK,GAAG2qD,UAAU,CAAC,EACnCh7D,IAAI,CAACqI,IAAI,CAACozD,KAAK,CAACnrD,MAAM,GAAG0qD,UAAU,CACrC,CAAC;MACD,IAAMt4B,MAAM,GAAGg9B,GAAG,CAACh9B,MAAM;MAEzBg9B,GAAG,CAAC3rD,KAAK,CAACinD,UAAU,EAAEA,UAAU,CAAC;MACjC0E,GAAG,CAACV,SAAS,CAACvD,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAE1BiE,GAAG,CAACC,wBAAwB,GAAG,UAAU;MACzCD,GAAG,CAACE,SAAS,GAAG,IAAAlQ,eAAQ,EAAC,IAAI,CAAC6O,MAAM,CAAC;MACrCmB,GAAG,CAACH,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE78B,MAAM,CAACryB,KAAK,GAAG2qD,UAAU,EAAEt4B,MAAM,CAACpyB,MAAM,GAAG0qD,UAAU,CAAC;MAEzE0E,GAAG,CAACC,wBAAwB,GAAG,gBAAgB;MAC/CD,GAAG,CAACV,SAAS,CAACvD,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAE1B,IAAI,CAAC6C,OAAO,CAACtD,UAAU,CAAC,GAAGt4B,MAAM;IACnC;;IAEA;AACF;AACA;EAFE;IAAAt4C,GAAA;IAAAC,KAAA,EAGA,SAAAozE,KAAKA,CAAA,EAAG;MAAA,IAAA9b,MAAA;MACN,IAAI,CAAC,IAAI,CAACid,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAG,IAAI9vE,OAAO,CAAC,UAACE,OAAO,EAAK;UACrC,IACE2yD,MAAI,CAAC6c,WAAW,KAAKrD,mBAAU,CAACp6D,MAAM,IACtC4gD,MAAI,CAAC6c,WAAW,KAAKrD,mBAAU,CAACnyE,KAAK,EACrC;YACAgG,OAAO,CAAC,CAAC;UACX,CAAC,MAAM;YACL,IAAM6wE,SAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;cACrB,IACEle,MAAI,CAAC6c,WAAW,KAAKrD,mBAAU,CAACp6D,MAAM,IACtC4gD,MAAI,CAAC6c,WAAW,KAAKrD,mBAAU,CAACnyE,KAAK,EACrC;gBACA24D,MAAI,CAAC7tD,mBAAmB,CAACwB,kBAAS,CAACvM,MAAM,EAAE82E,SAAQ,CAAC;gBACpD7wE,OAAO,CAAC,CAAC;cACX;YACF,CAAC;YACD2yD,MAAI,CAAC7uD,gBAAgB,CAACwC,kBAAS,CAACvM,MAAM,EAAE82E,SAAQ,CAAC;UACnD;QACF,CAAC,CAAC;MACJ;MACA,OAAO,IAAI,CAACjB,MAAM;IACpB;EAAC;AAAA,EAzRqBjpE,eAAW;AA4RnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmB,GAAGA,CAAC2kE,KAAK,EAAEqE,QAAQ,EAAE1C,WAAW,EAAEe,UAAU,EAAEtQ,KAAK,EAAE0P,OAAO,EAAE;EAC5E,IAAIJ,SAAS,GACX2C,QAAQ,KAAK9rE,SAAS,GAClBA,SAAS,GACT+rE,sBAAc,CAACjpE,GAAG,CAACgpE,QAAQ,EAAE1C,WAAW,EAAEvP,KAAK,CAAC;EACtD,IAAI,CAACsP,SAAS,EAAE;IACdA,SAAS,GAAG,IAAIe,SAAS,CACvBzC,KAAK,EACLA,KAAK,IAAI,KAAK,IAAIA,KAAK,GAAGA,KAAK,CAACc,GAAG,IAAIvoE,SAAS,GAAG8rE,QAAQ,EAC3D1C,WAAW,EACXe,UAAU,EACVtQ,KACF,CAAC;IACDkS,sBAAc,CAACpoE,GAAG,CAACmoE,QAAQ,EAAE1C,WAAW,EAAEvP,KAAK,EAAEsP,SAAS,EAAEI,OAAO,CAAC;EACtE;EACA,IACEA,OAAO,IACPJ,SAAS,IACT,CAAC4C,sBAAc,CAACzC,UAAU,CAACwC,QAAQ,EAAE1C,WAAW,EAAEvP,KAAK,CAAC,EACxD;IACAkS,sBAAc,CAACpoE,GAAG,CAACmoE,QAAQ,EAAE1C,WAAW,EAAEvP,KAAK,EAAEsP,SAAS,EAAEI,OAAO,CAAC;EACtE;EACA,OAAOJ,SAAS;AAClB;AAAC,IAAA10E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcu1E,SAAS;;;;;;;;AC5UxB,IAAApD,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAsyE,UAAA,GAAAtyE,OAAA;AACA,IAAAswE,eAAA,GAAAtwE,OAAA;AAA8D,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA,KAP9D;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS6vE,WAAWA,CAACpS,KAAK,EAAE;EACjC,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAIzhE,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,EAAE;IACxB,OAAO,IAAArjD,eAAQ,EAACqjD,KAAK,CAAC;EACxB;EACA,IAAI19D,OAAA,CAAO09D,KAAK,MAAK,QAAQ,IAAI,KAAK,IAAIA,KAAK,EAAE;IAC/C,OAAOqS,eAAe,CAACrS,KAAK,CAAC;EAC/B;EACA,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASqS,eAAeA,CAAC3C,OAAO,EAAE;EAChC,IAAI,CAACA,OAAO,CAAC/wD,MAAM,IAAI,CAAC+wD,OAAO,CAACz0D,IAAI,EAAE;IACpC,OAAOq3D,sBAAS,CAAC7C,UAAU,CAACC,OAAO,CAAChB,GAAG,EAAE,WAAW,EAAEgB,OAAO,CAAC1P,KAAK,CAAC;EACtE;EAEA,IAAMiS,QAAQ,GAAGvC,OAAO,CAAChB,GAAG,GAAG,GAAG,GAAGgB,OAAO,CAAC/wD,MAAM;EAEnD,IAAM4zD,aAAa,GAAGD,sBAAS,CAAC7C,UAAU,CACxCwC,QAAQ,EACR9rE,SAAS,EACTupE,OAAO,CAAC1P,KACV,CAAC;EACD,IAAIuS,aAAa,EAAE;IACjB,OAAOA,aAAa;EACtB;EAEA,IAAMjD,SAAS,GAAGgD,sBAAS,CAACrpE,GAAG,CAACymE,OAAO,CAAChB,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC;EAC/D,IAAIY,SAAS,CAACK,aAAa,CAAC,CAAC,KAAKrC,mBAAU,CAACp6D,MAAM,EAAE;IACnD,OAAO,IAAI;EACb;EACA,IAAMs/D,oBAAoB,GAAG,IAAA99B,0BAAqB,EAChDg7B,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAAC,EACfy0D,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAChB,CAAC;EACDu3D,oBAAoB,CAACrB,SAAS,CAC5B7B,SAAS,CAAC7B,QAAQ,CAAC,CAAC,CAAC,EACrBiC,OAAO,CAAC/wD,MAAM,CAAC,CAAC,CAAC,EACjB+wD,OAAO,CAAC/wD,MAAM,CAAC,CAAC,CAAC,EACjB+wD,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAAC,EACfy0D,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAAC,EACf,CAAC,EACD,CAAC,EACDy0D,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAAC,EACfy0D,OAAO,CAACz0D,IAAI,CAAC,CAAC,CAChB,CAAC;EACD,IAAAw3D,cAAY,EACVD,oBAAoB,CAAC39B,MAAM,EAC3Bo9B,QAAQ,EACR9rE,SAAS,EACTmnE,mBAAU,CAACp6D,MAAM,EACjBw8D,OAAO,CAAC1P,KAAK,EACb,IACF,CAAC;EACD,OAAOsS,sBAAS,CAAC7C,UAAU,CAACwC,QAAQ,EAAE9rE,SAAS,EAAEupE,OAAO,CAAC1P,KAAK,CAAC;AACjE;;;;;;;;;;;;;;;;AChGA,IAAA51D,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAq4C,IAAA,GAAAr4C,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AAAgC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAia,eAAAxZ,CAAA,EAAAT,CAAA,WAAAka,eAAA,CAAAzZ,CAAA,KAAA0Z,qBAAA,CAAA1Z,CAAA,EAAAT,CAAA,KAAAoa,2BAAA,CAAA3Z,CAAA,EAAAT,CAAA,KAAAqa,gBAAA;AAAA,SAAAA,iBAAA,cAAA9Z,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAA0e,sBAAA1Z,CAAA,EAAA4W,CAAA,QAAA3W,CAAA,WAAAD,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAC,CAAA,QAAAV,CAAA,EAAAvE,CAAA,EAAAC,CAAA,EAAA+X,CAAA,EAAAvY,CAAA,OAAA+N,CAAA,OAAA9I,CAAA,iBAAAzE,CAAA,IAAAgF,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,GAAAia,IAAA,QAAArD,CAAA,QAAAvW,MAAA,CAAAJ,CAAA,MAAAA,CAAA,UAAAuI,CAAA,uBAAAA,CAAA,IAAAjJ,CAAA,GAAAtE,CAAA,CAAA2C,IAAA,CAAAqC,CAAA,GAAAia,IAAA,MAAAzf,CAAA,CAAAgI,IAAA,CAAAlD,CAAA,CAAA5F,KAAA,GAAAc,CAAA,CAAAF,MAAA,KAAAqc,CAAA,GAAApO,CAAA,iBAAAxI,CAAA,IAAAN,CAAA,OAAA1E,CAAA,GAAAgF,CAAA,yBAAAwI,CAAA,YAAAvI,CAAA,CAAAka,MAAA,KAAAnH,CAAA,GAAA/S,CAAA,CAAAka,MAAA,IAAA9Z,MAAA,CAAA2S,CAAA,MAAAA,CAAA,2BAAAtT,CAAA,QAAA1E,CAAA,aAAAP,CAAA;AAAA,SAAAgf,gBAAAzZ,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAAA,CAAA,IAPhC;AACA;AACA;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAM6vE,WAAW,GAAA73E,OAAA,CAAA63E,WAAA,GAAG,iBAAiB;;AAE5C;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAA93E,OAAA,CAAA83E,gBAAA,GAAG,MAAM;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,cAAc,GAAA/3E,OAAA,CAAA+3E,cAAA,GAAG,OAAO;;AAErC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAh4E,OAAA,CAAAg4E,eAAA,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACO,IAAMC,qBAAqB,GAAAj4E,OAAA,CAAAi4E,qBAAA,GAAG,CAAC;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAl4E,OAAA,CAAAk4E,eAAA,GAAG,OAAO;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAAn4E,OAAA,CAAAm4E,iBAAA,GAAG,EAAE;;AAEnC;AACA;AACA;AACA;AACO,IAAMC,kBAAkB,GAAAp4E,OAAA,CAAAo4E,kBAAA,GAAG,MAAM;;AAExC;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAAr4E,OAAA,CAAAq4E,gBAAA,GAAG,QAAQ;;AAExC;AACA;AACA;AACA;AACO,IAAMC,mBAAmB,GAAAt4E,OAAA,CAAAs4E,mBAAA,GAAG,QAAQ;;AAE3C;AACA;AACA;AACA;AACO,IAAMC,cAAc,GAAAv4E,OAAA,CAAAu4E,cAAA,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAAx4E,OAAA,CAAAw4E,gBAAA,GAAG,CAAC;;AAEjC;AACA;AACA;AACO,IAAMC,YAAY,GAAAz4E,OAAA,CAAAy4E,YAAA,GAAG,IAAI3qE,eAAU,CAAC,CAAC;;AAE5C;AACA;AACA;AACA,IAAI4qE,cAAc,GAAG,IAAI;;AAEzB;AACA;AACA;AACA,IAAIC,WAAW;;AAEf;AACA;AACA;AACO,IAAMC,WAAW,GAAA54E,OAAA,CAAA44E,WAAA,GAAG,CAAC,CAAC;;AAE7B;AACA;AACA;AACA;AACO,IAAMC,YAAY,GAAA74E,OAAA,CAAA64E,YAAA,GAAI,YAAY;EACvC,IAAMC,OAAO,GAAG,GAAG;EACnB,IAAM14D,IAAI,GAAG,OAAO;EACpB,IAAM24D,cAAc,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;EAC7C,IAAMjsE,GAAG,GAAGisE,cAAc,CAACx2E,MAAM;EACjC,IAAMy2E,IAAI,GAAG,+BAA+B;EAC5C,IAAIC,QAAQ,EAAEC,cAAc;;EAE5B;AACF;AACA;AACA;AACA;AACA;EACE,SAASC,WAAWA,CAACC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAE;IACtD,IAAIC,SAAS,GAAG,IAAI;IACpB,KAAK,IAAIt2E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE,EAAE7J,CAAC,EAAE;MAC5B,IAAMu2E,aAAa,GAAGT,cAAc,CAAC91E,CAAC,CAAC;MACvCi2E,cAAc,GAAGO,gBAAgB,CAC/BL,SAAS,GAAG,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGj5D,IAAI,GAAGo5D,aAAa,EACzDR,IACF,CAAC;MACD,IAAIM,UAAU,IAAIE,aAAa,EAAE;QAC/B,IAAM7xD,KAAK,GAAG8xD,gBAAgB,CAC5BL,SAAS,GACP,GAAG,GACHC,UAAU,GACV,GAAG,GACHj5D,IAAI,GACJk5D,UAAU,GACV,GAAG,GACHE,aAAa,EACfR,IACF,CAAC;QACD;QACA;QACAO,SAAS,GAAGA,SAAS,IAAI5xD,KAAK,IAAIuxD,cAAc;MAClD;IACF;IACA,IAAIK,SAAS,EAAE;MACb,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEA,SAASG,KAAKA,CAAA,EAAG;IACf,IAAIx3D,IAAI,GAAG,IAAI;IACf,IAAMy3D,KAAK,GAAGlB,YAAY,CAACnqE,OAAO,CAAC,CAAC;IACpC,KAAK,IAAIrL,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG0uE,KAAK,CAACp3E,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAC9C,IAAM22E,IAAI,GAAGD,KAAK,CAAC12E,CAAC,CAAC;MACrB,IAAIw1E,YAAY,CAACrqE,GAAG,CAACwrE,IAAI,CAAC,GAAGd,OAAO,EAAE;QACpC,IAAAe,WAAA,GAAgCD,IAAI,CAAC3wD,KAAK,CAAC,IAAI,CAAC;UAAA6wD,YAAA,GAAAt4D,cAAA,CAAAq4D,WAAA;UAAzCtgC,KAAK,GAAAugC,YAAA;UAAErgC,MAAM,GAAAqgC,YAAA;UAAElgC,MAAM,GAAAkgC,YAAA;QAC5B,IAAIX,WAAW,CAAC5/B,KAAK,EAAEE,MAAM,EAAEG,MAAM,CAAC,EAAE;UACtC,IAAArzC,UAAK,EAACqyE,WAAW,CAAC;UAClB;UACAF,cAAc,GAAG,IAAI;UACrBC,WAAW,GAAGrtE,SAAS;UACvBmtE,YAAY,CAACxpE,GAAG,CAAC2qE,IAAI,EAAEd,OAAO,CAAC;QACjC,CAAC,MAAM;UACLL,YAAY,CAACxpE,GAAG,CAAC2qE,IAAI,EAAEnB,YAAY,CAACrqE,GAAG,CAACwrE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;UACxD13D,IAAI,GAAG,KAAK;QACd;MACF;IACF;IACA,IAAIA,IAAI,EAAE;MACR63D,aAAa,CAACd,QAAQ,CAAC;MACvBA,QAAQ,GAAG3tE,SAAS;IACtB;EACF;EAEA,OAAO,UAAUguC,QAAQ,EAAE;IACzB,IAAMsgC,IAAI,GAAG,IAAAvgC,sBAAiB,EAACC,QAAQ,CAAC;IACxC,IAAI,CAACsgC,IAAI,EAAE;MACT;IACF;IACA,IAAMjgC,QAAQ,GAAGigC,IAAI,CAACjgC,QAAQ;IAC9B,KAAK,IAAI12C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG0uC,QAAQ,CAACp3C,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MACjD,IAAM22C,MAAM,GAAGD,QAAQ,CAAC12C,CAAC,CAAC;MAC1B,IAAMvB,GAAG,GAAGk4E,IAAI,CAACrgC,KAAK,GAAG,IAAI,GAAGqgC,IAAI,CAACngC,MAAM,GAAG,IAAI,GAAGG,MAAM;MAC3D,IAAI6+B,YAAY,CAACrqE,GAAG,CAAC1M,GAAG,CAAC,KAAK4J,SAAS,EAAE;QACvCmtE,YAAY,CAACxpE,GAAG,CAACvN,GAAG,EAAEo3E,OAAO,EAAE,IAAI,CAAC;QACpC,IAAI,CAACK,WAAW,CAACS,IAAI,CAACrgC,KAAK,EAAEqgC,IAAI,CAACngC,MAAM,EAAEG,MAAM,CAAC,EAAE;UACjD6+B,YAAY,CAACxpE,GAAG,CAACvN,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;UAC9B,IAAIu3E,QAAQ,KAAK3tE,SAAS,EAAE;YAC1B2tE,QAAQ,GAAGe,WAAW,CAACN,KAAK,EAAE,EAAE,CAAC;UACnC;QACF;MACF;IACF;EACF,CAAC;AACH,CAAC,CAAE,CAAC;;AAEJ;AACA;AACA;AACA;AACO,IAAMO,iBAAiB,GAAAj6E,OAAA,CAAAi6E,iBAAA,GAAI,YAAY;EAC5C;AACF;AACA;EACE,IAAIC,cAAc;EAClB,OAAO,UAAU5gC,QAAQ,EAAE;IACzB,IAAI1xB,MAAM,GAAGgxD,WAAW,CAACt/B,QAAQ,CAAC;IAClC,IAAI1xB,MAAM,IAAItc,SAAS,EAAE;MACvB,IAAIsI,4BAAuB,EAAE;QAC3B,IAAMgmE,IAAI,GAAG,IAAAvgC,sBAAiB,EAACC,QAAQ,CAAC;QACxC,IAAM6gC,OAAO,GAAGC,WAAW,CAAC9gC,QAAQ,EAAE,IAAI,CAAC;QAC3C,IAAME,UAAU,GAAGhZ,KAAK,CAAC73B,MAAM,CAACixE,IAAI,CAACpgC,UAAU,CAAC,CAAC,GAC7C,GAAG,GACH7wC,MAAM,CAACixE,IAAI,CAACpgC,UAAU,CAAC;QAC3B5xB,MAAM,GACJ4xB,UAAU,IACT2gC,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,wBAAwB,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,CAACJ,cAAc,EAAE;UACnBA,cAAc,GAAGhgC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC9C+/B,cAAc,CAACp2B,SAAS,GAAG,GAAG;UAC9Bo2B,cAAc,CAAC3gC,KAAK,CAACghC,SAAS,GAAG,GAAG;UACpCL,cAAc,CAAC3gC,KAAK,CAACihC,SAAS,GAAG,MAAM;UACvCN,cAAc,CAAC3gC,KAAK,CAAC3xB,MAAM,GAAG,MAAM;UACpCsyD,cAAc,CAAC3gC,KAAK,CAAChL,OAAO,GAAG,GAAG;UAClC2rC,cAAc,CAAC3gC,KAAK,CAACkhC,MAAM,GAAG,MAAM;UACpCP,cAAc,CAAC3gC,KAAK,CAAClD,QAAQ,GAAG,UAAU;UAC1C6jC,cAAc,CAAC3gC,KAAK,CAACoK,OAAO,GAAG,OAAO;UACtCu2B,cAAc,CAAC3gC,KAAK,CAACmU,IAAI,GAAG,UAAU;QACxC;QACAwsB,cAAc,CAAC3gC,KAAK,CAACqgC,IAAI,GAAGtgC,QAAQ;QACpCY,QAAQ,CAACwgC,IAAI,CAACx+B,WAAW,CAACg+B,cAAc,CAAC;QACzCtyD,MAAM,GAAGsyD,cAAc,CAACl/B,YAAY;QACpCd,QAAQ,CAACwgC,IAAI,CAACv+B,WAAW,CAAC+9B,cAAc,CAAC;MAC3C;MACAtB,WAAW,CAACt/B,QAAQ,CAAC,GAAG1xB,MAAM;IAChC;IACA,OAAOA,MAAM;EACf,CAAC;AACH,CAAC,CAAE,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA,SAASwyD,WAAWA,CAACR,IAAI,EAAEZ,IAAI,EAAE;EAC/B,IAAI,CAACN,cAAc,EAAE;IACnBA,cAAc,GAAG,IAAA7+B,0BAAqB,EAAC,CAAC,EAAE,CAAC,CAAC;EAC9C;EACA,IAAI+/B,IAAI,IAAIjB,WAAW,EAAE;IACvBD,cAAc,CAACkB,IAAI,GAAGA,IAAI;IAC1BjB,WAAW,GAAGD,cAAc,CAACkB,IAAI;EACnC;EACA,OAAOlB,cAAc,CAAC0B,WAAW,CAACpB,IAAI,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASS,gBAAgBA,CAACG,IAAI,EAAEZ,IAAI,EAAE;EAC3C,OAAOoB,WAAW,CAACR,IAAI,EAAEZ,IAAI,CAAC,CAACrxD,KAAK;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgzD,wBAAwBA,CAACf,IAAI,EAAEZ,IAAI,EAAElnD,KAAK,EAAE;EAC1D,IAAIknD,IAAI,IAAIlnD,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACknD,IAAI,CAAC;EACpB;EACA,IAAMrxD,KAAK,GAAGqxD,IAAI,CACf/vD,KAAK,CAAC,IAAI,CAAC,CACX2xD,MAAM,CAAC,UAAC7pE,IAAI,EAAE8pE,IAAI;IAAA,OAAKvjE,IAAI,CAACmG,GAAG,CAAC1M,IAAI,EAAE0oE,gBAAgB,CAACG,IAAI,EAAEiB,IAAI,CAAC,CAAC;EAAA,GAAE,CAAC,CAAC;EAC1E/oD,KAAK,CAACknD,IAAI,CAAC,GAAGrxD,KAAK;EACnB,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmzD,iBAAiBA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACnD,IAAMC,MAAM,GAAG,EAAE;EACjB,IAAMC,OAAO,GAAG,EAAE;EAClB,IAAMC,UAAU,GAAG,EAAE;EACrB,IAAIxzD,KAAK,GAAG,CAAC;EACb,IAAIyzD,SAAS,GAAG,CAAC;EACjB,IAAIxzD,MAAM,GAAG,CAAC;EACd,IAAI4xB,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIv2C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG+vE,MAAM,CAACz4E,MAAM,EAAEU,CAAC,IAAIgI,EAAE,EAAEhI,CAAC,IAAI,CAAC,EAAE;IACnD,IAAM+1E,IAAI,GAAGgC,MAAM,CAAC/3E,CAAC,CAAC;IACtB,IAAI+1E,IAAI,KAAK,IAAI,IAAI/1E,CAAC,KAAKgI,EAAE,EAAE;MAC7B0c,KAAK,GAAGrQ,IAAI,CAACmG,GAAG,CAACkK,KAAK,EAAEyzD,SAAS,CAAC;MAClCD,UAAU,CAAC1wE,IAAI,CAAC2wE,SAAS,CAAC;MAC1BA,SAAS,GAAG,CAAC;MACbxzD,MAAM,IAAI4xB,UAAU;MACpBA,UAAU,GAAG,CAAC;MACd;IACF;IACA,IAAMogC,IAAI,GAAGoB,MAAM,CAAC/3E,CAAC,GAAG,CAAC,CAAC,IAAI83E,SAAS,CAACnB,IAAI;IAC5C,IAAMyB,YAAY,GAAG5B,gBAAgB,CAACG,IAAI,EAAEZ,IAAI,CAAC;IACjDiC,MAAM,CAACxwE,IAAI,CAAC4wE,YAAY,CAAC;IACzBD,SAAS,IAAIC,YAAY;IACzB,IAAMC,aAAa,GAAGrB,iBAAiB,CAACL,IAAI,CAAC;IAC7CsB,OAAO,CAACzwE,IAAI,CAAC6wE,aAAa,CAAC;IAC3B9hC,UAAU,GAAGliC,IAAI,CAACmG,GAAG,CAAC+7B,UAAU,EAAE8hC,aAAa,CAAC;EAClD;EACA,OAAO;IAAC3zD,KAAK,EAALA,KAAK;IAAEC,MAAM,EAANA,MAAM;IAAEqzD,MAAM,EAANA,MAAM;IAAEC,OAAO,EAAPA,OAAO;IAAEC,UAAU,EAAVA;EAAU,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,cAAcA,CAAC/gC,OAAO,EAAEj1B,QAAQ,EAAEmqB,OAAO,EAAEC,OAAO,EAAE;EAClE,IAAIpqB,QAAQ,KAAK,CAAC,EAAE;IAClBi1B,OAAO,CAAC5c,SAAS,CAAC8R,OAAO,EAAEC,OAAO,CAAC;IACnC6K,OAAO,CAACvvB,MAAM,CAAC1F,QAAQ,CAAC;IACxBi1B,OAAO,CAAC5c,SAAS,CAAC,CAAC8R,OAAO,EAAE,CAACC,OAAO,CAAC;EACvC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6rC,gBAAgBA,CAC9BhhC,OAAO,EACPztB,SAAS,EACT8nC,OAAO,EACP4mB,YAAY,EACZC,OAAO,EACPC,OAAO,EACP5oC,CAAC,EACDC,CAAC,EACDr1B,CAAC,EACDC,CAAC,EACDyN,KAAK,EACL;EACAmvB,OAAO,CAACohC,IAAI,CAAC,CAAC;EAEd,IAAI/mB,OAAO,KAAK,CAAC,EAAE;IACjB,IAAIra,OAAO,CAACqhC,WAAW,KAAKvwE,SAAS,EAAE;MACrCkvC,OAAO,CAACqhC,WAAW,GAAG,UAACrhC,OAAO;QAAA,OAAMA,OAAO,CAACqhC,WAAW,IAAIhnB,OAAO;MAAA,CAAC;IACrE,CAAC,MAAM;MACLra,OAAO,CAACqhC,WAAW,IAAIhnB,OAAO;IAChC;EACF;EACA,IAAI9nC,SAAS,EAAE;IACbytB,OAAO,CAACztB,SAAS,CAAChnB,KAAK,CAACy0C,OAAO,EAAEztB,SAAS,CAAC;EAC7C;EAEA,IAAI,gBAAkB0uD,YAAY,CAAEK,mBAAmB,EAAE;IACvD;IACAthC,OAAO,CAAC5c,SAAS,CAACjgB,CAAC,EAAEC,CAAC,CAAC;IACvB48B,OAAO,CAACnvB,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACjC0wD,wBAAwB,CAAC,oBAAsBN,YAAY,EAAGjhC,OAAO,CAAC;EACxE,CAAC,MAAM,IAAInvB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACvC;IACAmvB,OAAO,CAAC5c,SAAS,CAACjgB,CAAC,EAAEC,CAAC,CAAC;IACvB48B,OAAO,CAACnvB,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACjCmvB,OAAO,CAAC87B,SAAS,CACf;IACEmF,YAAY,EAEdC,OAAO,EACPC,OAAO,EACP5oC,CAAC,EACDC,CAAC,EACD,CAAC,EACD,CAAC,EACDD,CAAC,EACDC,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACAwH,OAAO,CAAC87B,SAAS,CACf;IACEmF,YAAY,EAEdC,OAAO,EACPC,OAAO,EACP5oC,CAAC,EACDC,CAAC,EACDr1B,CAAC,EACDC,CAAC,EACDm1B,CAAC,GAAG1nB,KAAK,CAAC,CAAC,CAAC,EACZ2nB,CAAC,GAAG3nB,KAAK,CAAC,CAAC,CACb,CAAC;EACH;EAEAmvB,OAAO,CAACwhC,OAAO,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAASD,wBAAwBA,CAACh6B,KAAK,EAAEvH,OAAO,EAAE;EAChD,IAAMshC,mBAAmB,GAAG/5B,KAAK,CAAC+5B,mBAAmB;EACrD,KAAK,IAAI74E,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG6wE,mBAAmB,CAACv5E,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI,CAAC,EAAE;IAC/D,IAAIS,KAAK,CAACC,OAAO,CAACm4E,mBAAmB,CAAC74E,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC7Cu3C,OAAO,CAACshC,mBAAmB,CAAC74E,CAAC,CAAC,CAAC,CAAC8C,KAAK,CACnCy0C,OAAO,EACPshC,mBAAmB,CAAC74E,CAAC,GAAG,CAAC,CAC3B,CAAC;IACH,CAAC,MAAM;MACLu3C,OAAO,CAACshC,mBAAmB,CAAC74E,CAAC,CAAC,CAAC,GAAG64E,mBAAmB,CAAC74E,CAAC,GAAG,CAAC,CAAC;IAC9D;EACF;AACF;;;;;;;;AC1fA,IAAA8kE,KAAA,GAAA/iE,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAoC,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAJpC;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMg0E,UAAU;EACd;AACF;AACA;EACE,SAAAA,WAAYlsE,OAAO,EAAE;IAAAxO,eAAA,OAAA06E,UAAA;IACnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGnsE,OAAO,CAAC8kD,OAAO;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACsnB,eAAe,GAAGpsE,OAAO,CAACqsE,cAAc;;IAE7C;AACJ;AACA;AACA;IACI,IAAI,CAACt3B,SAAS,GAAG/0C,OAAO,CAACwV,QAAQ;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAAC82D,MAAM,GAAGtsE,OAAO,CAACsb,KAAK;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACixD,WAAW,GAAG,IAAAzU,YAAM,EAAC93D,OAAO,CAACsb,KAAK,CAAC;;IAExC;AACJ;AACA;AACA;IACI,IAAI,CAACkxD,aAAa,GAAGxsE,OAAO,CAACysE,YAAY;;IAEzC;AACJ;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAG1sE,OAAO,CAAC2sE,aAAa;EAC7C;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAAj7E,YAAA,CAAAw6E,UAAA;IAAAv6E,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMuI,KAAK,GAAG,IAAI,CAACsxD,QAAQ,CAAC,CAAC;MAC7B,OAAO,IAAIV,UAAU,CAAC;QACpBpnB,OAAO,EAAE,IAAI,CAACS,UAAU,CAAC,CAAC;QAC1BjqC,KAAK,EAAE3nB,KAAK,CAACC,OAAO,CAAC0nB,KAAK,CAAC,GAAGA,KAAK,CAAC1lB,KAAK,CAAC,CAAC,GAAG0lB,KAAK;QACnD9F,QAAQ,EAAE,IAAI,CAACwqB,WAAW,CAAC,CAAC;QAC5BqsC,cAAc,EAAE,IAAI,CAACQ,iBAAiB,CAAC,CAAC;QACxCJ,YAAY,EAAE,IAAI,CAACK,eAAe,CAAC,CAAC,CAACl3E,KAAK,CAAC,CAAC;QAC5C+2E,aAAa,EAAE,IAAI,CAACI,gBAAgB,CAAC;MACvC,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAp7E,GAAA;IAAAC,KAAA,EAKA,SAAA2zD,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC4mB,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAx6E,GAAA;IAAAC,KAAA,EAKA,SAAAi7E,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACT,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz6E,GAAA;IAAAC,KAAA,EAKA,SAAAouC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC+U,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApjD,GAAA;IAAAC,KAAA,EAKA,SAAAg7E,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACN,MAAM;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAA36E,GAAA;IAAAC,KAAA,EAIA,SAAAo7E,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACT,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA56E,GAAA;IAAAC,KAAA,EAKA,SAAAk7E,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACN,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA76E,GAAA;IAAAC,KAAA,EAKA,SAAAm7E,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACL,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/6E,GAAA;IAAAC,KAAA,EAMA,SAAAq7E,SAASA,CAAA,EAAG;MACV,OAAO,IAAA9vE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAAixE,QAAQA,CAACN,UAAU,EAAE;MACnB,OAAO,IAAAplE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAAi1E,oBAAoBA,CAAA,EAAG;MACrB,OAAO,IAAA1pE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAkxE,aAAaA,CAACP,UAAU,EAAE;MACxB,OAAO,CAAC;IACV;;IAEA;AACF;AACA;AACA;EAHE;IAAA5wE,GAAA;IAAAC,KAAA,EAIA,SAAAmzE,aAAaA,CAAA,EAAG;MACd,OAAO,IAAA5nE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAAs7E,YAAYA,CAAA,EAAG;MACb,OAAO,IAAA/vE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAu7E,SAASA,CAAA,EAAG;MACV,OAAO,IAAAhwE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAA1Z,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAAw7E,eAAeA,CAACX,YAAY,EAAE;MAC5B,IAAI,CAACD,aAAa,GAAGC,YAAY;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA96E,GAAA;IAAAC,KAAA,EAMA,SAAAo0D,UAAUA,CAAClB,OAAO,EAAE;MAClB,IAAI,CAACqnB,QAAQ,GAAGrnB,OAAO;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAnzD,GAAA;IAAAC,KAAA,EAMA,SAAAy7E,iBAAiBA,CAAChB,cAAc,EAAE;MAChC,IAAI,CAACD,eAAe,GAAGC,cAAc;IACvC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA16E,GAAA;IAAAC,KAAA,EAMA,SAAAstC,WAAWA,CAAC1pB,QAAQ,EAAE;MACpB,IAAI,CAACu/B,SAAS,GAAGv/B,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7jB,GAAA;IAAAC,KAAA,EAMA,SAAA07E,QAAQA,CAAChyD,KAAK,EAAE;MACd,IAAI,CAACgxD,MAAM,GAAGhxD,KAAK;MACnB,IAAI,CAACixD,WAAW,GAAG,IAAAzU,YAAM,EAACx8C,KAAK,CAAC;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAA3pB,GAAA;IAAAC,KAAA,EAIA,SAAA27E,iBAAiBA,CAACjzE,QAAQ,EAAE;MAC1B,IAAA6C,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAA2a,IAAIA,CAAA,EAAG;MACL,IAAApP,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAA47E,mBAAmBA,CAAClzE,QAAQ,EAAE;MAC5B,IAAA6C,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;EAFE;IAAAxL,GAAA;IAAAC,KAAA,EAGA,SAAAozE,KAAKA,CAAA,EAAG;MACN,OAAO3uE,OAAO,CAACE,OAAO,CAAC,CAAC;IAC1B;EAAC;AAAA;AAAA,IAAAvG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYg8E,UAAU;;;;;;;;AC7SzB,IAAA7J,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAw4E,UAAA,GAAAx4E,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAQA,IAAAsyE,UAAA,GAAAnwE,sBAAA,CAAAnC,OAAA;AACA,IAAAswE,eAAA,GAAAtwE,OAAA;AACA,IAAAqwE,MAAA,GAAAluE,sBAAA,CAAAnC,OAAA;AAAoC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAlBpC;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMm2E,YAAY,0BAAAC,WAAA;EAChB;AACF;AACA;EACE,SAAAD,aAAY3tE,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAm8E,YAAA;IACnB3zE,KAAA,GAAAnB,UAAA,OAAA80E,YAAA,GAAM;MACJ7oB,OAAO,EAAE,CAAC;MACVunB,cAAc,EACZrsE,OAAO,CAACqsE,cAAc,KAAK9wE,SAAS,GAAGyE,OAAO,CAACqsE,cAAc,GAAG,KAAK;MACvE72D,QAAQ,EAAExV,OAAO,CAACwV,QAAQ,KAAKja,SAAS,GAAGyE,OAAO,CAACwV,QAAQ,GAAG,CAAC;MAC/D8F,KAAK,EAAEtb,OAAO,CAACsb,KAAK,KAAK/f,SAAS,GAAGyE,OAAO,CAACsb,KAAK,GAAG,CAAC;MACtDmxD,YAAY,EACVzsE,OAAO,CAACysE,YAAY,KAAKlxE,SAAS,GAAGyE,OAAO,CAACysE,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpEE,aAAa,EAAE3sE,OAAO,CAAC2sE;IACzB,CAAC;;IAED;AACJ;AACA;AACA;IACI3yE,KAAA,CAAK6zE,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACI7zE,KAAA,CAAK8zE,KAAK,GAAG9tE,OAAO,CAAC+tE,IAAI,KAAKxyE,SAAS,GAAGyE,OAAO,CAAC+tE,IAAI,GAAG,IAAI;;IAE7D;AACJ;AACA;AACA;IACI/zE,KAAA,CAAKg0E,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAErB;AACJ;AACA;AACA;IACIh0E,KAAA,CAAKo9C,OAAO,GAAGp3C,OAAO,CAACiuE,MAAM;;IAE7B;AACJ;AACA;AACA;IACIj0E,KAAA,CAAKuiB,MAAM,GAAGvc,OAAO,CAACuc,MAAM;;IAE5B;AACJ;AACA;AACA;IACIviB,KAAA,CAAKk0E,QAAQ,GAAGluE,OAAO,CAACmuE,OAAO;;IAE/B;AACJ;AACA;AACA;IACIn0E,KAAA,CAAKq9C,MAAM,GAAGr3C,OAAO,CAACmb,KAAK,KAAK5f,SAAS,GAAGyE,OAAO,CAACmb,KAAK,GAAG,CAAC;;IAE7D;AACJ;AACA;AACA;IACInhB,KAAA,CAAKo0E,OAAO,GAAGpuE,OAAO,CAACquE,MAAM,KAAK9yE,SAAS,GAAGyE,OAAO,CAACquE,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;IACIr0E,KAAA,CAAKgsE,KAAK;;IAEV;AACJ;AACA;AACA;IACIhsE,KAAA,CAAKs0E,cAAc;;IAEnB;AACJ;AACA;IACIt0E,KAAA,CAAK+rE,WAAW,GACd/rE,KAAA,CAAK8zE,KAAK,IAAI9zE,KAAA,CAAK8zE,KAAK,CAACS,OAAO,CAAC,CAAC,GAC9B7L,mBAAU,CAACr6D,OAAO,GAClBq6D,mBAAU,CAACp6D,MAAM;IACvB,IAAItO,KAAA,CAAK+rE,WAAW,KAAKrD,mBAAU,CAACr6D,OAAO,EAAE;MAC3CrO,KAAA,CAAKgrE,KAAK,CAAC,CAAC,CAACr2B,IAAI,CAAC;QAAA,OAAO30C,KAAA,CAAK+rE,WAAW,GAAGrD,mBAAU,CAACp6D,MAAM;MAAA,CAAC,CAAC;IACjE;IACAtO,KAAA,CAAK2yC,MAAM,CAAC,CAAC;IAAC,OAAA3yC,KAAA;EAChB;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAg0E,YAAA,EAAAC,WAAA;EAAA,OAAAl8E,YAAA,CAAAi8E,YAAA;IAAAh8E,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMuI,KAAK,GAAG,IAAI,CAACsxD,QAAQ,CAAC,CAAC;MAC7B,IAAMpjC,KAAK,GAAG,IAAImkC,YAAY,CAAC;QAC7BI,IAAI,EAAE,IAAI,CAACS,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACz7D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QACzD0yE,MAAM,EAAE,IAAI,CAACQ,SAAS,CAAC,CAAC;QACxBlyD,MAAM,EAAE,IAAI,CAAC1C,SAAS,CAAC,CAAC;QACxBs0D,OAAO,EAAE,IAAI,CAACO,UAAU,CAAC,CAAC;QAC1BvzD,KAAK,EAAE,IAAI,CAACu8B,QAAQ,CAAC,CAAC;QACtB22B,MAAM,EAAE,IAAI,CAACM,SAAS,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC57D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QAC/Dia,QAAQ,EAAE,IAAI,CAACwqB,WAAW,CAAC,CAAC;QAC5BqsC,cAAc,EAAE,IAAI,CAACQ,iBAAiB,CAAC,CAAC;QACxCvxD,KAAK,EAAE3nB,KAAK,CAACC,OAAO,CAAC0nB,KAAK,CAAC,GAAGA,KAAK,CAAC1lB,KAAK,CAAC,CAAC,GAAG0lB,KAAK;QACnDmxD,YAAY,EAAE,IAAI,CAACK,eAAe,CAAC,CAAC,CAACl3E,KAAK,CAAC,CAAC;QAC5C+2E,aAAa,EAAE,IAAI,CAACI,gBAAgB,CAAC;MACvC,CAAC,CAAC;MACFvjC,KAAK,CAACwc,UAAU,CAAC,IAAI,CAACT,UAAU,CAAC,CAAC,CAAC;MACnC,OAAO/b,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA73C,GAAA;IAAAC,KAAA,EAOA,SAAAq7E,SAASA,CAAA,EAAG;MACV,IAAM58D,IAAI,GAAG,IAAI,CAAC21D,KAAK;MACvB,IAAMyG,YAAY,GAAG,IAAI,CAACK,eAAe,CAAC,CAAC;MAC3C,IAAMxxD,KAAK,GAAG,IAAI,CAAC0xD,aAAa,CAAC,CAAC;MAClC;MACA;MACA,OAAO,CACL38D,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGo8D,YAAY,CAAC,CAAC,CAAC,GAAGnxD,KAAK,CAAC,CAAC,CAAC,EACxCjL,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGo8D,YAAY,CAAC,CAAC,CAAC,GAAGnxD,KAAK,CAAC,CAAC,CAAC,CACzC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3pB,GAAA;IAAAC,KAAA,EAKA,SAAA8lD,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACL,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1lD,GAAA;IAAAC,KAAA,EAKA,SAAA48E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACV,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn8E,GAAA;IAAAC,KAAA,EAKA,SAAAg9E,OAAOA,CAACb,IAAI,EAAE;MACZ,IAAI,CAACD,KAAK,GAAGC,IAAI;MACjB,IAAI,CAACphC,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;AACA;EAHE;IAAAh7C,GAAA;IAAAC,KAAA,EAIA,SAAAi1E,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACgH,mBAAmB,EAAE;QAC7B,IAAI,CAACA,mBAAmB,GAAG,IAAI,CAACgB,yBAAyB,CACvD,IAAI,CAACP,cACP,CAAC;MACH;MACA,OAAO,IAAI,CAACT,mBAAmB;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAl8E,GAAA;IAAAC,KAAA,EAOA,SAAAixE,QAAQA,CAACN,UAAU,EAAE;MAAA,IAAAuM,WAAA,EAAAC,mBAAA;MACnB,IAAMC,OAAO,IAAAF,WAAA,GAAG,IAAI,CAAChB,KAAK,cAAAgB,WAAA,uBAAVA,WAAA,CAAYxjE,MAAM,CAAC,CAAC;MACpC,IAAM+7D,QAAQ,GACZ,GAAAvoE,MAAA,CAAGyjE,UAAU,OAAAzjE,MAAA,CAAI,IAAI,CAACu4C,MAAM,OAAAv4C,MAAA,CAAI,IAAI,CAACyd,MAAM,OAAAzd,MAAA,CAAI,IAAI,CAACovE,QAAQ,OAAApvE,MAAA,CAAI,IAAI,CAACs4C,OAAO,OAAAt4C,MAAA,CAAIkwE,OAAO,IACvF12E,MAAM,CAAC2F,MAAM,CAAC,IAAI,CAACqwE,cAAc,CAAC,CAACz1D,IAAI,CAAC,GAAG,CAAC;MAC9C,IAAImqD,KAAK,GAAG,iCAAA+L,mBAAA,GACVzH,sBAAc,CAACjpE,GAAG,CAACgpE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,cAAA0H,mBAAA,uBAAxCA,mBAAA,CAA0ClM,QAAQ,CAAC,CAAC,CACrD;MACD,IAAI,CAACG,KAAK,EAAE;QACV,IAAMiM,aAAa,GAAG,IAAI,CAACX,cAAc;QACzC,IAAMj+D,IAAI,GAAG9I,IAAI,CAACqI,IAAI,CAACq/D,aAAa,CAAC5+D,IAAI,GAAGkyD,UAAU,CAAC;QACvD,IAAM93B,OAAO,GAAG,IAAAX,0BAAqB,EAACz5B,IAAI,EAAEA,IAAI,CAAC;QACjD,IAAI,CAAC6+D,KAAK,CAACD,aAAa,EAAExkC,OAAO,EAAE83B,UAAU,CAAC;QAE9CS,KAAK,GAAGv4B,OAAO,CAACR,MAAM;QACtBq9B,sBAAc,CAACpoE,GAAG,CAChBmoE,QAAQ,EACR,IAAI,EACJ,IAAI,EACJ,IAAI5B,kBAAS,CAACzC,KAAK,EAAEznE,SAAS,EAAE,IAAI,EAAEmnE,mBAAU,CAACp6D,MAAM,EAAE,IAAI,CAC/D,CAAC;MACH;MACA,OAAO06D,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArxE,GAAA;IAAAC,KAAA,EAMA,SAAAkxE,aAAaA,CAACP,UAAU,EAAE;MACxB,OAAOA,UAAU;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAA5wE,GAAA;IAAAC,KAAA,EAIA,SAAAs7E,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAClH,KAAK;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAr0E,GAAA;IAAAC,KAAA,EAIA,SAAAmzE,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACgB,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp0E,GAAA;IAAAC,KAAA,EAMA,SAAAu7E,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACa,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr8E,GAAA;IAAAC,KAAA,EAKA,SAAA68E,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACr3B,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAzlD,GAAA;IAAAC,KAAA,EAKA,SAAAioB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC0C,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5qB,GAAA;IAAAC,KAAA,EAKA,SAAA88E,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACR,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAv8E,GAAA;IAAAC,KAAA,EAMA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACmvD,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr0E,GAAA;IAAAC,KAAA,EAKA,SAAA+8E,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz8E,GAAA;IAAAC,KAAA,EAKA,SAAAu9E,SAASA,CAACd,MAAM,EAAE;MAChB,IAAI,CAACD,OAAO,GAAGC,MAAM;MACrB,IAAI,CAAC1hC,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;AACA;EAHE;IAAAh7C,GAAA;IAAAC,KAAA,EAIA,SAAA27E,iBAAiBA,CAACjzE,QAAQ,EAAE,CAAC;;IAE7B;AACF;AACA;AACA;EAHE;IAAA3I,GAAA;IAAAC,KAAA,EAIA,SAAA2a,IAAIA,CAAA,EAAG,CAAC;;IAER;AACF;AACA;AACA;EAHE;IAAA5a,GAAA;IAAAC,KAAA,EAIA,SAAA47E,mBAAmBA,CAAClzE,QAAQ,EAAE,CAAC;;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3I,GAAA;IAAAC,KAAA,EAQA,SAAAw9E,sBAAsBA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE;MACxD,IACED,WAAW,KAAK,CAAC,IACjB,IAAI,CAACl4B,OAAO,KAAKxuC,QAAQ,IACxBymE,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,OAAQ,EAC9C;QACA,OAAOC,WAAW;MACpB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIE,EAAE,GAAG,IAAI,CAACjzD,MAAM;MACpB,IAAIkzD,EAAE,GAAG,IAAI,CAACvB,QAAQ,KAAK3yE,SAAS,GAAGi0E,EAAE,GAAG,IAAI,CAACtB,QAAQ;MACzD,IAAIsB,EAAE,GAAGC,EAAE,EAAE;QACX,IAAMl8E,GAAG,GAAGi8E,EAAE;QACdA,EAAE,GAAGC,EAAE;QACPA,EAAE,GAAGl8E,GAAG;MACV;MACA,IAAM06E,MAAM,GACV,IAAI,CAACC,QAAQ,KAAK3yE,SAAS,GAAG,IAAI,CAAC67C,OAAO,GAAG,IAAI,CAACA,OAAO,GAAG,CAAC;MAC/D,IAAM6c,KAAK,GAAI,CAAC,GAAG1sD,IAAI,CAAC0H,EAAE,GAAIg/D,MAAM;MACpC,IAAMv7E,CAAC,GAAG+8E,EAAE,GAAGloE,IAAI,CAAC4O,GAAG,CAAC89C,KAAK,CAAC;MAC9B,IAAMthE,CAAC,GAAG4U,IAAI,CAAC2F,IAAI,CAACuiE,EAAE,GAAGA,EAAE,GAAG/8E,CAAC,GAAGA,CAAC,CAAC;MACpC,IAAMonB,CAAC,GAAG01D,EAAE,GAAG78E,CAAC;MAChB,IAAM6E,CAAC,GAAG+P,IAAI,CAAC2F,IAAI,CAACxa,CAAC,GAAGA,CAAC,GAAGonB,CAAC,GAAGA,CAAC,CAAC;MAClC,IAAM41D,UAAU,GAAGl4E,CAAC,GAAG9E,CAAC;MACxB,IAAI28E,QAAQ,KAAK,OAAO,IAAIK,UAAU,IAAIH,UAAU,EAAE;QACpD,OAAOG,UAAU,GAAGJ,WAAW;MACjC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAM1gE,CAAC,GAAG0gE,WAAW,GAAG,CAAC,GAAGI,UAAU;MACtC,IAAM7gE,CAAC,GAAIygE,WAAW,GAAG,CAAC,IAAKx1D,CAAC,GAAGtiB,CAAC,CAAC;MACrC,IAAMm4E,IAAI,GAAGpoE,IAAI,CAAC2F,IAAI,CAAC,CAACsiE,EAAE,GAAG5gE,CAAC,KAAK4gE,EAAE,GAAG5gE,CAAC,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;MACnD,IAAM+gE,QAAQ,GAAGD,IAAI,GAAGH,EAAE;MAC1B,IAAI,IAAI,CAACtB,QAAQ,KAAK3yE,SAAS,IAAI8zE,QAAQ,KAAK,OAAO,EAAE;QACvD,OAAOO,QAAQ,GAAG,CAAC;MACrB;MACA;MACA;MACA,IAAMC,EAAE,GAAGL,EAAE,GAAGjoE,IAAI,CAAC4O,GAAG,CAAC89C,KAAK,CAAC;MAC/B,IAAM6b,EAAE,GAAGvoE,IAAI,CAAC2F,IAAI,CAACsiE,EAAE,GAAGA,EAAE,GAAGK,EAAE,GAAGA,EAAE,CAAC;MACvC,IAAME,EAAE,GAAGN,EAAE,GAAGK,EAAE;MAClB,IAAME,EAAE,GAAGzoE,IAAI,CAAC2F,IAAI,CAAC2iE,EAAE,GAAGA,EAAE,GAAGE,EAAE,GAAGA,EAAE,CAAC;MACvC,IAAME,eAAe,GAAGD,EAAE,GAAGH,EAAE;MAC/B,IAAII,eAAe,IAAIV,UAAU,EAAE;QACjC,IAAMW,WAAW,GAAID,eAAe,GAAGX,WAAW,GAAI,CAAC,GAAGG,EAAE,GAAGD,EAAE;QACjE,OAAO,CAAC,GAAGjoE,IAAI,CAACmG,GAAG,CAACkiE,QAAQ,EAAEM,WAAW,CAAC;MAC5C;MACA,OAAON,QAAQ,GAAG,CAAC;IACrB;;IAEA;AACF;AACA;AACA;EAHE;IAAAj+E,GAAA;IAAAC,KAAA,EAIA,SAAAu+E,mBAAmBA,CAAA,EAAG;MACpB,IAAIC,OAAO,GAAGpI,sBAAc;MAC5B,IAAIqH,QAAQ,GAAGlH,uBAAe;MAC9B,IAAIoH,UAAU,GAAG,CAAC;MAClB,IAAIc,QAAQ,GAAG,IAAI;MACnB,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,WAAW;MACf,IAAIjB,WAAW,GAAG,CAAC;MAEnB,IAAI,IAAI,CAAClB,OAAO,EAAE;QAAA,IAAAoC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA;QAChBN,WAAW,GAAG,IAAA/I,sBAAW,GAAAgJ,qBAAA,GAAC,IAAI,CAACpC,OAAO,CAAC0C,QAAQ,CAAC,CAAC,cAAAN,qBAAA,cAAAA,qBAAA,GAAInI,0BAAkB,CAAC;QACxEiH,WAAW,IAAAmB,qBAAA,GAAG,IAAI,CAACrC,OAAO,CAACn5D,QAAQ,CAAC,CAAC,cAAAw7D,qBAAA,cAAAA,qBAAA,GAAIhI,wBAAgB;QACzD4H,QAAQ,GAAG,IAAI,CAACjC,OAAO,CAAC2C,WAAW,CAAC,CAAC;QACrCT,cAAc,IAAAI,qBAAA,GAAG,IAAI,CAACtC,OAAO,CAAC4C,iBAAiB,CAAC,CAAC,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,CAAC;QACtDrB,QAAQ,IAAAsB,sBAAA,GAAG,IAAI,CAACvC,OAAO,CAAC6C,WAAW,CAAC,CAAC,cAAAN,sBAAA,cAAAA,sBAAA,GAAIxI,uBAAe;QACxDiI,OAAO,IAAAQ,sBAAA,GAAG,IAAI,CAACxC,OAAO,CAAC8C,UAAU,CAAC,CAAC,cAAAN,sBAAA,cAAAA,sBAAA,GAAI5I,sBAAc;QACrDuH,UAAU,IAAAsB,qBAAA,GAAG,IAAI,CAACzC,OAAO,CAAC+C,aAAa,CAAC,CAAC,cAAAN,qBAAA,cAAAA,qBAAA,GAAIzI,yBAAiB;MAChE;MAEA,IAAM3uD,GAAG,GAAG,IAAI,CAAC21D,sBAAsB,CAACC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,CAAC;MAC1E,IAAM6B,SAAS,GAAG7pE,IAAI,CAACmG,GAAG,CAAC,IAAI,CAAC6O,MAAM,EAAE,IAAI,CAAC2xD,QAAQ,IAAI,CAAC,CAAC;MAC3D,IAAM79D,IAAI,GAAG9I,IAAI,CAACqI,IAAI,CAAC,CAAC,GAAGwhE,SAAS,GAAG33D,GAAG,CAAC;MAE3C,OAAO;QACL82D,WAAW,EAAEA,WAAW;QACxBjB,WAAW,EAAEA,WAAW;QACxBj/D,IAAI,EAAEA,IAAI;QACV+/D,OAAO,EAAEA,OAAO;QAChBC,QAAQ,EAAEA,QAAQ;QAClBC,cAAc,EAAEA,cAAc;QAC9BjB,QAAQ,EAAEA,QAAQ;QAClBE,UAAU,EAAEA;MACd,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAA59E,GAAA;IAAAC,KAAA,EAGA,SAAA+6C,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC2hC,cAAc,GAAG,IAAI,CAAC6B,mBAAmB,CAAC,CAAC;MAChD,IAAM9/D,IAAI,GAAG,IAAI,CAACi+D,cAAc,CAACj+D,IAAI;MACrC,IAAI,CAACw9D,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAAC7H,KAAK,GAAG,CAAC31D,IAAI,EAAEA,IAAI,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1e,GAAA;IAAAC,KAAA,EAMA,SAAAs9E,KAAKA,CAACD,aAAa,EAAExkC,OAAO,EAAE83B,UAAU,EAAE;MACxC93B,OAAO,CAACnvB,KAAK,CAACinD,UAAU,EAAEA,UAAU,CAAC;MACrC;MACA93B,OAAO,CAAC5c,SAAS,CAACohD,aAAa,CAAC5+D,IAAI,GAAG,CAAC,EAAE4+D,aAAa,CAAC5+D,IAAI,GAAG,CAAC,CAAC;MAEjE,IAAI,CAACghE,WAAW,CAAC5mC,OAAO,CAAC;MAEzB,IAAI,IAAI,CAACqjC,KAAK,EAAE;QACd,IAAI1Y,KAAK,GAAG,IAAI,CAAC0Y,KAAK,CAACgD,QAAQ,CAAC,CAAC;QACjC,IAAI1b,KAAK,KAAK,IAAI,EAAE;UAClBA,KAAK,GAAG2S,wBAAgB;QAC1B;QACAt9B,OAAO,CAAC08B,SAAS,GAAG,IAAAK,sBAAW,EAACpS,KAAK,CAAC;QACtC3qB,OAAO,CAACsjC,IAAI,CAAC,CAAC;MAChB;MACA,IAAIkB,aAAa,CAACsB,WAAW,EAAE;QAC7B9lC,OAAO,CAAC8lC,WAAW,GAAGtB,aAAa,CAACsB,WAAW;QAC/C9lC,OAAO,CAAC4gC,SAAS,GAAG4D,aAAa,CAACK,WAAW;QAC7C,IAAIL,aAAa,CAACoB,QAAQ,EAAE;UAC1B5lC,OAAO,CAAC6mC,WAAW,CAACrC,aAAa,CAACoB,QAAQ,CAAC;UAC3C5lC,OAAO,CAAC6lC,cAAc,GAAGrB,aAAa,CAACqB,cAAc;QACvD;QACA7lC,OAAO,CAAC2lC,OAAO,GAAGnB,aAAa,CAACmB,OAAO;QACvC3lC,OAAO,CAAC4kC,QAAQ,GAAGJ,aAAa,CAACI,QAAQ;QACzC5kC,OAAO,CAAC8kC,UAAU,GAAGN,aAAa,CAACM,UAAU;QAC7C9kC,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA18E,GAAA;IAAAC,KAAA,EAKA,SAAAi9E,yBAAyBA,CAACI,aAAa,EAAE;MACvC,IAAIxkC,OAAO;MACX,IAAI,IAAI,CAACqjC,KAAK,EAAE;QACd,IAAI1Y,KAAK,GAAG,IAAI,CAAC0Y,KAAK,CAACgD,QAAQ,CAAC,CAAC;;QAEjC;QACA,IAAIhsB,OAAO,GAAG,CAAC;QACf,IAAI,OAAOsQ,KAAK,KAAK,QAAQ,EAAE;UAC7BA,KAAK,GAAG,IAAAsC,cAAO,EAACtC,KAAK,CAAC;QACxB;QACA,IAAIA,KAAK,KAAK,IAAI,EAAE;UAClBtQ,OAAO,GAAG,CAAC;QACb,CAAC,MAAM,IAAInxD,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,EAAE;UAC/BtQ,OAAO,GAAGsQ,KAAK,CAAC5iE,MAAM,KAAK,CAAC,GAAG4iE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C;QACA,IAAItQ,OAAO,KAAK,CAAC,EAAE;UACjB;UACA;UACAra,OAAO,GAAG,IAAAX,0BAAqB,EAACmlC,aAAa,CAAC5+D,IAAI,EAAE4+D,aAAa,CAAC5+D,IAAI,CAAC;UACvE,IAAI,CAACkhE,uBAAuB,CAACtC,aAAa,EAAExkC,OAAO,CAAC;QACtD;MACF;MACA,OAAOA,OAAO,GAAGA,OAAO,CAACR,MAAM,GAAG,IAAI,CAAC44B,QAAQ,CAAC,CAAC,CAAC;IACpD;;IAEA;AACF;AACA;AACA;EAHE;IAAAlxE,GAAA;IAAAC,KAAA,EAIA,SAAAy/E,WAAWA,CAAC5mC,OAAO,EAAE;MACnB,IAAIwjC,MAAM,GAAG,IAAI,CAAC72B,OAAO;MACzB,IAAM76B,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI0xD,MAAM,KAAKrlE,QAAQ,EAAE;QACvB6hC,OAAO,CAAC+mC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEj1D,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGhV,IAAI,CAAC0H,EAAE,CAAC;MAC3C,CAAC,MAAM;QACL,IAAMk/D,OAAO,GAAG,IAAI,CAACD,QAAQ,KAAK3yE,SAAS,GAAGghB,MAAM,GAAG,IAAI,CAAC2xD,QAAQ;QACpE,IAAI,IAAI,CAACA,QAAQ,KAAK3yE,SAAS,EAAE;UAC/B0yE,MAAM,IAAI,CAAC;QACb;QACA,IAAMtzC,UAAU,GAAG,IAAI,CAAC0c,MAAM,GAAG9vC,IAAI,CAAC0H,EAAE,GAAG,CAAC;QAC5C,IAAMwiE,IAAI,GAAI,CAAC,GAAGlqE,IAAI,CAAC0H,EAAE,GAAIg/D,MAAM;QACnC,KAAK,IAAI/6E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+6E,MAAM,EAAE/6E,CAAC,EAAE,EAAE;UAC/B,IAAMw+E,MAAM,GAAG/2C,UAAU,GAAGznC,CAAC,GAAGu+E,IAAI;UACpC,IAAME,OAAO,GAAGz+E,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGqpB,MAAM,GAAG4xD,OAAO;UAC9C1jC,OAAO,CAACmnC,MAAM,CAACD,OAAO,GAAGpqE,IAAI,CAAC0O,GAAG,CAACy7D,MAAM,CAAC,EAAEC,OAAO,GAAGpqE,IAAI,CAAC4O,GAAG,CAACu7D,MAAM,CAAC,CAAC;QACxE;QACAjnC,OAAO,CAAConC,SAAS,CAAC,CAAC;MACrB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlgF,GAAA;IAAAC,KAAA,EAKA,SAAA2/E,uBAAuBA,CAACtC,aAAa,EAAExkC,OAAO,EAAE;MAC9C;MACAA,OAAO,CAAC5c,SAAS,CAACohD,aAAa,CAAC5+D,IAAI,GAAG,CAAC,EAAE4+D,aAAa,CAAC5+D,IAAI,GAAG,CAAC,CAAC;MAEjE,IAAI,CAACghE,WAAW,CAAC5mC,OAAO,CAAC;MAEzBA,OAAO,CAAC08B,SAAS,GAAGY,wBAAgB;MACpCt9B,OAAO,CAACsjC,IAAI,CAAC,CAAC;MACd,IAAIkB,aAAa,CAACsB,WAAW,EAAE;QAC7B9lC,OAAO,CAAC8lC,WAAW,GAAGtB,aAAa,CAACsB,WAAW;QAC/C9lC,OAAO,CAAC4gC,SAAS,GAAG4D,aAAa,CAACK,WAAW;QAC7C,IAAIL,aAAa,CAACoB,QAAQ,EAAE;UAC1B5lC,OAAO,CAAC6mC,WAAW,CAACrC,aAAa,CAACoB,QAAQ,CAAC;UAC3C5lC,OAAO,CAAC6lC,cAAc,GAAGrB,aAAa,CAACqB,cAAc;QACvD;QACA7lC,OAAO,CAAC4kC,QAAQ,GAAGJ,aAAa,CAACI,QAAQ;QACzC5kC,OAAO,CAAC8kC,UAAU,GAAGN,aAAa,CAACM,UAAU;QAC7C9kC,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;IACF;;IAEA;AACF;AACA;EAFE;IAAA18E,GAAA;IAAAC,KAAA,EAGA,SAAAozE,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAAC8I,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC9I,KAAK,CAAC,CAAC,GAAG3uE,OAAO,CAACE,OAAO,CAAC,CAAC;IAC5D;EAAC;AAAA,EAhkBwB21E,cAAU;AAAA,IAAAl8E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmkBtBy9E,YAAY;;;;;;;;ACznB3B,IAAAmE,cAAA,GAAA16E,sBAAA,CAAAnC,OAAA;AAA6C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ7C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMu6E,WAAW,0BAAAC,aAAA;EACf;AACF;AACA;EACE,SAAAD,YAAY/xE,OAAO,EAAE;IAAAxO,eAAA,OAAAugF,WAAA;IACnB/xE,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG;MAACuc,MAAM,EAAE;IAAC,CAAC;IAAC,OAAA1jB,UAAA,OAAAk5E,WAAA,GAEpC;MACJ9D,MAAM,EAAErlE,QAAQ;MAChBmlE,IAAI,EAAE/tE,OAAO,CAAC+tE,IAAI;MAClBxxD,MAAM,EAAEvc,OAAO,CAACuc,MAAM;MACtB8xD,MAAM,EAAEruE,OAAO,CAACquE,MAAM;MACtB/yD,KAAK,EAAEtb,OAAO,CAACsb,KAAK,KAAK/f,SAAS,GAAGyE,OAAO,CAACsb,KAAK,GAAG,CAAC;MACtD9F,QAAQ,EAAExV,OAAO,CAACwV,QAAQ,KAAKja,SAAS,GAAGyE,OAAO,CAACwV,QAAQ,GAAG,CAAC;MAC/D62D,cAAc,EACZrsE,OAAO,CAACqsE,cAAc,KAAK9wE,SAAS,GAAGyE,OAAO,CAACqsE,cAAc,GAAG,KAAK;MACvEI,YAAY,EACVzsE,OAAO,CAACysE,YAAY,KAAKlxE,SAAS,GAAGyE,OAAO,CAACysE,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpEE,aAAa,EAAE3sE,OAAO,CAAC2sE;IACzB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEhzE,SAAA,CAAAo4E,WAAA,EAAAC,aAAA;EAAA,OAAAtgF,YAAA,CAAAqgF,WAAA;IAAApgF,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMuI,KAAK,GAAG,IAAI,CAACsxD,QAAQ,CAAC,CAAC;MAC7B,IAAMpjC,KAAK,GAAG,IAAIuoC,WAAW,CAAC;QAC5BhE,IAAI,EAAE,IAAI,CAACS,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACz7D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QACzD8yE,MAAM,EAAE,IAAI,CAACM,SAAS,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC57D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QAC/DghB,MAAM,EAAE,IAAI,CAAC1C,SAAS,CAAC,CAAC;QACxByB,KAAK,EAAE3nB,KAAK,CAACC,OAAO,CAAC0nB,KAAK,CAAC,GAAGA,KAAK,CAAC1lB,KAAK,CAAC,CAAC,GAAG0lB,KAAK;QACnD9F,QAAQ,EAAE,IAAI,CAACwqB,WAAW,CAAC,CAAC;QAC5BqsC,cAAc,EAAE,IAAI,CAACQ,iBAAiB,CAAC,CAAC;QACxCJ,YAAY,EAAE,IAAI,CAACK,eAAe,CAAC,CAAC,CAACl3E,KAAK,CAAC,CAAC;QAC5C+2E,aAAa,EAAE,IAAI,CAACI,gBAAgB,CAAC;MACvC,CAAC,CAAC;MACFvjC,KAAK,CAACwc,UAAU,CAAC,IAAI,CAACT,UAAU,CAAC,CAAC,CAAC;MACnC,OAAO/b,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA73C,GAAA;IAAAC,KAAA,EAMA,SAAAqgF,SAASA,CAAC11D,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACowB,MAAM,CAAC,CAAC;IACf;EAAC;AAAA,EArDuBghC,sBAAY;AAAA,IAAA39E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwDvB6hF,WAAW;;;;;;;;AC9E1B,IAAA1P,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAsyE,UAAA,GAAAtyE,OAAA;AAAmD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAPnD;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMg6E,IAAI;EACR;AACF;AACA;EACE,SAAAA,KAAYlyE,OAAO,EAAE;IAAAxO,eAAA,OAAA0gF,IAAA;IACnBlyE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACmyE,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACrM,MAAM,GAAG,IAAI;IAClB,IAAI9lE,OAAO,CAACo1D,KAAK,KAAK75D,SAAS,EAAE;MAC/B,IAAI,CAAC62E,QAAQ,CAACpyE,OAAO,CAACo1D,KAAK,CAAC;IAC9B;EACF;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAA1jE,YAAA,CAAAwgF,IAAA;IAAAvgF,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMqiD,KAAK,GAAG,IAAI,CAAC0b,QAAQ,CAAC,CAAC;MAC7B,OAAO,IAAIoB,IAAI,CAAC;QACd9c,KAAK,EAAEzhE,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,GAAGA,KAAK,CAACx/D,KAAK,CAAC,CAAC,GAAGw/D,KAAK,IAAI75D;MACzD,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5J,GAAA;IAAAC,KAAA,EAKA,SAAAk/E,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAChL,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAn0E,GAAA;IAAAC,KAAA,EAMA,SAAAwgF,QAAQA,CAAChd,KAAK,EAAE;MAAA,IAAAp7D,KAAA;MACd,IAAIo7D,KAAK,KAAK,IAAI,IAAI19D,OAAA,CAAO09D,KAAK,MAAK,QAAQ,IAAI,KAAK,IAAIA,KAAK,EAAE;QACjE,IAAMid,YAAY,GAAG,IAAAxK,cAAY,EAC/B,IAAI,EACJzS,KAAK,CAAC0O,GAAG,EACT,WAAW,EACXvoE,SAAS,EACT65D,KAAK,CAACrhD,MAAM,GAAG,IAAI,GAAGqhD,KAAK,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,GAAG,IAAI,EACtD,EAAEA,KAAK,CAACrhD,MAAM,IAAIqhD,KAAK,CAAC/kD,IAAI,CAC9B,CAAC;QACDgiE,YAAY,CAACrN,KAAK,CAAC,CAAC,CAACr2B,IAAI,CAAC,YAAM;UAC9B30C,KAAI,CAACm4E,aAAa,GAAG,IAAI;QAC3B,CAAC,CAAC;QACF,IAAIE,YAAY,CAACtN,aAAa,CAAC,CAAC,KAAKrC,mBAAU,CAACt6D,IAAI,EAAE;UACpDiqE,YAAY,CAAC9lE,IAAI,CAAC,CAAC;QACrB;QACA,IAAI8lE,YAAY,CAACtN,aAAa,CAAC,CAAC,KAAKrC,mBAAU,CAACr6D,OAAO,EAAE;UACvD,IAAI,CAAC8pE,aAAa,GAAGE,YAAY;QACnC;MACF;MACA,IAAI,CAACvM,MAAM,GAAG1Q,KAAK;IACrB;;IAEA;AACF;AACA;EAFE;IAAAzjE,GAAA;IAAAC,KAAA,EAGA,SAAA0Z,MAAMA,CAAA,EAAG;MACP,IAAMyiE,IAAI,GAAG,IAAI,CAAC+C,QAAQ,CAAC,CAAC;MAC5B,IAAI,CAAC/C,IAAI,EAAE;QACT,OAAO,EAAE;MACX;MACA,OAAOA,IAAI,YAAYuE,aAAa,IAAIvE,IAAI,YAAYwE,cAAc,GAClE,IAAAj1E,YAAM,EAACywE,IAAI,CAAC,GACZr2E,OAAA,CAAOq2E,IAAI,MAAK,QAAQ,IAAI,KAAK,IAAIA,IAAI,GACvCA,IAAI,CAACjK,GAAG,GAAG,GAAG,GAAGiK,IAAI,CAACh6D,MAAM,GAC5B,IAAA2jD,cAAO,EAACqW,IAAI,CAAC,CAACh8D,QAAQ,CAAC,CAAC;IAChC;;IAEA;AACF;AACA;EAFE;IAAApgB,GAAA;IAAAC,KAAA,EAGA,SAAA28E,OAAOA,CAAA,EAAG;MACR,OAAO,CAAC,CAAC,IAAI,CAAC4D,aAAa;IAC7B;;IAEA;AACF;AACA;EAFE;IAAAxgF,GAAA;IAAAC,KAAA,EAGA,SAAAozE,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACmN,aAAa,GAAG,IAAI,CAACA,aAAa,CAACnN,KAAK,CAAC,CAAC,GAAG3uE,OAAO,CAACE,OAAO,CAAC,CAAC;IAC5E;EAAC;AAAA;AAAA,IAAAvG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYgiF,IAAI;;;;;;;;AC3HnB,IAAA7P,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAsyE,UAAA,GAAAtyE,OAAA;AACA,IAAAqwE,MAAA,GAAAluE,sBAAA,CAAAnC,OAAA;AAAoC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAA8Z,eAAAxZ,CAAA,EAAAT,CAAA,WAAAka,eAAA,CAAAzZ,CAAA,KAAA0Z,qBAAA,CAAA1Z,CAAA,EAAAT,CAAA,KAAAoa,2BAAA,CAAA3Z,CAAA,EAAAT,CAAA,KAAAqa,gBAAA;AAAA,SAAAA,iBAAA,cAAA9Z,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAA0e,sBAAA1Z,CAAA,EAAA4W,CAAA,QAAA3W,CAAA,WAAAD,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAC,CAAA,QAAAV,CAAA,EAAAvE,CAAA,EAAAC,CAAA,EAAA+X,CAAA,EAAAvY,CAAA,OAAA+N,CAAA,OAAA9I,CAAA,iBAAAzE,CAAA,IAAAgF,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,GAAAia,IAAA,QAAArD,CAAA,QAAAvW,MAAA,CAAAJ,CAAA,MAAAA,CAAA,UAAAuI,CAAA,uBAAAA,CAAA,IAAAjJ,CAAA,GAAAtE,CAAA,CAAA2C,IAAA,CAAAqC,CAAA,GAAAia,IAAA,MAAAzf,CAAA,CAAAgI,IAAA,CAAAlD,CAAA,CAAA5F,KAAA,GAAAc,CAAA,CAAAF,MAAA,KAAAqc,CAAA,GAAApO,CAAA,iBAAAxI,CAAA,IAAAN,CAAA,OAAA1E,CAAA,GAAAgF,CAAA,yBAAAwI,CAAA,YAAAvI,CAAA,CAAAka,MAAA,KAAAnH,CAAA,GAAA/S,CAAA,CAAAka,MAAA,IAAA9Z,MAAA,CAAA2S,CAAA,MAAAA,CAAA,2BAAAtT,CAAA,QAAA1E,CAAA,aAAAP,CAAA;AAAA,SAAAgf,gBAAAzZ,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAAA,CAAA;AAAA,SAAAzG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KATpC;AACA;AACA;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASg7E,cAAcA,CAAC56D,KAAK,EAAEC,MAAM,EAAE46D,WAAW,EAAEC,YAAY,EAAE;EAChE,IAAID,WAAW,KAAKl3E,SAAS,IAAIm3E,YAAY,KAAKn3E,SAAS,EAAE;IAC3D,OAAO,CAACk3E,WAAW,GAAG76D,KAAK,EAAE86D,YAAY,GAAG76D,MAAM,CAAC;EACrD;EACA,IAAI46D,WAAW,KAAKl3E,SAAS,EAAE;IAC7B,OAAOk3E,WAAW,GAAG76D,KAAK;EAC5B;EACA,IAAI86D,YAAY,KAAKn3E,SAAS,EAAE;IAC9B,OAAOm3E,YAAY,GAAG76D,MAAM;EAC9B;EACA,OAAO,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKM86D,IAAI,0BAAA/E,WAAA;EACR;AACF;AACA;EACE,SAAA+E,KAAY3yE,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAmhF,IAAA;IACnB3yE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;IACI,IAAM8kD,OAAO,GAAG9kD,OAAO,CAAC8kD,OAAO,KAAKvpD,SAAS,GAAGyE,OAAO,CAAC8kD,OAAO,GAAG,CAAC;;IAEnE;AACJ;AACA;IACI,IAAMtvC,QAAQ,GAAGxV,OAAO,CAACwV,QAAQ,KAAKja,SAAS,GAAGyE,OAAO,CAACwV,QAAQ,GAAG,CAAC;;IAEtE;AACJ;AACA;IACI,IAAM8F,KAAK,GAAGtb,OAAO,CAACsb,KAAK,KAAK/f,SAAS,GAAGyE,OAAO,CAACsb,KAAK,GAAG,CAAC;;IAE7D;AACJ;AACA;IACI,IAAM+wD,cAAc,GAClBrsE,OAAO,CAACqsE,cAAc,KAAK9wE,SAAS,GAAGyE,OAAO,CAACqsE,cAAc,GAAG,KAAK;IAEvEryE,KAAA,GAAAnB,UAAA,OAAA85E,IAAA,GAAM;MACJ7tB,OAAO,EAAEA,OAAO;MAChBtvC,QAAQ,EAAEA,QAAQ;MAClB8F,KAAK,EAAEA,KAAK;MACZmxD,YAAY,EACVzsE,OAAO,CAACysE,YAAY,KAAKlxE,SAAS,GAAGyE,OAAO,CAACysE,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpEJ,cAAc,EAAEA,cAAc;MAC9BM,aAAa,EAAE3sE,OAAO,CAAC2sE;IACzB,CAAC;;IAED;AACJ;AACA;AACA;IACI3yE,KAAA,CAAKgoD,OAAO,GAAGhiD,OAAO,CAAC8uB,MAAM,KAAKvzB,SAAS,GAAGyE,OAAO,CAAC8uB,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;;IAEzE;AACJ;AACA;AACA;IACI90B,KAAA,CAAK44E,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACI54E,KAAA,CAAK64E,aAAa,GAChB7yE,OAAO,CAAC8yE,YAAY,KAAKv3E,SAAS,GAAGyE,OAAO,CAAC8yE,YAAY,GAAG,UAAU;;IAExE;AACJ;AACA;AACA;IACI94E,KAAA,CAAK+4E,aAAa,GAChB/yE,OAAO,CAACgzE,YAAY,KAAKz3E,SAAS,GAAGyE,OAAO,CAACgzE,YAAY,GAAG,UAAU;;IAExE;AACJ;AACA;AACA;IACIh5E,KAAA,CAAKi5E,aAAa,GAChBjzE,OAAO,CAACkzE,YAAY,KAAK33E,SAAS,GAAGyE,OAAO,CAACkzE,YAAY,GAAG,UAAU;;IAExE;AACJ;AACA;AACA;IACIl5E,KAAA,CAAK4rE,YAAY,GACf5lE,OAAO,CAAC2kE,WAAW,KAAKppE,SAAS,GAAGyE,OAAO,CAAC2kE,WAAW,GAAG,IAAI;IAEhE,IAAM3B,KAAK,GAAGhjE,OAAO,CAAC0jE,GAAG,KAAKnoE,SAAS,GAAGyE,OAAO,CAAC0jE,GAAG,GAAG,IAAI;IAE5D,IAAI2D,QAAQ,GAAGrnE,OAAO,CAAC8jE,GAAG;IAE1B,IAAAt7D,eAAM,EACJ,EAAE6+D,QAAQ,KAAK9rE,SAAS,IAAIynE,KAAK,CAAC,EAClC,uDACF,CAAC;IAED,IAAI,CAACqE,QAAQ,KAAK9rE,SAAS,IAAI8rE,QAAQ,CAAC70E,MAAM,KAAK,CAAC,KAAKwwE,KAAK,EAAE;MAC9DqE,QAAQ,GAAG,+BAAiCrE,KAAK,CAAEc,GAAG,IAAI,IAAAxmE,YAAM,EAAC0lE,KAAK,CAAC;IACzE;IACA,IAAAx6D,eAAM,EACJ6+D,QAAQ,KAAK9rE,SAAS,IAAI8rE,QAAQ,CAAC70E,MAAM,GAAG,CAAC,EAC7C,2DACF,CAAC;IAED,IAAAgW,eAAM,EACJ,EACE,CAACxI,OAAO,CAAC4X,KAAK,KAAKrc,SAAS,IAAIyE,OAAO,CAAC6X,MAAM,KAAKtc,SAAS,KAC5DyE,OAAO,CAACsb,KAAK,KAAK/f,SAAS,CAC5B,EACD,8DACF,CAAC;IAED,IAAImqE,UAAU;IACd,IAAI1lE,OAAO,CAAC8jE,GAAG,KAAKvoE,SAAS,EAAE;MAC7BmqE,UAAU,GAAGhD,mBAAU,CAACt6D,IAAI;IAC9B,CAAC,MAAM,IAAI46D,KAAK,KAAKznE,SAAS,EAAE;MAC9B,IAAI,UAAU,IAAIynE,KAAK,EAAE;QACvB,IAAIA,KAAK,CAACliC,QAAQ,EAAE;UAClB4kC,UAAU,GAAG1C,KAAK,CAACc,GAAG,GAAGpB,mBAAU,CAACp6D,MAAM,GAAGo6D,mBAAU,CAACt6D,IAAI;QAC9D,CAAC,MAAM;UACLs9D,UAAU,GAAGhD,mBAAU,CAACr6D,OAAO;QACjC;MACF,CAAC,MAAM;QACLq9D,UAAU,GAAGhD,mBAAU,CAACp6D,MAAM;MAChC;IACF;;IAEA;AACJ;AACA;AACA;IACItO,KAAA,CAAK8rE,MAAM,GAAG9lE,OAAO,CAACo1D,KAAK,KAAK75D,SAAS,GAAG,IAAAm8D,cAAO,EAAC13D,OAAO,CAACo1D,KAAK,CAAC,GAAG,IAAI;;IAEzE;AACJ;AACA;AACA;IACIp7D,KAAA,CAAKm5E,UAAU,GAAG,IAAAtL,cAAY,EAC5B7E,KAAK,EACL,qBAAuBqE,QAAQ,EAC/BrtE,KAAA,CAAK4rE,YAAY,EACjBF,UAAU,EACV1rE,KAAA,CAAK8rE,MACP,CAAC;;IAED;AACJ;AACA;AACA;IACI9rE,KAAA,CAAKo5E,OAAO,GAAGpzE,OAAO,CAAC+T,MAAM,KAAKxY,SAAS,GAAGyE,OAAO,CAAC+T,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACrE;AACJ;AACA;AACA;IACI/Z,KAAA,CAAKq5E,aAAa,GAChBrzE,OAAO,CAACszE,YAAY,KAAK/3E,SAAS,GAAGyE,OAAO,CAACszE,YAAY,GAAG,UAAU;;IAExE;AACJ;AACA;AACA;IACIt5E,KAAA,CAAKg0E,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIh0E,KAAA,CAAKgsE,KAAK,GAAGhmE,OAAO,CAACqQ,IAAI,KAAK9U,SAAS,GAAGyE,OAAO,CAACqQ,IAAI,GAAG,IAAI;;IAE7D;AACJ;AACA;IACIrW,KAAA,CAAKu5E,eAAe;;IAEpB;AACJ;AACA;IACI,IAAIvzE,OAAO,CAAC4X,KAAK,KAAKrc,SAAS,IAAIyE,OAAO,CAAC6X,MAAM,KAAKtc,SAAS,EAAE;MAC/D,IAAIqc,KAAK,EAAEC,MAAM;MACjB,IAAI7X,OAAO,CAACqQ,IAAI,EAAE;QAAA,IAAAmjE,aAAA,GAAA/hE,cAAA,CACEzR,OAAO,CAACqQ,IAAI;QAA7BuH,KAAK,GAAA47D,aAAA;QAAE37D,MAAM,GAAA27D,aAAA;MAChB,CAAC,MAAM;QACL,IAAMxQ,MAAK,GAAGhpE,KAAA,CAAK6oE,QAAQ,CAAC,CAAC,CAAC;QAC9B,IAAIG,MAAK,CAACprD,KAAK,IAAIorD,MAAK,CAACnrD,MAAM,EAAE;UAC/BD,KAAK,GAAGorD,MAAK,CAACprD,KAAK;UACnBC,MAAM,GAAGmrD,MAAK,CAACnrD,MAAM;QACvB,CAAC,MAAM,IAAImrD,MAAK,YAAYC,gBAAgB,EAAE;UAC5CjpE,KAAA,CAAKu5E,eAAe,GAAGvzE,OAAO;UAC9B,IAAMyzE,OAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;YACnBz5E,KAAA,CAAKwzE,mBAAmB,CAACiG,OAAM,CAAC;YAChC,IAAI,CAACz5E,KAAA,CAAKu5E,eAAe,EAAE;cACzB;YACF;YACA,IAAMG,SAAS,GAAG15E,KAAA,CAAKm5E,UAAU,CAACt8D,OAAO,CAAC,CAAC;YAC3C7c,KAAA,CAAKszE,QAAQ,CACXkF,cAAc,CACZkB,SAAS,CAAC,CAAC,CAAC,EACZA,SAAS,CAAC,CAAC,CAAC,EACZ1zE,OAAO,CAAC4X,KAAK,EACb5X,OAAO,CAAC6X,MACV,CACF,CAAC;UACH,CAAC;UACD7d,KAAA,CAAKuzE,iBAAiB,CAACkG,OAAM,CAAC;UAC9B,OAAA16E,0BAAA,CAAAiB,KAAA;QACF;MACF;MACA,IAAI4d,KAAK,KAAKrc,SAAS,EAAE;QACvBvB,KAAA,CAAKszE,QAAQ,CACXkF,cAAc,CAAC56D,KAAK,EAAEC,MAAM,EAAE7X,OAAO,CAAC4X,KAAK,EAAE5X,OAAO,CAAC6X,MAAM,CAC7D,CAAC;MACH;IACF;IAAC,OAAA7d,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAg5E,IAAA,EAAA/E,WAAA;EAAA,OAAAl8E,YAAA,CAAAihF,IAAA;IAAAhhF,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAIuI,KAAK,EAAE1D,KAAK,EAAEC,MAAM;MACxB,IAAI,IAAI,CAAC07D,eAAe,EAAE;QACxB37D,KAAK,GAAG,IAAI,CAAC27D,eAAe,CAAC37D,KAAK;QAClCC,MAAM,GAAG,IAAI,CAAC07D,eAAe,CAAC17D,MAAM;MACtC,CAAC,MAAM;QACLyD,KAAK,GAAG,IAAI,CAACsxD,QAAQ,CAAC,CAAC;QACvBtxD,KAAK,GAAG3nB,KAAK,CAACC,OAAO,CAAC0nB,KAAK,CAAC,GAAGA,KAAK,CAAC1lB,KAAK,CAAC,CAAC,GAAG0lB,KAAK;MACtD;MACA,OAAO,IAAIq3D,IAAI,CAAC;QACd7jD,MAAM,EAAE,IAAI,CAACkzB,OAAO,CAACpsD,KAAK,CAAC,CAAC;QAC5Bk9E,YAAY,EAAE,IAAI,CAACD,aAAa;QAChCG,YAAY,EAAE,IAAI,CAACD,aAAa;QAChCG,YAAY,EAAE,IAAI,CAACD,aAAa;QAChC7d,KAAK,EACH,IAAI,CAAC0Q,MAAM,IAAI,IAAI,CAACA,MAAM,CAAClwE,KAAK,GAC5B,IAAI,CAACkwE,MAAM,CAAClwE,KAAK,CAAC,CAAC,GACnB,IAAI,CAACkwE,MAAM,IAAIvqE,SAAS;QAC9BopE,WAAW,EAAE,IAAI,CAACiB,YAAY;QAC9B7xD,MAAM,EAAE,IAAI,CAACq/D,OAAO,CAACx9E,KAAK,CAAC,CAAC;QAC5B09E,YAAY,EAAE,IAAI,CAACD,aAAa;QAChCvuB,OAAO,EAAE,IAAI,CAACS,UAAU,CAAC,CAAC;QAC1B8mB,cAAc,EAAE,IAAI,CAACQ,iBAAiB,CAAC,CAAC;QACxCr3D,QAAQ,EAAE,IAAI,CAACwqB,WAAW,CAAC,CAAC;QAC5B1kB,KAAK,EAALA,KAAK;QACL1D,KAAK,EAALA,KAAK;QACLC,MAAM,EAANA,MAAM;QACNxH,IAAI,EAAE,IAAI,CAAC21D,KAAK,KAAK,IAAI,GAAG,IAAI,CAACA,KAAK,CAACpwE,KAAK,CAAC,CAAC,GAAG2F,SAAS;QAC1DuoE,GAAG,EAAE,IAAI,CAACiD,MAAM,CAAC,CAAC;QAClB0F,YAAY,EAAE,IAAI,CAACK,eAAe,CAAC,CAAC,CAACl3E,KAAK,CAAC,CAAC;QAC5C+2E,aAAa,EAAE,IAAI,CAACI,gBAAgB,CAAC;MACvC,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAp7E,GAAA;IAAAC,KAAA,EAOA,SAAAq7E,SAASA,CAAA,EAAG;MACV,IAAIn+C,MAAM,GAAG,IAAI,CAAC8jD,iBAAiB;MACnC,IAAI,CAAC9jD,MAAM,EAAE;QACXA,MAAM,GAAG,IAAI,CAACkzB,OAAO;QACrB,IAAM3xC,IAAI,GAAG,IAAI,CAACwG,OAAO,CAAC,CAAC;QAC3B,IACE,IAAI,CAACk8D,aAAa,IAAI,UAAU,IAChC,IAAI,CAACE,aAAa,IAAI,UAAU,EAChC;UACA,IAAI,CAAC5iE,IAAI,EAAE;YACT,OAAO,IAAI;UACb;UACAye,MAAM,GAAG,IAAI,CAACkzB,OAAO,CAACpsD,KAAK,CAAC,CAAC;UAC7B,IAAI,IAAI,CAACm9E,aAAa,IAAI,UAAU,EAAE;YACpCjkD,MAAM,CAAC,CAAC,CAAC,IAAIze,IAAI,CAAC,CAAC,CAAC;UACtB;UACA,IAAI,IAAI,CAAC4iE,aAAa,IAAI,UAAU,EAAE;YACpCnkD,MAAM,CAAC,CAAC,CAAC,IAAIze,IAAI,CAAC,CAAC,CAAC;UACtB;QACF;QAEA,IAAI,IAAI,CAACwiE,aAAa,IAAI,UAAU,EAAE;UACpC,IAAI,CAACxiE,IAAI,EAAE;YACT,OAAO,IAAI;UACb;UACA,IAAIye,MAAM,KAAK,IAAI,CAACkzB,OAAO,EAAE;YAC3BlzB,MAAM,GAAG,IAAI,CAACkzB,OAAO,CAACpsD,KAAK,CAAC,CAAC;UAC/B;UACA,IACE,IAAI,CAACi9E,aAAa,IAAI,WAAW,IACjC,IAAI,CAACA,aAAa,IAAI,cAAc,EACpC;YACA/jD,MAAM,CAAC,CAAC,CAAC,GAAG,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGze,IAAI,CAAC,CAAC,CAAC;UAClC;UACA,IACE,IAAI,CAACwiE,aAAa,IAAI,aAAa,IACnC,IAAI,CAACA,aAAa,IAAI,cAAc,EACpC;YACA/jD,MAAM,CAAC,CAAC,CAAC,GAAG,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGze,IAAI,CAAC,CAAC,CAAC;UAClC;QACF;QACA,IAAI,CAACuiE,iBAAiB,GAAG9jD,MAAM;MACjC;MACA,IAAM29C,YAAY,GAAG,IAAI,CAACK,eAAe,CAAC,CAAC;MAC3C,IAAMxxD,KAAK,GAAG,IAAI,CAAC0xD,aAAa,CAAC,CAAC;MAClC;MACA;MACA,OAAO,CACLl+C,MAAM,CAAC,CAAC,CAAC,GAAG29C,YAAY,CAAC,CAAC,CAAC,GAAGnxD,KAAK,CAAC,CAAC,CAAC,EACtCwT,MAAM,CAAC,CAAC,CAAC,GAAG29C,YAAY,CAAC,CAAC,CAAC,GAAGnxD,KAAK,CAAC,CAAC,CAAC,CACvC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3pB,GAAA;IAAAC,KAAA,EAOA,SAAA+hF,SAASA,CAAC7kD,MAAM,EAAE;MAChB,IAAI,CAACkzB,OAAO,GAAGlzB,MAAM;MACrB,IAAI,CAAC8jD,iBAAiB,GAAG,IAAI;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjhF,GAAA;IAAAC,KAAA,EAKA,SAAAk/E,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAChL,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAn0E,GAAA;IAAAC,KAAA,EAQA,SAAAixE,QAAQA,CAACN,UAAU,EAAE;MACnB,OAAO,IAAI,CAAC4Q,UAAU,CAACtQ,QAAQ,CAACN,UAAU,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5wE,GAAA;IAAAC,KAAA,EAOA,SAAAkxE,aAAaA,CAACP,UAAU,EAAE;MACxB,OAAO,IAAI,CAAC4Q,UAAU,CAACrQ,aAAa,CAACP,UAAU,CAAC;IAClD;;IAEA;AACF;AACA;AACA;EAHE;IAAA5wE,GAAA;IAAAC,KAAA,EAIA,SAAAs7E,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACiG,UAAU,CAACt8D,OAAO,CAAC,CAAC;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAAllB,GAAA;IAAAC,KAAA,EAIA,SAAAmzE,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACoO,UAAU,CAACpO,aAAa,CAAC,CAAC;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAApzE,GAAA;IAAAC,KAAA,EAIA,SAAAi1E,oBAAoBA,CAAA,EAAG;MACrB,OAAO,IAAI,CAACsM,UAAU,CAACtM,oBAAoB,CAAC,CAAC;IAC/C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAl1E,GAAA;IAAAC,KAAA,EAMA,SAAAu7E,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACa,OAAO,EAAE;QAChB,OAAO,IAAI,CAACA,OAAO;MACrB;MACA,IAAIj6D,MAAM,GAAG,IAAI,CAACq/D,OAAO;MAEzB,IAAI,IAAI,CAACC,aAAa,IAAI,UAAU,EAAE;QACpC,IAAMhjE,IAAI,GAAG,IAAI,CAACwG,OAAO,CAAC,CAAC;QAC3B,IAAM+8D,aAAa,GAAG,IAAI,CAACT,UAAU,CAACt8D,OAAO,CAAC,CAAC;QAC/C,IAAI,CAACxG,IAAI,IAAI,CAACujE,aAAa,EAAE;UAC3B,OAAO,IAAI;QACb;QACA7/D,MAAM,GAAGA,MAAM,CAACne,KAAK,CAAC,CAAC;QACvB,IACE,IAAI,CAACy9E,aAAa,IAAI,WAAW,IACjC,IAAI,CAACA,aAAa,IAAI,cAAc,EACpC;UACAt/D,MAAM,CAAC,CAAC,CAAC,GAAG6/D,aAAa,CAAC,CAAC,CAAC,GAAGvjE,IAAI,CAAC,CAAC,CAAC,GAAG0D,MAAM,CAAC,CAAC,CAAC;QACpD;QACA,IACE,IAAI,CAACs/D,aAAa,IAAI,aAAa,IACnC,IAAI,CAACA,aAAa,IAAI,cAAc,EACpC;UACAt/D,MAAM,CAAC,CAAC,CAAC,GAAG6/D,aAAa,CAAC,CAAC,CAAC,GAAGvjE,IAAI,CAAC,CAAC,CAAC,GAAG0D,MAAM,CAAC,CAAC,CAAC;QACpD;MACF;MACA,IAAI,CAACi6D,OAAO,GAAGj6D,MAAM;MACrB,OAAO,IAAI,CAACi6D,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr8E,GAAA;IAAAC,KAAA,EAKA,SAAAm1E,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACoM,UAAU,CAACpM,MAAM,CAAC,CAAC;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp1E,GAAA;IAAAC,KAAA,EAMA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,CAAC,IAAI,CAACmvD,KAAK,GAAG,IAAI,CAACmN,UAAU,CAACt8D,OAAO,CAAC,CAAC,GAAG,IAAI,CAACmvD,KAAK;IAC7D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr0E,GAAA;IAAAC,KAAA,EAKA,SAAAqjB,QAAQA,CAAA,EAAG;MACT,IAAMqG,KAAK,GAAG,IAAI,CAAC0xD,aAAa,CAAC,CAAC;MAClC,IAAI,IAAI,CAAChH,KAAK,EAAE;QACd,OAAO,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG1qD,KAAK,CAAC,CAAC,CAAC;MACjC;MACA,IAAI,IAAI,CAAC63D,UAAU,CAACpO,aAAa,CAAC,CAAC,IAAIrC,mBAAU,CAACp6D,MAAM,EAAE;QACxD,OAAO,IAAI,CAAC6qE,UAAU,CAACt8D,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGyE,KAAK,CAAC,CAAC,CAAC;MAChD;MACA,OAAO/f,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5J,GAAA;IAAAC,KAAA,EAKA,SAAAsjB,SAASA,CAAA,EAAG;MACV,IAAMoG,KAAK,GAAG,IAAI,CAAC0xD,aAAa,CAAC,CAAC;MAClC,IAAI,IAAI,CAAChH,KAAK,EAAE;QACd,OAAO,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG1qD,KAAK,CAAC,CAAC,CAAC;MACjC;MACA,IAAI,IAAI,CAAC63D,UAAU,CAACpO,aAAa,CAAC,CAAC,IAAIrC,mBAAU,CAACp6D,MAAM,EAAE;QACxD,OAAO,IAAI,CAAC6qE,UAAU,CAACt8D,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGyE,KAAK,CAAC,CAAC,CAAC;MAChD;MACA,OAAO/f,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5J,GAAA;IAAAC,KAAA,EAOA,SAAA07E,QAAQA,CAAChyD,KAAK,EAAE;MACd,OAAO,IAAI,CAACi4D,eAAe;MAC3BhyE,aAAA,CAAAoxE,IAAA,wBAAer3D,KAAK;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAA3pB,GAAA;IAAAC,KAAA,EAIA,SAAA27E,iBAAiBA,CAACjzE,QAAQ,EAAE;MAC1B,IAAI,CAAC64E,UAAU,CAAC94E,gBAAgB,CAACwC,kBAAS,CAACvM,MAAM,EAAEgK,QAAQ,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3I,GAAA;IAAAC,KAAA,EAQA,SAAA2a,IAAIA,CAAA,EAAG;MACL,IAAI,CAAC4mE,UAAU,CAAC5mE,IAAI,CAAC,CAAC;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA5a,GAAA;IAAAC,KAAA,EAIA,SAAA47E,mBAAmBA,CAAClzE,QAAQ,EAAE;MAC5B,IAAI,CAAC64E,UAAU,CAAC93E,mBAAmB,CAACwB,kBAAS,CAACvM,MAAM,EAAEgK,QAAQ,CAAC;IACjE;;IAEA;AACF;AACA;EAFE;IAAA3I,GAAA;IAAAC,KAAA,EAGA,SAAAozE,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACmO,UAAU,CAACnO,KAAK,CAAC,CAAC;IAChC;EAAC;AAAA,EA1fgBkH,cAAU;AAAA,IAAAl8E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA6fdyiF,IAAI;;;;;;;;;;;;;;AC9kBnB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMkB,MAAM;EACV;AACF;AACA;EACE,SAAAA,OAAY7zE,OAAO,EAAE;IAAAxO,eAAA,OAAAqiF,MAAA;IACnB7zE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAAC8lE,MAAM,GAAG9lE,OAAO,CAACo1D,KAAK,KAAK75D,SAAS,GAAGyE,OAAO,CAACo1D,KAAK,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI,IAAI,CAAC0e,QAAQ,GAAG9zE,OAAO,CAACowE,OAAO;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAAC2D,SAAS,GAAG/zE,OAAO,CAACqwE,QAAQ,KAAK90E,SAAS,GAAGyE,OAAO,CAACqwE,QAAQ,GAAG,IAAI;;IAEzE;AACJ;AACA;AACA;IACI,IAAI,CAAC2D,eAAe,GAAGh0E,OAAO,CAACswE,cAAc;;IAE7C;AACJ;AACA;AACA;IACI,IAAI,CAAC2D,SAAS,GAAGj0E,OAAO,CAACqvE,QAAQ;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAAC6E,WAAW,GAAGl0E,OAAO,CAACuvE,UAAU;;IAErC;AACJ;AACA;AACA;IACI,IAAI,CAAC4E,MAAM,GAAGn0E,OAAO,CAAC4X,KAAK;EAC7B;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAAlmB,YAAA,CAAAmiF,MAAA;IAAAliF,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMqiD,KAAK,GAAG,IAAI,CAAC0b,QAAQ,CAAC,CAAC;MAC7B,OAAO,IAAI+C,MAAM,CAAC;QAChBze,KAAK,EAAEzhE,KAAK,CAACC,OAAO,CAACwhE,KAAK,CAAC,GAAGA,KAAK,CAACx/D,KAAK,CAAC,CAAC,GAAGw/D,KAAK,IAAI75D,SAAS;QAChE60E,OAAO,EAAE,IAAI,CAACc,UAAU,CAAC,CAAC;QAC1Bb,QAAQ,EAAE,IAAI,CAACU,WAAW,CAAC,CAAC,GAAG,IAAI,CAACA,WAAW,CAAC,CAAC,CAACn7E,KAAK,CAAC,CAAC,GAAG2F,SAAS;QACrE+0E,cAAc,EAAE,IAAI,CAACU,iBAAiB,CAAC,CAAC;QACxC3B,QAAQ,EAAE,IAAI,CAAC4B,WAAW,CAAC,CAAC;QAC5B1B,UAAU,EAAE,IAAI,CAAC4B,aAAa,CAAC,CAAC;QAChCv5D,KAAK,EAAE,IAAI,CAAC3C,QAAQ,CAAC;MACvB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtjB,GAAA;IAAAC,KAAA,EAKA,SAAAk/E,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAChL,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn0E,GAAA;IAAAC,KAAA,EAKA,SAAAs/E,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC4C,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAniF,GAAA;IAAAC,KAAA,EAKA,SAAAm/E,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACgD,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApiF,GAAA;IAAAC,KAAA,EAKA,SAAAo/E,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACgD,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAriF,GAAA;IAAAC,KAAA,EAKA,SAAAq/E,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACgD,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtiF,GAAA;IAAAC,KAAA,EAKA,SAAAu/E,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAAC+C,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAviF,GAAA;IAAAC,KAAA,EAKA,SAAAqjB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACk/D,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxiF,GAAA;IAAAC,KAAA,EAMA,SAAAwgF,QAAQA,CAAChd,KAAK,EAAE;MACd,IAAI,CAAC0Q,MAAM,GAAG1Q,KAAK;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzjE,GAAA;IAAAC,KAAA,EAMA,SAAAwiF,UAAUA,CAAChE,OAAO,EAAE;MAClB,IAAI,CAAC0D,QAAQ,GAAG1D,OAAO;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+E,GAAA;IAAAC,KAAA,EAMA,SAAA0/E,WAAWA,CAACjB,QAAQ,EAAE;MACpB,IAAI,CAAC0D,SAAS,GAAG1D,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1+E,GAAA;IAAAC,KAAA,EAMA,SAAAyiF,iBAAiBA,CAAC/D,cAAc,EAAE;MAChC,IAAI,CAAC0D,eAAe,GAAG1D,cAAc;IACvC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3+E,GAAA;IAAAC,KAAA,EAMA,SAAA0iF,WAAWA,CAACjF,QAAQ,EAAE;MACpB,IAAI,CAAC4E,SAAS,GAAG5E,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA19E,GAAA;IAAAC,KAAA,EAMA,SAAA2iF,aAAaA,CAAChF,UAAU,EAAE;MACxB,IAAI,CAAC2E,WAAW,GAAG3E,UAAU;IAC/B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA59E,GAAA;IAAAC,KAAA,EAMA,SAAA4iF,QAAQA,CAAC58D,KAAK,EAAE;MACd,IAAI,CAACu8D,MAAM,GAAGv8D,KAAK;IACrB;EAAC;AAAA;AAAA,IAAA5nB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY2jF,MAAM;;;;;;;;;;;AC/NrB,IAAAlrE,QAAA,GAAA1T,OAAA;AACA,IAAAw/E,OAAA,GAAAr9E,sBAAA,CAAAnC,OAAA;AACA,IAAAy/E,KAAA,GAAAt9E,sBAAA,CAAAnC,OAAA;AACA,IAAA0/E,OAAA,GAAAv9E,sBAAA,CAAAnC,OAAA;AAAiC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAPjxO,eAAA,OAAAojF,KAAA;IACnB50E,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACo9C,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACy3B,iBAAiB,GAAGC,uBAAuB;IAEhD,IAAI90E,OAAO,CAAC8c,QAAQ,KAAKvhB,SAAS,EAAE;MAClC,IAAI,CAACw5E,WAAW,CAAC/0E,OAAO,CAAC8c,QAAQ,CAAC;IACpC;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAACgxD,KAAK,GAAG9tE,OAAO,CAAC+tE,IAAI,KAAKxyE,SAAS,GAAGyE,OAAO,CAAC+tE,IAAI,GAAG,IAAI;;IAE7D;AACJ;AACA;AACA;IACI,IAAI,CAACpL,MAAM,GAAG3iE,OAAO,CAACgjE,KAAK,KAAKznE,SAAS,GAAGyE,OAAO,CAACgjE,KAAK,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI,IAAI,CAACza,SAAS,GAAGvoD,OAAO,CAACg1E,QAAQ,KAAKz5E,SAAS,GAAGyE,OAAO,CAACg1E,QAAQ,GAAG,IAAI;;IAEzE;AACJ;AACA;AACA;IACI,IAAI,CAACC,qBAAqB,GACxBj1E,OAAO,CAACk1E,oBAAoB,KAAK35E,SAAS,GACtCyE,OAAO,CAACk1E,oBAAoB,GAC5B,IAAI;;IAEV;AACJ;AACA;AACA;IACI,IAAI,CAAC9G,OAAO,GAAGpuE,OAAO,CAACquE,MAAM,KAAK9yE,SAAS,GAAGyE,OAAO,CAACquE,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAAC8G,KAAK,GAAGn1E,OAAO,CAACipE,IAAI,KAAK1tE,SAAS,GAAGyE,OAAO,CAACipE,IAAI,GAAG,IAAI;;IAE7D;AACJ;AACA;AACA;IACI,IAAI,CAACmM,OAAO,GAAGp1E,OAAO,CAAC+kD,MAAM;EAC/B;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAArzD,YAAA,CAAAkjF,KAAA;IAAAjjF,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MAAA,IAAAsiE,iBAAA;MACN,IAAIv4D,QAAQ,GAAG,IAAI,CAACmhC,WAAW,CAAC,CAAC;MACjC,IAAInhC,QAAQ,IAAIplB,OAAA,CAAOolB,QAAQ,MAAK,QAAQ,EAAE;QAC5CA,QAAQ,GAAG,oDACTA,QAAQ,CACR/J,KAAK,CAAC,CAAC;MACX;MACA,OAAO,IAAI6hE,KAAK,CAAC;QACf93D,QAAQ,EAAEA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIvhB,SAAS;QAC/BwyE,IAAI,EAAE,IAAI,CAACS,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACz7D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QACzDynE,KAAK,EAAE,IAAI,CAACH,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC,CAAC9vD,KAAK,CAAC,CAAC,GAAGxX,SAAS;QAC5Dy5E,QAAQ,GAAAK,iBAAA,GAAE,IAAI,CAAC1rB,WAAW,CAAC,CAAC,cAAA0rB,iBAAA,cAAAA,iBAAA,GAAI95E,SAAS;QACzC8yE,MAAM,EAAE,IAAI,CAACM,SAAS,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC57D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QAC/D0tE,IAAI,EAAE,IAAI,CAACqM,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACviE,KAAK,CAAC,CAAC,GAAGxX,SAAS;QACzDwpD,MAAM,EAAE,IAAI,CAACO,SAAS,CAAC;MACzB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3zD,GAAA;IAAAC,KAAA,EAMA,SAAA+3D,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACpB,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA52D,GAAA;IAAAC,KAAA,EAMA,SAAA2jF,WAAWA,CAACP,QAAQ,EAAE;MACpB,IAAI,CAACzsB,SAAS,GAAGysB,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArjF,GAAA;IAAAC,KAAA,EAMA,SAAA4jF,uBAAuBA,CAACR,QAAQ,EAAE;MAChC,IAAI,CAACC,qBAAqB,GAAGD,QAAQ;IACvC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArjF,GAAA;IAAAC,KAAA,EAMA,SAAA6jF,uBAAuBA,CAAA,EAAG;MACxB,OAAO,IAAI,CAACR,qBAAqB;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAtjF,GAAA;IAAAC,KAAA,EAOA,SAAAqsD,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACb,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzrD,GAAA;IAAAC,KAAA,EAMA,SAAA8jF,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACb,iBAAiB;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAljF,GAAA;IAAAC,KAAA,EAKA,SAAA48E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACV,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn8E,GAAA;IAAAC,KAAA,EAKA,SAAAg9E,OAAOA,CAACb,IAAI,EAAE;MACZ,IAAI,CAACD,KAAK,GAAGC,IAAI;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAp8E,GAAA;IAAAC,KAAA,EAKA,SAAAixE,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACF,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhxE,GAAA;IAAAC,KAAA,EAKA,SAAA0xE,QAAQA,CAACN,KAAK,EAAE;MACd,IAAI,CAACL,MAAM,GAAGK,KAAK;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArxE,GAAA;IAAAC,KAAA,EAKA,SAAA+8E,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz8E,GAAA;IAAAC,KAAA,EAKA,SAAAu9E,SAASA,CAACd,MAAM,EAAE;MAChB,IAAI,CAACD,OAAO,GAAGC,MAAM;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA18E,GAAA;IAAAC,KAAA,EAKA,SAAA0jF,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACH,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxjF,GAAA;IAAAC,KAAA,EAKA,SAAA+jF,OAAOA,CAAC1M,IAAI,EAAE;MACZ,IAAI,CAACkM,KAAK,GAAGlM,IAAI;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAt3E,GAAA;IAAAC,KAAA,EAKA,SAAA0zD,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC8vB,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAzjF,GAAA;IAAAC,KAAA,EAQA,SAAAmjF,WAAWA,CAACj4D,QAAQ,EAAE;MACpB,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;QAClC,IAAI,CAAC+3D,iBAAiB,GAAG/3D,QAAQ;MACnC,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;QACvC,IAAI,CAAC+3D,iBAAiB,GAAG,UAAUe,OAAO,EAAE;UAC1C,OAAO,oDACLA,OAAO,CAACv3E,GAAG,CAACye,QAAQ,CAAC;QAEzB,CAAC;MACH,CAAC,MAAM,IAAI,CAACA,QAAQ,EAAE;QACpB,IAAI,CAAC+3D,iBAAiB,GAAGC,uBAAuB;MAClD,CAAC,MAAM,IAAIh4D,QAAQ,KAAKvhB,SAAS,EAAE;QACjC,IAAI,CAACs5E,iBAAiB,GAAG,YAAY;UACnC,OAAO,oDAAsD/3D,QAAQ;QACvE,CAAC;MACH;MACA,IAAI,CAACsgC,SAAS,GAAGtgC,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAnrB,GAAA;IAAAC,KAAA,EAMA,SAAAs0D,SAASA,CAACnB,MAAM,EAAE;MAChB,IAAI,CAACqwB,OAAO,GAAGrwB,MAAM;IACvB;EAAC;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8wB,UAAUA,CAAC/hF,GAAG,EAAE;EAC9B,IAAIgiF,aAAa;EAEjB,IAAI,OAAOhiF,GAAG,KAAK,UAAU,EAAE;IAC7BgiF,aAAa,GAAGhiF,GAAG;EACrB,CAAC,MAAM;IACL;AACJ;AACA;IACI,IAAIiiF,MAAM;IACV,IAAIpiF,KAAK,CAACC,OAAO,CAACE,GAAG,CAAC,EAAE;MACtBiiF,MAAM,GAAGjiF,GAAG;IACd,CAAC,MAAM;MACL,IAAA0U,eAAM,EACJ,QAAQ,gBAAkB1U,GAAG,CAAEwxD,SAAS,CAAC,KAAK,UAAU,EACxD,4CACF,CAAC;MACD,IAAM9b,KAAK,GAAG,oBAAsB11C,GAAI;MACxCiiF,MAAM,GAAG,CAACvsC,KAAK,CAAC;IAClB;IACAssC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAe;MAC1B,OAAOC,MAAM;IACf,CAAC;EACH;EACA,OAAOD,aAAa;AACtB;;AAEA;AACA;AACA;AACA,IAAIE,aAAa,GAAG,IAAI;;AAExB;AACA;AACA;AACA;AACA;AACO,SAASC,kBAAkBA,CAACL,OAAO,EAAExlE,UAAU,EAAE;EACtD;EACA;EACA;EACA;EACA;EACA,IAAI,CAAC4lE,aAAa,EAAE;IAClB,IAAMjI,IAAI,GAAG,IAAImE,aAAI,CAAC;MACpB9c,KAAK,EAAE;IACT,CAAC,CAAC;IACF,IAAMiZ,MAAM,GAAG,IAAIwF,eAAM,CAAC;MACxBze,KAAK,EAAE,SAAS;MAChBx9C,KAAK,EAAE;IACT,CAAC,CAAC;IACFo+D,aAAa,GAAG,CACd,IAAIpB,KAAK,CAAC;MACR5R,KAAK,EAAE,IAAI+O,eAAW,CAAC;QACrBhE,IAAI,EAAEA,IAAI;QACVM,MAAM,EAAEA,MAAM;QACd9xD,MAAM,EAAE;MACV,CAAC,CAAC;MACFwxD,IAAI,EAAEA,IAAI;MACVM,MAAM,EAAEA;IACV,CAAC,CAAC,CACH;EACH;EACA,OAAO2H,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACO,SAASE,kBAAkBA,CAAA,EAAG;EACnC;EACA,IAAMH,MAAM,GAAG,CAAC,CAAC;EACjB,IAAMviB,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAChC,IAAMtI,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC7B,IAAMtzC,KAAK,GAAG,CAAC;EACfm+D,MAAM,CAAC,SAAS,CAAC,GAAG,CAClB,IAAInB,KAAK,CAAC;IACR7G,IAAI,EAAE,IAAImE,aAAI,CAAC;MACb9c,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAC5B,CAAC;EACH,CAAC,CAAC,CACH;EACD2gB,MAAM,CAAC,cAAc,CAAC,GAAGA,MAAM,CAAC,SAAS,CAAC;EAE1CA,MAAM,CAAC,YAAY,CAAC,GAAG,CACrB,IAAInB,KAAK,CAAC;IACRvG,MAAM,EAAE,IAAIwF,eAAM,CAAC;MACjBze,KAAK,EAAE5B,KAAK;MACZ57C,KAAK,EAAEA,KAAK,GAAG;IACjB,CAAC;EACH,CAAC,CAAC,EACF,IAAIg9D,KAAK,CAAC;IACRvG,MAAM,EAAE,IAAIwF,eAAM,CAAC;MACjBze,KAAK,EAAElK,IAAI;MACXtzC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACH;EACDm+D,MAAM,CAAC,iBAAiB,CAAC,GAAGA,MAAM,CAAC,YAAY,CAAC;EAEhDA,MAAM,CAAC,QAAQ,CAAC,GAAGA,MAAM,CAAC,SAAS,CAAC,CAACj3E,MAAM,CAACi3E,MAAM,CAAC,YAAY,CAAC,CAAC;EAEjEA,MAAM,CAAC,OAAO,CAAC,GAAG,CAChB,IAAInB,KAAK,CAAC;IACR5R,KAAK,EAAE,IAAI+O,eAAW,CAAC;MACrBx1D,MAAM,EAAE3E,KAAK,GAAG,CAAC;MACjBm2D,IAAI,EAAE,IAAImE,aAAI,CAAC;QACb9c,KAAK,EAAElK;MACT,CAAC,CAAC;MACFmjB,MAAM,EAAE,IAAIwF,eAAM,CAAC;QACjBze,KAAK,EAAE5B,KAAK;QACZ57C,KAAK,EAAEA,KAAK,GAAG;MACjB,CAAC;IACH,CAAC,CAAC;IACFmtC,MAAM,EAAEn8C;EACV,CAAC,CAAC,CACH;EACDmtE,MAAM,CAAC,YAAY,CAAC,GAAGA,MAAM,CAAC,OAAO,CAAC;EAEtCA,MAAM,CAAC,oBAAoB,CAAC,GAAGA,MAAM,CAAC,SAAS,CAAC,CAACj3E,MAAM,CACrDi3E,MAAM,CAAC,YAAY,CAAC,EACpBA,MAAM,CAAC,OAAO,CAChB,CAAC;EAED,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASjB,uBAAuBA,CAACc,OAAO,EAAE;EACxC,OAAOA,OAAO,CAAC33B,WAAW,CAAC,CAAC;AAC9B;AAAC,IAAAjuD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc0kF,KAAK;;;;;;;;AC/jBpB,IAAA5c,KAAA,GAAA/iE,OAAA;AACA,IAAAy/E,KAAA,GAAAt9E,sBAAA,CAAAnC,OAAA;AAA6B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAJ7B;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMi+E,kBAAkB,GAAG,MAAM;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMC,IAAI;EACR;AACF;AACA;EACE,SAAAA,KAAYp2E,OAAO,EAAE;IAAAxO,eAAA,OAAA4kF,IAAA;IACnBp2E,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACq2E,KAAK,GAAGr2E,OAAO,CAAC6pE,IAAI;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAAC90B,SAAS,GAAG/0C,OAAO,CAACwV,QAAQ;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAAC42D,eAAe,GAAGpsE,OAAO,CAACqsE,cAAc;;IAE7C;AACJ;AACA;AACA;IACI,IAAI,CAACiK,YAAY,GAAGt2E,OAAO,CAACu2E,WAAW;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAACjK,MAAM,GAAGtsE,OAAO,CAACsb,KAAK;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACixD,WAAW,GAAG,IAAAzU,YAAM,EAAC93D,OAAO,CAACsb,KAAK,KAAK/f,SAAS,GAAGyE,OAAO,CAACsb,KAAK,GAAG,CAAC,CAAC;;IAE1E;AACJ;AACA;AACA;IACI,IAAI,CAAC65D,KAAK,GAAGn1E,OAAO,CAACipE,IAAI;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACuN,UAAU,GAAGx2E,OAAO,CAACy2E,SAAS;;IAEnC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG12E,OAAO,CAAC22E,OAAO;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG52E,OAAO,CAAC62E,MAAM;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG92E,OAAO,CAAC+2E,YAAY;;IAEzC;AACJ;AACA;AACA;IACI,IAAI,CAACjJ,KAAK,GACR9tE,OAAO,CAAC+tE,IAAI,KAAKxyE,SAAS,GACtByE,OAAO,CAAC+tE,IAAI,GACZ,IAAImE,aAAI,CAAC;MAAC9c,KAAK,EAAE+gB;IAAkB,CAAC,CAAC;;IAE3C;AACJ;AACA;AACA;IACI,IAAI,CAACa,SAAS,GACZh3E,OAAO,CAACi3E,QAAQ,KAAK17E,SAAS,GAAGyE,OAAO,CAACi3E,QAAQ,GAAG1vE,IAAI,CAAC0H,EAAE,GAAG,CAAC;;IAEjE;AACJ;AACA;AACA;IACI,IAAI,CAACioE,UAAU,GACbl3E,OAAO,CAACm3E,SAAS,KAAK57E,SAAS,GAAGyE,OAAO,CAACm3E,SAAS,GAAG,OAAO;;IAE/D;AACJ;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAG,CAAC,CAACp3E,OAAO,CAACq3E,QAAQ;;IAEnC;AACJ;AACA;AACA;IACI,IAAI,CAACjJ,OAAO,GAAGpuE,OAAO,CAACquE,MAAM,KAAK9yE,SAAS,GAAGyE,OAAO,CAACquE,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAACiJ,QAAQ,GAAGt3E,OAAO,CAAC2/B,OAAO,KAAKpkC,SAAS,GAAGyE,OAAO,CAAC2/B,OAAO,GAAG,CAAC;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAAC43C,QAAQ,GAAGv3E,OAAO,CAAC4/B,OAAO,KAAKrkC,SAAS,GAAGyE,OAAO,CAAC4/B,OAAO,GAAG,CAAC;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAAC43C,eAAe,GAAGx3E,OAAO,CAACy3E,cAAc,GACzCz3E,OAAO,CAACy3E,cAAc,GACtB,IAAI;;IAER;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GAAG13E,OAAO,CAAC23E,gBAAgB,GAC7C33E,OAAO,CAAC23E,gBAAgB,GACxB,IAAI;;IAER;AACJ;AACA;AACA;IACI,IAAI,CAACp5C,QAAQ,GAAGv+B,OAAO,CAACw+B,OAAO,KAAKjjC,SAAS,GAAG,IAAI,GAAGyE,OAAO,CAACw+B,OAAO;;IAEtE;AACJ;AACA;AACA;IACI,IAAI,CAACkuC,cAAc,GAAG1sE,OAAO,CAAC2sE,aAAa;EAC7C;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAAj7E,YAAA,CAAA0kF,IAAA;IAAAzkF,GAAA;IAAAC,KAAA,EAKA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMuI,KAAK,GAAG,IAAI,CAACsxD,QAAQ,CAAC,CAAC;MAC7B,OAAO,IAAIwJ,IAAI,CAAC;QACdvM,IAAI,EAAE,IAAI,CAAC+N,OAAO,CAAC,CAAC;QACpBT,SAAS,EAAE,IAAI,CAACU,YAAY,CAAC,CAAC;QAC9BhB,MAAM,EAAE,IAAI,CAACiB,SAAS,CAAC,CAAC;QACxBb,QAAQ,EAAE,IAAI,CAACc,WAAW,CAAC,CAAC;QAC5BV,QAAQ,EAAE,IAAI,CAACW,WAAW,CAAC,CAAC;QAC5BxiE,QAAQ,EAAE,IAAI,CAACwqB,WAAW,CAAC,CAAC;QAC5BqsC,cAAc,EAAE,IAAI,CAACQ,iBAAiB,CAAC,CAAC;QACxC0J,WAAW,EAAE,IAAI,CAAC0B,cAAc,CAAC,CAAC;QAClC38D,KAAK,EAAE3nB,KAAK,CAACC,OAAO,CAAC0nB,KAAK,CAAC,GAAGA,KAAK,CAAC1lB,KAAK,CAAC,CAAC,GAAG0lB,KAAK;QACnD2tD,IAAI,EAAE,IAAI,CAACqM,OAAO,CAAC,CAAC;QACpBmB,SAAS,EAAE,IAAI,CAACyB,YAAY,CAAC,CAAC;QAC9BvB,OAAO,EAAE,IAAI,CAACwB,UAAU,CAAC,CAAC;QAC1BpB,YAAY,EAAE,IAAI,CAACqB,eAAe,CAAC,CAAC;QACpCrK,IAAI,EAAE,IAAI,CAACS,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACz7D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QACzD8yE,MAAM,EAAE,IAAI,CAACM,SAAS,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC57D,KAAK,CAAC,CAAC,GAAGxX,SAAS;QAC/DokC,OAAO,EAAE,IAAI,CAAC04C,UAAU,CAAC,CAAC;QAC1Bz4C,OAAO,EAAE,IAAI,CAAC04C,UAAU,CAAC,CAAC;QAC1Bb,cAAc,EAAE,IAAI,CAACc,iBAAiB,CAAC,CAAC,GACpC,IAAI,CAACA,iBAAiB,CAAC,CAAC,CAACxlE,KAAK,CAAC,CAAC,GAChCxX,SAAS;QACbo8E,gBAAgB,EAAE,IAAI,CAACa,mBAAmB,CAAC,CAAC,GACxC,IAAI,CAACA,mBAAmB,CAAC,CAAC,CAACzlE,KAAK,CAAC,CAAC,GAClCxX,SAAS;QACbijC,OAAO,EAAE,IAAI,CAACi6C,UAAU,CAAC,CAAC,IAAIl9E,SAAS;QACvCoxE,aAAa,EAAE,IAAI,CAACI,gBAAgB,CAAC;MACvC,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAp7E,GAAA;IAAAC,KAAA,EAKA,SAAAomF,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACZ,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAzlF,GAAA;IAAAC,KAAA,EAKA,SAAAgmF,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACvB,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1kF,GAAA;IAAAC,KAAA,EAKA,SAAAmmF,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACf,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArlF,GAAA;IAAAC,KAAA,EAKA,SAAAimF,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACX,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAvlF,GAAA;IAAAC,KAAA,EAKA,SAAAkmF,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAClB,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjlF,GAAA;IAAAC,KAAA,EAKA,SAAAymF,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACf,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3lF,GAAA;IAAAC,KAAA,EAKA,SAAA0mF,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACf,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5lF,GAAA;IAAAC,KAAA,EAKA,SAAA48E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACV,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn8E,GAAA;IAAAC,KAAA,EAKA,SAAAi7E,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACT,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz6E,GAAA;IAAAC,KAAA,EAKA,SAAAqmF,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC3B,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3kF,GAAA;IAAAC,KAAA,EAKA,SAAAouC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC+U,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApjD,GAAA;IAAAC,KAAA,EAKA,SAAAg7E,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACN,MAAM;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAA36E,GAAA;IAAAC,KAAA,EAIA,SAAAo7E,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACT,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA56E,GAAA;IAAAC,KAAA,EAKA,SAAA+8E,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz8E,GAAA;IAAAC,KAAA,EAKA,SAAA0jF,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACH,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxjF,GAAA;IAAAC,KAAA,EAKA,SAAAsmF,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC1B,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7kF,GAAA;IAAAC,KAAA,EAKA,SAAAumF,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACzB,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/kF,GAAA;IAAAC,KAAA,EAKA,SAAAwmF,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACtB,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnlF,GAAA;IAAAC,KAAA,EAKA,SAAA2mF,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACf,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7lF,GAAA;IAAAC,KAAA,EAKA,SAAA4mF,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACd,iBAAiB;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/lF,GAAA;IAAAC,KAAA,EAKA,SAAA6mF,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACl6C,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5sC,GAAA;IAAAC,KAAA,EAKA,SAAAm7E,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACL,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/6E,GAAA;IAAAC,KAAA,EAMA,SAAA8mF,WAAWA,CAACrB,QAAQ,EAAE;MACpB,IAAI,CAACD,SAAS,GAAGC,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1lF,GAAA;IAAAC,KAAA,EAMA,SAAA+mF,OAAOA,CAAC9O,IAAI,EAAE;MACZ,IAAI,CAACwM,KAAK,GAAGxM,IAAI;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAl4E,GAAA;IAAAC,KAAA,EAMA,SAAAgnF,WAAWA,CAAC3B,QAAQ,EAAE;MACpB,IAAI,CAACD,SAAS,GAAGC,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtlF,GAAA;IAAAC,KAAA,EAMA,SAAAinF,UAAUA,CAACl5C,OAAO,EAAE;MAClB,IAAI,CAAC23C,QAAQ,GAAG33C,OAAO;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhuC,GAAA;IAAAC,KAAA,EAMA,SAAAknF,UAAUA,CAACl5C,OAAO,EAAE;MAClB,IAAI,CAAC23C,QAAQ,GAAG33C,OAAO;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjuC,GAAA;IAAAC,KAAA,EAMA,SAAAmnF,YAAYA,CAAC5B,SAAS,EAAE;MACtB,IAAI,CAACD,UAAU,GAAGC,SAAS;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxlF,GAAA;IAAAC,KAAA,EAKA,SAAAonF,SAASA,CAACnC,MAAM,EAAE;MAChB,IAAI,CAACD,OAAO,GAAGC,MAAM;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAllF,GAAA;IAAAC,KAAA,EAMA,SAAAy7E,iBAAiBA,CAAChB,cAAc,EAAE;MAChC,IAAI,CAACD,eAAe,GAAGC,cAAc;IACvC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA16E,GAAA;IAAAC,KAAA,EAMA,SAAAqnF,cAAcA,CAAC1C,WAAW,EAAE;MAC1B,IAAI,CAACD,YAAY,GAAGC,WAAW;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5kF,GAAA;IAAAC,KAAA,EAMA,SAAAg9E,OAAOA,CAACb,IAAI,EAAE;MACZ,IAAI,CAACD,KAAK,GAAGC,IAAI;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp8E,GAAA;IAAAC,KAAA,EAMA,SAAAstC,WAAWA,CAAC1pB,QAAQ,EAAE;MACpB,IAAI,CAACu/B,SAAS,GAAGv/B,QAAQ;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7jB,GAAA;IAAAC,KAAA,EAMA,SAAA07E,QAAQA,CAAChyD,KAAK,EAAE;MACd,IAAI,CAACgxD,MAAM,GAAGhxD,KAAK;MACnB,IAAI,CAACixD,WAAW,GAAG,IAAAzU,YAAM,EAACx8C,KAAK,KAAK/f,SAAS,GAAG+f,KAAK,GAAG,CAAC,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3pB,GAAA;IAAAC,KAAA,EAMA,SAAAu9E,SAASA,CAACd,MAAM,EAAE;MAChB,IAAI,CAACD,OAAO,GAAGC,MAAM;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA18E,GAAA;IAAAC,KAAA,EAMA,SAAA+jF,OAAOA,CAAC1M,IAAI,EAAE;MACZ,IAAI,CAACkM,KAAK,GAAGlM,IAAI;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAt3E,GAAA;IAAAC,KAAA,EAMA,SAAAsnF,YAAYA,CAACzC,SAAS,EAAE;MACtB,IAAI,CAACD,UAAU,GAAGC,SAAS;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA9kF,GAAA;IAAAC,KAAA,EAMA,SAAAunF,UAAUA,CAACxC,OAAO,EAAE;MAClB,IAAI,CAACD,QAAQ,GAAGC,OAAO;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhlF,GAAA;IAAAC,KAAA,EAMA,SAAAwnF,eAAeA,CAACrC,YAAY,EAAE;MAC5B,IAAI,CAACD,aAAa,GAAGC,YAAY;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAplF,GAAA;IAAAC,KAAA,EAMA,SAAAynF,iBAAiBA,CAACtL,IAAI,EAAE;MACtB,IAAI,CAACyJ,eAAe,GAAGzJ,IAAI;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp8E,GAAA;IAAAC,KAAA,EAMA,SAAA0nF,mBAAmBA,CAACjL,MAAM,EAAE;MAC1B,IAAI,CAACqJ,iBAAiB,GAAGrJ,MAAM;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA18E,GAAA;IAAAC,KAAA,EAMA,SAAA2nF,UAAUA,CAAC/6C,OAAO,EAAE;MAClB,IAAI,CAACD,QAAQ,GAAGC,OAAO;IACzB;EAAC;AAAA;AAAA,IAAAxuC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYkmF,IAAI;;;;;;;;;;;AC5oBnB,IAAAre,MAAA,GAAA9iE,OAAA;AACA,IAAAukF,IAAA,GAAAvkF,OAAA;AACA,IAAAkrE,WAAA,GAAAlrE,OAAA;AASA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAAw/E,OAAA,GAAAr9E,sBAAA,CAAAnC,OAAA;AACA,IAAAy/E,KAAA,GAAAt9E,sBAAA,CAAAnC,OAAA;AACA,IAAAwkF,KAAA,GAAAriF,sBAAA,CAAAnC,OAAA;AACA,IAAA+8E,aAAA,GAAA56E,sBAAA,CAAAnC,OAAA;AACA,IAAA0/E,OAAA,GAAAv9E,sBAAA,CAAAnC,OAAA;AACA,IAAAykF,MAAA,GAAAtiF,sBAAA,CAAAnC,OAAA;AACA,IAAA0kF,KAAA,GAAAviF,sBAAA,CAAAnC,OAAA;AAAuC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAA4qB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA,IAvBvC;AACA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS4mD,MAAMA,CAACpP,OAAO,EAAE;EACvB,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmvC,oBAAoBA,CAACC,KAAK,EAAE;EAC1C,IAAMC,cAAc,GAAG,IAAA3f,6BAAiB,EAAC,CAAC;EAC1C,IAAM4f,SAAS,GAAGC,YAAY,CAACH,KAAK,EAAEC,cAAc,CAAC;EACrD,IAAMG,iBAAiB,GAAG,IAAA7Z,yBAAoB,EAAC,CAAC;EAChD,OAAO,UAAUwV,OAAO,EAAExlE,UAAU,EAAE;IACpC6pE,iBAAiB,CAACn8C,UAAU,GAAG83C,OAAO,CAACl3E,qBAAqB,CAAC,CAAC;IAC9Du7E,iBAAiB,CAAC7pE,UAAU,GAAGA,UAAU;IACzC,IAAI0pE,cAAc,CAACzf,SAAS,EAAE;MAC5B,IAAM1zD,EAAE,GAAGivE,OAAO,CAACsE,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB0+E,iBAAiB,CAAC5f,SAAS,GAAG1zD,EAAE;MAClC,CAAC,MAAM;QACLszE,iBAAiB,CAAC5f,SAAS,GAAG,IAAI;MACpC;IACF;IACA,IAAIyf,cAAc,CAACxf,YAAY,EAAE;MAC/B2f,iBAAiB,CAAC3f,YAAY,GAAG,IAAA2F,+BAAmB,EAClD2V,OAAO,CAAC33B,WAAW,CAAC,CACtB,CAAC;IACH;IACA,OAAO87B,SAAS,CAACE,iBAAiB,CAAC;EACrC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,yBAAyBA,CAACC,UAAU,EAAE;EACpD,IAAMN,cAAc,GAAG,IAAA3f,6BAAiB,EAAC,CAAC;EAC1C,IAAM3nE,MAAM,GAAG4nF,UAAU,CAAC5nF,MAAM;;EAEhC;AACF;AACA;EACE,IAAM6nF,UAAU,GAAG,IAAI1mF,KAAK,CAACnB,MAAM,CAAC;EACpC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/BmnF,UAAU,CAACnnF,CAAC,CAAC,GAAGonF,UAAU,CAACF,UAAU,CAAClnF,CAAC,CAAC,EAAE4mF,cAAc,CAAC;EAC3D;EACA,IAAMG,iBAAiB,GAAG,IAAA7Z,yBAAoB,EAAC,CAAC;;EAEhD;AACF;AACA;EACE,IAAM2V,MAAM,GAAG,IAAIpiF,KAAK,CAACnB,MAAM,CAAC;EAEhC,OAAO,UAAUojF,OAAO,EAAExlE,UAAU,EAAE;IACpC6pE,iBAAiB,CAACn8C,UAAU,GAAG83C,OAAO,CAACl3E,qBAAqB,CAAC,CAAC;IAC9Du7E,iBAAiB,CAAC7pE,UAAU,GAAGA,UAAU;IACzC,IAAI0pE,cAAc,CAACzf,SAAS,EAAE;MAC5B,IAAM1zD,EAAE,GAAGivE,OAAO,CAACsE,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB0+E,iBAAiB,CAAC5f,SAAS,GAAG1zD,EAAE;MAClC,CAAC,MAAM;QACLszE,iBAAiB,CAAC5f,SAAS,GAAG,IAAI;MACpC;IACF;IACA,IAAIkgB,YAAY,GAAG,CAAC;IACpB,KAAK,IAAIrnF,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGV,MAAM,EAAE,EAAEU,EAAC,EAAE;MAC/B,IAAMs2C,KAAK,GAAG6wC,UAAU,CAACnnF,EAAC,CAAC,CAAC+mF,iBAAiB,CAAC;MAC9C,IAAIzwC,KAAK,EAAE;QACTusC,MAAM,CAACwE,YAAY,CAAC,GAAG/wC,KAAK;QAC5B+wC,YAAY,IAAI,CAAC;MACnB;IACF;IACAxE,MAAM,CAACvjF,MAAM,GAAG+nF,YAAY;IAC5B,OAAOxE,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASiE,YAAYA,CAACH,KAAK,EAAEpvC,OAAO,EAAE;EAC3C,IAAMj4C,MAAM,GAAGqnF,KAAK,CAACrnF,MAAM;;EAE3B;AACF;AACA;EACE,IAAMgoF,aAAa,GAAG,IAAI7mF,KAAK,CAACnB,MAAM,CAAC;EAEvC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/B,IAAMunF,IAAI,GAAGZ,KAAK,CAAC3mF,CAAC,CAAC;IACrB,IAAMwvC,MAAM,GACV,QAAQ,IAAI+3C,IAAI,GACZ,IAAApa,oBAAe,EAACoa,IAAI,CAAC/3C,MAAM,EAAEg2B,uBAAW,EAAEjuB,OAAO,CAAC,GAClDoP,MAAM;;IAEZ;AACJ;AACA;IACI,IAAIk8B,MAAM;IACV,IAAIpiF,KAAK,CAACC,OAAO,CAAC6mF,IAAI,CAACjxC,KAAK,CAAC,EAAE;MAC7B,IAAMkxC,WAAW,GAAGD,IAAI,CAACjxC,KAAK,CAACh3C,MAAM;MACrCujF,MAAM,GAAG,IAAIpiF,KAAK,CAAC+mF,WAAW,CAAC;MAC/B,KAAK,IAAIhsE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgsE,WAAW,EAAE,EAAEhsE,CAAC,EAAE;QACpCqnE,MAAM,CAACrnE,CAAC,CAAC,GAAG4rE,UAAU,CAACG,IAAI,CAACjxC,KAAK,CAAC96B,CAAC,CAAC,EAAE+7B,OAAO,CAAC;MAChD;IACF,CAAC,MAAM;MACLsrC,MAAM,GAAG,CAACuE,UAAU,CAACG,IAAI,CAACjxC,KAAK,EAAEiB,OAAO,CAAC,CAAC;IAC5C;IAEA+vC,aAAa,CAACtnF,CAAC,CAAC,GAAG;MAACwvC,MAAM,EAANA,MAAM;MAAEqzC,MAAM,EAANA;IAAM,CAAC;EACrC;EAEA,OAAO,UAAUtrC,OAAO,EAAE;IACxB;AACJ;AACA;IACI,IAAMsrC,MAAM,GAAG,EAAE;IAEjB,IAAI4E,WAAW,GAAG,KAAK;IACvB,KAAK,IAAIznF,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGV,MAAM,EAAE,EAAEU,GAAC,EAAE;MAC/B,IAAM0nF,eAAe,GAAGJ,aAAa,CAACtnF,GAAC,CAAC,CAACwvC,MAAM;MAC/C,IAAI,CAACk4C,eAAe,CAACnwC,OAAO,CAAC,EAAE;QAC7B;MACF;MACA,IAAIovC,KAAK,CAAC3mF,GAAC,CAAC,CAAC2nF,IAAI,IAAIF,WAAW,EAAE;QAChC;MACF;MACAA,WAAW,GAAG,IAAI;MAAC,IAAAj0D,SAAA,GAAAtE,0BAAA,CACUo4D,aAAa,CAACtnF,GAAC,CAAC,CAAC6iF,MAAM;QAAApvD,KAAA;MAAA;QAApD,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAAsD;UAAA,IAA3C2oE,cAAc,GAAAn0D,KAAA,CAAA/0B,KAAA;UACvB,IAAM43C,KAAK,GAAGsxC,cAAc,CAACrwC,OAAO,CAAC;UACrC,IAAI,CAACjB,KAAK,EAAE;YACV;UACF;UACAusC,MAAM,CAACr7E,IAAI,CAAC8uC,KAAK,CAAC;QACpB;MAAC,SAAApzC,GAAA;QAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;MAAA;QAAAswB,SAAA,CAAAjmB,CAAA;MAAA;IACH;IAEA,OAAOs1E,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuE,UAAUA,CAACS,SAAS,EAAEtwC,OAAO,EAAE;EAC7C,IAAMuwC,YAAY,GAAGC,SAAS,CAACF,SAAS,EAAE,EAAE,EAAEtwC,OAAO,CAAC;EACtD,IAAMywC,cAAc,GAAGC,WAAW,CAACJ,SAAS,EAAE,EAAE,EAAEtwC,OAAO,CAAC;EAC1D,IAAM2wC,YAAY,GAAGC,SAAS,CAACN,SAAS,EAAEtwC,OAAO,CAAC;EAClD,IAAM6wC,aAAa,GAAGC,UAAU,CAACR,SAAS,EAAEtwC,OAAO,CAAC;EACpD,IAAM+wC,cAAc,GAAGC,eAAe,CAACV,SAAS,EAAE,SAAS,EAAEtwC,OAAO,CAAC;EAErE,IACE,CAACuwC,YAAY,IACb,CAACE,cAAc,IACf,CAACE,YAAY,IACb,CAACE,aAAa,IACd,CAAC,IAAA3kF,YAAO,EAACokF,SAAS,CAAC,EACnB;IACA;IACA;IACA,MAAM,IAAI39E,KAAK,CACb,kEAAkE,GAChEmiE,IAAI,CAACC,SAAS,CAACub,SAAS,CAC5B,CAAC;EACH;EAEA,IAAMvxC,KAAK,GAAG,IAAIorC,cAAK,CAAC,CAAC;EACzB,OAAO,UAAUnqC,OAAO,EAAE;IACxB,IAAIixC,KAAK,GAAG,IAAI;IAChB,IAAIV,YAAY,EAAE;MAChB,IAAMjN,IAAI,GAAGiN,YAAY,CAACvwC,OAAO,CAAC;MAClC,IAAIsjC,IAAI,EAAE;QACR2N,KAAK,GAAG,KAAK;MACf;MACAlyC,KAAK,CAAColC,OAAO,CAACb,IAAI,CAAC;IACrB;IACA,IAAImN,cAAc,EAAE;MAClB,IAAM7M,MAAM,GAAG6M,cAAc,CAACzwC,OAAO,CAAC;MACtC,IAAI4jC,MAAM,EAAE;QACVqN,KAAK,GAAG,KAAK;MACf;MACAlyC,KAAK,CAAC2lC,SAAS,CAACd,MAAM,CAAC;IACzB;IACA,IAAI+M,YAAY,EAAE;MAChB,IAAMnS,IAAI,GAAGmS,YAAY,CAAC3wC,OAAO,CAAC;MAClC,IAAIw+B,IAAI,EAAE;QACRyS,KAAK,GAAG,KAAK;MACf;MACAlyC,KAAK,CAACmsC,OAAO,CAAC1M,IAAI,CAAC;IACrB;IACA,IAAIqS,aAAa,EAAE;MACjB,IAAMtY,KAAK,GAAGsY,aAAa,CAAC7wC,OAAO,CAAC;MACpC,IAAIu4B,KAAK,EAAE;QACT0Y,KAAK,GAAG,KAAK;MACf;MACAlyC,KAAK,CAAC85B,QAAQ,CAACN,KAAK,CAAC;IACvB;IACA,IAAIwY,cAAc,EAAE;MAClBhyC,KAAK,CAAC0c,SAAS,CAACs1B,cAAc,CAAC/wC,OAAO,CAAC,CAAC;IAC1C;IACA,IAAIixC,KAAK,EAAE;MACT,OAAO,IAAI;IACb;IACA,OAAOlyC,KAAK;EACd,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASyxC,SAASA,CAACF,SAAS,EAAEY,MAAM,EAAElxC,OAAO,EAAE;EAC7C,IAAImxC,aAAa;EACjB,IAAID,MAAM,GAAG,kBAAkB,IAAIZ,SAAS,EAAE;IAC5Ca,aAAa,GAAGC,gBAAgB,CAACd,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EACxE,CAAC,MAAM;IACL,IAAIswC,SAAS,CAACY,MAAM,GAAG,YAAY,CAAC,KAAK,MAAM,EAAE;MAC/C;MACA,OAAO,UAAClxC,OAAO;QAAA,OAAK,IAAI;MAAA;IAC1B;IAEAmxC,aAAa,GAAGE,kBAAkB,CAChCf,SAAS,EACTY,MAAM,GAAG,YAAY,EACrBlxC,OACF,CAAC;EACH;EACA,IAAI,CAACmxC,aAAa,EAAE;IAClB,OAAO,IAAI;EACb;EAEA,IAAM7N,IAAI,GAAG,IAAImE,aAAI,CAAC,CAAC;EACvB,OAAO,UAAUznC,OAAO,EAAE;IACxB,IAAM2qB,KAAK,GAAGwmB,aAAa,CAACnxC,OAAO,CAAC;IACpC,IAAI2qB,KAAK,KAAK4B,eAAQ,EAAE;MACtB,OAAO,IAAI;IACb;IACA+W,IAAI,CAACqE,QAAQ,CAAChd,KAAK,CAAC;IACpB,OAAO2Y,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoN,WAAWA,CAACJ,SAAS,EAAEY,MAAM,EAAElxC,OAAO,EAAE;EAC/C,IAAMsxC,aAAa,GAAGN,eAAe,CACnCV,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EAED,IAAMmxC,aAAa,GAAGE,kBAAkB,CACtCf,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EAED,IAAI,CAACsxC,aAAa,IAAI,CAACH,aAAa,EAAE;IACpC,OAAO,IAAI;EACb;EAEA,IAAMI,eAAe,GAAGC,eAAe,CACrClB,SAAS,EACTY,MAAM,GAAG,iBAAiB,EAC1BlxC,OACF,CAAC;EAED,IAAMyxC,gBAAgB,GAAGD,eAAe,CACtClB,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;EAED,IAAM0xC,gBAAgB,GAAGC,oBAAoB,CAC3CrB,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;EAED,IAAM4xC,sBAAsB,GAAGZ,eAAe,CAC5CV,SAAS,EACTY,MAAM,GAAG,yBAAyB,EAClClxC,OACF,CAAC;EAED,IAAM6xC,kBAAkB,GAAGb,eAAe,CACxCV,SAAS,EACTY,MAAM,GAAG,oBAAoB,EAC7BlxC,OACF,CAAC;EAED,IAAM4jC,MAAM,GAAG,IAAIwF,eAAM,CAAC,CAAC;EAC3B,OAAO,UAAUppC,OAAO,EAAE;IACxB,IAAImxC,aAAa,EAAE;MACjB,IAAMxmB,KAAK,GAAGwmB,aAAa,CAACnxC,OAAO,CAAC;MACpC,IAAI2qB,KAAK,KAAK4B,eAAQ,EAAE;QACtB,OAAO,IAAI;MACb;MACAqX,MAAM,CAAC+D,QAAQ,CAAChd,KAAK,CAAC;IACxB;IAEA,IAAI2mB,aAAa,EAAE;MACjB1N,MAAM,CAACmG,QAAQ,CAACuH,aAAa,CAACtxC,OAAO,CAAC,CAAC;IACzC;IAEA,IAAIuxC,eAAe,EAAE;MACnB,IAAM5L,OAAO,GAAG4L,eAAe,CAACvxC,OAAO,CAAC;MACxC,IAAI2lC,OAAO,KAAK,MAAM,IAAIA,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,QAAQ,EAAE;QACrE,MAAM,IAAIhzE,KAAK,CAAC,0CAA0C,CAAC;MAC7D;MACAixE,MAAM,CAAC+F,UAAU,CAAChE,OAAO,CAAC;IAC5B;IAEA,IAAI8L,gBAAgB,EAAE;MACpB,IAAM7M,QAAQ,GAAG6M,gBAAgB,CAACzxC,OAAO,CAAC;MAC1C,IACE4kC,QAAQ,KAAK,OAAO,IACpBA,QAAQ,KAAK,OAAO,IACpBA,QAAQ,KAAK,OAAO,EACpB;QACA,MAAM,IAAIjyE,KAAK,CAAC,2CAA2C,CAAC;MAC9D;MACAixE,MAAM,CAACiG,WAAW,CAACjF,QAAQ,CAAC;IAC9B;IAEA,IAAI8M,gBAAgB,EAAE;MACpB9N,MAAM,CAACiD,WAAW,CAAC6K,gBAAgB,CAAC1xC,OAAO,CAAC,CAAC;IAC/C;IAEA,IAAI4xC,sBAAsB,EAAE;MAC1BhO,MAAM,CAACgG,iBAAiB,CAACgI,sBAAsB,CAAC5xC,OAAO,CAAC,CAAC;IAC3D;IAEA,IAAI6xC,kBAAkB,EAAE;MACtBjO,MAAM,CAACkG,aAAa,CAAC+H,kBAAkB,CAAC7xC,OAAO,CAAC,CAAC;IACnD;IAEA,OAAO4jC,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASgN,SAASA,CAACN,SAAS,EAAEtwC,OAAO,EAAE;EACrC,IAAMkxC,MAAM,GAAG,OAAO;;EAEtB;EACA;EACA;EACA;EACA,IAAMY,aAAa,GAAGN,eAAe,CAAClB,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAC3E,IAAI,CAAC8xC,aAAa,EAAE;IAClB,OAAO,IAAI;EACb;EAEA,IAAMvB,YAAY,GAAGC,SAAS,CAACF,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAE1D,IAAM+xC,sBAAsB,GAAGvB,SAAS,CACtCF,SAAS,EACTY,MAAM,GAAG,aAAa,EACtBlxC,OACF,CAAC;EAED,IAAMywC,cAAc,GAAGC,WAAW,CAACJ,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAE9D,IAAMgyC,wBAAwB,GAAGtB,WAAW,CAC1CJ,SAAS,EACTY,MAAM,GAAG,aAAa,EACtBlxC,OACF,CAAC;EAED,IAAMiyC,YAAY,GAAGT,eAAe,CAAClB,SAAS,EAAEY,MAAM,GAAG,MAAM,EAAElxC,OAAO,CAAC;EAEzE,IAAMkyC,gBAAgB,GAAGlB,eAAe,CACtCV,SAAS,EACTY,MAAM,GAAG,WAAW,EACpBlxC,OACF,CAAC;EAED,IAAMmyC,eAAe,GAAGnB,eAAe,CACrCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAMoyC,eAAe,GAAGpB,eAAe,CACrCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAMqyC,gBAAgB,GAAGC,gBAAgB,CACvChC,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAMuyC,iBAAiB,GAAGf,eAAe,CACvClB,SAAS,EACTY,MAAM,GAAG,WAAW,EACpBlxC,OACF,CAAC;EAED,IAAMwyC,cAAc,GAAGxB,eAAe,CAACV,SAAS,EAAEY,MAAM,GAAG,QAAQ,EAAElxC,OAAO,CAAC;EAE7E,IAAMyyC,aAAa,GAAGC,iBAAiB,CAACpC,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAE7E,IAAM2yC,sBAAsB,GAAGL,gBAAgB,CAC7ChC,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;EAED,IAAM4yC,gBAAgB,GAAG5B,eAAe,CACtCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAM6yC,aAAa,GAAGrB,eAAe,CAAClB,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAE3E,IAAM8yC,eAAe,GAAGtB,eAAe,CACrClB,SAAS,EACTY,MAAM,GAAG,SAAS,EAClBlxC,OACF,CAAC;EAED,IAAM+yC,gBAAgB,GAAGvB,eAAe,CACtClB,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAMgzC,mBAAmB,GAAGV,gBAAgB,CAC1ChC,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EAED,IAAMizC,eAAe,GAAGtB,oBAAoB,CAC1CrB,SAAS,EACTY,MAAM,GAAG,SAAS,EAClBlxC,OACF,CAAC;;EAED;EACA,IAAMkiC,aAAa,GAAGgR,qBAAqB,CACzC5C,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EAED,IAAM1S,IAAI,GAAG,IAAImN,aAAI,CAAC;IAACzJ,aAAa,EAAbA;EAAa,CAAC,CAAC;EAEtC,OAAO,UAAUliC,OAAO,EAAE;IACxBw+B,IAAI,CAAC0M,OAAO,CAAC4G,aAAa,CAAC9xC,OAAO,CAAC,CAAC;IAEpC,IAAIuwC,YAAY,EAAE;MAChB/R,IAAI,CAAC2F,OAAO,CAACoM,YAAY,CAACvwC,OAAO,CAAC,CAAC;IACrC;IAEA,IAAI+xC,sBAAsB,EAAE;MAC1BvT,IAAI,CAACoQ,iBAAiB,CAACmD,sBAAsB,CAAC/xC,OAAO,CAAC,CAAC;IACzD;IAEA,IAAIywC,cAAc,EAAE;MAClBjS,IAAI,CAACkG,SAAS,CAAC+L,cAAc,CAACzwC,OAAO,CAAC,CAAC;IACzC;IAEA,IAAIgyC,wBAAwB,EAAE;MAC5BxT,IAAI,CAACqQ,mBAAmB,CAACmD,wBAAwB,CAAChyC,OAAO,CAAC,CAAC;IAC7D;IAEA,IAAIiyC,YAAY,EAAE;MAChBzT,IAAI,CAAC0P,OAAO,CAAC+D,YAAY,CAACjyC,OAAO,CAAC,CAAC;IACrC;IAEA,IAAIkyC,gBAAgB,EAAE;MACpB1T,IAAI,CAAC2P,WAAW,CAAC+D,gBAAgB,CAAClyC,OAAO,CAAC,CAAC;IAC7C;IAEA,IAAImyC,eAAe,EAAE;MACnB3T,IAAI,CAAC4P,UAAU,CAAC+D,eAAe,CAACnyC,OAAO,CAAC,CAAC;IAC3C;IAEA,IAAIoyC,eAAe,EAAE;MACnB5T,IAAI,CAAC6P,UAAU,CAAC+D,eAAe,CAACpyC,OAAO,CAAC,CAAC;IAC3C;IAEA,IAAIqyC,gBAAgB,EAAE;MACpB7T,IAAI,CAACyP,WAAW,CAACoE,gBAAgB,CAACryC,OAAO,CAAC,CAAC;IAC7C;IAEA,IAAIuyC,iBAAiB,EAAE;MACrB,IAAM7F,SAAS,GAAG6F,iBAAiB,CAACvyC,OAAO,CAAC;MAC5C,IAAI0sC,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,MAAM,EAAE;QACjD,MAAM,IAAI/5E,KAAK,CAAC,2CAA2C,CAAC;MAC9D;MACA6rE,IAAI,CAAC8P,YAAY,CAAC5B,SAAS,CAAC;IAC9B;IAEA,IAAI8F,cAAc,EAAE;MAClBhU,IAAI,CAAC+P,SAAS,CAACiE,cAAc,CAACxyC,OAAO,CAAC,CAAC;IACzC;IAEA,IAAIyyC,aAAa,EAAE;MACjBjU,IAAI,CAACqE,QAAQ,CAAC4P,aAAa,CAACzyC,OAAO,CAAC,CAAC;IACvC;IAEA,IAAI2yC,sBAAsB,EAAE;MAC1BnU,IAAI,CAACoE,iBAAiB,CAAC+P,sBAAsB,CAAC3yC,OAAO,CAAC,CAAC;IACzD;IAEA,IAAI4yC,gBAAgB,EAAE;MACpBpU,IAAI,CAAC/pC,WAAW,CAACm+C,gBAAgB,CAAC5yC,OAAO,CAAC,CAAC;IAC7C;IAEA,IAAI6yC,aAAa,EAAE;MACjB,IAAM7G,SAAS,GAAG6G,aAAa,CAAC7yC,OAAO,CAAC;MACxC,IACEgsC,SAAS,KAAK,MAAM,IACpBA,SAAS,KAAK,QAAQ,IACtBA,SAAS,KAAK,OAAO,IACrBA,SAAS,KAAK,KAAK,IACnBA,SAAS,KAAK,OAAO,EACrB;QACA,MAAM,IAAIr5E,KAAK,CACb,4DACF,CAAC;MACH;MACA6rE,IAAI,CAACiQ,YAAY,CAACzC,SAAS,CAAC;IAC9B;IAEA,IAAI8G,eAAe,EAAE;MACnB,IAAM5G,OAAO,GAAG4G,eAAe,CAAC9yC,OAAO,CAAC;MACxC,IAAIksC,OAAO,KAAK,MAAM,IAAIA,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,QAAQ,EAAE;QACrE,MAAM,IAAIv5E,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACA6rE,IAAI,CAACkQ,UAAU,CAACxC,OAAO,CAAC;IAC1B;IAEA,IAAI6G,gBAAgB,EAAE;MACpB,IAAMzG,YAAY,GAAGyG,gBAAgB,CAAC/yC,OAAO,CAAC;MAC9C,IACEssC,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,KAAK,IACtBA,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,YAAY,IAC7BA,YAAY,KAAK,SAAS,EAC1B;QACA,MAAM,IAAI35E,KAAK,CACb,wEACF,CAAC;MACH;MACA6rE,IAAI,CAACmQ,eAAe,CAACrC,YAAY,CAAC;IACpC;IAEA,IAAI2G,eAAe,EAAE;MACnBzU,IAAI,CAACsQ,UAAU,CAACmE,eAAe,CAACjzC,OAAO,CAAC,CAAC;IAC3C;IAEA,IAAIgzC,mBAAmB,EAAE;MACvBxU,IAAI,CAACgQ,cAAc,CAACwE,mBAAmB,CAAChzC,OAAO,CAAC,CAAC;IACnD;IAEA,OAAOw+B,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASsS,UAAUA,CAACR,SAAS,EAAEtwC,OAAO,EAAE;EACtC,IAAI,UAAU,IAAIswC,SAAS,EAAE;IAC3B,OAAO6C,SAAS,CAAC7C,SAAS,EAAEtwC,OAAO,CAAC;EACtC;EAEA,IAAI,cAAc,IAAIswC,SAAS,EAAE;IAC/B,OAAO8C,UAAU,CAAC9C,SAAS,EAAEtwC,OAAO,CAAC;EACvC;EAEA,IAAI,eAAe,IAAIswC,SAAS,EAAE;IAChC,OAAO+C,WAAW,CAAC/C,SAAS,EAAEtwC,OAAO,CAAC;EACxC;EAEA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASmzC,SAASA,CAAC7C,SAAS,EAAEtwC,OAAO,EAAE;EACrC,IAAMkxC,MAAM,GAAG,OAAO;;EAEtB;EACA,IAAMoC,OAAO,GAAGpC,MAAM,GAAG,KAAK;EAC9B,IAAM7X,GAAG,GAAGka,aAAa,CAACjD,SAAS,CAACgD,OAAO,CAAC,EAAEA,OAAO,CAAC;;EAEtD;EACA,IAAME,cAAc,GAAGC,mBAAmB,CACxCnD,SAAS,EACTY,MAAM,GAAG,QAAQ,EACjBlxC,OACF,CAAC;EAED,IAAMyyC,aAAa,GAAGC,iBAAiB,CAACpC,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAE7E,IAAM0zC,eAAe,GAAG1C,eAAe,CACrCV,SAAS,EACTY,MAAM,GAAG,SAAS,EAClBlxC,OACF,CAAC;EAED,IAAM2zC,oBAAoB,GAAGF,mBAAmB,CAC9CnD,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EAED,IAAM4yC,gBAAgB,GAAG5B,eAAe,CACtCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EAED,IAAM2yC,sBAAsB,GAAGL,gBAAgB,CAC7ChC,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;;EAED;EACA,IAAMqoC,YAAY,GAAGuL,kBAAkB,CAACtD,SAAS,EAAEY,MAAM,GAAG,eAAe,CAAC;EAC5E,IAAM3I,YAAY,GAAGsL,uBAAuB,CAC1CvD,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EACD,IAAMzI,YAAY,GAAGoL,uBAAuB,CAC1CvD,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EACD,IAAMvmB,KAAK,GAAGmpB,iBAAiB,CAACxD,SAAS,EAAEY,MAAM,GAAG,OAAO,CAAC;EAC5D,IAAMhX,WAAW,GAAG6Z,cAAc,CAACzD,SAAS,EAAEY,MAAM,GAAG,cAAc,CAAC;EACtE,IAAM5nE,MAAM,GAAG0qE,mBAAmB,CAAC1D,SAAS,EAAEY,MAAM,GAAG,QAAQ,CAAC;EAChE,IAAMrI,YAAY,GAAG+K,kBAAkB,CAACtD,SAAS,EAAEY,MAAM,GAAG,eAAe,CAAC;EAC5E,IAAM/jE,KAAK,GAAG8mE,cAAc,CAAC3D,SAAS,EAAEY,MAAM,GAAG,OAAO,CAAC;EACzD,IAAM9jE,MAAM,GAAG6mE,cAAc,CAAC3D,SAAS,EAAEY,MAAM,GAAG,QAAQ,CAAC;EAC3D,IAAMtrE,IAAI,GAAGsuE,YAAY,CAAC5D,SAAS,EAAEY,MAAM,GAAG,MAAM,CAAC;EACrD,IAAMhP,aAAa,GAAGgR,qBAAqB,CACzC5C,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EAED,IAAMiD,IAAI,GAAG,IAAIjM,aAAI,CAAC;IACpB7O,GAAG,EAAHA,GAAG;IACHgP,YAAY,EAAZA,YAAY;IACZE,YAAY,EAAZA,YAAY;IACZE,YAAY,EAAZA,YAAY;IACZ9d,KAAK,EAALA,KAAK;IACLuP,WAAW,EAAXA,WAAW;IACX5wD,MAAM,EAANA,MAAM;IACNu/D,YAAY,EAAZA,YAAY;IACZz7D,MAAM,EAANA,MAAM;IACND,KAAK,EAALA,KAAK;IACLvH,IAAI,EAAJA,IAAI;IACJs8D,aAAa,EAAbA;EACF,CAAC,CAAC;EAEF,OAAO,UAAUliC,OAAO,EAAE;IACxB,IAAI0zC,eAAe,EAAE;MACnBS,IAAI,CAAC54B,UAAU,CAACm4B,eAAe,CAAC1zC,OAAO,CAAC,CAAC;IAC3C;IAEA,IAAI2zC,oBAAoB,EAAE;MACxBQ,IAAI,CAACxR,eAAe,CAACgR,oBAAoB,CAAC3zC,OAAO,CAAC,CAAC;IACrD;IAEA,IAAI4yC,gBAAgB,EAAE;MACpBuB,IAAI,CAAC1/C,WAAW,CAACm+C,gBAAgB,CAAC5yC,OAAO,CAAC,CAAC;IAC7C;IAEA,IAAI2yC,sBAAsB,EAAE;MAC1BwB,IAAI,CAACvR,iBAAiB,CAAC+P,sBAAsB,CAAC3yC,OAAO,CAAC,CAAC;IACzD;IAEA,IAAIyyC,aAAa,EAAE;MACjB0B,IAAI,CAACtR,QAAQ,CAAC4P,aAAa,CAACzyC,OAAO,CAAC,CAAC;IACvC;IAEA,IAAIwzC,cAAc,EAAE;MAClBW,IAAI,CAACjL,SAAS,CAACsK,cAAc,CAACxzC,OAAO,CAAC,CAAC;IACzC;IACA,OAAOm0C,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASf,UAAUA,CAAC9C,SAAS,EAAEtwC,OAAO,EAAE;EACtC,IAAMkxC,MAAM,GAAG,QAAQ;;EAEvB;EACA,IAAMkD,UAAU,GAAGlD,MAAM,GAAG,QAAQ;EACpC,IAAMmD,UAAU,GAAGnD,MAAM,GAAG,QAAQ;EACpC,IAAM1N,MAAM,GAAG8Q,aAAa,CAAChE,SAAS,CAAC8D,UAAU,CAAC,EAAEA,UAAU,CAAC;EAC/D,IAAMtiE,MAAM,GAAGwiE,aAAa,CAAChE,SAAS,CAAC+D,UAAU,CAAC,EAAEA,UAAU,CAAC;;EAE/D;EACA,IAAM9D,YAAY,GAAGC,SAAS,CAACF,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAC1D,IAAMywC,cAAc,GAAGC,WAAW,CAACJ,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAC9D,IAAMyyC,aAAa,GAAGC,iBAAiB,CAACpC,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAC7E,IAAM2zC,oBAAoB,GAAGF,mBAAmB,CAC9CnD,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EACD,IAAM4yC,gBAAgB,GAAG5B,eAAe,CACtCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EACD,IAAM2yC,sBAAsB,GAAGL,gBAAgB,CAC7ChC,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;;EAED;EACA,IAAM0jC,OAAO,GAAGuQ,cAAc,CAAC3D,SAAS,EAAEY,MAAM,GAAG,SAAS,CAAC;EAC7D,IAAMxgE,KAAK,GAAGujE,cAAc,CAAC3D,SAAS,EAAEY,MAAM,GAAG,OAAO,CAAC;EACzD,IAAMhP,aAAa,GAAGgR,qBAAqB,CACzC5C,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EAED,IAAMqD,KAAK,GAAG,IAAIrR,qBAAY,CAAC;IAC7BM,MAAM,EAANA,MAAM;IACN1xD,MAAM,EAANA,MAAM;IACN4xD,OAAO,EAAPA,OAAO;IACPhzD,KAAK,EAALA,KAAK;IACLwxD,aAAa,EAAbA;EACF,CAAC,CAAC;EAEF,OAAO,UAAUliC,OAAO,EAAE;IACxB,IAAIuwC,YAAY,EAAE;MAChBgE,KAAK,CAACpQ,OAAO,CAACoM,YAAY,CAACvwC,OAAO,CAAC,CAAC;IACtC;IACA,IAAIywC,cAAc,EAAE;MAClB8D,KAAK,CAAC7P,SAAS,CAAC+L,cAAc,CAACzwC,OAAO,CAAC,CAAC;IAC1C;IACA,IAAI2zC,oBAAoB,EAAE;MACxBY,KAAK,CAAC5R,eAAe,CAACgR,oBAAoB,CAAC3zC,OAAO,CAAC,CAAC;IACtD;IACA,IAAI4yC,gBAAgB,EAAE;MACpB2B,KAAK,CAAC9/C,WAAW,CAACm+C,gBAAgB,CAAC5yC,OAAO,CAAC,CAAC;IAC9C;IACA,IAAI2yC,sBAAsB,EAAE;MAC1B4B,KAAK,CAAC3R,iBAAiB,CAAC+P,sBAAsB,CAAC3yC,OAAO,CAAC,CAAC;IAC1D;IACA,IAAIyyC,aAAa,EAAE;MACjB8B,KAAK,CAAC1R,QAAQ,CAAC4P,aAAa,CAACzyC,OAAO,CAAC,CAAC;IACxC;IAEA,OAAOu0C,KAAK;EACd,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASlB,WAAWA,CAAC/C,SAAS,EAAEtwC,OAAO,EAAE;EACvC,IAAMkxC,MAAM,GAAG,SAAS;;EAExB;EACA,IAAMX,YAAY,GAAGC,SAAS,CAACF,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAC1D,IAAMywC,cAAc,GAAGC,WAAW,CAACJ,SAAS,EAAEY,MAAM,EAAElxC,OAAO,CAAC;EAC9D,IAAMw0C,cAAc,GAAGxD,eAAe,CAACV,SAAS,EAAEY,MAAM,GAAG,QAAQ,EAAElxC,OAAO,CAAC;EAC7E,IAAMyyC,aAAa,GAAGC,iBAAiB,CAACpC,SAAS,EAAEY,MAAM,GAAG,OAAO,EAAElxC,OAAO,CAAC;EAC7E,IAAM2zC,oBAAoB,GAAGF,mBAAmB,CAC9CnD,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EACD,IAAM4yC,gBAAgB,GAAG5B,eAAe,CACtCV,SAAS,EACTY,MAAM,GAAG,UAAU,EACnBlxC,OACF,CAAC;EACD,IAAM2yC,sBAAsB,GAAGL,gBAAgB,CAC7ChC,SAAS,EACTY,MAAM,GAAG,kBAAkB,EAC3BlxC,OACF,CAAC;;EAED;EACA,IAAMkiC,aAAa,GAAGgR,qBAAqB,CACzC5C,SAAS,EACTY,MAAM,GAAG,gBACX,CAAC;EAED,IAAM/hE,MAAM,GAAG,IAAIslE,eAAM,CAAC;IACxB3iE,MAAM,EAAE,CAAC;IAAE;IACXowD,aAAa,EAAbA;EACF,CAAC,CAAC;EAEF,OAAO,UAAUliC,OAAO,EAAE;IACxB,IAAIw0C,cAAc,EAAE;MAClBrlE,MAAM,CAACq4D,SAAS,CAACgN,cAAc,CAACx0C,OAAO,CAAC,CAAC;IAC3C;IACA,IAAIuwC,YAAY,EAAE;MAChBphE,MAAM,CAACg1D,OAAO,CAACoM,YAAY,CAACvwC,OAAO,CAAC,CAAC;IACvC;IACA,IAAIywC,cAAc,EAAE;MAClBthE,MAAM,CAACu1D,SAAS,CAAC+L,cAAc,CAACzwC,OAAO,CAAC,CAAC;IAC3C;IACA,IAAI2zC,oBAAoB,EAAE;MACxBxkE,MAAM,CAACwzD,eAAe,CAACgR,oBAAoB,CAAC3zC,OAAO,CAAC,CAAC;IACvD;IACA,IAAI4yC,gBAAgB,EAAE;MACpBzjE,MAAM,CAACslB,WAAW,CAACm+C,gBAAgB,CAAC5yC,OAAO,CAAC,CAAC;IAC/C;IACA,IAAI2yC,sBAAsB,EAAE;MAC1BxjE,MAAM,CAACyzD,iBAAiB,CAAC+P,sBAAsB,CAAC3yC,OAAO,CAAC,CAAC;IAC3D;IACA,IAAIyyC,aAAa,EAAE;MACjBtjE,MAAM,CAAC0zD,QAAQ,CAAC4P,aAAa,CAACzyC,OAAO,CAAC,CAAC;IACzC;IAEA,OAAO7wB,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6hE,eAAeA,CAACV,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACjD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAOx/E,SAAS;EAClB;EACA,IAAMw+E,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE2mD,sBAAU,EAAEluB,OAAO,CAAC;EACvE,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAOs0C,aAAa,CAAChF,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EAChD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiqE,eAAeA,CAAClB,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACjD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE4mD,sBAAU,EAAEnuB,OAAO,CAAC;EACvE,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAOuzC,aAAa,CAACjE,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EAChD,CAAC;AACH;AAEA,SAAS6pE,gBAAgBA,CAACd,SAAS,EAAEY,MAAM,EAAElxC,OAAO,EAAE;EACpD,IAAM00C,YAAY,GAAGlD,eAAe,CAClClB,SAAS,EACTY,MAAM,GAAG,aAAa,EACtBlxC,OACF,CAAC;EACD,IAAM20C,eAAe,GAAGC,aAAa,CACnCtE,SAAS,EACTY,MAAM,GAAG,gBAAgB,EACzBlxC,OACF,CAAC;EACD,IAAM60C,oBAAoB,GAAGD,aAAa,CACxCtE,SAAS,EACTY,MAAM,GAAG,cAAc,EACvBlxC,OACF,CAAC;EACD,IAAM80C,cAAc,GAAGzD,kBAAkB,CACvCf,SAAS,EACTY,MAAM,GAAG,OAAO,EAChBlxC,OACF,CAAC;EACD,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAO;MACLq5B,GAAG,EAAEqb,YAAY,CAAC10C,OAAO,CAAC;MAC1B12B,MAAM,EAAEqrE,eAAe,IAAIA,eAAe,CAAC30C,OAAO,CAAC;MACnDp6B,IAAI,EAAEivE,oBAAoB,IAAIA,oBAAoB,CAAC70C,OAAO,CAAC;MAC3D2qB,KAAK,EAAEmqB,cAAc,IAAIA,cAAc,CAAC90C,OAAO;IACjD,CAAC;EACH,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsyC,gBAAgBA,CAAChC,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EAClD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE0mD,uBAAW,EAAEjuB,OAAO,CAAC;EACxE,OAAO,UAAUA,OAAO,EAAE;IACxB,IAAM74C,KAAK,GAAGmoF,SAAS,CAACtvC,OAAO,CAAC;IAChC,IAAI,OAAO74C,KAAK,KAAK,SAAS,EAAE;MAC9B,MAAM,IAAIwL,KAAK,2BAAA0B,MAAA,CAA2BkT,IAAI,CAAE,CAAC;IACnD;IACA,OAAOpgB,KAAK;EACd,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkqF,kBAAkBA,CAACf,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACpD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE6mD,qBAAS,EAAEpuB,OAAO,CAAC;EACtE,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAO+0C,gBAAgB,CAACzF,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EACnD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoqE,oBAAoBA,CAACrB,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACtD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE8mD,2BAAe,EAAEruB,OAAO,CAAC;EAC5E,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAOg1C,kBAAkB,CAAC1F,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EACrD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASksE,mBAAmBA,CAACnD,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACrD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE8mD,2BAAe,EAAEruB,OAAO,CAAC;EAC5E,OAAO,UAAUA,OAAO,EAAE;IACxB,IAAM1qC,KAAK,GAAG0/E,kBAAkB,CAAC1F,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;IAC1D,IAAIjS,KAAK,CAACvN,MAAM,KAAK,CAAC,EAAE;MACtB,MAAM,IAAI4K,KAAK,6BAAA0B,MAAA,CAA6BkT,IAAI,CAAE,CAAC;IACrD;IACA,OAAOjS,KAAK;EACd,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASs/E,aAAaA,CAACtE,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EAC/C,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAAC0a,SAAS,CAAC/oE,IAAI,CAAC,EAAE8mD,2BAAe,EAAEruB,OAAO,CAAC;EAC5E,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAOi1C,WAAW,CAAC3F,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EAC9C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmrE,iBAAiBA,CAACpC,SAAS,EAAE/oE,IAAI,EAAEy4B,OAAO,EAAE;EACnD,IAAI,EAAEz4B,IAAI,IAAI+oE,SAAS,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMhB,SAAS,GAAG,IAAA1Z,oBAAe,EAC/B0a,SAAS,CAAC/oE,IAAI,CAAC,EACf8mD,2BAAe,GAAGH,sBAAU,EAC5BluB,OACF,CAAC;EACD,OAAO,UAAUA,OAAO,EAAE;IACxB,OAAOk1C,eAAe,CAAC5F,SAAS,CAACtvC,OAAO,CAAC,EAAEz4B,IAAI,CAAC;EAClD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS0sE,cAAcA,CAAC3D,SAAS,EAAErkF,QAAQ,EAAE;EAC3C,IAAM9E,KAAK,GAAGmpF,SAAS,CAACrkF,QAAQ,CAAC;EACjC,IAAI9E,KAAK,KAAK2J,SAAS,EAAE;IACvB,OAAOA,SAAS;EAClB;EACA,IAAI,OAAO3J,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIwL,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,OAAO9E,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS+sF,YAAYA,CAAC5D,SAAS,EAAErkF,QAAQ,EAAE;EACzC,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,IAAI,OAAOi/D,OAAO,KAAK,QAAQ,EAAE;IAC/B,OAAO,IAAA1C,YAAM,EAAC0C,OAAO,CAAC;EACxB;EACA,IAAI,CAAC7mE,KAAK,CAACC,OAAO,CAAC4mE,OAAO,CAAC,EAAE;IAC3B,MAAM,IAAIp9D,KAAK,wCAAA0B,MAAA,CAAwCpI,QAAQ,CAAE,CAAC;EACpE;EACA,IACE8jE,OAAO,CAAChoE,MAAM,KAAK,CAAC,IACpB,OAAOgoE,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC9B,OAAOA,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAC9B;IACA,MAAM,IAAIp9D,KAAK,wCAAA0B,MAAA,CAAwCpI,QAAQ,CAAE,CAAC;EACpE;EACA,OAAO8jE,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASgkB,cAAcA,CAACzD,SAAS,EAAErkF,QAAQ,EAAE;EAC3C,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,IAAI,OAAOi/D,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIp9D,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,OAAO8jE,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS6jB,kBAAkBA,CAACtD,SAAS,EAAErkF,QAAQ,EAAE;EAC/C,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,IACEi/D,OAAO,KAAK,aAAa,IACzBA,OAAO,KAAK,cAAc,IAC1BA,OAAO,KAAK,UAAU,IACtBA,OAAO,KAAK,WAAW,EACvB;IACA,MAAM,IAAIp9D,KAAK,mEAAA0B,MAAA,CACqDpI,QAAQ,CAC5E,CAAC;EACH;EACA,OAAO8jE,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS8jB,uBAAuBA,CAACvD,SAAS,EAAErkF,QAAQ,EAAE;EACpD,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,IAAIi/D,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,UAAU,EAAE;IAClD,MAAM,IAAIp9D,KAAK,oCAAA0B,MAAA,CAAoCpI,QAAQ,CAAE,CAAC;EAChE;EACA,OAAO8jE,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASikB,mBAAmBA,CAAC1D,SAAS,EAAErkF,QAAQ,EAAE;EAChD,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,OAAOkkF,kBAAkB,CAACjlB,OAAO,EAAE9jE,QAAQ,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASinF,qBAAqBA,CAAC5C,SAAS,EAAErkF,QAAQ,EAAE;EAClD,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,IAAI,OAAOi/D,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIp9D,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,IAAI8jE,OAAO,KAAK,WAAW,IAAIA,OAAO,KAAK,UAAU,IAAIA,OAAO,KAAK,MAAM,EAAE;IAC3E,MAAM,IAAIp9D,KAAK,8CAAA0B,MAAA,CAA8CpI,QAAQ,CAAE,CAAC;EAC1E;EACA,OAAO8jE,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS+jB,iBAAiBA,CAACxD,SAAS,EAAErkF,QAAQ,EAAE;EAC9C,IAAM8jE,OAAO,GAAGugB,SAAS,CAACrkF,QAAQ,CAAC;EACnC,IAAI8jE,OAAO,KAAKj/D,SAAS,EAAE;IACzB,OAAOA,SAAS;EAClB;EACA,OAAOikF,gBAAgB,CAAChlB,OAAO,EAAE9jE,QAAQ,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS+oF,kBAAkBA,CAAC7tF,KAAK,EAAE8E,QAAQ,EAAE;EAC3C,IAAI,CAAC/C,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,EAAE;IACzB,MAAM,IAAIwL,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,IAAMlE,MAAM,GAAGZ,KAAK,CAACY,MAAM;EAC3B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;IAC/B,IAAI,OAAOtB,KAAK,CAACsB,CAAC,CAAC,KAAK,QAAQ,EAAE;MAChC,MAAM,IAAIkK,KAAK,qCAAA0B,MAAA,CAAqCpI,QAAQ,CAAE,CAAC;IACjE;EACF;EACA,OAAO9E,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASosF,aAAaA,CAACpsF,KAAK,EAAE8E,QAAQ,EAAE;EACtC,IAAI,OAAO9E,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIwL,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,OAAO9E,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASmtF,aAAaA,CAACntF,KAAK,EAAE8E,QAAQ,EAAE;EACtC,IAAI,OAAO9E,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIwL,KAAK,0BAAA0B,MAAA,CAA0BpI,QAAQ,CAAE,CAAC;EACtD;EACA,OAAO9E,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS4tF,gBAAgBA,CAAC5tF,KAAK,EAAE8E,QAAQ,EAAE;EACzC,IAAI,OAAO9E,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EACA,IAAMmO,KAAK,GAAG0/E,kBAAkB,CAAC7tF,KAAK,EAAE8E,QAAQ,CAAC;EACjD,IAAMlE,MAAM,GAAGuN,KAAK,CAACvN,MAAM;EAC3B,IAAIA,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;IAC5B,MAAM,IAAI4K,KAAK,4CAAA0B,MAAA,CAA4CpI,QAAQ,CAAE,CAAC;EACxE;EACA,OAAOqJ,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS2/E,WAAWA,CAAC9tF,KAAK,EAAE8E,QAAQ,EAAE;EACpC,IAAM2Z,IAAI,GAAGovE,kBAAkB,CAAC7tF,KAAK,EAAE8E,QAAQ,CAAC;EAChD,IAAI2Z,IAAI,CAAC7d,MAAM,KAAK,CAAC,EAAE;IACrB,MAAM,IAAI4K,KAAK,yCAAA0B,MAAA,CAAyCpI,QAAQ,CAAE,CAAC;EACrE;EACA,OAAO2Z,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASsvE,eAAeA,CAAC/tF,KAAK,EAAE8E,QAAQ,EAAE;EACxC,IAAI,OAAO9E,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EACA,OAAO8tF,WAAW,CAAC9tF,KAAK,EAAE8E,QAAQ,CAAC;AACrC;;;;;;;;ACl0CA,IAAAkpF,MAAA,GAAAxoF,sBAAA,CAAAnC,OAAA;AACA,IAAA4qF,MAAA,GAAA5qF,OAAA;AAIA,IAAAykF,MAAA,GAAA7uE,uBAAA,CAAA5V,OAAA;AAIA,IAAA6qF,OAAA,GAAA1oF,sBAAA,CAAAnC,OAAA;AAA+B,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAZ/B;AACA;AACA;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMiI,QAAQ,GAAG;EACfsgF,YAAY,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMC,eAAe,0BAAAC,MAAA;EACnB;AACF;AACA;EACE,SAAAD,gBAAYhgF,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAwuF,eAAA;IACnBhgF,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMymD,WAAW,GAAGnuD,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;IAE9C,OAAOymD,WAAW,CAACjd,KAAK;IACxB,OAAOid,WAAW,CAACy5B,YAAY;IAC/B,OAAOz5B,WAAW,CAAC05B,oBAAoB;IACvC,OAAO15B,WAAW,CAAC25B,sBAAsB;IACzCpmF,KAAA,GAAAnB,UAAA,OAAAmnF,eAAA,GAAMv5B,WAAW;;IAEjB;AACJ;AACA;AACA;IACIzsD,KAAA,CAAKqmF,UAAU,GAAGrgF,OAAO,CAACsgF,SAAS,GAAG3nF,MAAM,CAACqH,OAAO,CAACsgF,SAAS,CAAC,GAAG/kF,SAAS;;IAE3E;AACJ;AACA;AACA;IACIvB,KAAA,CAAKumF,aAAa,GAChBvgF,OAAO,CAACkgF,YAAY,KAAK3kF,SAAS,GAAGyE,OAAO,CAACkgF,YAAY,GAAG,GAAG;;IAEjE;AACJ;AACA;AACA;AACA;IACIlmF,KAAA,CAAKwmF,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;AACA;IACIxmF,KAAA,CAAKymF,cAAc,GAAGllF,SAAS;IAE/BvB,KAAA,CAAK0mF,QAAQ,CAAC1gF,OAAO,CAACwpC,KAAK,CAAC;;IAE5B;AACJ;AACA;AACA;IACIxvC,KAAA,CAAK2mF,qBAAqB,GACxB3gF,OAAO,CAACmgF,oBAAoB,KAAK5kF,SAAS,GACtCyE,OAAO,CAACmgF,oBAAoB,GAC5B,KAAK;;IAEX;AACJ;AACA;AACA;IACInmF,KAAA,CAAK4mF,uBAAuB,GAC1B5gF,OAAO,CAACogF,sBAAsB,KAAK7kF,SAAS,GACxCyE,OAAO,CAACogF,sBAAsB,GAC9B,KAAK;IAAC,OAAApmF,KAAA;EACd;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAqmF,eAAA,EAAAC,MAAA;EAAA,OAAAvuF,YAAA,CAAAsuF,eAAA;IAAAruF,GAAA;IAAAC,KAAA,EAIA,SAAAm4D,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACs2B,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAA1uF,GAAA;IAAAC,KAAA,EAeA,SAAAm3D,WAAWA,CAAC3mD,KAAK,EAAE;MACjB,OAAAb,aAAA,CAAAy+E,eAAA,2BAAyB59E,KAAK;IAChC;;IAEA;AACF;AACA;EAFE;IAAAzQ,GAAA;IAAAC,KAAA,EAGA,SAAAivF,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACN,aAAa;IAC3B;;IAEA;AACF;AACA;EAFE;IAAA5uF,GAAA;IAAAC,KAAA,EAGA,SAAAkvF,cAAcA,CAAA,EAAG;MACf,OAAO,kEACL,IAAI,CAACziF,GAAG,CAACoB,QAAQ,CAACsgF,YAAY,CAAC;IAEnC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApuF,GAAA;IAAAC,KAAA,EAMA,SAAAmvF,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7uF,GAAA;IAAAC,KAAA,EAKA,SAAAovF,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACP,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;EAHE;IAAA9uF,GAAA;IAAAC,KAAA,EAIA,SAAAqvF,uBAAuBA,CAAA,EAAG;MACxB,OAAO,IAAI,CAACN,qBAAqB;IACnC;;IAEA;AACF;AACA;AACA;EAHE;IAAAhvF,GAAA;IAAAC,KAAA,EAIA,SAAAsvF,yBAAyBA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAACN,uBAAuB;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjvF,GAAA;IAAAC,KAAA,EAMA,SAAAo4D,eAAeA,CAAC3oD,UAAU,EAAEumD,UAAU,EAAE;MACtC,IAAMu5B,cAAc,GAAG,IAAI,CAACp3B,YAAY,CAAC,CAAC;MAC1C,IAAIo3B,cAAc,IAAI9/E,UAAU,CAACi/E,SAAS,KAAK,KAAK,EAAE;QACpDj/E,UAAU,CAACi/E,SAAS,CAACa,cAAc,CAAC,GAAG,IAAIC,cAAK,CAAC,CAAC,CAAC;MACrD;MACA,IAAI,CAACz3B,WAAW,CAAC,CAAC,CAACK,eAAe,CAAC3oD,UAAU,EAAEumD,UAAU,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;EAHE;IAAAj2D,GAAA;IAAAC,KAAA,EAIA,SAAAyvF,cAAcA,CAACC,WAAW,EAAE;MAC1B,IAAI,CAACpiF,GAAG,CAACO,QAAQ,CAACsgF,YAAY,EAAEuB,WAAW,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EApBE;IAAA3vF,GAAA;IAAAC,KAAA,EAqBA,SAAA8uF,QAAQA,CAACl3C,KAAK,EAAE;MACd,IAAI,CAACg3C,MAAM,GAAGh3C,KAAK,KAAKjuC,SAAS,GAAG06E,yBAAkB,GAAGzsC,KAAK;MAC9D,IAAM+3C,SAAS,GAAGC,WAAW,CAACh4C,KAAK,CAAC;MACpC,IAAI,CAACi3C,cAAc,GACjBj3C,KAAK,KAAK,IAAI,GAAGjuC,SAAS,GAAG,IAAAkmF,iBAAe,EAACF,SAAS,CAAC;MACzD,IAAI,CAAC3kF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAA8vF,YAAYA,CAACpB,SAAS,EAAE;MACtB,IAAI,CAACD,UAAU,GAAGC,SAAS,GAAG3nF,MAAM,CAAC2nF,SAAS,CAAC,GAAG/kF,SAAS;MAC3D,IAAI,CAACqB,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EAvM2BurD,eAAK;AA0MnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASq5B,WAAWA,CAACh4C,KAAK,EAAE;EAC1B,IAAIA,KAAK,KAAKjuC,SAAS,EAAE;IACvB,OAAO06E,yBAAkB;EAC3B;EACA,IAAI,CAACzsC,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IAC/B,OAAOA,KAAK;EACd;EACA,IAAIA,KAAK,YAAYorC,cAAK,EAAE;IAC1B,OAAOprC,KAAK;EACd;EACA,IAAI,CAAC71C,KAAK,CAACC,OAAO,CAAC41C,KAAK,CAAC,EAAE;IACzB,OAAO,IAAA2wC,gCAAyB,EAAC,CAAC3wC,KAAK,CAAC,CAAC;EAC3C;EACA,IAAIA,KAAK,CAACh3C,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,EAAE;EACX;EAEA,IAAMA,MAAM,GAAGg3C,KAAK,CAACh3C,MAAM;EAC3B,IAAMoiC,KAAK,GAAG4U,KAAK,CAAC,CAAC,CAAC;EAEtB,IAAI5U,KAAK,YAAYggD,cAAK,EAAE;IAC1B;AACJ;AACA;IACI,IAAMmB,MAAM,GAAG,IAAIpiF,KAAK,CAACnB,MAAM,CAAC;IAChC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAE,EAAEU,CAAC,EAAE;MAC/B,IAAMC,SAAS,GAAGq2C,KAAK,CAACt2C,CAAC,CAAC;MAC1B,IAAI,EAAEC,SAAS,YAAYyhF,cAAK,CAAC,EAAE;QACjC,MAAM,IAAIx3E,KAAK,CAAC,oCAAoC,CAAC;MACvD;MACA24E,MAAM,CAAC7iF,CAAC,CAAC,GAAGC,SAAS;IACvB;IACA,OAAO4iF,MAAM;EACf;EAEA,IAAI,OAAO,IAAInhD,KAAK,EAAE;IACpB;AACJ;AACA;IACI,IAAMilD,KAAK,GAAG,IAAIlmF,KAAK,CAACnB,MAAM,CAAC;IAC/B,KAAK,IAAIU,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGV,MAAM,EAAE,EAAEU,EAAC,EAAE;MAC/B,IAAMC,UAAS,GAAGq2C,KAAK,CAACt2C,EAAC,CAAC;MAC1B,IAAI,EAAE,OAAO,IAAIC,UAAS,CAAC,EAAE;QAC3B,MAAM,IAAIiK,KAAK,CAAC,gDAAgD,CAAC;MACnE;MACAy8E,KAAK,CAAC3mF,EAAC,CAAC,GAAGC,UAAS;IACtB;IACA,OAAO,IAAAymF,2BAAoB,EAACC,KAAK,CAAC;EACpC;EAEA,IAAMO,UAAU,GACd,0DAA4D5wC,KAAM;EACpE,OAAO,IAAA2wC,gCAAyB,EAACC,UAAU,CAAC;AAC9C;AAAC,IAAApqF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc8vF,eAAe;;;;;;;;AClW9B,IAAAriF,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AAAuC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJvC;AACA;AACA;AAFA,IAMMmqF,WAAW,0BAAApqF,MAAA;EACf;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAoqF,YAAY9qF,IAAI,EAAE+qF,qBAAqB,EAAEvgF,UAAU,EAAEopC,OAAO,EAAE;IAAA,IAAAzwC,KAAA;IAAAxI,eAAA,OAAAmwF,WAAA;IAC5D3nF,KAAA,GAAAnB,UAAA,OAAA8oF,WAAA,GAAM9qF,IAAI;;IAEV;AACJ;AACA;AACA;AACA;AACA;IACImD,KAAA,CAAK4nF,qBAAqB,GAAGA,qBAAqB;;IAElD;AACJ;AACA;AACA;AACA;IACI5nF,KAAA,CAAKqH,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;IACIrH,KAAA,CAAKywC,OAAO,GAAGA,OAAO;IAAC,OAAAzwC,KAAA;EACzB;EAACL,SAAA,CAAAgoF,WAAA,EAAApqF,MAAA;EAAA,OAAA7F,YAAA,CAAAiwF,WAAA;AAAA,EAlCuB7mF,eAAK;AAAA,IAAA9K,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAqChByxF,WAAW;;;;;;;;ACxC1B,IAAAxqF,YAAA,GAAAC,sBAAA,CAAAnC,OAAA;AACA,IAAAoyB,WAAA,GAAApyB,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAgrF,MAAA,GAAAhrF,OAAA;AACA,IAAAswE,eAAA,GAAAtwE,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAoC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAVpC;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAGMqqF,WAAW,0BAAA9nF,WAAA;EACf;AACF;AACA;EACE,SAAA8nF,YAAYzgF,GAAG,EAAE;IAAA,IAAApH,KAAA;IAAAxI,eAAA,OAAAqwF,WAAA;IACf7nF,KAAA,GAAAnB,UAAA,OAAAgpF,WAAA;;IAEA;AACJ;AACA;AACA;IACI7nF,KAAA,CAAKiL,IAAI,GAAG7D,GAAG;IAAC,OAAApH,KAAA;EAClB;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAkoF,WAAA,EAAA9nF,WAAA;EAAA,OAAArI,YAAA,CAAAmwF,WAAA;IAAAlwF,GAAA;IAAAC,KAAA,EAKA,SAAAkwF,mBAAmBA,CAACjrF,IAAI,EAAEwK,UAAU,EAAE;MACpC,IAAAlE,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAAmwF,mBAAmBA,CAAC1gF,UAAU,EAAE;MAC9B,IAAMyL,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMk1E,0BAA0B,GAAG3gF,UAAU,CAAC2gF,0BAA0B;MACxE,IAAMC,0BAA0B,GAAG5gF,UAAU,CAAC4gF,0BAA0B;MAExE,IAAAhxD,kBAAgB,EACd+wD,0BAA0B,EAC1B3gF,UAAU,CAACgP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtBhP,UAAU,CAACgP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAGvD,SAAS,CAACsD,UAAU,EACxB,CAAC,CAAC,GAAGtD,SAAS,CAACsD,UAAU,EACzB,CAACtD,SAAS,CAAC0I,QAAQ,EACnB,CAAC1I,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC,EACpB,CAACC,SAAS,CAACD,MAAM,CAAC,CAAC,CACrB,CAAC;MAED,IAAA0hB,sBAAW,EAAC0zD,0BAA0B,EAAED,0BAA0B,CAAC;IACrE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAArwF,GAAA;IAAAC,KAAA,EAeA,SAAAswF,0BAA0BA,CACxB5/E,UAAU,EACVjB,UAAU,EACV8gF,YAAY,EACZC,YAAY,EACZ3tE,QAAQ,EACR9Y,OAAO,EACP0mF,WAAW,EACXC,QAAQ,EACR;MACA,IAAIjnD,MAAM;MACV,IAAMvuB,SAAS,GAAGzL,UAAU,CAACyL,SAAS;;MAEtC;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,SAASo1E,0BAA0BA,CAAC78B,OAAO,EAAEuwB,OAAO,EAAE5iC,KAAK,EAAEl2B,QAAQ,EAAE;QACrE,OAAOrI,QAAQ,CAAC5e,IAAI,CAAC8F,OAAO,EAAEi6E,OAAO,EAAEvwB,OAAO,GAAGrS,KAAK,GAAG,IAAI,EAAEl2B,QAAQ,CAAC;MAC1E;MAEA,IAAM/E,UAAU,GAAGjL,SAAS,CAACiL,UAAU;MAEvC,IAAMwqE,oBAAoB,GAAG,IAAAzqE,iBAAK,EAACxV,UAAU,CAAC1M,KAAK,CAAC,CAAC,EAAEmiB,UAAU,CAAC;MAClE,IAAMyqE,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACxB,IAAIzqE,UAAU,CAACG,QAAQ,CAAC,CAAC,IAAIkqE,YAAY,EAAE;QACzC,IAAMpqE,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;QAC/C,IAAME,UAAU,GAAG,IAAAlD,gBAAQ,EAAC+C,gBAAgB,CAAC;QAC7CwqE,OAAO,CAAC9nF,IAAI,CAAC,CAAC,CAACyd,UAAU,EAAE,CAAC,CAAC,EAAE,CAACA,UAAU,EAAE,CAAC,CAAC,CAAC;MACjD;MAEA,IAAMsqE,WAAW,GAAGphF,UAAU,CAAC+nD,gBAAgB;MAC/C,IAAMs5B,SAAS,GAAGD,WAAW,CAACjwF,MAAM;MAEpC,IAAMmwF,OAAO,GAAG,iCAAmC,EAAG;MACtD,IAAMC,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAI1vF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsvF,OAAO,CAAChwF,MAAM,EAAEU,CAAC,EAAE,EAAE;QACvC,KAAK,IAAIwb,CAAC,GAAGg0E,SAAS,GAAG,CAAC,EAAEh0E,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UACvC,IAAMk5C,UAAU,GAAG66B,WAAW,CAAC/zE,CAAC,CAAC;UACjC,IAAMskC,KAAK,GAAG4U,UAAU,CAAC5U,KAAK;UAC9B,IACEA,KAAK,CAACwX,WAAW,CAAC,CAAC,IACnB,IAAAhB,aAAM,EAAC5B,UAAU,EAAE96C,SAAS,CAAC,IAC7Bu1E,WAAW,CAACxsF,IAAI,CAACysF,QAAQ,EAAEtvC,KAAK,CAAC,EACjC;YACA,IAAM0W,aAAa,GAAG1W,KAAK,CAAC2W,WAAW,CAAC,CAAC;YACzC,IAAMtqD,MAAM,GAAG2zC,KAAK,CAACI,SAAS,CAAC,CAAC;YAChC,IAAIsW,aAAa,IAAIrqD,MAAM,EAAE;cAC3B,IAAMiT,WAAW,GAAGjT,MAAM,CAACwjF,QAAQ,CAAC,CAAC,GACjCN,oBAAoB,GACpBjgF,UAAU;cACd,IAAMmS,SAAQ,GAAGytE,0BAA0B,CAACzoF,IAAI,CAC9C,IAAI,EACJmuD,UAAU,CAACvC,OACb,CAAC;cACDu9B,QAAQ,CAAC,CAAC,CAAC,GAAGtwE,WAAW,CAAC,CAAC,CAAC,GAAGkwE,OAAO,CAACtvF,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5C0vF,QAAQ,CAAC,CAAC,CAAC,GAAGtwE,WAAW,CAAC,CAAC,CAAC,GAAGkwE,OAAO,CAACtvF,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5CmoC,MAAM,GAAGquB,aAAa,CAACw4B,0BAA0B,CAC/CU,QAAQ,EACRvhF,UAAU,EACV8gF,YAAY,EACZ1tE,SAAQ,EACRkuE,OACF,CAAC;YACH;YACA,IAAItnD,MAAM,EAAE;cACV,OAAOA,MAAM;YACf;UACF;QACF;MACF;MACA,IAAIsnD,OAAO,CAACnwF,MAAM,KAAK,CAAC,EAAE;QACxB,OAAO+I,SAAS;MAClB;MACA,IAAMunF,KAAK,GAAG,CAAC,GAAGH,OAAO,CAACnwF,MAAM;MAChCmwF,OAAO,CAACniF,OAAO,CAAC,UAACsO,CAAC,EAAE5b,CAAC;QAAA,OAAM4b,CAAC,CAACi0E,UAAU,IAAI7vF,CAAC,GAAG4vF,KAAK;MAAA,CAAC,CAAC;MACtDH,OAAO,CAACnuF,IAAI,CAAC,UAAC9B,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,CAACqwF,UAAU,GAAGpwF,CAAC,CAACowF,UAAU;MAAA,EAAC;MACnDJ,OAAO,CAACzvC,IAAI,CAAC,UAACpkC,CAAC,EAAK;QAClB,OAAQusB,MAAM,GAAGvsB,CAAC,CAAC2F,QAAQ,CAAC3F,CAAC,CAAC8mE,OAAO,EAAE9mE,CAAC,CAACkkC,KAAK,EAAElkC,CAAC,CAACgO,QAAQ,CAAC;MAC7D,CAAC,CAAC;MACF,OAAOue,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZE;IAAA1pC,GAAA;IAAAC,KAAA,EAaA,SAAAoxF,sBAAsBA,CACpB1gF,UAAU,EACVjB,UAAU,EACV8gF,YAAY,EACZC,YAAY,EACZC,WAAW,EACX1mF,OAAO,EACP;MACA,IAAMsnF,UAAU,GAAG,IAAI,CAACf,0BAA0B,CAChD5/E,UAAU,EACVjB,UAAU,EACV8gF,YAAY,EACZC,YAAY,EACZltF,eAAI,EACJ,IAAI,EACJmtF,WAAW,EACX1mF,OACF,CAAC;MAED,OAAOsnF,UAAU,KAAK1nF,SAAS;IACjC;;IAEA;AACF;AACA;EAFE;IAAA5J,GAAA;IAAAC,KAAA,EAGA,SAAAk7C,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC7nC,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtT,GAAA;IAAAC,KAAA,EAKA,SAAAi4D,WAAWA,CAACxoD,UAAU,EAAE;MACtB,IAAAlE,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAAsxF,uBAAuBA,CAAC7hF,UAAU,EAAE;MAClC,IAAIimE,sBAAc,CAAC9C,cAAc,CAAC,CAAC,EAAE;QACnCnjE,UAAU,CAAC8hF,mBAAmB,CAACzoF,IAAI,CAAC0oF,eAAe,CAAC;MACtD;IACF;EAAC;AAAA,EA9MuB7xF,oBAAU;AAiNpC;AACA;AACA;AACA;AACA,SAAS6xF,eAAeA,CAAChiF,GAAG,EAAEC,UAAU,EAAE;EACxCimE,sBAAc,CAAC7C,MAAM,CAAC,CAAC;AACzB;AAAC,IAAAz0E,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc2xF,WAAW;;;;;;;;AC/O1B,IAAApkF,gBAAA,GAAArG,sBAAA,CAAAnC,OAAA;AACA,IAAAq4C,IAAA,GAAAr4C,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAouF,WAAA,GAAAjsF,sBAAA,CAAAnC,OAAA;AACA,IAAAgrF,MAAA,GAAAhrF,OAAA;AACA,IAAAsC,MAAA,GAAAH,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AACA,IAAAquF,IAAA,GAAAlsF,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAZnC;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAJA,IAKM+rF,oBAAoB,0BAAAC,YAAA;EACxB;AACF;AACA;EACE,SAAAD,qBAAYniF,GAAG,EAAE;IAAA,IAAApH,KAAA;IAAAxI,eAAA,OAAA+xF,oBAAA;IACfvpF,KAAA,GAAAnB,UAAA,OAAA0qF,oBAAA,GAAMniF,GAAG;;IAET;AACJ;AACA;AACA;IACIpH,KAAA,CAAKypF,sBAAsB,GAAG,IAAA/nF,cAAM,EAClCgtE,oBAAY,EACZ3pE,wBAAe,CAAC1O,cAAc,EAC9B+Q,GAAG,CAACsiF,UAAU,EACdtiF,GACF,CAAC;;IAED;AACJ;AACA;AACA;IACIpH,KAAA,CAAK2L,QAAQ,GAAGwkC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7C,IAAMZ,KAAK,GAAGxvC,KAAA,CAAK2L,QAAQ,CAAC6jC,KAAK;IACjCA,KAAK,CAAClD,QAAQ,GAAG,UAAU;IAC3BkD,KAAK,CAAC5xB,KAAK,GAAG,MAAM;IACpB4xB,KAAK,CAAC3xB,MAAM,GAAG,MAAM;IACrB2xB,KAAK,CAACub,MAAM,GAAG,GAAG;IAElB/qD,KAAA,CAAK2L,QAAQ,CAAC8rC,SAAS,GAAG1I,uBAAkB,GAAG,YAAY;IAE3D,IAAM46C,SAAS,GAAGviF,GAAG,CAACoE,WAAW,CAAC,CAAC;IACnCm+E,SAAS,CAACt3C,YAAY,CAACryC,KAAA,CAAK2L,QAAQ,EAAEg+E,SAAS,CAACC,UAAU,IAAI,IAAI,CAAC;;IAEnE;AACJ;AACA;AACA;IACI5pF,KAAA,CAAK6pF,SAAS,GAAG,EAAE;;IAEnB;AACJ;AACA;AACA;IACI7pF,KAAA,CAAKy4C,gBAAgB,GAAG,IAAI;IAAC,OAAAz4C,KAAA;EAC/B;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA4pF,oBAAA,EAAAC,YAAA;EAAA,OAAA9xF,YAAA,CAAA6xF,oBAAA;IAAA5xF,GAAA;IAAAC,KAAA,EAKA,SAAAkwF,mBAAmBA,CAACjrF,IAAI,EAAEwK,UAAU,EAAE;MACpC,IAAMD,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAI1rC,GAAG,CAAC5F,WAAW,CAAC3E,IAAI,CAAC,EAAE;QACzB,IAAM+D,KAAK,GAAG,IAAI+mF,cAAW,CAAC9qF,IAAI,EAAE0E,SAAS,EAAE8F,UAAU,CAAC;QAC1DD,GAAG,CAACzG,aAAa,CAACC,KAAK,CAAC;MAC1B;IACF;;IAEA;AACF;AACA;EAFE;IAAAjJ,GAAA;IAAAC,KAAA,EAGA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAAkK,qBAAa,EAAC,IAAI,CAACynF,sBAAsB,CAAC;MAC1C,IAAI,CAAC99E,QAAQ,CAAC9R,MAAM,CAAC,CAAC;MACtB0N,aAAA,CAAAgiF,oBAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5xF,GAAA;IAAAC,KAAA,EAKA,SAAAi4D,WAAWA,CAACxoD,UAAU,EAAE;MACtB,IAAI,CAACA,UAAU,EAAE;QACf,IAAI,IAAI,CAACoxC,gBAAgB,EAAE;UACzB,IAAI,CAAC9sC,QAAQ,CAAC6jC,KAAK,CAACoK,OAAO,GAAG,MAAM;UACpC,IAAI,CAACnB,gBAAgB,GAAG,KAAK;QAC/B;QACA;MACF;MAEA,IAAI,CAACsvC,mBAAmB,CAAC1gF,UAAU,CAAC;MACpC,IAAI,CAACygF,mBAAmB,CAAC33B,kBAAe,CAACrC,UAAU,EAAEzmD,UAAU,CAAC;MAEhE,IAAM+nD,gBAAgB,GAAG/nD,UAAU,CAAC+nD,gBAAgB,CAAC50D,IAAI,CACvD,UAAC9B,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,CAACqyD,MAAM,GAAGpyD,CAAC,CAACoyD,MAAM;MAAA,CAC/B,CAAC;MACD,IAAMu7B,SAAS,GAAGl3B,gBAAgB,CAAClW,IAAI,CACrC,UAAC0U,UAAU;QAAA,OACTA,UAAU,CAAC5U,KAAK,YAAYgtC,mBAAe,IAC3Cp4B,UAAU,CAAC5U,KAAK,CAAC+W,YAAY,CAAC,CAAC;MAAA,CACnC,CAAC;MACD,IAAIu2B,SAAS,EAAE;QACb;QACAj/E,UAAU,CAACi/E,SAAS,GAAG,CAAC,CAAC;MAC3B;MACA,IAAMxzE,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MAEtC,IAAI,CAAC+2E,SAAS,CAACrxF,MAAM,GAAG,CAAC;MAEzB,IAAMsxF,mBAAmB,GAAG,EAAE;MAC9B,IAAIC,eAAe,GAAG,IAAI;MAC1B,KAAK,IAAI7wF,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkuD,gBAAgB,CAAC52D,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACzD,IAAM00D,UAAU,GAAGwB,gBAAgB,CAACl2D,CAAC,CAAC;QACtCmO,UAAU,CAAC2iF,UAAU,GAAG9wF,CAAC;QAEzB,IAAM8/C,KAAK,GAAG4U,UAAU,CAAC5U,KAAK;QAC9B,IAAMixC,WAAW,GAAGjxC,KAAK,CAAC4S,cAAc,CAAC,CAAC;QAC1C,IACE,CAAC,IAAA4D,aAAM,EAAC5B,UAAU,EAAE96C,SAAS,CAAC,IAC7Bm3E,WAAW,IAAI,OAAO,IAAIA,WAAW,IAAI,WAAY,EACtD;UACAjxC,KAAK,CAAC8W,QAAQ,CAAC,CAAC;UAChB;QACF;QAEA,IAAMlqD,OAAO,GAAGozC,KAAK,CAACrG,MAAM,CAACtrC,UAAU,EAAE0iF,eAAe,CAAC;QACzD,IAAI,CAACnkF,OAAO,EAAE;UACZ;QACF;QACA,IAAIA,OAAO,KAAKmkF,eAAe,EAAE;UAC/B,IAAI,CAACF,SAAS,CAACnpF,IAAI,CAACkF,OAAO,CAAC;UAC5BmkF,eAAe,GAAGnkF,OAAO;QAC3B;QAEAkkF,mBAAmB,CAACppF,IAAI,CAACktD,UAAU,CAAC;MACtC;MAEA,IAAI,CAAC04B,SAAS,CAACj/E,UAAU,EAAEyiF,mBAAmB,CAAC;MAE/C,IAAAj4C,oBAAe,EAAC,IAAI,CAAClmC,QAAQ,EAAE,IAAI,CAACk+E,SAAS,CAAC;MAE9C,IAAI,CAAC/B,mBAAmB,CAAC33B,kBAAe,CAACpC,WAAW,EAAE1mD,UAAU,CAAC;MAEjE,IAAI,CAAC,IAAI,CAACoxC,gBAAgB,EAAE;QAC1B,IAAI,CAAC9sC,QAAQ,CAAC6jC,KAAK,CAACoK,OAAO,GAAG,EAAE;QAChC,IAAI,CAACnB,gBAAgB,GAAG,IAAI;MAC9B;MAEA,IAAI,CAACywC,uBAAuB,CAAC7hF,UAAU,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAA1P,GAAA;IAAAC,KAAA,EAIA,SAAA0uF,SAASA,CAACj/E,UAAU,EAAEohF,WAAW,EAAE;MACjC,IAAI,CAACphF,UAAU,CAACi/E,SAAS,EAAE;QACzB;MACF;MACA,KAAK,IAAIptF,CAAC,GAAGuvF,WAAW,CAACjwF,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAChD,IAAM00D,UAAU,GAAG66B,WAAW,CAACvvF,CAAC,CAAC;QACjC,IAAM8/C,KAAK,GAAG4U,UAAU,CAAC5U,KAAK;QAC9B,IAAIA,KAAK,CAAC+W,YAAY,CAAC,CAAC,EAAE;UACxB/W,KAAK,CAACgX,eAAe,CAAC3oD,UAAU,EAAEumD,UAAU,CAAC;QAC/C;MACF;MACA66B,WAAW,CAACjiF,OAAO,CAAC,UAAConD,UAAU;QAAA,OAC7BA,UAAU,CAAC5U,KAAK,CAACiX,cAAc,CAAC5oD,UAAU,CAAC;MAAA,CAC7C,CAAC;IACH;EAAC;AAAA,EAlKgCwgF,YAAW;AAAA,IAAA7xF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAqK/BqzF,oBAAoB;;;;;;;;ACrLnC,IAAAttC,WAAA,GAAA7+C,sBAAA,CAAAnC,OAAA;AACA,IAAAsK,oBAAA,GAAAnI,sBAAA,CAAAnC,OAAA;AACA,IAAAyP,gBAAA,GAAAtN,sBAAA,CAAAnC,OAAA;AACA,IAAAivF,uBAAA,GAAA9sF,sBAAA,CAAAnC,OAAA;AACA,IAAA0P,oBAAA,GAAAvN,sBAAA,CAAAnC,OAAA;AACA,IAAA4M,SAAA,GAAAzK,sBAAA,CAAAnC,OAAA;AACA,IAAAq3C,aAAA,GAAAl1C,sBAAA,CAAAnC,OAAA;AACA,IAAAkvF,YAAA,GAAA/sF,sBAAA,CAAAnC,OAAA;AACA,IAAAuK,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAwI,gBAAA,GAAArG,sBAAA,CAAAnC,OAAA;AACA,IAAAmvF,UAAA,GAAAv5E,uBAAA,CAAA5V,OAAA;AACA,IAAAgzD,KAAA,GAAA7wD,sBAAA,CAAAnC,OAAA;AACA,IAAAsnC,SAAA,GAAAnlC,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAkpB,QAAA,GAAAlpB,OAAA;AACA,IAAAovF,SAAA,GAAApvF,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAOA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAA4P,IAAA,GAAA5P,OAAA;AACA,IAAAqvF,UAAA,GAAArvF,OAAA;AACA,IAAAsvF,MAAA,GAAA15E,uBAAA,CAAA5V,OAAA;AACA,IAAAgrF,MAAA,GAAA7oF,sBAAA,CAAAnC,OAAA;AACA,IAAA6P,WAAA,GAAA1N,sBAAA,CAAAnC,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAAuvF,WAAA,GAAAptF,sBAAA,CAAAnC,OAAA;AACA,IAAAwvF,UAAA,GAAArtF,sBAAA,CAAAnC,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAIA,IAAA2I,KAAA,GAAA3I,OAAA;AAAiC,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA3CjktF,sBAAsBA,CAAC1xC,KAAK,EAAE;EACrC,IAAIA,KAAK,YAAYmV,cAAK,EAAE;IAC1BnV,KAAK,CAACkX,cAAc,CAAC,IAAI,CAAC;IAC1B;EACF;EACA,IAAIlX,KAAK,YAAYuT,cAAU,EAAE;IAC/BvT,KAAK,CAAC+T,SAAS,CAAC,CAAC,CAACvmD,OAAO,CAACkkF,sBAAsB,CAAC;EACnD;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAAC3xC,KAAK,EAAE5xC,GAAG,EAAE;EACvC,IAAI4xC,KAAK,YAAYmV,cAAK,EAAE;IAC1BnV,KAAK,CAACkX,cAAc,CAAC9oD,GAAG,CAAC;IACzB;EACF;EACA,IAAI4xC,KAAK,YAAYuT,cAAU,EAAE;IAC/B,IAAM5T,MAAM,GAAGK,KAAK,CAAC+T,SAAS,CAAC,CAAC,CAACrmD,QAAQ,CAAC,CAAC;IAC3C,KAAK,IAAIxN,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3C,MAAM,CAACngD,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAC/CyxF,mBAAmB,CAAChyC,MAAM,CAACz/C,CAAC,CAAC,EAAEkO,GAAG,CAAC;IACrC;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA,IAoDMwjF,GAAG,0BAAA9kF,WAAA;EACP;AACF;AACA;EACE,SAAA8kF,IAAY5kF,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAozF,GAAA;IACnB5qF,KAAA,GAAAnB,UAAA,OAAA+rF,GAAA;IAEA5kF,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;IACIhG,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;IAEP,IAAMooF,eAAe,GAAGC,qBAAqB,CAAC9kF,OAAO,CAAC;;IAEtD;AACJ;AACA;AACA;IACIhG,KAAA,CAAK+qF,eAAe,GAAG,KAAK;;IAE5B;AACJ;AACA;AACA;IACI/qF,KAAA,CAAKgrF,OAAO,GAAG,IAAI;;IAEnB;IACAhrF,KAAA,CAAKirF,wBAAwB,GAAGjrF,KAAA,CAAKkrF,kBAAkB,CAACzrF,IAAI,CAAAO,KAAK,CAAC;;IAElE;AACJ;AACA;AACA;IACIA,KAAA,CAAKmrF,gBAAgB,GACnBnlF,OAAO,CAAColF,eAAe,KAAK7pF,SAAS,GAAGyE,OAAO,CAAColF,eAAe,GAAG,EAAE;;IAEtE;AACJ;AACA;AACA;IACIprF,KAAA,CAAKyoE,WAAW,GACdziE,OAAO,CAACuiE,UAAU,KAAKhnE,SAAS,GAC5ByE,OAAO,CAACuiE,UAAU,GAClB5+D,uBAAkB;;IAExB;AACJ;AACA;AACA;IACI3J,KAAA,CAAKqrF,wBAAwB;;IAE7B;AACJ;AACA;AACA;IACIrrF,KAAA,CAAKsrF,kBAAkB;;IAEvB;AACJ;AACA;IACItrF,KAAA,CAAKurF,eAAe,GAAGvrF,KAAA,CAAKurF,eAAe,CAAC9rF,IAAI,CAAAO,KAAK,CAAC;;IAEtD;AACJ;AACA;AACA;IACIA,KAAA,CAAKwrF,2BAA2B,GAAG,IAAAl2D,iBAAe,EAAC,CAAC;;IAEpD;AACJ;AACA;AACA;IACIt1B,KAAA,CAAKyrF,2BAA2B,GAAG,IAAAn2D,iBAAe,EAAC,CAAC;;IAEpD;AACJ;AACA;AACA;IACIt1B,KAAA,CAAK0rF,WAAW,GAAG,CAAC;;IAEpB;AACJ;AACA;AACA;IACI1rF,KAAA,CAAK2rF,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;AACA;IACI3rF,KAAA,CAAK4rF,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACI5rF,KAAA,CAAK6rF,wBAAwB,GAAG,IAAI;;IAEpC;AACJ;AACA;AACA;IACI7rF,KAAA,CAAK8rF,sBAAsB,GAAG,IAAI;;IAElC;AACJ;AACA;AACA;IACI9rF,KAAA,CAAK+rF,+BAA+B,GAAG,IAAI;;IAE3C;AACJ;AACA;AACA;IACI/rF,KAAA,CAAKgsF,SAAS,GAAG77C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9CpwC,KAAA,CAAKgsF,SAAS,CAACv0C,SAAS,GACtB,aAAa,IAAI,cAAc,IAAIjtC,MAAM,GAAG,WAAW,GAAG,EAAE,CAAC;IAC/DxK,KAAA,CAAKgsF,SAAS,CAACx8C,KAAK,CAAClD,QAAQ,GAAG,UAAU;IAC1CtsC,KAAA,CAAKgsF,SAAS,CAACx8C,KAAK,CAAC6tC,QAAQ,GAAG,QAAQ;IACxCr9E,KAAA,CAAKgsF,SAAS,CAACx8C,KAAK,CAAC5xB,KAAK,GAAG,MAAM;IACnC5d,KAAA,CAAKgsF,SAAS,CAACx8C,KAAK,CAAC3xB,MAAM,GAAG,MAAM;;IAEpC;AACJ;AACA;AACA;IACI7d,KAAA,CAAKisF,iBAAiB,GAAG97C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACtDpwC,KAAA,CAAKisF,iBAAiB,CAACz8C,KAAK,CAAClD,QAAQ,GAAG,UAAU;IAClDtsC,KAAA,CAAKisF,iBAAiB,CAACz8C,KAAK,CAACub,MAAM,GAAG,GAAG;IACzC/qD,KAAA,CAAKisF,iBAAiB,CAACz8C,KAAK,CAAC5xB,KAAK,GAAG,MAAM;IAC3C5d,KAAA,CAAKisF,iBAAiB,CAACz8C,KAAK,CAAC3xB,MAAM,GAAG,MAAM;IAC5C7d,KAAA,CAAKisF,iBAAiB,CAACz8C,KAAK,CAACgD,aAAa,GAAG,MAAM;IACnDxyC,KAAA,CAAKisF,iBAAiB,CAACx0C,SAAS,GAAG,qBAAqB;IACxDz3C,KAAA,CAAKgsF,SAAS,CAAC75C,WAAW,CAACnyC,KAAA,CAAKisF,iBAAiB,CAAC;;IAElD;AACJ;AACA;AACA;IACIjsF,KAAA,CAAKksF,0BAA0B,GAAG/7C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/DpwC,KAAA,CAAKksF,0BAA0B,CAAC18C,KAAK,CAAClD,QAAQ,GAAG,UAAU;IAC3DtsC,KAAA,CAAKksF,0BAA0B,CAAC18C,KAAK,CAACub,MAAM,GAAG,GAAG;IAClD/qD,KAAA,CAAKksF,0BAA0B,CAAC18C,KAAK,CAAC5xB,KAAK,GAAG,MAAM;IACpD5d,KAAA,CAAKksF,0BAA0B,CAAC18C,KAAK,CAAC3xB,MAAM,GAAG,MAAM;IACrD7d,KAAA,CAAKksF,0BAA0B,CAAC18C,KAAK,CAACgD,aAAa,GAAG,MAAM;IAC5DxyC,KAAA,CAAKksF,0BAA0B,CAACz0C,SAAS,GAAG,+BAA+B;IAC3Ez3C,KAAA,CAAKgsF,SAAS,CAAC75C,WAAW,CAACnyC,KAAA,CAAKksF,0BAA0B,CAAC;;IAE3D;AACJ;AACA;AACA;IACIlsF,KAAA,CAAKmsF,uBAAuB,GAAG,IAAI;;IAEnC;AACJ;AACA;AACA;IACInsF,KAAA,CAAKsL,cAAc,GAAGtF,OAAO,CAACgF,aAAa;;IAE3C;AACJ;AACA;AACA;IACIhL,KAAA,CAAKosF,oBAAoB,GAAGvB,eAAe,CAACwB,mBAAmB;;IAE/D;AACJ;AACA;AACA;IACIrsF,KAAA,CAAKssF,wBAAwB,GAAG,IAAI;;IAEpC;AACJ;AACA;AACA;IACItsF,KAAA,CAAKusF,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACIvsF,KAAA,CAAKwsF,eAAe,GAAG,IAAIC,cAAc,CAAC;MAAA,OAAMzsF,KAAA,CAAK0sF,UAAU,CAAC,CAAC;IAAA,EAAC;;IAElE;AACJ;AACA;AACA;IACI1sF,KAAA,CAAKs8C,QAAQ,GAAGuuC,eAAe,CAACvuC,QAAQ,IAAI,IAAAqwC,kBAAe,EAAC,CAAC;;IAE7D;AACJ;AACA;AACA;IACI3sF,KAAA,CAAKspD,YAAY,GACfuhC,eAAe,CAACvhC,YAAY,IAC5B,IAAAsjC,mBAAmB,EAAC;MAClBlqC,WAAW,EAAE;IACf,CAAC,CAAC;;IAEJ;AACJ;AACA;AACA;IACI1iD,KAAA,CAAK6sF,SAAS,GAAGhC,eAAe,CAACiC,QAAQ;;IAEzC;AACJ;AACA;AACA;AACA;IACI9sF,KAAA,CAAK+sF,eAAe,GAAG,CAAC,CAAC;;IAEzB;AACJ;AACA;AACA;IACI/sF,KAAA,CAAKuuD,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACIvuD,KAAA,CAAKgtF,oBAAoB,GAAG,EAAE;;IAE9B;AACJ;AACA;AACA;IACIhtF,KAAA,CAAKitF,UAAU,GAAG,IAAI/7E,kBAAS,CAC7BlR,KAAA,CAAKwS,eAAe,CAAC/S,IAAI,CAAAO,KAAK,CAAC,EAC/BA,KAAA,CAAKktF,iBAAiB,CAACztF,IAAI,CAAAO,KAAK,CAClC,CAAC;IAEDA,KAAA,CAAKgF,iBAAiB,CACpBmoF,oBAAW,CAACn/E,UAAU,EACtBhO,KAAA,CAAKotF,wBACP,CAAC;IACDptF,KAAA,CAAKgF,iBAAiB,CAACmoF,oBAAW,CAACh/E,IAAI,EAAEnO,KAAA,CAAKqtF,kBAAkB,CAAC;IACjErtF,KAAA,CAAKgF,iBAAiB,CAACmoF,oBAAW,CAACl/E,IAAI,EAAEjO,KAAA,CAAKstF,kBAAkB,CAAC;IACjEttF,KAAA,CAAKgF,iBAAiB,CAACmoF,oBAAW,CAACj/E,MAAM,EAAElO,KAAA,CAAKutF,oBAAoB,CAAC;;IAErE;IACA;IACAvtF,KAAA,CAAKoE,aAAa,CAACymF,eAAe,CAAC5mF,MAAM,CAAC;IAE1C,IAAMmD,GAAG,GAAApH,KAAO;IAChB,IAAIgG,OAAO,CAACi1C,IAAI,IAAI,EAAEj1C,OAAO,CAACi1C,IAAI,YAAYjY,aAAI,CAAC,EAAE;MACnDh9B,OAAO,CAACi1C,IAAI,CAACtG,IAAI,CAAC,UAAU64C,WAAW,EAAE;QACvCpmF,GAAG,CAACqmF,OAAO,CAAC,IAAIzqD,aAAI,CAACwqD,WAAW,CAAC,CAAC;MACpC,CAAC,CAAC;IACJ;IAEAxtF,KAAA,CAAKs8C,QAAQ,CAACj8C,gBAAgB,CAC5ByG,4BAAmB,CAAC3Q,GAAG;IACvB;AACN;AACA;IACM,UAACyK,KAAK,EAAK;MACTA,KAAK,CAACgF,OAAO,CAACmtC,MAAM,CAAA/yC,KAAK,CAAC;IAC5B,CACF,CAAC;IAEDA,KAAA,CAAKs8C,QAAQ,CAACj8C,gBAAgB,CAC5ByG,4BAAmB,CAAC1Q,MAAM;IAC1B;AACN;AACA;IACM,UAACwK,KAAK,EAAK;MACTA,KAAK,CAACgF,OAAO,CAACmtC,MAAM,CAAC,IAAI,CAAC;IAC5B,CACF,CAAC;IAED/yC,KAAA,CAAKspD,YAAY,CAACjpD,gBAAgB,CAChCyG,4BAAmB,CAAC3Q,GAAG;IACvB;AACN;AACA;IACM,UAACyK,KAAK,EAAK;MACTA,KAAK,CAACgF,OAAO,CAACmtC,MAAM,CAAA/yC,KAAK,CAAC;IAC5B,CACF,CAAC;IAEDA,KAAA,CAAKspD,YAAY,CAACjpD,gBAAgB,CAChCyG,4BAAmB,CAAC1Q,MAAM;IAC1B;AACN;AACA;IACM,UAACwK,KAAK,EAAK;MACTA,KAAK,CAACgF,OAAO,CAACmtC,MAAM,CAAC,IAAI,CAAC;IAC5B,CACF,CAAC;IAED/yC,KAAA,CAAK6sF,SAAS,CAACxsF,gBAAgB,CAC7ByG,4BAAmB,CAAC3Q,GAAG;IACvB;AACN;AACA;IACM,UAACyK,KAAK,EAAK;MACTZ,KAAA,CAAK0tF,mBAAmB,CAAC9sF,KAAK,CAACgF,OAAO,CAAC;IACzC,CACF,CAAC;IAED5F,KAAA,CAAK6sF,SAAS,CAACxsF,gBAAgB,CAC7ByG,4BAAmB,CAAC1Q,MAAM;IAC1B;AACN;AACA;IACM,UAACwK,KAAK,EAAK;MACT,IAAM+L,EAAE,GAAG/L,KAAK,CAACgF,OAAO,CAACs6E,KAAK,CAAC,CAAC;MAChC,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB,OAAOvB,KAAA,CAAK+sF,eAAe,CAACpgF,EAAE,CAACoL,QAAQ,CAAC,CAAC,CAAC;MAC5C;MACAnX,KAAK,CAACgF,OAAO,CAACmtC,MAAM,CAAC,IAAI,CAAC;IAC5B,CACF,CAAC;IAED/yC,KAAA,CAAKs8C,QAAQ,CAAC91C,OAAO;IACnB;AACN;AACA;IACM,UAACmnF,OAAO,EAAK;MACXA,OAAO,CAAC56C,MAAM,CAAA/yC,KAAK,CAAC;IACtB,CACF,CAAC;IAEDA,KAAA,CAAKspD,YAAY,CAAC9iD,OAAO;IACvB;AACN;AACA;IACM,UAAConF,WAAW,EAAK;MACfA,WAAW,CAAC76C,MAAM,CAAA/yC,KAAK,CAAC;IAC1B,CACF,CAAC;IAEDA,KAAA,CAAK6sF,SAAS,CAACrmF,OAAO,CAACxG,KAAA,CAAK0tF,mBAAmB,CAACjuF,IAAI,CAAAO,KAAK,CAAC,CAAC;IAAC,OAAAA,KAAA;EAC9D;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAirF,GAAA,EAAA9kF,WAAA;EAAA,OAAApO,YAAA,CAAAkzF,GAAA;IAAAjzF,GAAA;IAAAC,KAAA,EAKA,SAAAi2F,UAAUA,CAACF,OAAO,EAAE;MAClB,IAAI,CAACG,WAAW,CAAC,CAAC,CAACptF,IAAI,CAACitF,OAAO,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAh2F,GAAA;IAAAC,KAAA,EASA,SAAAm2F,cAAcA,CAACH,WAAW,EAAE;MAC1B,IAAI,CAACI,eAAe,CAAC,CAAC,CAACttF,IAAI,CAACktF,WAAW,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAj2F,GAAA;IAAAC,KAAA,EAOA,SAAAq2F,QAAQA,CAACj1C,KAAK,EAAE;MACd,IAAML,MAAM,GAAG,IAAI,CAAC0W,aAAa,CAAC,CAAC,CAACtC,SAAS,CAAC,CAAC;MAC/CpU,MAAM,CAACj4C,IAAI,CAACs4C,KAAK,CAAC;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAArhD,GAAA;IAAAC,KAAA,EAIA,SAAAs2F,eAAeA,CAACttF,KAAK,EAAE;MACrB+pF,mBAAmB,CAAC/pF,KAAK,CAACo4C,KAAK,EAAE,IAAI,CAAC;IACxC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArhD,GAAA;IAAAC,KAAA,EAKA,SAAAu2F,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC3tF,IAAI,CAAC0tF,OAAO,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz2F,GAAA;IAAAC,KAAA,EAKA,SAAA81F,mBAAmBA,CAACU,OAAO,EAAE;MAC3B,IAAMzhF,EAAE,GAAGyhF,OAAO,CAAClO,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB,IAAI,CAACwrF,eAAe,CAACpgF,EAAE,CAACoL,QAAQ,CAAC,CAAC,CAAC,GAAGq2E,OAAO;MAC/C;MACAA,OAAO,CAACr7C,MAAM,CAAC,IAAI,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAp7C,GAAA;IAAAC,KAAA,EAKA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACwkD,QAAQ,CAAC9/C,KAAK,CAAC,CAAC;MACrB,IAAI,CAAC8sD,YAAY,CAAC9sD,KAAK,CAAC,CAAC;MACzB,IAAI,CAACqwF,SAAS,CAACrwF,KAAK,CAAC,CAAC;MACtB,IAAI,CAACgwF,eAAe,CAAC8B,UAAU,CAAC,CAAC;MACjC,IAAI,CAAC17C,SAAS,CAAC,IAAI,CAAC;MACpBrrC,aAAA,CAAAqjF,GAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAjBE;IAAAjzF,GAAA;IAAAC,KAAA,EAkBA,SAAA22F,qBAAqBA,CAACnmF,KAAK,EAAEqS,QAAQ,EAAEzU,OAAO,EAAE;MAC9C,IAAI,CAAC,IAAI,CAAC2lF,WAAW,IAAI,CAAC,IAAI,CAACp9B,SAAS,EAAE;QACxC;MACF;MACA,IAAMjmD,UAAU,GAAG,IAAI,CAAC06C,8BAA8B,CAAC56C,KAAK,CAAC;MAC7DpC,OAAO,GAAGA,OAAO,KAAKzE,SAAS,GAAGyE,OAAO,GAAG,CAAC,CAAC;MAC9C,IAAMmiF,YAAY,GAChBniF,OAAO,CAACmiF,YAAY,KAAK5mF,SAAS,GAAGyE,OAAO,CAACmiF,YAAY,GAAG,CAAC;MAC/D,IAAME,WAAW,GACfriF,OAAO,CAACqiF,WAAW,KAAK9mF,SAAS,GAAGyE,OAAO,CAACqiF,WAAW,GAAGntF,eAAI;MAChE,IAAMktF,YAAY,GAAGpiF,OAAO,CAACoiF,YAAY,KAAK,KAAK;MACnD,OAAO,IAAI,CAAC75B,SAAS,CAAC25B,0BAA0B,CAC9C5/E,UAAU,EACV,IAAI,CAACqjF,WAAW,EAChBxD,YAAY,EACZC,YAAY,EACZ3tE,QAAQ,EACR,IAAI,EACJ4tE,WAAW,EACX,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1wF,GAAA;IAAAC,KAAA,EAQA,SAAA42F,kBAAkBA,CAACpmF,KAAK,EAAEpC,OAAO,EAAE;MACjC,IAAMyoF,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACF,qBAAqB,CACxBnmF,KAAK,EACL,UAAUwzE,OAAO,EAAE;QACjB6S,QAAQ,CAAC/tF,IAAI,CAACk7E,OAAO,CAAC;MACxB,CAAC,EACD51E,OACF,CAAC;MACD,OAAOyoF,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA92F,GAAA;IAAAC,KAAA,EAKA,SAAAghD,YAAYA,CAAA,EAAG;MACb,IAAMD,MAAM,GAAG,EAAE;MACjB,SAAS+1C,aAAaA,CAACC,UAAU,EAAE;QACjCA,UAAU,CAACnoF,OAAO,CAAC,UAAUwyC,KAAK,EAAE;UAClC,IAAIA,KAAK,YAAYuT,cAAU,EAAE;YAC/BmiC,aAAa,CAAC11C,KAAK,CAAC+T,SAAS,CAAC,CAAC,CAAC;UAClC,CAAC,MAAM;YACLpU,MAAM,CAACj4C,IAAI,CAACs4C,KAAK,CAAC;UACpB;QACF,CAAC,CAAC;MACJ;MACA01C,aAAa,CAAC,IAAI,CAAC3hC,SAAS,CAAC,CAAC,CAAC;MAC/B,OAAOpU,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAhhD,GAAA;IAAAC,KAAA,EAQA,SAAAg3F,iBAAiBA,CAACxmF,KAAK,EAAEpC,OAAO,EAAE;MAChC,IAAI,CAAC,IAAI,CAAC2lF,WAAW,IAAI,CAAC,IAAI,CAACp9B,SAAS,EAAE;QACxC,OAAO,KAAK;MACd;MACA,IAAMjmD,UAAU,GAAG,IAAI,CAAC06C,8BAA8B,CAAC56C,KAAK,CAAC;MAC7DpC,OAAO,GAAGA,OAAO,KAAKzE,SAAS,GAAGyE,OAAO,GAAG,CAAC,CAAC;MAC9C,IAAMqiF,WAAW,GACfriF,OAAO,CAACqiF,WAAW,KAAK9mF,SAAS,GAAGyE,OAAO,CAACqiF,WAAW,GAAGntF,eAAI;MAChE,IAAMitF,YAAY,GAChBniF,OAAO,CAACmiF,YAAY,KAAK5mF,SAAS,GAAGyE,OAAO,CAACmiF,YAAY,GAAG,CAAC;MAC/D,IAAMC,YAAY,GAAGpiF,OAAO,CAACoiF,YAAY,KAAK,KAAK;MACnD,OAAO,IAAI,CAAC75B,SAAS,CAACy6B,sBAAsB,CAC1C1gF,UAAU,EACV,IAAI,CAACqjF,WAAW,EAChBxD,YAAY,EACZC,YAAY,EACZC,WAAW,EACX,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1wF,GAAA;IAAAC,KAAA,EAMA,SAAAi3F,kBAAkBA,CAACjuF,KAAK,EAAE;MACxB,OAAO,IAAI,CAACyH,sBAAsB,CAAC,IAAI,CAACF,aAAa,CAACvH,KAAK,CAAC,CAAC;IAC/D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjJ,GAAA;IAAAC,KAAA,EAKA,SAAAk3F,0BAA0BA,CAACluF,KAAK,EAAE;MAChC,OAAO,IAAI,CAACoiD,8BAA8B,CAAC,IAAI,CAAC76C,aAAa,CAACvH,KAAK,CAAC,CAAC;IACvE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjJ,GAAA;IAAAC,KAAA,EAMA,SAAAuQ,aAAaA,CAACvH,KAAK,EAAE;MACnB,IAAMmuF,QAAQ,GAAG,IAAI,CAAC/C,SAAS;MAC/B,IAAMgD,gBAAgB,GAAGD,QAAQ,CAACE,qBAAqB,CAAC,CAAC;MACzD,IAAMnuD,YAAY,GAAG,IAAI,CAACjkB,OAAO,CAAC,CAAC;MACnC,IAAMqyE,MAAM,GAAGF,gBAAgB,CAACpxE,KAAK,GAAGkjB,YAAY,CAAC,CAAC,CAAC;MACvD,IAAMquD,MAAM,GAAGH,gBAAgB,CAACnxE,MAAM,GAAGijB,YAAY,CAAC,CAAC,CAAC;MACxD,IAAMsuD,aAAa;MACjB;MACA,gBAAgB,IAAIxuF,KAAK,GACrB,yBAA2BA,KAAK,CAAEyuF,cAAc,CAAC,CAAC,CAAC,IACnD,yBAA2BzuF,KAAK,CAAC;MAEvC,OAAO,CACL,CAACwuF,aAAa,CAAC3hF,OAAO,GAAGuhF,gBAAgB,CAACrrC,IAAI,IAAIurC,MAAM,EACxD,CAACE,aAAa,CAAC1hF,OAAO,GAAGshF,gBAAgB,CAACprC,GAAG,IAAIurC,MAAM,CACxD;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAx3F,GAAA;IAAAC,KAAA,EASA,SAAA03F,SAASA,CAAA,EAAG;MACV,OAAO,2CACL,IAAI,CAACjrF,GAAG,CAAC8oF,oBAAW,CAACj/E,MAAM,CAAC;IAEhC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAvW,GAAA;IAAAC,KAAA,EAOA,SAAAynD,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACktC,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA50F,GAAA;IAAAC,KAAA,EAOA,SAAAyQ,sBAAsBA,CAACD,KAAK,EAAE;MAC5B,OAAO,IAAA0pB,sBAAgB,EACrB,IAAI,CAACkxB,8BAA8B,CAAC56C,KAAK,CAAC,EAC1C,IAAI,CAAC8yC,OAAO,CAAC,CAAC,CAACtkB,aAAa,CAAC,CAC/B,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAj/B,GAAA;IAAAC,KAAA,EAMA,SAAAorD,8BAA8BA,CAAC56C,KAAK,EAAE;MACpC,IAAMf,UAAU,GAAG,IAAI,CAACskF,WAAW;MACnC,IAAI,CAACtkF,UAAU,EAAE;QACf,OAAO,IAAI;MACb;MACA,OAAO,IAAAoW,gBAAc,EAACpW,UAAU,CAAC4gF,0BAA0B,EAAE7/E,KAAK,CAACxM,KAAK,CAAC,CAAC,CAAC;IAC7E;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjE,GAAA;IAAAC,KAAA,EAMA,SAAAk2F,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACxxC,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3kD,GAAA;IAAAC,KAAA,EAMA,SAAAy2F,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACxB,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAl1F,GAAA;IAAAC,KAAA,EAQA,SAAA23F,cAAcA,CAAC5iF,EAAE,EAAE;MACjB,IAAMyhF,OAAO,GAAG,IAAI,CAACrB,eAAe,CAACpgF,EAAE,CAACoL,QAAQ,CAAC,CAAC,CAAC;MACnD,OAAOq2E,OAAO,KAAK7sF,SAAS,GAAG6sF,OAAO,GAAG,IAAI;IAC/C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAz2F,GAAA;IAAAC,KAAA,EAQA,SAAAo2F,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAAC1kC,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3xD,GAAA;IAAAC,KAAA,EAMA,SAAAy3D,aAAaA,CAAA,EAAG;MACd,OAAO,yBAA2B,IAAI,CAAChrD,GAAG,CAAC8oF,oBAAW,CAACn/E,UAAU,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArW,GAAA;IAAAC,KAAA,EAKA,SAAAi1D,SAASA,CAAClU,MAAM,EAAE;MAChB,IAAM62C,KAAK,GAAG,IAAI,CAACngC,aAAa,CAAC,CAAC;MAClC,IAAI1W,MAAM,YAAY9yC,mBAAU,EAAE;QAChC2pF,KAAK,CAAC3iC,SAAS,CAAClU,MAAM,CAAC;QACvB;MACF;MAEA,IAAM4U,UAAU,GAAGiiC,KAAK,CAACziC,SAAS,CAAC,CAAC;MACpCQ,UAAU,CAAC/wD,KAAK,CAAC,CAAC;MAClB+wD,UAAU,CAAC/zD,MAAM,CAACm/C,MAAM,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhhD,GAAA;IAAAC,KAAA,EAKA,SAAAm1D,SAASA,CAAA,EAAG;MACV,IAAMpU,MAAM,GAAG,IAAI,CAAC0W,aAAa,CAAC,CAAC,CAACtC,SAAS,CAAC,CAAC;MAC/C,OAAOpU,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAAhhD,GAAA;IAAAC,KAAA,EAGA,SAAA63F,oBAAoBA,CAAA,EAAG;MACrB,IAAMrgC,gBAAgB,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC3D,mBAAmB,CAAC,CAAC;MACnE,KAAK,IAAIxyD,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkuD,gBAAgB,CAAC52D,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACzD,IAAM6Y,KAAK,GAAGq9C,gBAAgB,CAACl2D,CAAC,CAAC;QACjC,IAAI,CAAC6Y,KAAK,CAAC0nC,OAAO,EAAE;UAClB;QACF;QACA,IAAMuhC,QAAQ,GAAGjpE,KAAK,CAACinC,KAAK,CAAC2W,WAAW,CAAC,CAAC;QAC1C,IAAIqrB,QAAQ,IAAI,CAACA,QAAQ,CAAChQ,KAAK,EAAE;UAC/B,OAAO,IAAI;QACb;QACA,IAAM3lE,MAAM,GAAG0M,KAAK,CAACinC,KAAK,CAACI,SAAS,CAAC,CAAC;QACtC,IAAI/zC,MAAM,IAAIA,MAAM,CAACkvE,OAAO,EAAE;UAC5B,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA58E,GAAA;IAAAC,KAAA,EAOA,SAAA83F,sBAAsBA,CAACpnF,UAAU,EAAE;MACjC,IAAMqnF,cAAc,GAAG,IAAA59D,wBAAkB,EACvCzpB,UAAU,EACV,IAAI,CAAC4yC,OAAO,CAAC,CAAC,CAACtkB,aAAa,CAAC,CAC/B,CAAC;MACD,OAAO,IAAI,CAACmsB,8BAA8B,CAAC4sC,cAAc,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAh4F,GAAA;IAAAC,KAAA,EAMA,SAAAmrD,8BAA8BA,CAACz6C,UAAU,EAAE;MACzC,IAAMjB,UAAU,GAAG,IAAI,CAACskF,WAAW;MACnC,IAAI,CAACtkF,UAAU,EAAE;QACf,OAAO,IAAI;MACb;MACA,OAAO,IAAAoW,gBAAc,EACnBpW,UAAU,CAAC2gF,0BAA0B,EACrC1/E,UAAU,CAAC1M,KAAK,CAAC,CAAC,EAAE,CAAC,CACvB,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAjE,GAAA;IAAAC,KAAA,EAIA,SAAA+3D,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACpB,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA52D,GAAA;IAAAC,KAAA,EAMA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,iDACL,IAAI,CAACxY,GAAG,CAAC8oF,oBAAW,CAACl/E,IAAI,CAAC;IAE9B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAtW,GAAA;IAAAC,KAAA,EAOA,SAAAsjD,OAAOA,CAAA,EAAG;MACR,OAAO,mBAAqB,IAAI,CAAC72C,GAAG,CAAC8oF,oBAAW,CAACh/E,IAAI,CAAC;IACxD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxW,GAAA;IAAAC,KAAA,EAKA,SAAA4T,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACwgF,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAr0F,GAAA;IAAAC,KAAA,EAOA,SAAAisD,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACooC,iBAAiB;IAC/B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAt0F,GAAA;IAAAC,KAAA,EAOA,SAAAs7C,4BAA4BA,CAAA,EAAG;MAC7B,OAAO,IAAI,CAACg5C,0BAA0B;IACxC;;IAEA;AACF;AACA;EAFE;IAAAv0F,GAAA;IAAAC,KAAA,EAGA,SAAAsV,gBAAgBA,CAAA,EAAG;MACjB,IAAMkyC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAC7C,OAAOD,aAAa,GAAGA,aAAa,CAACwwC,aAAa,GAAGz/C,QAAQ;IAC/D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAx4C,GAAA;IAAAC,KAAA,EAOA,SAAA4a,eAAeA,CAACX,IAAI,EAAEY,aAAa,EAAEC,UAAU,EAAEC,cAAc,EAAE;MAC/D,OAAO,IAAAH,0BAAe,EACpB,IAAI,CAACm5E,WAAW,EAChB95E,IAAI,EACJY,aAAa,EACbC,UAAU,EACVC,cACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAhb,GAAA;IAAAC,KAAA,EAIA,SAAAszF,kBAAkBA,CAACxsC,YAAY,EAAE7hD,IAAI,EAAE;MACrCA,IAAI,GAAGA,IAAI,IAAI6hD,YAAY,CAAC7hD,IAAI;MAChC,IAAMohD,eAAe,GAAG,IAAIr2C,wBAAe,CAAC/K,IAAI,EAAE,IAAI,EAAE6hD,YAAY,CAAC;MACrE,IAAI,CAACmxC,qBAAqB,CAAC5xC,eAAe,CAAC;IAC7C;;IAEA;AACF;AACA;EAFE;IAAAtmD,GAAA;IAAAC,KAAA,EAGA,SAAAi4F,qBAAqBA,CAAC5xC,eAAe,EAAE;MACrC,IAAI,CAAC,IAAI,CAAC0tC,WAAW,EAAE;QACrB;QACA;QACA;MACF;MACA,IAAM7jF,aAAa,GAAG;MACpBm2C,eAAe,CAACn2C,aACjB;MACD,IAAMjD,SAAS,GAAGiD,aAAa,CAACjL,IAAI;MACpC,IACEgI,SAAS,KAAKgH,mBAAgB,CAACnD,WAAW,IAC1C7D,SAAS,KAAKhC,kBAAS,CAACvL,KAAK,IAC7BuN,SAAS,KAAKhC,kBAAS,CAAC5L,OAAO,EAC/B;QACA,IAAMgW,GAAG,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;QACnC,IAAMoyC,QAAQ,GAAG,IAAI,CAAC0sC,SAAS,CAAC5+E,WAAW,GACvC,IAAI,CAAC4+E,SAAS,CAAC5+E,WAAW,CAAC,CAAC,GAC5BH,GAAG;QACP,IAAMlU,MAAM,GAAG,mBAAqB+O,aAAa,CAAC/O,MAAO;QAEzD,IAAM+2F,UAAU,GACdxwC,QAAQ,YAAYE,UAAU,GAC1BF,QAAQ,CAACG,IAAI,KAAK1mD,MAAM,GACtBumD,QAAQ,CAACG,IAAI,CAACmwC,aAAa,GAC3BtwC,QAAQ,GACVA,QAAQ,KAAKryC,GAAG,GACdA,GAAG,CAAC8iF,eAAe,GACnBzwC,QAAQ;QAChB;QACE;QACA;QACA,IAAI,CAAC4sC,0BAA0B,CAAC/wC,QAAQ,CAACpiD,MAAM,CAAC;QAChD;QACA;QACA;QACA;QACA,CAAC+2F,UAAU,CAAC30C,QAAQ,CAACpiD,MAAM,CAAC,EAC5B;UACA;QACF;MACF;MACAklD,eAAe,CAAC52C,UAAU,GAAG,IAAI,CAACskF,WAAW;MAC7C,IAAI,IAAI,CAAChrF,aAAa,CAACs9C,eAAe,CAAC,KAAK,KAAK,EAAE;QACjD,IAAM+xC,iBAAiB,GAAG,IAAI,CAAChC,eAAe,CAAC,CAAC,CAACtnF,QAAQ,CAAC,CAAC,CAAC9K,KAAK,CAAC,CAAC;QACnE,KAAK,IAAI1C,CAAC,GAAG82F,iBAAiB,CAACx3F,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACtD,IAAM00F,WAAW,GAAGoC,iBAAiB,CAAC92F,CAAC,CAAC;UACxC,IACE00F,WAAW,CAAC96C,MAAM,CAAC,CAAC,KAAK,IAAI,IAC7B,CAAC86C,WAAW,CAAC7vC,SAAS,CAAC,CAAC,IACxB,CAAC,IAAI,CAACsB,gBAAgB,CAAC,CAAC,EACxB;YACA;UACF;UACA,IAAM4wC,IAAI,GAAGrC,WAAW,CAACzsF,WAAW,CAAC88C,eAAe,CAAC;UACrD,IAAI,CAACgyC,IAAI,IAAIhyC,eAAe,CAACnhD,kBAAkB,EAAE;YAC/C;UACF;QACF;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAAnF,GAAA;IAAAC,KAAA,EAGA,SAAAs4F,gBAAgBA,CAAA,EAAG;MACjB,IAAM7oF,UAAU,GAAG,IAAI,CAACskF,WAAW;;MAEnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAMwE,SAAS,GAAG,IAAI,CAAClD,UAAU;MACjC,IAAI,CAACkD,SAAS,CAACxzF,OAAO,CAAC,CAAC,EAAE;QACxB,IAAIyV,eAAe,GAAG,IAAI,CAAC+4E,gBAAgB;QAC3C,IAAI94E,WAAW,GAAGD,eAAe;QACjC,IAAI/K,UAAU,EAAE;UACd,IAAMiiC,KAAK,GAAGjiC,UAAU,CAAC+oF,SAAS;UAClC,IAAI9mD,KAAK,CAAC5B,iBAAQ,CAACv0B,SAAS,CAAC,IAAIm2B,KAAK,CAAC5B,iBAAQ,CAACt0B,WAAW,CAAC,EAAE;YAC5D,IAAMi9E,gBAAgB,GAAG3pD,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGt/B,UAAU,CAACipF,IAAI,GAAG,CAAC;YACzDl+E,eAAe,GAAGi+E,gBAAgB,GAAG,CAAC,GAAG,CAAC;YAC1Ch+E,WAAW,GAAGg+E,gBAAgB,GAAG,CAAC,GAAG,CAAC;UACxC;QACF;QACA,IAAIF,SAAS,CAACr+E,eAAe,CAAC,CAAC,GAAGM,eAAe,EAAE;UACjD+9E,SAAS,CAACz/E,YAAY,CAAC,CAAC,CAAC,CAAC;UAC1By/E,SAAS,CAACh+E,aAAa,CAACC,eAAe,EAAEC,WAAW,CAAC;QACvD;MACF;MAEA,IAAIhL,UAAU,IAAI,IAAI,CAACknD,SAAS,IAAI,CAAClnD,UAAU,CAAC4+B,OAAO,EAAE;QACvD,IAAI,IAAI,CAAC8kD,eAAe,EAAE;UACxB,IAAI,IAAI,CAACvpF,WAAW,CAAC2uD,mBAAe,CAACnC,cAAc,CAAC,EAAE;YACpD,IAAI,CAACO,SAAS,CAACu5B,mBAAmB,CAChC33B,mBAAe,CAACnC,cAAc,EAC9B3mD,UACF,CAAC;UACH;UACA,IAAI,IAAI,CAAC2jF,OAAO,KAAK,KAAK,EAAE;YAC1B,IAAI,CAACA,OAAO,GAAG,IAAI;YACnB,IAAI,CAACrqF,aAAa,CAChB,IAAIwG,iBAAQ,CAACgsC,qBAAY,CAACplC,OAAO,EAAE,IAAI,EAAE1G,UAAU,CACrD,CAAC;UACH;QACF,CAAC,MAAM,IAAI,IAAI,CAAC2jF,OAAO,KAAK,IAAI,EAAE;UAChC,IAAI,CAACA,OAAO,GAAG,KAAK;UACpB,IAAI,CAACrqF,aAAa,CAChB,IAAIwG,iBAAQ,CAACgsC,qBAAY,CAACrlC,SAAS,EAAE,IAAI,EAAEzG,UAAU,CACvD,CAAC;QACH;MACF;MAEA,IAAM8hF,mBAAmB,GAAG,IAAI,CAAC6D,oBAAoB;MACrD,IAAI3lF,UAAU,EAAE;QACd,KAAK,IAAInO,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGioF,mBAAmB,CAAC3wF,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC5DiwF,mBAAmB,CAACjwF,CAAC,CAAC,CAAC,IAAI,EAAEmO,UAAU,CAAC;QAC1C;MACF;MACA8hF,mBAAmB,CAAC3wF,MAAM,GAAG,CAAC;IAChC;;IAEA;AACF;AACA;EAFE;IAAAb,GAAA;IAAAC,KAAA,EAGA,SAAA01F,kBAAkBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACpyC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC9U,YAAY,CAAC,CAAC,EAAE;QACpD,IAAI,CAAC8U,OAAO,CAAC,CAAC,CAAC7U,kBAAkB,CAAC,CAAC,CAAC;MACtC;MAEA,IAAI,CAACsM,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;EAFE;IAAAh7C,GAAA;IAAAC,KAAA,EAGA,SAAA21F,oBAAoBA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACpB,uBAAuB,EAAE;QAChC,KAAK,IAAIjzF,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAACorF,wBAAwB,CAAC9zF,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UACtE,IAAA8I,qBAAa,EAAC,IAAI,CAACsqF,wBAAwB,CAACpzF,CAAC,CAAC,CAAC;QACjD;QACA,IAAI,CAACozF,wBAAwB,GAAG,IAAI;QACpC,IAAI,CAACN,SAAS,CAAC3qF,mBAAmB,CAChCwB,kBAAS,CAACnM,WAAW,EACrB,IAAI,CAACu0F,wBACP,CAAC;QACD,IAAI,CAACe,SAAS,CAAC3qF,mBAAmB,CAChCwB,kBAAS,CAACvL,KAAK,EACf,IAAI,CAAC2zF,wBACP,CAAC;QACD,IAAI,CAACkB,uBAAuB,CAACt0F,OAAO,CAAC,CAAC;QACtC,IAAI,CAACs0F,uBAAuB,GAAG,IAAI;QACnC,IAAI,CAACH,SAAS,CAACnyF,MAAM,CAAC,CAAC;MACzB;MAEA,IAAI,IAAI,CAAC0yF,cAAc,EAAE;QACvB,IAAI,CAACC,eAAe,CAAC+D,SAAS,CAAC,IAAI,CAAChE,cAAc,CAAC;QACnD,IAAMjtC,QAAQ,GAAG,IAAI,CAACitC,cAAc,CAACn/E,WAAW,CAAC,CAAC;QAClD,IAAIkyC,QAAQ,YAAYE,UAAU,EAAE;UAClC,IAAI,CAACgtC,eAAe,CAAC+D,SAAS,CAACjxC,QAAQ,CAACG,IAAI,CAAC;QAC/C;QACA,IAAI,CAACyrB,OAAO,CAAC3pE,SAAS,CAAC;MACzB;;MAEA;MACA;MACA;MACA;;MAEA,IAAMxI,MAAM,GAAG,IAAI,CAACu2F,SAAS,CAAC,CAAC;MAC/B,IAAMlwC,aAAa,GACjB,OAAOrmD,MAAM,KAAK,QAAQ,GAAGo3C,QAAQ,CAACkD,cAAc,CAACt6C,MAAM,CAAC,GAAGA,MAAM;MACvE,IAAI,CAACwzF,cAAc,GAAGntC,aAAa;MACnC,IAAI,CAACA,aAAa,EAAE;QAClB,IAAI,IAAI,CAACmP,SAAS,EAAE;UAClB/hD,YAAY,CAAC,IAAI,CAAC6+E,wBAAwB,CAAC;UAC3C,IAAI,CAACA,wBAAwB,GAAG9pF,SAAS;UACzC,IAAI,CAACyrF,oBAAoB,CAACx0F,MAAM,GAAG,CAAC;UACpC,IAAI,CAAC+1D,SAAS,CAAC12D,OAAO,CAAC,CAAC;UACxB,IAAI,CAAC02D,SAAS,GAAG,IAAI;QACvB;QACA,IAAI,IAAI,CAAC+8B,kBAAkB,EAAE;UAC3BxjD,oBAAoB,CAAC,IAAI,CAACwjD,kBAAkB,CAAC;UAC7C,IAAI,CAACA,kBAAkB,GAAG/pF,SAAS;QACrC;MACF,CAAC,MAAM;QACL69C,aAAa,CAACjN,WAAW,CAAC,IAAI,CAAC65C,SAAS,CAAC;QACzC,IAAI,CAAC,IAAI,CAACz9B,SAAS,EAAE;UACnB,IAAI,CAACA,SAAS,GAAG,IAAIg7B,kBAAoB,CAAC,IAAI,CAAC;QACjD;QAEA,IAAI,CAAC4C,uBAAuB,GAAG,IAAIphF,+BAAsB,CACvD,IAAI,EACJ,IAAI,CAACO,cACP,CAAC;QACD,KAAK,IAAM3T,GAAG,IAAI4U,4BAAmB,EAAE;UACrC,IAAI,CAAC4/E,uBAAuB,CAAC9rF,gBAAgB,CAC3CkM,4BAAmB,CAAC5U,GAAG,CAAC,EACxB,IAAI,CAACk4F,qBAAqB,CAACpwF,IAAI,CAAC,IAAI,CACtC,CAAC;QACH;QACA,IAAI,CAACusF,SAAS,CAAC3rF,gBAAgB,CAC7BwC,kBAAS,CAACnM,WAAW,EACrB,IAAI,CAACu0F,wBAAwB,EAC7B,KACF,CAAC;QACD,IAAI,CAACe,SAAS,CAAC3rF,gBAAgB,CAC7BwC,kBAAS,CAACvL,KAAK,EACf,IAAI,CAAC2zF,wBAAwB,EAC7B3gF,4BAAuB,GAAG;UAACC,OAAO,EAAE;QAAK,CAAC,GAAG,KAC/C,CAAC;QAED,IAAI8hF,mBAAmB;QACvB,IAAI,CAAC,IAAI,CAACD,oBAAoB,EAAE;UAC9B;UACA,IAAMoE,UAAU,GAAGpxC,aAAa,CAAChyC,WAAW,CAAC,CAAC;UAC9C,IAAMqjF,eAAe,GACnBD,UAAU,YAAYhxC,UAAU,GAAGgxC,UAAU,CAAC/wC,IAAI,GAAGL,aAAa;UACpEitC,mBAAmB,GAAGoE,eAAe;QACvC,CAAC,MAAM;UACLpE,mBAAmB,GAAG,IAAI,CAACD,oBAAoB;QACjD;QAEA,IAAI,CAACE,wBAAwB,GAAG,CAC9B,IAAA5qF,cAAM,EACJ2qF,mBAAmB,EACnBxpF,kBAAS,CAAC5L,OAAO,EACjB,IAAI,CAACi0F,kBAAkB,EACvB,IACF,CAAC,EACD,IAAAxpF,cAAM,EACJ2qF,mBAAmB,EACnBxpF,kBAAS,CAAC3L,QAAQ,EAClB,IAAI,CAACg0F,kBAAkB,EACvB,IACF,CAAC,CACF;QACD,IAAM5rC,SAAQ,GAAGF,aAAa,CAAChyC,WAAW,CAAC,CAAC;QAC5C,IAAIkyC,SAAQ,YAAYE,UAAU,EAAE;UAClC,IAAI,CAACgtC,eAAe,CAACkE,OAAO,CAACpxC,SAAQ,CAACG,IAAI,CAAC;QAC7C;QACA,IAAI,CAAC+sC,eAAe,CAACkE,OAAO,CAACtxC,aAAa,CAAC;MAC7C;MAEA,IAAI,CAACstC,UAAU,CAAC,CAAC;MACjB;MACA;IACF;;IAEA;AACF;AACA;EAFE;IAAA/0F,GAAA;IAAAC,KAAA,EAGA,SAAAs1F,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACv6C,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;EAFE;IAAAh7C,GAAA;IAAAC,KAAA,EAGA,SAAA+4F,0BAA0BA,CAAA,EAAG;MAC3B,IAAI,CAACh+C,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;EAFE;IAAAh7C,GAAA;IAAAC,KAAA,EAGA,SAAAy1F,kBAAkBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACxB,wBAAwB,EAAE;QACjC,IAAA7pF,qBAAa,EAAC,IAAI,CAAC6pF,wBAAwB,CAAC;QAC5C,IAAI,CAACA,wBAAwB,GAAG,IAAI;MACtC;MACA,IAAI,IAAI,CAACC,sBAAsB,EAAE;QAC/B,IAAA9pF,qBAAa,EAAC,IAAI,CAAC8pF,sBAAsB,CAAC;QAC1C,IAAI,CAACA,sBAAsB,GAAG,IAAI;MACpC;MACA,IAAM7wC,IAAI,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;MAC3B,IAAID,IAAI,EAAE;QACR,IAAI,CAAC21C,mBAAmB,CAAC,IAAI,CAAC/zE,OAAO,CAAC,CAAC,CAAC;QAExC,IAAI,CAACgvE,wBAAwB,GAAG,IAAAnqF,cAAM,EACpCu5C,IAAI,EACJl2C,wBAAe,CAAC1O,cAAc,EAC9B,IAAI,CAACs6F,0BAA0B,EAC/B,IACF,CAAC;QACD,IAAI,CAAC7E,sBAAsB,GAAG,IAAApqF,cAAM,EAClCu5C,IAAI,EACJp4C,kBAAS,CAACvM,MAAM,EAChB,IAAI,CAACq6F,0BAA0B,EAC/B,IACF,CAAC;QAED11C,IAAI,CAAC5U,kBAAkB,CAAC,CAAC,CAAC;MAC5B;MACA,IAAI,CAACsM,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;EAFE;IAAAh7C,GAAA;IAAAC,KAAA,EAGA,SAAAw1F,wBAAwBA,CAAA,EAAG;MACzB,IAAI,IAAI,CAACrB,+BAA+B,EAAE;QACxC,IAAI,CAACA,+BAA+B,CAACvlF,OAAO,CAACxE,qBAAa,CAAC;QAC3D,IAAI,CAAC+pF,+BAA+B,GAAG,IAAI;MAC7C;MACA,IAAM4C,UAAU,GAAG,IAAI,CAACt/B,aAAa,CAAC,CAAC;MACvC,IAAIs/B,UAAU,EAAE;QACd,IAAI,CAACT,eAAe,CAAC,IAAI7hC,iBAAU,CAAC,UAAU,EAAEsiC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC5C,+BAA+B,GAAG,CACrC,IAAArqF,cAAM,EAACitF,UAAU,EAAE5pF,wBAAe,CAAC1O,cAAc,EAAE,IAAI,CAACs8C,MAAM,EAAE,IAAI,CAAC,EACrE,IAAAjxC,cAAM,EAACitF,UAAU,EAAE9rF,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACq8C,MAAM,EAAE,IAAI,CAAC,EACvD,IAAAjxC,cAAM,EAACitF,UAAU,EAAE,UAAU,EAAE,IAAI,CAACT,eAAe,EAAE,IAAI,CAAC,EAC1D,IAAAxsF,cAAM,EAACitF,UAAU,EAAE,aAAa,EAAE,IAAI,CAACkC,kBAAkB,EAAE,IAAI,CAAC,CACjE;MACH;MACA,IAAI,CAACl+C,MAAM,CAAC,CAAC;IACf;;IAEA;AACF;AACA;EAFE;IAAAh7C,GAAA;IAAAC,KAAA,EAGA,SAAAk5F,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,CAAC,IAAI,CAACnF,WAAW;IAC3B;;IAEA;AACF;AACA;EAFE;IAAAh0F,GAAA;IAAAC,KAAA,EAGA,SAAA2zF,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACD,kBAAkB,GAAG/pF,SAAS;MACnC,IAAI,CAACwvF,YAAY,CAACrqD,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC/B;;IAEA;AACF;AACA;AACA;EAHE;IAAAhvC,GAAA;IAAAC,KAAA,EAIA,SAAAo5F,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAAC1F,kBAAkB,EAAE;QAC3BxjD,oBAAoB,CAAC,IAAI,CAACwjD,kBAAkB,CAAC;MAC/C;MACA,IAAI,CAACC,eAAe,CAAC,CAAC;IACxB;;IAEA;AACF;AACA;EAFE;IAAA5zF,GAAA;IAAAC,KAAA,EAGA,SAAA8xF,UAAUA,CAAA,EAAG;MACX,IAAMjB,WAAW,GAAG,IAAI,CAACp5B,aAAa,CAAC,CAAC,CAAC3D,mBAAmB,CAAC,CAAC;MAC9D,KAAK,IAAIxyD,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGunF,WAAW,CAACjwF,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACpD,IAAM8/C,KAAK,GAAGyvC,WAAW,CAACvvF,CAAC,CAAC,CAAC8/C,KAAK;QAClC,IAAIA,KAAK,CAACwX,WAAW,CAAC,CAAC,EAAE;UACvBxX,KAAK,CAAC2W,WAAW,CAAC,CAAC,CAACshC,kBAAkB,CAAC,CAAC;QAC1C;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAt5F,GAAA;IAAAC,KAAA,EAIA,SAAA+6C,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAAC4b,SAAS,IAAI,IAAI,CAAC+8B,kBAAkB,KAAK/pF,SAAS,EAAE;QAC3D,IAAI,CAAC+pF,kBAAkB,GAAG3iD,qBAAqB,CAAC,IAAI,CAAC4iD,eAAe,CAAC;MACvE;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5zF,GAAA;IAAAC,KAAA,EAOA,SAAAs5F,aAAaA,CAACvD,OAAO,EAAE;MACrB,OAAO,IAAI,CAACG,WAAW,CAAC,CAAC,CAACj0F,MAAM,CAAC8zF,OAAO,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAh2F,GAAA;IAAAC,KAAA,EAOA,SAAAu5F,iBAAiBA,CAACvD,WAAW,EAAE;MAC7B,OAAO,IAAI,CAACI,eAAe,CAAC,CAAC,CAACn0F,MAAM,CAAC+zF,WAAW,CAAC;IACnD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAj2F,GAAA;IAAAC,KAAA,EAOA,SAAAw5F,WAAWA,CAACp4C,KAAK,EAAE;MACjB,IAAML,MAAM,GAAG,IAAI,CAAC0W,aAAa,CAAC,CAAC,CAACtC,SAAS,CAAC,CAAC;MAC/C,OAAOpU,MAAM,CAAC9+C,MAAM,CAACm/C,KAAK,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;EAHE;IAAArhD,GAAA;IAAAC,KAAA,EAIA,SAAAi5F,kBAAkBA,CAACjwF,KAAK,EAAE;MACxB8pF,sBAAsB,CAAC9pF,KAAK,CAACo4C,KAAK,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAArhD,GAAA;IAAAC,KAAA,EAOA,SAAAy5F,aAAaA,CAACjD,OAAO,EAAE;MACrB,OAAO,IAAI,CAACC,WAAW,CAAC,CAAC,CAACx0F,MAAM,CAACu0F,OAAO,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;EAHE;IAAAz2F,GAAA;IAAAC,KAAA,EAIA,SAAAm5F,YAAYA,CAACT,IAAI,EAAE;MAAA,IAAApsF,MAAA;MACjB,IAAMmS,IAAI,GAAG,IAAI,CAACwG,OAAO,CAAC,CAAC;MAC3B,IAAMo+B,IAAI,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;MAC3B,IAAMo2C,kBAAkB,GAAG,IAAI,CAAC3F,WAAW;MAC3C;MACA,IAAItkF,UAAU,GAAG,IAAI;MACrB,IAAIgP,IAAI,KAAK9U,SAAS,IAAI,IAAAs8D,aAAO,EAACxnD,IAAI,CAAC,IAAI4kC,IAAI,IAAIA,IAAI,CAAC9U,KAAK,CAAC,CAAC,EAAE;QAC/D,IAAMiqD,SAAS,GAAGn1C,IAAI,CAAC5R,QAAQ,CAC7B,IAAI,CAACsiD,WAAW,GAAG,IAAI,CAACA,WAAW,CAACyE,SAAS,GAAG7uF,SAClD,CAAC;QACD,IAAMuR,SAAS,GAAGmoC,IAAI,CAACjpC,QAAQ,CAAC,CAAC;QACjC3K,UAAU,GAAG;UACX4+B,OAAO,EAAE,KAAK;UACd+hD,0BAA0B,EAAE,IAAI,CAACwD,2BAA2B;UAC5DlF,SAAS,EAAE,IAAI;UACfrwE,MAAM,EAAE,IAAAsF,yBAAiB,EACvBzI,SAAS,CAACD,MAAM,EAChBC,SAAS,CAACsD,UAAU,EACpBtD,SAAS,CAAC0I,QAAQ,EAClBnF,IACF,CAAC;UACD9b,KAAK,EAAE,IAAI,CAACmxF,WAAW,EAAE;UACzB1B,UAAU,EAAE,CAAC;UACb56B,gBAAgB,EAAE,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC3D,mBAAmB,CAAC,CAAC;UAC5D6c,UAAU,EAAE,IAAI,CAACE,WAAW;UAC5Bwf,0BAA0B,EAAE,IAAI,CAACwD,2BAA2B;UAC5DtC,mBAAmB,EAAE,EAAE;UACvB9yE,IAAI,EAAEA,IAAI;UACV85E,SAAS,EAAE,IAAI,CAAClD,UAAU;UAC1BqD,IAAI,EAAEA,IAAI;UACViB,SAAS,EAAE,CAAC,CAAC;UACbz+E,SAAS,EAAEA,SAAS;UACpBs9E,SAAS,EAAEA,SAAS;UACpBx9E,WAAW,EAAE,CAAC,CAAC;UACf4+E,KAAK,EAAE,IAAAluF,YAAM,EAAC,IAAI,CAAC;UACnBmuF,aAAa,EAAE,CAAC;QAClB,CAAC;QACD,IAAI3+E,SAAS,CAACg4B,UAAU,IAAIh4B,SAAS,CAACi4B,cAAc,EAAE;UACpD,IAAMvvB,QAAQ,GAAGib,KAAK,CAAC3jB,SAAS,CAACk4B,YAAY,CAAC,GAC1Cl4B,SAAS,CAAC0I,QAAQ,GAClB1I,SAAS,CAACk4B,YAAY;UAE1B3jC,UAAU,CAACqqF,UAAU,GAAG,IAAAn2E,yBAAiB,EACvCzI,SAAS,CAACg4B,UAAU,EACpBh4B,SAAS,CAACi4B,cAAc,EACxBvvB,QAAQ,EACRnF,IACF,CAAC;QACH;MACF;MAEA,IAAI,CAACs1E,WAAW,GAAGtkF,UAAU;MAC7B,IAAI,CAACknD,SAAS,CAACsB,WAAW,CAACxoD,UAAU,CAAC;MAEtC,IAAIA,UAAU,EAAE;QACd,IAAIA,UAAU,CAAC4+B,OAAO,EAAE;UACtB,IAAI,CAAC0M,MAAM,CAAC,CAAC;QACf;QACAh5C,KAAK,CAACgC,SAAS,CAAC+E,IAAI,CAAC1E,KAAK,CACxB,IAAI,CAACgxF,oBAAoB,EACzB3lF,UAAU,CAAC8hF,mBACb,CAAC;QAED,IAAImI,kBAAkB,EAAE;UACtB,IAAMK,SAAS,GACb,CAAC,IAAI,CAAC/F,eAAe,IACpB,CAAC,IAAAjvF,eAAO,EAAC,IAAI,CAACivF,eAAe,CAAC,IAC7B,CAAC,IAAAgG,cAAY,EAACvqF,UAAU,CAAC4O,MAAM,EAAE,IAAI,CAAC21E,eAAe,CAAE;UAC3D,IAAI+F,SAAS,EAAE;YACb,IAAI,CAAChxF,aAAa,CAChB,IAAIwG,iBAAQ,CAACgsC,qBAAY,CAACvlC,SAAS,EAAE,IAAI,EAAE0jF,kBAAkB,CAC/D,CAAC;YACD,IAAI,CAAC1F,eAAe,GAAG,IAAAnyE,2BAAmB,EAAC,IAAI,CAACmyE,eAAe,CAAC;UAClE;QACF;QAEA,IAAMiG,IAAI,GACR,IAAI,CAACjG,eAAe,IACpB,CAACvkF,UAAU,CAAC+oF,SAAS,CAAC1oD,iBAAQ,CAACv0B,SAAS,CAAC,IACzC,CAAC9L,UAAU,CAAC+oF,SAAS,CAAC1oD,iBAAQ,CAACt0B,WAAW,CAAC,IAC3C,CAAC,IAAAw+E,cAAY,EAACvqF,UAAU,CAAC4O,MAAM,EAAE,IAAI,CAAC21E,eAAe,CAAC;QAExD,IAAIiG,IAAI,EAAE;UACR,IAAI,CAAClxF,aAAa,CAChB,IAAIwG,iBAAQ,CAACgsC,qBAAY,CAACtlC,OAAO,EAAE,IAAI,EAAExG,UAAU,CACrD,CAAC;UACD,IAAA0R,aAAK,EAAC1R,UAAU,CAAC4O,MAAM,EAAE,IAAI,CAAC21E,eAAe,CAAC;QAChD;MACF;MAEA,IAAI,CAACjrF,aAAa,CAAC,IAAIwG,iBAAQ,CAACgsC,qBAAY,CAACxlC,UAAU,EAAE,IAAI,EAAEtG,UAAU,CAAC,CAAC;MAE3E,IAAI,CAAC0jF,eAAe,GAClB,CAAC,IAAI,CAACvpF,WAAW,CAAC2xC,qBAAY,CAACrlC,SAAS,CAAC,IACvC,IAAI,CAACtM,WAAW,CAAC2xC,qBAAY,CAACplC,OAAO,CAAC,IACtC,IAAI,CAACvM,WAAW,CAAC2uD,mBAAe,CAACnC,cAAc,CAAC,KAClD,CAAC,IAAI,CAACi/B,UAAU,CAACn7E,eAAe,CAAC,CAAC,IAClC,CAAC,IAAI,CAACm7E,UAAU,CAACp9E,QAAQ,CAAC,CAAC,IAC3B,CAAC,IAAI,CAAC4/E,oBAAoB,CAAC,CAAC;MAE9B,IAAI,CAAC,IAAI,CAACpE,wBAAwB,EAAE;QAClC,IAAI,CAACA,wBAAwB,GAAG5+E,UAAU,CAAC,YAAM;UAC/CvI,MAAI,CAACmnF,wBAAwB,GAAG9pF,SAAS;UACzC2C,MAAI,CAACgsF,gBAAgB,CAAC,CAAC;QACzB,CAAC,EAAE,CAAC,CAAC;MACP;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAv4F,GAAA;IAAAC,KAAA,EAMA,SAAAk6F,aAAaA,CAACnD,UAAU,EAAE;MACxB,IAAMoD,aAAa,GAAG,IAAI,CAAC1iC,aAAa,CAAC,CAAC;MAC1C,IAAI0iC,aAAa,EAAE;QACjB,IAAI,CAAClB,kBAAkB,CAAC,IAAIxkC,iBAAU,CAAC,aAAa,EAAE0lC,aAAa,CAAC,CAAC;MACvE;MACA,IAAI,CAAC7sF,GAAG,CAACioF,oBAAW,CAACn/E,UAAU,EAAE2gF,UAAU,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAh3F,GAAA;IAAAC,KAAA,EAMA,SAAAszE,OAAOA,CAAC70D,IAAI,EAAE;MACZ,IAAI,CAACnR,GAAG,CAACioF,oBAAW,CAACl/E,IAAI,EAAEoI,IAAI,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA1e,GAAA;IAAAC,KAAA,EAUA,SAAAg7C,SAASA,CAAC75C,MAAM,EAAE;MAChB,IAAI,CAACmM,GAAG,CAACioF,oBAAW,CAACj/E,MAAM,EAAEnV,MAAM,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAApB,GAAA;IAAAC,KAAA,EASA,SAAA61F,OAAOA,CAACxyC,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,IAAIA,IAAI,YAAYjY,aAAI,EAAE;QACjC,IAAI,CAAC99B,GAAG,CAACioF,oBAAW,CAACh/E,IAAI,EAAE8sC,IAAI,CAAC;QAChC;MACF;MACA,IAAI,CAAC/1C,GAAG,CAACioF,oBAAW,CAACh/E,IAAI,EAAE,IAAI60B,aAAI,CAAC,CAAC,CAAC;MAEtC,IAAM57B,GAAG,GAAG,IAAI;MAChB6zC,IAAI,CAACtG,IAAI,CAAC,UAAU64C,WAAW,EAAE;QAC/BpmF,GAAG,CAACqmF,OAAO,CAAC,IAAIzqD,aAAI,CAACwqD,WAAW,CAAC,CAAC;MACpC,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA71F,GAAA;IAAAC,KAAA,EAKA,SAAA80F,UAAUA,CAAA,EAAG;MACX,IAAMttC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAE7C,IAAIhpC,IAAI,GAAG9U,SAAS;MACpB,IAAI69C,aAAa,EAAE;QACjB,IAAM4yC,aAAa,GAAGnhD,gBAAgB,CAACuO,aAAa,CAAC;QACrD,IAAMxhC,KAAK,GACTwhC,aAAa,CAACxO,WAAW,GACzB6pB,UAAU,CAACu3B,aAAa,CAAC,iBAAiB,CAAC,CAAC,GAC5Cv3B,UAAU,CAACu3B,aAAa,CAAC,aAAa,CAAC,CAAC,GACxCv3B,UAAU,CAACu3B,aAAa,CAAC,cAAc,CAAC,CAAC,GACzCv3B,UAAU,CAACu3B,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC/C,IAAMn0E,MAAM,GACVuhC,aAAa,CAACnO,YAAY,GAC1BwpB,UAAU,CAACu3B,aAAa,CAAC,gBAAgB,CAAC,CAAC,GAC3Cv3B,UAAU,CAACu3B,aAAa,CAAC,YAAY,CAAC,CAAC,GACvCv3B,UAAU,CAACu3B,aAAa,CAAC,eAAe,CAAC,CAAC,GAC1Cv3B,UAAU,CAACu3B,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAChD,IAAI,CAACv7D,KAAK,CAAC7Y,KAAK,CAAC,IAAI,CAAC6Y,KAAK,CAAC5Y,MAAM,CAAC,EAAE;UACnCxH,IAAI,GAAG,CAAC9I,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEkK,KAAK,CAAC,EAAErQ,IAAI,CAACmG,GAAG,CAAC,CAAC,EAAEmK,MAAM,CAAC,CAAC;UAChD,IACE,CAAC,IAAAggD,aAAO,EAACxnD,IAAI,CAAC,IACd,CAAC,EACC+oC,aAAa,CAACxO,WAAW,IACzBwO,aAAa,CAACnO,YAAY,IAC1BmO,aAAa,CAAC6yC,cAAc,CAAC,CAAC,CAACz5F,MAAM,CACtC,EACD;YACA,IAAAurB,aAAI,EACF,mEACF,CAAC;UACH;QACF;MACF;MAEA,IAAMmuE,OAAO,GAAG,IAAI,CAACr1E,OAAO,CAAC,CAAC;MAC9B,IAAIxG,IAAI,KAAK,CAAC67E,OAAO,IAAI,CAAC,IAAAj4F,aAAM,EAACoc,IAAI,EAAE67E,OAAO,CAAC,CAAC,EAAE;QAChD,IAAI,CAAChnB,OAAO,CAAC70D,IAAI,CAAC;QAClB,IAAI,CAACu6E,mBAAmB,CAACv6E,IAAI,CAAC;MAChC;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1e,GAAA;IAAAC,KAAA,EAKA,SAAAg5F,mBAAmBA,CAACv6E,IAAI,EAAE;MACxB,IAAM4kC,IAAI,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;MAC3B,IAAID,IAAI,EAAE;QACRA,IAAI,CAAC/R,eAAe,CAAC7yB,IAAI,CAAC;MAC5B;IACF;EAAC;AAAA,EAr/CetS,eAAU;AAw/C5B;AACA;AACA;AACA;AACA,SAAS+mF,qBAAqBA,CAAC9kF,OAAO,EAAE;EACtC;AACF;AACA;EACE,IAAIqmF,mBAAmB,GAAG,IAAI;EAC9B,IAAIrmF,OAAO,CAACqmF,mBAAmB,KAAK9qF,SAAS,EAAE;IAC7C8qF,mBAAmB,GACjB,OAAOrmF,OAAO,CAACqmF,mBAAmB,KAAK,QAAQ,GAC3Cl8C,QAAQ,CAACkD,cAAc,CAACrtC,OAAO,CAACqmF,mBAAmB,CAAC,GACpDrmF,OAAO,CAACqmF,mBAAmB;EACnC;;EAEA;AACF;AACA;EACE,IAAMpoF,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAM0qF,UAAU,GACd3oF,OAAO,CAAC2yC,MAAM,IACd,QAAQ,gBAAkB3yC,OAAO,CAAC2yC,MAAM,CAAEoU,SAAS,CAAC,KAAK,UAAU,IAC/D,yBAA2B/mD,OAAO,CAAC2yC,MAAM,IACzC,IAAI4T,cAAU,CAAC;IACb5T,MAAM,GACJ;IACE3yC,OAAO,CAAC2yC,MAAM;EAEpB,CAAC,CAAC;EACR10C,MAAM,CAACkpF,oBAAW,CAACn/E,UAAU,CAAC,GAAG2gF,UAAU;EAE3C1qF,MAAM,CAACkpF,oBAAW,CAACj/E,MAAM,CAAC,GAAGlI,OAAO,CAACjN,MAAM;EAE3CkL,MAAM,CAACkpF,oBAAW,CAACh/E,IAAI,CAAC,GACtBnI,OAAO,CAACi1C,IAAI,YAAYjY,aAAI,GAAGh9B,OAAO,CAACi1C,IAAI,GAAG,IAAIjY,aAAI,CAAC,CAAC;;EAE1D;EACA,IAAIsZ,QAAQ;EACZ,IAAIt2C,OAAO,CAACs2C,QAAQ,KAAK/6C,SAAS,EAAE;IAClC,IAAI5H,KAAK,CAACC,OAAO,CAACoM,OAAO,CAACs2C,QAAQ,CAAC,EAAE;MACnCA,QAAQ,GAAG,IAAIz2C,mBAAU,CAACG,OAAO,CAACs2C,QAAQ,CAAC1gD,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,MAAM;MACL,IAAA4S,eAAM,EACJ,QAAQ,gBAAkBxI,OAAO,CAACs2C,QAAQ,CAAE51C,QAAQ,CAAC,KAAK,UAAU,EACpE,6DACF,CAAC;MACD41C,QAAQ,GAAGt2C,OAAO,CAACs2C,QAAQ;IAC7B;EACF;;EAEA;EACA,IAAIgN,YAAY;EAChB,IAAItjD,OAAO,CAACsjD,YAAY,KAAK/nD,SAAS,EAAE;IACtC,IAAI5H,KAAK,CAACC,OAAO,CAACoM,OAAO,CAACsjD,YAAY,CAAC,EAAE;MACvCA,YAAY,GAAG,IAAIzjD,mBAAU,CAACG,OAAO,CAACsjD,YAAY,CAAC1tD,KAAK,CAAC,CAAC,CAAC;IAC7D,CAAC,MAAM;MACL,IAAA4S,eAAM,EACJ,QAAQ,gBAAkBxI,OAAO,CAACsjD,YAAY,CAAE5iD,QAAQ,CAAC,KACvD,UAAU,EACZ,iEACF,CAAC;MACD4iD,YAAY,GAAGtjD,OAAO,CAACsjD,YAAY;IACrC;EACF;;EAEA;EACA,IAAIwjC,QAAQ;EACZ,IAAI9mF,OAAO,CAAC8mF,QAAQ,KAAKvrF,SAAS,EAAE;IAClC,IAAI5H,KAAK,CAACC,OAAO,CAACoM,OAAO,CAAC8mF,QAAQ,CAAC,EAAE;MACnCA,QAAQ,GAAG,IAAIjnF,mBAAU,CAACG,OAAO,CAAC8mF,QAAQ,CAAClxF,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,MAAM;MACL,IAAA4S,eAAM,EACJ,QAAQ,gBAAkBxI,OAAO,CAAC8mF,QAAQ,CAAEpmF,QAAQ,CAAC,KAAK,UAAU,EACpE,6DACF,CAAC;MACDomF,QAAQ,GAAG9mF,OAAO,CAAC8mF,QAAQ;IAC7B;EACF,CAAC,MAAM;IACLA,QAAQ,GAAG,IAAIjnF,mBAAU,CAAC,CAAC;EAC7B;EAEA,OAAO;IACLy2C,QAAQ,EAAEA,QAAQ;IAClBgN,YAAY,EAAEA,YAAY;IAC1B+iC,mBAAmB,EAAEA,mBAAmB;IACxCS,QAAQ,EAAEA,QAAQ;IAClB7oF,MAAM,EAAEA;EACV,CAAC;AACH;AAAC,IAAAjO,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACc00F,GAAG;;;;;;;;ACj0DlB,IAAAj6E,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAynC,OAAA,GAAAznC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAiH,OAAA,GAAA9E,sBAAA,CAAAnC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAPnC;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM20F,IAAI,0BAAA9vF,YAAA;EACR;AACF;AACA;AACA;AACA;EACE,SAAA8vF,KAAYC,SAAS,EAAErgF,KAAK,EAAE/L,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA26F,IAAA;IACrCnyF,KAAA,GAAAnB,UAAA,OAAAszF,IAAA;IAEAnsF,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;IACIhG,KAAA,CAAKoyF,SAAS,GAAGA,SAAS;;IAE1B;AACJ;AACA;AACA;IACIpyF,KAAA,CAAK+R,KAAK,GAAGA,KAAK;;IAElB;AACJ;AACA;AACA;AACA;IACI/R,KAAA,CAAKrI,GAAG,GAAG,EAAE;;IAEb;AACJ;AACA;AACA;AACA;IACIqI,KAAA,CAAKqyF,WAAW,GACdrsF,OAAO,CAACssF,UAAU,KAAK/wF,SAAS,GAAG,GAAG,GAAGyE,OAAO,CAACssF,UAAU;;IAE7D;AACJ;AACA;AACA;AACA;AACA;IACItyF,KAAA,CAAKuyF,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;IACIvyF,KAAA,CAAKwyF,WAAW,GAAG,CAAC,CAACxsF,OAAO,CAACwsF,WAAW;IAAC,OAAAxyF,KAAA;EAC3C;;EAEA;AACF;AACA;EAFEL,SAAA,CAAAwyF,IAAA,EAAA9vF,YAAA;EAAA,OAAA3K,YAAA,CAAAy6F,IAAA;IAAAx6F,GAAA;IAAAC,KAAA,EAGA,SAAAgL,OAAOA,CAAA,EAAG;MACR,IAAI,CAACjC,aAAa,CAACkC,kBAAS,CAACvM,MAAM,CAAC;IACtC;;IAEA;AACF;AACA;EAFE;IAAAqB,GAAA;IAAAC,KAAA,EAGA,SAAA66F,OAAOA,CAAA,EAAG;MACR;MACA,IAAI,CAACC,QAAQ,CAACzgF,kBAAS,CAAC1D,KAAK,CAAC;IAChC;;IAEA;AACF;AACA;EAFE;IAAA5W,GAAA;IAAAC,KAAA,EAGA,SAAA0Z,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC3Z,GAAG,GAAG,GAAG,GAAG,IAAI,CAACy6F,SAAS;IACxC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz6F,GAAA;IAAAC,KAAA,EAKA,SAAA+6F,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACP,SAAS;IACvB;;IAEA;AACF;AACA;EAFE;IAAAz6F,GAAA;IAAAC,KAAA,EAGA,SAAAoa,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACD,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApa,GAAA;IAAAC,KAAA,EAQA,SAAA86F,QAAQA,CAAC3gF,KAAK,EAAE;MACd,IAAI,IAAI,CAACA,KAAK,KAAKE,kBAAS,CAAC1D,KAAK,EAAE;QAClC;QACA;MACF;MACA,IAAI,IAAI,CAACwD,KAAK,KAAKE,kBAAS,CAAC1b,KAAK,IAAI,IAAI,CAACwb,KAAK,GAAGA,KAAK,EAAE;QACxD,MAAM,IAAI3O,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,IAAI,CAAC2O,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACnP,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAA2a,IAAIA,CAAA,EAAG;MACL,IAAApP,cAAQ,EAAC,CAAC;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxL,GAAA;IAAAC,KAAA,EAMA,SAAAg7F,QAAQA,CAACjmF,EAAE,EAAE2jF,IAAI,EAAE;MACjB,IAAI,CAAC,IAAI,CAAC+B,WAAW,EAAE;QACrB,OAAO,CAAC;MACV;MAEA,IAAIp1E,KAAK,GAAG,IAAI,CAACs1E,iBAAiB,CAAC5lF,EAAE,CAAC;MACtC,IAAI,CAACsQ,KAAK,EAAE;QACVA,KAAK,GAAGqzE,IAAI;QACZ,IAAI,CAACiC,iBAAiB,CAAC5lF,EAAE,CAAC,GAAGsQ,KAAK;MACpC,CAAC,MAAM,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;QACvB,OAAO,CAAC;MACV;MAEA,IAAMyC,KAAK,GAAG4wE,IAAI,GAAGrzE,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;MACxC,IAAIyC,KAAK,IAAI,IAAI,CAAC2yE,WAAW,EAAE;QAC7B,OAAO,CAAC;MACV;MACA,OAAO,IAAAvwE,cAAM,EAACpC,KAAK,GAAG,IAAI,CAAC2yE,WAAW,CAAC;IACzC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA16F,GAAA;IAAAC,KAAA,EAOA,SAAAi7F,YAAYA,CAAClmF,EAAE,EAAE;MACf,IAAI,CAAC,IAAI,CAAC0lF,WAAW,EAAE;QACrB,OAAO,KAAK;MACd;MACA,OAAO,IAAI,CAACE,iBAAiB,CAAC5lF,EAAE,CAAC,KAAK,CAAC,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAAhV,GAAA;IAAAC,KAAA,EAIA,SAAAk7F,aAAaA,CAACnmF,EAAE,EAAE;MAChB,IAAI,IAAI,CAAC0lF,WAAW,EAAE;QACpB,IAAI,CAACE,iBAAiB,CAAC5lF,EAAE,CAAC,GAAG,CAAC,CAAC;MACjC;IACF;;IAEA;AACF;AACA;EAFE;IAAAhV,GAAA;IAAAC,KAAA,EAGA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC26F,OAAO,CAAC,CAAC;MACdlrF,aAAA,CAAA4qF,IAAA;IACF;EAAC;AAAA,EAhLgBjvF,eAAW;AAAA,IAAAlN,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmLfi8F,IAAI;;;;;;;;;;;AC5PnB,IAAAY,MAAA,GAAA31F,sBAAA,CAAAnC,OAAA;AACA,IAAA0V,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AAA+C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAL/C;AACA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASw1F,WAAWA,CAACv5F,IAAI,EAAE;EAChC,OAAOA,IAAI,YAAYyQ,KAAK,IAC1BzQ,IAAI,YAAY0vE,iBAAiB,IACjC1vE,IAAI,YAAY2vE,gBAAgB,IAChC3vE,IAAI,YAAYyvE,WAAW,GACzBzvE,IAAI,GACJ,IAAI;AACV;;AAEA;AACA;AACA;AACA;AACO,SAASw5F,WAAWA,CAACx5F,IAAI,EAAE;EAChC,OAAOA,IAAI,YAAYy5F,UAAU,IAC/Bz5F,IAAI,YAAY05F,iBAAiB,IACjC15F,IAAI,YAAY25F,YAAY,IAC5B35F,IAAI,YAAY45F,QAAQ,GACtB55F,IAAI,GACJ,IAAI;AACV;;AAEA;AACA;AACA;AACO,IAAM65F,aAAa,GAAAr9F,OAAA,CAAAq9F,aAAA,GAAG,IAAIlwF,KAAK,CAAC,UAAU,CAAC;;AAElD;AACA;AACA;AACA,IAAImwF,aAAa,GAAG,IAAI;;AAExB;AACA;AACA;AACA;AACO,SAASC,OAAOA,CAACxqB,KAAK,EAAE;EAC7B,IAAI,CAACuqB,aAAa,EAAE;IAClBA,aAAa,GAAG,IAAAzjD,0BAAqB,EACnCk5B,KAAK,CAACprD,KAAK,EACXorD,KAAK,CAACnrD,MAAM,EACZtc,SAAS,EACT;MAAC+qE,kBAAkB,EAAE;IAAI,CAC3B,CAAC;EACH;EACA,IAAMr8B,MAAM,GAAGsjD,aAAa,CAACtjD,MAAM;EACnC,IAAMryB,KAAK,GAAGorD,KAAK,CAACprD,KAAK;EACzB,IAAIqyB,MAAM,CAACryB,KAAK,KAAKA,KAAK,EAAE;IAC1BqyB,MAAM,CAACryB,KAAK,GAAGA,KAAK;EACtB;EACA,IAAMC,MAAM,GAAGmrD,KAAK,CAACnrD,MAAM;EAC3B,IAAIoyB,MAAM,CAACpyB,MAAM,KAAKA,MAAM,EAAE;IAC5BoyB,MAAM,CAACpyB,MAAM,GAAGA,MAAM;EACxB;EACA01E,aAAa,CAAC7iD,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE9yB,KAAK,EAAEC,MAAM,CAAC;EAC5C01E,aAAa,CAAChnB,SAAS,CAACvD,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,OAAOuqB,aAAa,CAAC/mB,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE5uD,KAAK,EAAEC,MAAM,CAAC,CAACpkB,IAAI;AAC7D;;AAEA;AACA;AACA;AACA,IAAMg6F,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAcMC,QAAQ,0BAAAC,KAAA;EACZ;AACF;AACA;EACE,SAAAD,SAAY1tF,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAk8F,QAAA;IACnB,IAAM3hF,KAAK,GAAGE,kBAAS,CAAC7D,IAAI;IAE5BpO,KAAA,GAAAnB,UAAA,OAAA60F,QAAA,GAAM1tF,OAAO,CAACosF,SAAS,EAAErgF,KAAK,EAAE;MAC9BugF,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9BE,WAAW,EAAExsF,OAAO,CAACwsF;IACvB,CAAC;;IAED;AACJ;AACA;AACA;IACIxyF,KAAA,CAAK4zF,OAAO,GAAG5tF,OAAO,CAAC4iE,MAAM;;IAE7B;AACJ;AACA;AACA;IACI5oE,KAAA,CAAK6zF,KAAK,GAAG,IAAI;;IAEjB;AACJ;AACA;AACA;IACI7zF,KAAA,CAAK8zF,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI9zF,KAAA,CAAKgsE,KAAK,GAAGhmE,OAAO,CAACqQ,IAAI,IAAI,IAAI;;IAEjC;AACJ;AACA;AACA;IACIrW,KAAA,CAAK+zF,WAAW,GAAG/tF,OAAO,CAACguF,UAAU,IAAI,IAAI;IAAC,OAAAh0F,KAAA;EAChD;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA+zF,QAAA,EAAAC,KAAA;EAAA,OAAAj8F,YAAA,CAAAg8F,QAAA;IAAA/7F,GAAA;IAAAC,KAAA,EAIA,SAAAilB,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACmvD,KAAK,EAAE;QACd,OAAO,IAAI,CAACA,KAAK;MACnB;MACA,IAAMioB,SAAS,GAAGjB,WAAW,CAAC,IAAI,CAACa,KAAK,CAAC;MACzC,IAAII,SAAS,EAAE;QACb,OAAO,CAACA,SAAS,CAACr2E,KAAK,EAAEq2E,SAAS,CAACp2E,MAAM,CAAC;MAC5C;MACA,OAAO41E,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA97F,GAAA;IAAAC,KAAA,EAKA,SAAAo3D,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAC6kC,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAl8F,GAAA;IAAAC,KAAA,EAKA,SAAAs8F,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACJ,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn8F,GAAA;IAAAC,KAAA,EAKA,SAAA2a,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACR,KAAK,KAAKE,kBAAS,CAAC7D,IAAI,IAAI,IAAI,CAAC2D,KAAK,KAAKE,kBAAS,CAAC1b,KAAK,EAAE;QACnE;MACF;MACA,IAAI,CAACwb,KAAK,GAAGE,kBAAS,CAAC5D,OAAO;MAC9B,IAAI,CAACzL,OAAO,CAAC,CAAC;MAEd,IAAMoH,IAAI,GAAG,IAAI;MACjB,IAAI,CAAC4pF,OAAO,CAAC,CAAC,CACXj/C,IAAI,CAAC,UAAUl7C,IAAI,EAAE;QACpBuQ,IAAI,CAAC6pF,KAAK,GAAGp6F,IAAI;QACjBuQ,IAAI,CAAC+H,KAAK,GAAGE,kBAAS,CAAC3D,MAAM;QAC7BtE,IAAI,CAACpH,OAAO,CAAC,CAAC;MAChB,CAAC,CAAC,CACD2zC,KAAK,CAAC,UAAUvyB,KAAK,EAAE;QACtBha,IAAI,CAAC8pF,MAAM,GAAG9vE,KAAK;QACnBha,IAAI,CAAC+H,KAAK,GAAGE,kBAAS,CAAC1b,KAAK;QAC5ByT,IAAI,CAACpH,OAAO,CAAC,CAAC;MAChB,CAAC,CAAC;IACN;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACi8F,WAAW,EAAE;QACpB,IAAI,CAACA,WAAW,CAACI,KAAK,CAACb,aAAa,CAAC;QACrC,IAAI,CAACS,WAAW,GAAG,IAAI;MACzB;MACAxsF,aAAA,CAAAmsF,QAAA;IACF;EAAC;AAAA,EAhHoBvB,cAAI;AAAA,IAAAn8F,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmHZw9F,QAAQ;;;;;;;;ACtNvB,IAAApoB,MAAA,GAAArwE,OAAA;AACA,IAAA83F,MAAA,GAAA31F,sBAAA,CAAAnC,OAAA;AACA,IAAA0V,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AAA+C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAN/C;AACA;AACA;AAFA,IAQM42F,SAAS,0BAAAT,KAAA;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAS,UAAYhC,SAAS,EAAErgF,KAAK,EAAE+3D,GAAG,EAAEa,WAAW,EAAE0pB,gBAAgB,EAAEruF,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA48F,SAAA;IACzEp0F,KAAA,GAAAnB,UAAA,OAAAu1F,SAAA,GAAMhC,SAAS,EAAErgF,KAAK,EAAE/L,OAAO;;IAE/B;AACJ;AACA;AACA;IACIhG,KAAA,CAAK4rE,YAAY,GAAGjB,WAAW;;IAE/B;AACJ;AACA;AACA;AACA;AACA;IACI3qE,KAAA,CAAKisE,IAAI,GAAGnC,GAAG;IAEf9pE,KAAA,CAAKrI,GAAG,GAAGmyE,GAAG;;IAEd;AACJ;AACA;AACA;IACI9pE,KAAA,CAAK2oE,MAAM,GAAG,IAAIz+D,KAAK,CAAC,CAAC;IACzB,IAAIygE,WAAW,KAAK,IAAI,EAAE;MACxB3qE,KAAA,CAAK2oE,MAAM,CAACgC,WAAW,GAAGA,WAAW;IACvC;;IAEA;AACJ;AACA;AACA;IACI3qE,KAAA,CAAKs0F,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACIt0F,KAAA,CAAKu0F,iBAAiB,GAAGF,gBAAgB;IAAC,OAAAr0F,KAAA;EAC5C;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAy0F,SAAA,EAAAT,KAAA;EAAA,OAAAj8F,YAAA,CAAA08F,SAAA;IAAAz8F,GAAA;IAAAC,KAAA,EAKA,SAAAixE,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACF,MAAM;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAAhxE,GAAA;IAAAC,KAAA,EAIA,SAAA0xE,QAAQA,CAAC1jE,OAAO,EAAE;MAChB,IAAI,CAAC+iE,MAAM,GAAG/iE,OAAO;MACrB,IAAI,CAACmM,KAAK,GAAGE,kBAAS,CAAC3D,MAAM;MAC7B,IAAI,CAACkmF,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC5xF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAA80E,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC36D,KAAK,GAAGE,kBAAS,CAAC1b,KAAK;MAC5B,IAAI,CAACi+F,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC7rB,MAAM,GAAG8rB,aAAa,CAAC,CAAC;MAC7B,IAAI,CAAC7xF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAA+0E,gBAAgBA,CAAA,EAAG;MACjB,IAAM3D,KAAK,GAAG,+BAAiC,IAAI,CAACL,MAAO;MAC3D,IAAIK,KAAK,CAAC0rB,YAAY,IAAI1rB,KAAK,CAAC2rB,aAAa,EAAE;QAC7C,IAAI,CAAC5iF,KAAK,GAAGE,kBAAS,CAAC3D,MAAM;MAC/B,CAAC,MAAM;QACL,IAAI,CAACyD,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;MAC9B;MACA,IAAI,CAACimF,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC5xF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EApCE;IAAAjL,GAAA;IAAAC,KAAA,EAqCA,SAAA2a,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACR,KAAK,IAAIE,kBAAS,CAAC1b,KAAK,EAAE;QACjC,IAAI,CAACwb,KAAK,GAAGE,kBAAS,CAAC7D,IAAI;QAC3B,IAAI,CAACu6D,MAAM,GAAG,IAAIz+D,KAAK,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC0hE,YAAY,KAAK,IAAI,EAAE;UAC9B,IAAI,CAACjD,MAAM,CAACgC,WAAW,GAAG,IAAI,CAACiB,YAAY;QAC7C;MACF;MACA,IAAI,IAAI,CAAC75D,KAAK,IAAIE,kBAAS,CAAC7D,IAAI,EAAE;QAChC,IAAI,CAAC2D,KAAK,GAAGE,kBAAS,CAAC5D,OAAO;QAC9B,IAAI,CAACzL,OAAO,CAAC,CAAC;QACd,IAAI,CAAC2xF,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACtoB,IAAI,CAAC;QACvC,IAAI,CAACqoB,SAAS,GAAG,IAAA/qB,kBAAW,EAC1B,IAAI,CAACZ,MAAM,EACX,IAAI,CAACgE,gBAAgB,CAACltE,IAAI,CAAC,IAAI,CAAC,EAChC,IAAI,CAACitE,iBAAiB,CAACjtE,IAAI,CAAC,IAAI,CAClC,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA9H,GAAA;IAAAC,KAAA,EAKA,SAAA48F,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACF,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAAC,CAAC;QAChB,IAAI,CAACA,SAAS,GAAG,IAAI;MACvB;IACF;;IAEA;AACF;AACA;EAFE;IAAA38F,GAAA;IAAAC,KAAA,EAGA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC08F,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC7rB,MAAM,GAAG,IAAI;MAClBphE,aAAA,CAAA6sF,SAAA;IACF;EAAC;AAAA,EA9KqBjC,cAAI;AAiL5B;AACA;AACA;AACA;AACA,SAASsC,aAAaA,CAAA,EAAG;EACvB,IAAMxnB,GAAG,GAAG,IAAAn9B,0BAAqB,EAAC,CAAC,EAAE,CAAC,CAAC;EACvCm9B,GAAG,CAACE,SAAS,GAAG,eAAe;EAC/BF,GAAG,CAACH,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,OAAOG,GAAG,CAACh9B,MAAM;AACnB;AAAC,IAAAj6C,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEck+F,SAAS;;;;;;;;;;;;;;;ACpMxB;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAIMQ,SAAS;EACb;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,UAAYh+E,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAAAvf,eAAA,OAAAo9F,SAAA;IAClC;AACJ;AACA;IACI,IAAI,CAACh+E,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;EAHE,OAAArf,YAAA,CAAAk9F,SAAA;IAAAj9F,GAAA;IAAAC,KAAA,EAIA,SAAAujD,QAAQA,CAACi3C,SAAS,EAAE;MAClB,OAAO,IAAI,CAACl5E,UAAU,CAACk5E,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;IACpD;;IAEA;AACF;AACA;AACA;EAHE;IAAAz6F,GAAA;IAAAC,KAAA,EAIA,SAAAi9F,iBAAiBA,CAACC,SAAS,EAAE;MAC3B,OACE,IAAI,CAACl+E,IAAI,IAAIk+E,SAAS,CAACl+E,IAAI,IAC3Bk+E,SAAS,CAACj+E,IAAI,IAAI,IAAI,CAACA,IAAI,IAC3B,IAAI,CAACC,IAAI,IAAIg+E,SAAS,CAACh+E,IAAI,IAC3Bg+E,SAAS,CAAC/9E,IAAI,IAAI,IAAI,CAACA,IAAI;IAE/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApf,GAAA;IAAAC,KAAA,EAKA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,OAAO,IAAI,CAAC+C,IAAI,IAAIhD,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACiD,IAAI,IAAI,IAAI,CAACC,IAAI,IAAIjD,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACkD,IAAI;IAC7E;;IAEA;AACF;AACA;AACA;EAHE;IAAApf,GAAA;IAAAC,KAAA,EAIA,SAAAqC,MAAMA,CAAC66F,SAAS,EAAE;MAChB,OACE,IAAI,CAACl+E,IAAI,IAAIk+E,SAAS,CAACl+E,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAIg+E,SAAS,CAACh+E,IAAI,IAC3B,IAAI,CAACD,IAAI,IAAIi+E,SAAS,CAACj+E,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAI+9E,SAAS,CAAC/9E,IAAI;IAE/B;;IAEA;AACF;AACA;EAFE;IAAApf,GAAA;IAAAC,KAAA,EAGA,SAAA4B,MAAMA,CAACs7F,SAAS,EAAE;MAChB,IAAIA,SAAS,CAACl+E,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAGk+E,SAAS,CAACl+E,IAAI;MAC5B;MACA,IAAIk+E,SAAS,CAACj+E,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAGi+E,SAAS,CAACj+E,IAAI;MAC5B;MACA,IAAIi+E,SAAS,CAACh+E,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAGg+E,SAAS,CAACh+E,IAAI;MAC5B;MACA,IAAIg+E,SAAS,CAAC/9E,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAG+9E,SAAS,CAAC/9E,IAAI;MAC5B;IACF;;IAEA;AACF;AACA;EAFE;IAAApf,GAAA;IAAAC,KAAA,EAGA,SAAAsjB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACnE,IAAI,GAAG,IAAI,CAACD,IAAI,GAAG,CAAC;IAClC;;IAEA;AACF;AACA;EAFE;IAAAnf,GAAA;IAAAC,KAAA,EAGA,SAAAilB,OAAOA,CAAA,EAAG;MACR,OAAO,CAAC,IAAI,CAAC5B,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC5C;;IAEA;AACF;AACA;EAFE;IAAAvjB,GAAA;IAAAC,KAAA,EAGA,SAAAqjB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACpE,IAAI,GAAG,IAAI,CAACD,IAAI,GAAG,CAAC;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAAjf,GAAA;IAAAC,KAAA,EAIA,SAAA+kB,UAAUA,CAACm4E,SAAS,EAAE;MACpB,OACE,IAAI,CAACl+E,IAAI,IAAIk+E,SAAS,CAACj+E,IAAI,IAC3B,IAAI,CAACA,IAAI,IAAIi+E,SAAS,CAACl+E,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAIg+E,SAAS,CAAC/9E,IAAI,IAC3B,IAAI,CAACA,IAAI,IAAI+9E,SAAS,CAACh+E,IAAI;IAE/B;EAAC;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+B,cAAcA,CAACjC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE+9E,SAAS,EAAE;EAChE,IAAIA,SAAS,KAAKvzF,SAAS,EAAE;IAC3BuzF,SAAS,CAACl+E,IAAI,GAAGA,IAAI;IACrBk+E,SAAS,CAACj+E,IAAI,GAAGA,IAAI;IACrBi+E,SAAS,CAACh+E,IAAI,GAAGA,IAAI;IACrBg+E,SAAS,CAAC/9E,IAAI,GAAGA,IAAI;IACrB,OAAO+9E,SAAS;EAClB;EACA,OAAO,IAAIF,SAAS,CAACh+E,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;AAC9C;AAAC,IAAA/gB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc0+F,SAAS;;;;;;;;;;;ACrJxB,IAAArhD,IAAA,GAAAt4C,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAUA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAfA;AACA;AACA;;AAeA,IAAI85F,wBAAwB;;AAE5B;AACA;AACA;AACO,IAAMhlD,UAAU,GAAA95C,OAAA,CAAA85C,UAAA,GAAG,EAAE;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASilD,gBAAgBA,CAAC/nB,GAAG,EAAEgoB,EAAE,EAAEl2E,EAAE,EAAEm2E,EAAE,EAAEl2E,EAAE,EAAE;EAC7CiuD,GAAG,CAACkoB,SAAS,CAAC,CAAC;EACfloB,GAAG,CAACmoB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAChBnoB,GAAG,CAAC2K,MAAM,CAACqd,EAAE,EAAEl2E,EAAE,CAAC;EAClBkuD,GAAG,CAAC2K,MAAM,CAACsd,EAAE,EAAEl2E,EAAE,CAAC;EAClBiuD,GAAG,CAAC4K,SAAS,CAAC,CAAC;EACf5K,GAAG,CAAC4E,IAAI,CAAC,CAAC;EACV5E,GAAG,CAACooB,IAAI,CAAC,CAAC;EACVpoB,GAAG,CAACH,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEv/D,IAAI,CAACmG,GAAG,CAACuhF,EAAE,EAAEC,EAAE,CAAC,GAAG,CAAC,EAAE3nF,IAAI,CAACmG,GAAG,CAACqL,EAAE,EAAEC,EAAE,CAAC,CAAC;EAC1DiuD,GAAG,CAACgF,OAAO,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqjB,6BAA6BA,CAAC77F,IAAI,EAAEsgB,MAAM,EAAE;EACnD;EACA,OACExM,IAAI,CAACC,GAAG,CAAC/T,IAAI,CAACsgB,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IACpCxM,IAAI,CAACC,GAAG,CAAC/T,IAAI,CAACsgB,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASw7E,yBAAyBA,CAAA,EAAG;EACnC,IAAIR,wBAAwB,KAAKxzF,SAAS,EAAE;IAC1C,IAAM0rE,GAAG,GAAG,IAAAn9B,0BAAqB,EAAC,CAAC,EAAE,CAAC,EAAEC,UAAU,CAAC;IACnDk9B,GAAG,CAACC,wBAAwB,GAAG,SAAS;IACxCD,GAAG,CAACE,SAAS,GAAG,uBAAuB;IACvC6nB,gBAAgB,CAAC/nB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC+nB,gBAAgB,CAAC/nB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,IAAMxzE,IAAI,GAAGwzE,GAAG,CAACT,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC/yE,IAAI;IAC9Cs7F,wBAAwB,GACtBO,6BAA6B,CAAC77F,IAAI,EAAE,CAAC,CAAC,IACtC67F,6BAA6B,CAAC77F,IAAI,EAAE,CAAC,CAAC,IACtC67F,6BAA6B,CAAC77F,IAAI,EAAE,CAAC,CAAC;IACxC,IAAA+2C,kBAAa,EAACy8B,GAAG,CAAC;IAClBl9B,UAAU,CAACrvC,IAAI,CAACusE,GAAG,CAACh9B,MAAM,CAAC;EAC7B;EAEA,OAAO8kD,wBAAwB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,yBAAyBA,CACvCtlE,UAAU,EACVulE,UAAU,EACVvuD,YAAY,EACZE,gBAAgB,EAChB;EACA,IAAMH,YAAY,GAAG,IAAAjkB,eAAS,EAACkkB,YAAY,EAAEuuD,UAAU,EAAEvlE,UAAU,CAAC;;EAEpE;EACA,IAAIiX,gBAAgB,GAAG,IAAA1hB,wBAAkB,EACvCgwE,UAAU,EACVruD,gBAAgB,EAChBF,YACF,CAAC;EAED,IAAMwuD,mBAAmB,GAAGD,UAAU,CAAC1vE,gBAAgB,CAAC,CAAC;EACzD,IAAI2vE,mBAAmB,KAAKn0F,SAAS,EAAE;IACrC4lC,gBAAgB,IAAIuuD,mBAAmB;EACzC;EACA,IAAMtjE,mBAAmB,GAAGlC,UAAU,CAACnK,gBAAgB,CAAC,CAAC;EACzD,IAAIqM,mBAAmB,KAAK7wB,SAAS,EAAE;IACrC4lC,gBAAgB,IAAI/U,mBAAmB;EACzC;;EAEA;EACA;EACA;;EAEA,IAAMM,YAAY,GAAGxC,UAAU,CAACjS,SAAS,CAAC,CAAC;EAC3C,IAAI,CAACyU,YAAY,IAAI,IAAAzZ,0BAAkB,EAACyZ,YAAY,EAAEuU,YAAY,CAAC,EAAE;IACnE,IAAM0uD,kBAAkB,GACtB,IAAAlwE,wBAAkB,EAACyK,UAAU,EAAEiX,gBAAgB,EAAEF,YAAY,CAAC,GAC9DE,gBAAgB;IAClB,IAAI5oB,QAAQ,CAACo3E,kBAAkB,CAAC,IAAIA,kBAAkB,GAAG,CAAC,EAAE;MAC1DxuD,gBAAgB,IAAIwuD,kBAAkB;IACxC;EACF;EAEA,OAAOxuD,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyuD,+BAA+BA,CAC7C1lE,UAAU,EACVulE,UAAU,EACVI,YAAY,EACZzuD,gBAAgB,EAChB;EACA,IAAMF,YAAY,GAAG,IAAA/rB,iBAAS,EAAC06E,YAAY,CAAC;EAC5C,IAAI1uD,gBAAgB,GAAGquD,yBAAyB,CAC9CtlE,UAAU,EACVulE,UAAU,EACVvuD,YAAY,EACZE,gBACF,CAAC;EAED,IAAI,CAAC7oB,QAAQ,CAAC4oB,gBAAgB,CAAC,IAAIA,gBAAgB,IAAI,CAAC,EAAE;IACxD,IAAA3sB,qBAAa,EAACq7E,YAAY,EAAE,UAAUx6E,MAAM,EAAE;MAC5C8rB,gBAAgB,GAAGquD,yBAAyB,CAC1CtlE,UAAU,EACVulE,UAAU,EACVp6E,MAAM,EACN+rB,gBACF,CAAC;MACD,OAAO7oB,QAAQ,CAAC4oB,gBAAgB,CAAC,IAAIA,gBAAgB,GAAG,CAAC;IAC3D,CAAC,CAAC;EACJ;EAEA,OAAOA,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwL,MAAMA,CACpB/0B,KAAK,EACLC,MAAM,EACN0qD,UAAU,EACVphC,gBAAgB,EAChBzU,YAAY,EACZ0U,gBAAgB,EAChByuD,YAAY,EACZC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,WAAW,EACXzD,WAAW,EACX0D,UAAU,EACVC,UAAU,EACV;EACA,IAAM1lD,OAAO,GAAG,IAAAX,0BAAqB,EACnCviC,IAAI,CAACmI,KAAK,CAAC6yD,UAAU,GAAG3qD,KAAK,CAAC,EAC9BrQ,IAAI,CAACmI,KAAK,CAAC6yD,UAAU,GAAG1qD,MAAM,CAAC,EAC/BkyB,UACF,CAAC;EAED,IAAI,CAACyiD,WAAW,EAAE;IAChB/hD,OAAO,CAAC2lD,qBAAqB,GAAG,KAAK;EACvC;EAEA,IAAIL,OAAO,CAACv9F,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOi4C,OAAO,CAACR,MAAM;EACvB;EAEAQ,OAAO,CAACnvB,KAAK,CAACinD,UAAU,EAAEA,UAAU,CAAC;EAErC,SAAS8tB,UAAUA,CAACz+F,KAAK,EAAE;IACzB,OAAO2V,IAAI,CAACmI,KAAK,CAAC9d,KAAK,GAAG2wE,UAAU,CAAC,GAAGA,UAAU;EACpD;EAEA93B,OAAO,CAACy8B,wBAAwB,GAAG,SAAS;EAE5C,IAAMopB,gBAAgB,GAAG,IAAA/9E,mBAAW,EAAC,CAAC;EACtCw9E,OAAO,CAACvvF,OAAO,CAAC,UAAUsjE,GAAG,EAAE5wE,CAAC,EAAEJ,GAAG,EAAE;IACrC,IAAAU,cAAM,EAAC88F,gBAAgB,EAAExsB,GAAG,CAAC7zD,MAAM,CAAC;EACtC,CAAC,CAAC;EAEF,IAAIsgF,aAAa;EACjB,IAAMC,WAAW,GAAGjuB,UAAU,GAAGphC,gBAAgB;EACjD;EACA,IAAMsvD,YAAY,GAAG,CAACjE,WAAW,GAAG,CAAC,GAAG,CAAC,GAAGjlF,IAAI,CAACkI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI+gF,WAAW;EAE3E,IAAI,CAACN,UAAU,IAAIH,OAAO,CAACv9F,MAAM,KAAK,CAAC,IAAIw9F,MAAM,KAAK,CAAC,EAAE;IACvDO,aAAa,GAAG,IAAAzmD,0BAAqB,EACnCviC,IAAI,CAACmI,KAAK,CAAC,IAAAuF,gBAAQ,EAACq7E,gBAAgB,CAAC,GAAGE,WAAW,CAAC,EACpDjpF,IAAI,CAACmI,KAAK,CAAC,IAAAwF,iBAAS,EAACo7E,gBAAgB,CAAC,GAAGE,WAAW,CAAC,EACrDzmD,UACF,CAAC;IAED,IAAI,CAACyiD,WAAW,EAAE;MAChB+D,aAAa,CAACH,qBAAqB,GAAG,KAAK;IAC7C;IACA,IAAI1jE,YAAY,IAAIyjE,UAAU,EAAE;MAC9B,IAAMO,IAAI,GAAG,CAAChkE,YAAY,CAAC,CAAC,CAAC,GAAG4jE,gBAAgB,CAAC,CAAC,CAAC,IAAIE,WAAW;MAClE,IAAMG,IAAI,GAAG,EAAEjkE,YAAY,CAAC,CAAC,CAAC,GAAG4jE,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGE,WAAW;MACnE,IAAM54E,MAAK,GAAG,IAAA3C,gBAAQ,EAACyX,YAAY,CAAC,GAAG8jE,WAAW;MAClD,IAAM34E,OAAM,GAAG,IAAA3C,iBAAS,EAACwX,YAAY,CAAC,GAAG8jE,WAAW;MACpDD,aAAa,CAACK,IAAI,CAACF,IAAI,EAAEC,IAAI,EAAE/4E,MAAK,EAAEC,OAAM,CAAC;MAC7C04E,aAAa,CAAClB,IAAI,CAAC,CAAC;IACtB;IAEAU,OAAO,CAACvvF,OAAO,CAAC,UAAUsjE,GAAG,EAAE5wE,CAAC,EAAEJ,GAAG,EAAE;MACrC;MACA,IAAIgxE,GAAG,CAACd,KAAK,CAACprD,KAAK,GAAG,CAAC,IAAIksD,GAAG,CAACd,KAAK,CAACnrD,MAAM,GAAG,CAAC,EAAE;QAC/C,IAAIisD,GAAG,CAACqsB,UAAU,EAAE;UAClBI,aAAa,CAAC1kB,IAAI,CAAC,CAAC;UACpB,IAAM6kB,KAAI,GAAG,CAAC5sB,GAAG,CAACqsB,UAAU,CAAC,CAAC,CAAC,GAAGG,gBAAgB,CAAC,CAAC,CAAC,IAAIE,WAAW;UACpE,IAAMG,KAAI,GAAG,EAAE7sB,GAAG,CAACqsB,UAAU,CAAC,CAAC,CAAC,GAAGG,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGE,WAAW;UACrE,IAAM54E,OAAK,GAAG,IAAA3C,gBAAQ,EAAC6uD,GAAG,CAACqsB,UAAU,CAAC,GAAGK,WAAW;UACpD,IAAM34E,QAAM,GAAG,IAAA3C,iBAAS,EAAC4uD,GAAG,CAACqsB,UAAU,CAAC,GAAGK,WAAW;UACtDD,aAAa,CAACK,IAAI,CAChBpE,WAAW,GAAGkE,KAAI,GAAGnpF,IAAI,CAACmI,KAAK,CAACghF,KAAI,CAAC,EACrClE,WAAW,GAAGmE,KAAI,GAAGppF,IAAI,CAACmI,KAAK,CAACihF,KAAI,CAAC,EACrCnE,WAAW,GAAG50E,OAAK,GAAGrQ,IAAI,CAACmI,KAAK,CAACghF,KAAI,GAAG94E,OAAK,CAAC,GAAGrQ,IAAI,CAACmI,KAAK,CAACghF,KAAI,CAAC,EACjElE,WAAW,GAAG30E,QAAM,GAAGtQ,IAAI,CAACmI,KAAK,CAACihF,KAAI,GAAG94E,QAAM,CAAC,GAAGtQ,IAAI,CAACmI,KAAK,CAACihF,KAAI,CACpE,CAAC;UACDJ,aAAa,CAAClB,IAAI,CAAC,CAAC;QACtB;QAEA,IAAMqB,MAAI,GAAG,CAAC5sB,GAAG,CAAC7zD,MAAM,CAAC,CAAC,CAAC,GAAGqgF,gBAAgB,CAAC,CAAC,CAAC,IAAIE,WAAW;QAChE,IAAMG,MAAI,GAAG,EAAE7sB,GAAG,CAAC7zD,MAAM,CAAC,CAAC,CAAC,GAAGqgF,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGE,WAAW;QACjE,IAAMK,QAAQ,GAAG,IAAA57E,gBAAQ,EAAC6uD,GAAG,CAAC7zD,MAAM,CAAC,GAAGugF,WAAW;QACnD,IAAMM,SAAS,GAAG,IAAA57E,iBAAS,EAAC4uD,GAAG,CAAC7zD,MAAM,CAAC,GAAGugF,WAAW;QACrDD,aAAa,CAAChqB,SAAS,CACrBzC,GAAG,CAACd,KAAK,EACTgtB,MAAM,EACNA,MAAM,EACNlsB,GAAG,CAACd,KAAK,CAACprD,KAAK,GAAG,CAAC,GAAGo4E,MAAM,EAC5BlsB,GAAG,CAACd,KAAK,CAACnrD,MAAM,GAAG,CAAC,GAAGm4E,MAAM,EAC7BxD,WAAW,GAAGkE,MAAI,GAAGnpF,IAAI,CAACmI,KAAK,CAACghF,MAAI,CAAC,EACrClE,WAAW,GAAGmE,MAAI,GAAGppF,IAAI,CAACmI,KAAK,CAACihF,MAAI,CAAC,EACrCnE,WAAW,GACPqE,QAAQ,GACRtpF,IAAI,CAACmI,KAAK,CAACghF,MAAI,GAAGG,QAAQ,CAAC,GAAGtpF,IAAI,CAACmI,KAAK,CAACghF,MAAI,CAAC,EAClDlE,WAAW,GACPsE,SAAS,GACTvpF,IAAI,CAACmI,KAAK,CAACihF,MAAI,GAAGG,SAAS,CAAC,GAAGvpF,IAAI,CAACmI,KAAK,CAACihF,MAAI,CACpD,CAAC;QAED,IAAI7sB,GAAG,CAACqsB,UAAU,EAAE;UAClBI,aAAa,CAACtkB,OAAO,CAAC,CAAC;QACzB;MACF;IACF,CAAC,CAAC;EACJ;EACA,IAAM8kB,aAAa,GAAG,IAAAj8E,kBAAU,EAAC+6E,YAAY,CAAC;EAE9CC,aAAa,CAACkB,YAAY,CAAC,CAAC,CAACxwF,OAAO,CAAC,UAAUywF,QAAQ,EAAE/9F,CAAC,EAAEJ,GAAG,EAAE;IAC/D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAMuM,MAAM,GAAG4xF,QAAQ,CAAC5xF,MAAM;IAC9B,IAAMtM,MAAM,GAAGk+F,QAAQ,CAACl+F,MAAM;IAC9B,IAAI6iB,EAAE,GAAGvW,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnBwW,EAAE,GAAGxW,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,IAAIyO,EAAE,GAAGzO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB0O,EAAE,GAAG1O,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI2O,EAAE,GAAG3O,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB4O,EAAE,GAAG5O,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,IAAM6xF,EAAE,GAAGb,UAAU,CAAC,CAACt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB,CAAC;IAC3E,IAAM+vD,EAAE,GAAGd,UAAU,CACnB,EAAEt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBACvC,CAAC;IACD,IAAM6tD,EAAE,GAAGoB,UAAU,CAAC,CAACt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB,CAAC;IAC3E,IAAMroB,EAAE,GAAGs3E,UAAU,CACnB,EAAEt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBACvC,CAAC;IACD,IAAM8tD,EAAE,GAAGmB,UAAU,CAAC,CAACt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB,CAAC;IAC3E,IAAMpoB,EAAE,GAAGq3E,UAAU,CACnB,EAAEt9F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBACvC,CAAC;;IAED;IACA;IACA;IACA,IAAMgwD,qBAAqB,GAAGx7E,EAAE;IAChC,IAAMy7E,qBAAqB,GAAGx7E,EAAE;IAChCD,EAAE,GAAG,CAAC;IACNC,EAAE,GAAG,CAAC;IACN/H,EAAE,IAAIsjF,qBAAqB;IAC3BrjF,EAAE,IAAIsjF,qBAAqB;IAC3BrjF,EAAE,IAAIojF,qBAAqB;IAC3BnjF,EAAE,IAAIojF,qBAAqB;IAE3B,IAAMC,eAAe,GAAG,CACtB,CAACxjF,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAEkhF,EAAE,GAAGiC,EAAE,CAAC,EACvB,CAACljF,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAEihF,EAAE,GAAGgC,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,CAAC,EAAEpjF,EAAE,EAAEC,EAAE,EAAEgL,EAAE,GAAGo4E,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,CAAC,EAAEnjF,EAAE,EAAEC,EAAE,EAAE+K,EAAE,GAAGm4E,EAAE,CAAC,CACxB;IACD,IAAMI,WAAW,GAAG,IAAAljF,uBAAiB,EAACijF,eAAe,CAAC;IACtD,IAAI,CAACC,WAAW,EAAE;MAChB;IACF;IAEA9mD,OAAO,CAACohC,IAAI,CAAC,CAAC;IACdphC,OAAO,CAAC0kD,SAAS,CAAC,CAAC;IAEnB,IAAII,yBAAyB,CAAC,CAAC,IAAI,CAAC/C,WAAW,EAAE;MAC/C;MACA/hD,OAAO,CAAC2kD,MAAM,CAACH,EAAE,EAAEl2E,EAAE,CAAC;MACtB;MACA,IAAMy4E,KAAK,GAAG,CAAC;MACf,IAAMC,EAAE,GAAGP,EAAE,GAAGjC,EAAE;MAClB,IAAMyC,EAAE,GAAGP,EAAE,GAAGp4E,EAAE;MAClB,KAAK,IAAI04D,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG+f,KAAK,EAAE/f,IAAI,EAAE,EAAE;QACvC;QACAhnC,OAAO,CAACmnC,MAAM,CACZqd,EAAE,GAAGoB,UAAU,CAAE,CAAC5e,IAAI,GAAG,CAAC,IAAIggB,EAAE,GAAID,KAAK,CAAC,EAC1Cz4E,EAAE,GAAGs3E,UAAU,CAAE5e,IAAI,GAAGigB,EAAE,IAAKF,KAAK,GAAG,CAAC,CAAC,CAC3C,CAAC;QACD;QACA,IAAI/f,IAAI,IAAI+f,KAAK,GAAG,CAAC,EAAE;UACrB/mD,OAAO,CAACmnC,MAAM,CACZqd,EAAE,GAAGoB,UAAU,CAAE,CAAC5e,IAAI,GAAG,CAAC,IAAIggB,EAAE,GAAID,KAAK,CAAC,EAC1Cz4E,EAAE,GAAGs3E,UAAU,CAAE,CAAC5e,IAAI,GAAG,CAAC,IAAIigB,EAAE,IAAKF,KAAK,GAAG,CAAC,CAAC,CACjD,CAAC;QACH;MACF;MACA;MACA/mD,OAAO,CAACmnC,MAAM,CAACsd,EAAE,EAAEl2E,EAAE,CAAC;IACxB,CAAC,MAAM;MACLyxB,OAAO,CAAC2kD,MAAM,CAACH,EAAE,EAAEl2E,EAAE,CAAC;MACtB0xB,OAAO,CAACmnC,MAAM,CAACsf,EAAE,EAAEC,EAAE,CAAC;MACtB1mD,OAAO,CAACmnC,MAAM,CAACsd,EAAE,EAAEl2E,EAAE,CAAC;IACxB;IAEAyxB,OAAO,CAAC4kD,IAAI,CAAC,CAAC;IAEd5kD,OAAO,CAACztB,SAAS,CACfu0E,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdL,EAAE,EACFC,EACF,CAAC;IAED1mD,OAAO,CAAC5c,SAAS,CACfyiE,gBAAgB,CAAC,CAAC,CAAC,GAAGc,qBAAqB,EAC3Cd,gBAAgB,CAAC,CAAC,CAAC,GAAGe,qBACxB,CAAC;IAED,IAAIruB,KAAK;IACT,IAAIutB,aAAa,EAAE;MACjBvtB,KAAK,GAAGutB,aAAa,CAACtmD,MAAM;MAC5BQ,OAAO,CAACnvB,KAAK,CAACm1E,YAAY,EAAE,CAACA,YAAY,CAAC;IAC5C,CAAC,MAAM;MACL,IAAMpxF,OAAM,GAAG0wF,OAAO,CAAC,CAAC,CAAC;MACzB,IAAM9/E,MAAM,GAAG5Q,OAAM,CAAC4Q,MAAM;MAC5B+yD,KAAK,GAAG3jE,OAAM,CAAC2jE,KAAK;MACpBv4B,OAAO,CAACnvB,KAAK,CACX,IAAArG,gBAAQ,EAAChF,MAAM,CAAC,GAAG+yD,KAAK,CAACprD,KAAK,EAC9B,CAAC,IAAA1C,iBAAS,EAACjF,MAAM,CAAC,GAAG+yD,KAAK,CAACnrD,MAC7B,CAAC;IACH;IAEA4yB,OAAO,CAAC87B,SAAS,CAACvD,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9Bv4B,OAAO,CAACwhC,OAAO,CAAC,CAAC;EACnB,CAAC,CAAC;EAEF,IAAIskB,aAAa,EAAE;IACjB,IAAA/lD,kBAAa,EAAC+lD,aAAa,CAAC;IAC5BxmD,UAAU,CAACrvC,IAAI,CAAC61F,aAAa,CAACtmD,MAAM,CAAC;EACvC;EAEA,IAAIgmD,WAAW,EAAE;IACfxlD,OAAO,CAACohC,IAAI,CAAC,CAAC;IAEdphC,OAAO,CAACy8B,wBAAwB,GAAG,aAAa;IAChDz8B,OAAO,CAAC8lC,WAAW,GAAG,OAAO;IAC7B9lC,OAAO,CAAC4gC,SAAS,GAAG,CAAC;IAErBykB,aAAa,CAACkB,YAAY,CAAC,CAAC,CAACxwF,OAAO,CAAC,UAAUywF,QAAQ,EAAE/9F,CAAC,EAAEJ,GAAG,EAAE;MAC/D,IAAMC,MAAM,GAAGk+F,QAAQ,CAACl+F,MAAM;MAC9B,IAAMm+F,EAAE,GAAG,CAACn+F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB;MAC/D,IAAM+vD,EAAE,GAAG,EAAEp+F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBAAgB;MAChE,IAAM6tD,EAAE,GAAG,CAACl8F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB;MAC/D,IAAMroB,EAAE,GAAG,EAAEhmB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBAAgB;MAChE,IAAM8tD,EAAE,GAAG,CAACn8F,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,IAAI3vD,gBAAgB;MAC/D,IAAMpoB,EAAE,GAAG,EAAEjmB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGg+F,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG3vD,gBAAgB;MAEhEqJ,OAAO,CAAC0kD,SAAS,CAAC,CAAC;MACnB1kD,OAAO,CAAC2kD,MAAM,CAACH,EAAE,EAAEl2E,EAAE,CAAC;MACtB0xB,OAAO,CAACmnC,MAAM,CAACsf,EAAE,EAAEC,EAAE,CAAC;MACtB1mD,OAAO,CAACmnC,MAAM,CAACsd,EAAE,EAAEl2E,EAAE,CAAC;MACtByxB,OAAO,CAAConC,SAAS,CAAC,CAAC;MACnBpnC,OAAO,CAAC4jC,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF5jC,OAAO,CAACwhC,OAAO,CAAC,CAAC;EACnB;EACA,OAAOxhC,OAAO,CAACR,MAAM;AACvB;;;;;;;;ACreA,IAAA1wB,OAAA,GAAAtkB,OAAA;AAYA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAKA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAAqD,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KArBrD;AACA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMy5F,eAAe,GAAG,EAAE;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,kBAAkB,GAAG,IAAI;;AAE/B;AACA;AACA;AACA;AACA;AAJA,IAKMC,aAAa;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,cACE3nE,UAAU,EACVulE,UAAU,EACVI,YAAY,EACZiC,eAAe,EACfC,cAAc,EACdC,qBAAqB,EACrBC,YAAY,EACZ;IAAA,IAAAj4F,KAAA;IAAAxI,eAAA,OAAAqgG,aAAA;IACA;AACJ;AACA;AACA;IACI,IAAI,CAACK,WAAW,GAAGhoE,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACioE,WAAW,GAAG1C,UAAU;;IAE7B;IACA,IAAI2C,iBAAiB,GAAG,CAAC,CAAC;IAC1B,IAAMC,YAAY,GAAGJ,YAAY,GAC7B,IAAAnoE,4CAAsC,EAAC,UAACtI,KAAK;MAAA,OAC3C,IAAA8wE,gBAAW,EACTL,YAAY,EACZ,IAAAj1E,eAAS,EAACwE,KAAK,EAAExnB,KAAI,CAACm4F,WAAW,EAAEn4F,KAAI,CAACk4F,WAAW,CACrD,CAAC;IAAA,CACH,CAAC,GACD,IAAA9mE,kBAAY,EAAC,IAAI,CAAC+mE,WAAW,EAAE,IAAI,CAACD,WAAW,CAAC;;IAEpD;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACK,aAAa,GAAG,UAAU5tE,CAAC,EAAE;MAChC,IAAMhzB,GAAG,GAAGgzB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAI,CAACytE,iBAAiB,CAACzgG,GAAG,CAAC,EAAE;QAC3BygG,iBAAiB,CAACzgG,GAAG,CAAC,GAAG0gG,YAAY,CAAC1tE,CAAC,CAAC;MAC1C;MACA,OAAOytE,iBAAiB,CAACzgG,GAAG,CAAC;IAC/B,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAAC6gG,gBAAgB,GAAGV,eAAe;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAACW,sBAAsB,GAAGV,cAAc,GAAGA,cAAc;;IAE7D;AACJ;AACA;AACA;IACI,IAAI,CAACW,UAAU,GAAG,EAAE;;IAEpB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,eAAe,GAAG,KAAK;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GACpB,IAAI,CAACV,WAAW,CAACh6E,QAAQ,CAAC,CAAC,IAC3B,CAAC,CAAC45E,eAAe,IACjB,CAAC,CAAC,IAAI,CAACI,WAAW,CAACj6E,SAAS,CAAC,CAAC,IAC9B,IAAAhD,gBAAQ,EAAC68E,eAAe,CAAC,IAAI,IAAA78E,gBAAQ,EAAC,IAAI,CAACi9E,WAAW,CAACj6E,SAAS,CAAC,CAAC,CAAC;;IAErE;AACJ;AACA;AACA;IACI,IAAI,CAAC46E,iBAAiB,GAAG,IAAI,CAACX,WAAW,CAACj6E,SAAS,CAAC,CAAC,GACjD,IAAAhD,gBAAQ,EAAC,IAAI,CAACi9E,WAAW,CAACj6E,SAAS,CAAC,CAAC,CAAC,GACtC,IAAI;;IAER;AACJ;AACA;AACA;IACI,IAAI,CAAC66E,iBAAiB,GAAG,IAAI,CAACX,WAAW,CAACl6E,SAAS,CAAC,CAAC,GACjD,IAAAhD,gBAAQ,EAAC,IAAI,CAACk9E,WAAW,CAACl6E,SAAS,CAAC,CAAC,CAAC,GACtC,IAAI;IAER,IAAM86E,kBAAkB,GAAG,IAAAj+E,kBAAU,EAAC+6E,YAAY,CAAC;IACnD,IAAMmD,mBAAmB,GAAG,IAAAn+E,mBAAW,EAACg7E,YAAY,CAAC;IACrD,IAAMoD,sBAAsB,GAAG,IAAAr+E,sBAAc,EAACi7E,YAAY,CAAC;IAC3D,IAAMqD,qBAAqB,GAAG,IAAAv+E,qBAAa,EAACk7E,YAAY,CAAC;IACzD,IAAMsD,aAAa,GAAG,IAAI,CAACZ,aAAa,CAACQ,kBAAkB,CAAC;IAC5D,IAAMK,cAAc,GAAG,IAAI,CAACb,aAAa,CAACS,mBAAmB,CAAC;IAC9D,IAAMK,iBAAiB,GAAG,IAAI,CAACd,aAAa,CAACU,sBAAsB,CAAC;IACpE,IAAMK,gBAAgB,GAAG,IAAI,CAACf,aAAa,CAACW,qBAAqB,CAAC;;IAElE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAMK,cAAc,GAClB5B,eAAe,IACdK,qBAAqB,GAClBzqF,IAAI,CAACmG,GAAG,CACN,CAAC,EACDnG,IAAI,CAACqI,IAAI,CACPrI,IAAI,CAACisF,IAAI,CACP,IAAAz+E,eAAO,EAAC86E,YAAY,CAAC,IAClBmC,qBAAqB,GAAGA,qBAAqB,GAAG,GAAG,GAAG,GAAG,CAC9D,CACF,CACF,CAAC,GACD,CAAC,CAAC;IAER,IAAI,CAACyB,QAAQ,CACXV,kBAAkB,EAClBC,mBAAmB,EACnBC,sBAAsB,EACtBC,qBAAqB,EACrBC,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,cACF,CAAC;IAED,IAAI,IAAI,CAACZ,eAAe,EAAE;MACxB,IAAIe,SAAS,GAAG9qF,QAAQ;MACxB,IAAI,CAAC8pF,UAAU,CAAClyF,OAAO,CAAC,UAAUywF,QAAQ,EAAE/9F,CAAC,EAAEJ,GAAG,EAAE;QAClD4gG,SAAS,GAAGnsF,IAAI,CAACkG,GAAG,CAClBimF,SAAS,EACTzC,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA;MACA,IAAI,CAACqzF,UAAU,CAAClyF,OAAO,CAAC,UAACywF,QAAQ,EAAK;QACpC,IACE1pF,IAAI,CAACmG,GAAG,CACNujF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,CAAC,GACCq0F,SAAS,GACX15F,KAAI,CAAC64F,iBAAiB,GAAG,CAAC,EAC1B;UACA,IAAMc,WAAW,GAAG,CAClB,CAAC1C,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,CAAC4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,CAAC4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE4xF,QAAQ,CAAC5xF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/C;UACD,IAAIs0F,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,SAAS,GAAG15F,KAAI,CAAC64F,iBAAiB,GAAG,CAAC,EAAE;YAC9Dc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI35F,KAAI,CAAC64F,iBAAiB;UAC7C;UACA,IAAIc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,SAAS,GAAG15F,KAAI,CAAC64F,iBAAiB,GAAG,CAAC,EAAE;YAC9Dc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI35F,KAAI,CAAC64F,iBAAiB;UAC7C;UACA,IAAIc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,SAAS,GAAG15F,KAAI,CAAC64F,iBAAiB,GAAG,CAAC,EAAE;YAC9Dc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI35F,KAAI,CAAC64F,iBAAiB;UAC7C;;UAEA;UACA;UACA;UACA,IAAMjiF,IAAI,GAAGrJ,IAAI,CAACkG,GAAG,CACnBkmF,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,CAAC;UACD,IAAM9iF,IAAI,GAAGtJ,IAAI,CAACmG,GAAG,CACnBimF,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,CAAC;UACD,IAAI9iF,IAAI,GAAGD,IAAI,GAAG5W,KAAI,CAAC64F,iBAAiB,GAAG,CAAC,EAAE;YAC5C5B,QAAQ,CAAC5xF,MAAM,GAAGs0F,WAAW;UAC/B;QACF;MACF,CAAC,CAAC;IACJ;IAEAvB,iBAAiB,GAAG,CAAC,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE,OAAA1gG,YAAA,CAAAmgG,aAAA;IAAAlgG,GAAA;IAAAC,KAAA,EAUA,SAAAgiG,YAAYA,CAAClhG,CAAC,EAAEC,CAAC,EAAEgyB,CAAC,EAAEkvE,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;MACtC,IAAI,CAACrB,UAAU,CAACh4F,IAAI,CAAC;QACnB2E,MAAM,EAAE,CAACw0F,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;QAC1BhhG,MAAM,EAAE,CAACL,CAAC,EAAEC,CAAC,EAAEgyB,CAAC;MAClB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAAhzB,GAAA;IAAAC,KAAA,EAgBA,SAAA6hG,QAAQA,CAAC/gG,CAAC,EAAEC,CAAC,EAAEgyB,CAAC,EAAE7K,CAAC,EAAE+5E,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAET,cAAc,EAAE;MAC3D,IAAMU,gBAAgB,GAAG,IAAA5hF,sBAAc,EAAC,CAACwhF,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAC;MACjE,IAAME,eAAe,GAAG,IAAI,CAACrB,iBAAiB,GAC1C,IAAA59E,gBAAQ,EAACg/E,gBAAgB,CAAC,GAAG,IAAI,CAACpB,iBAAiB,GACnD,IAAI;MACR,IAAMsB,gBAAgB,GAAG,qBAAuB,IAAI,CAACtB,iBAAkB;;MAEvE;MACA;MACA,IAAMuB,MAAM,GACV,IAAI,CAAClC,WAAW,CAACh6E,QAAQ,CAAC,CAAC,IAC3Bg8E,eAAe,GAAG,GAAG,IACrBA,eAAe,GAAG,CAAC;MAErB,IAAIG,gBAAgB,GAAG,KAAK;MAE5B,IAAId,cAAc,GAAG,CAAC,EAAE;QACtB,IAAI,IAAI,CAACpB,WAAW,CAACjyE,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC4yE,iBAAiB,EAAE;UACzD,IAAMwB,gBAAgB,GAAG,IAAAjiF,sBAAc,EAAC,CAAC3f,CAAC,EAAEC,CAAC,EAAEgyB,CAAC,EAAE7K,CAAC,CAAC,CAAC;UACrD,IAAMy6E,eAAe,GACnB,IAAAt/E,gBAAQ,EAACq/E,gBAAgB,CAAC,GAAG,IAAI,CAACxB,iBAAiB;UACrDuB,gBAAgB,GACdE,eAAe,GAAG3C,kBAAkB,IAAIyC,gBAAgB;QAC5D;QACA,IAAI,CAACD,MAAM,IAAI,IAAI,CAAClC,WAAW,CAAChyE,QAAQ,CAAC,CAAC,IAAIg0E,eAAe,EAAE;UAC7DG,gBAAgB,GACdH,eAAe,GAAGtC,kBAAkB,IAAIyC,gBAAgB;QAC5D;MACF;MAEA,IAAI,CAACA,gBAAgB,IAAI,IAAI,CAAC7B,gBAAgB,EAAE;QAC9C,IACEj6E,QAAQ,CAAC07E,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7B17E,QAAQ,CAAC07E,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7B17E,QAAQ,CAAC07E,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7B17E,QAAQ,CAAC07E,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAC7B;UACA,IAAI,CAAC,IAAAt9E,kBAAU,EAACs9E,gBAAgB,EAAE,IAAI,CAACzB,gBAAgB,CAAC,EAAE;YACxD;YACA;UACF;QACF;MACF;MAEA,IAAIgC,WAAW,GAAG,CAAC;MAEnB,IAAI,CAACH,gBAAgB,EAAE;QACrB,IACE,CAAC97E,QAAQ,CAACs7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACt7E,QAAQ,CAACs7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACt7E,QAAQ,CAACu7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACv7E,QAAQ,CAACu7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACv7E,QAAQ,CAACw7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACx7E,QAAQ,CAACw7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACx7E,QAAQ,CAACy7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACz7E,QAAQ,CAACy7E,IAAI,CAAC,CAAC,CAAC,CAAC,EAClB;UACA,IAAIT,cAAc,GAAG,CAAC,EAAE;YACtBc,gBAAgB,GAAG,IAAI;UACzB,CAAC,MAAM;YACL;YACA;YACAG,WAAW,GACT,CAAC,CAACj8E,QAAQ,CAACs7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACt7E,QAAQ,CAACs7E,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAChD,CAACt7E,QAAQ,CAACu7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACv7E,QAAQ,CAACu7E,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IACjD,CAACv7E,QAAQ,CAACw7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACx7E,QAAQ,CAACw7E,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IACjD,CAACx7E,QAAQ,CAACy7E,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACz7E,QAAQ,CAACy7E,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpD,IACEQ,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,EAChB;cACA;YACF;UACF;QACF;MACF;MAEA,IAAIjB,cAAc,GAAG,CAAC,EAAE;QACtB,IAAI,CAACc,gBAAgB,EAAE;UACrB,IAAMxnF,MAAM,GAAG,CAAC,CAACna,CAAC,CAAC,CAAC,CAAC,GAAGiyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACjyB,CAAC,CAAC,CAAC,CAAC,GAAGiyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACrD,IAAM8vE,SAAS,GAAG,IAAI,CAAClC,aAAa,CAAC1lF,MAAM,CAAC;UAE5C,IAAIqB,EAAE;UACN,IAAIkmF,MAAM,EAAE;YACV,IAAMM,eAAe,GACnB,CAAC,IAAAtlF,YAAM,EAACykF,IAAI,CAAC,CAAC,CAAC,EAAEM,gBAAgB,CAAC,GAChC,IAAA/kF,YAAM,EAAC2kF,IAAI,CAAC,CAAC,CAAC,EAAEI,gBAAgB,CAAC,IACnC,CAAC;YACHjmF,EAAE,GAAGwmF,eAAe,GAAG,IAAAtlF,YAAM,EAACqlF,SAAS,CAAC,CAAC,CAAC,EAAEN,gBAAgB,CAAC;UAC/D,CAAC,MAAM;YACLjmF,EAAE,GAAG,CAAC2lF,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGU,SAAS,CAAC,CAAC,CAAC;UAC7C;UACA,IAAMtmF,EAAE,GAAG,CAAC0lF,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGU,SAAS,CAAC,CAAC,CAAC;UACjD,IAAME,qBAAqB,GAAGzmF,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;UAC/CkmF,gBAAgB,GAAGM,qBAAqB,GAAG,IAAI,CAAClC,sBAAsB;QACxE;QACA,IAAI4B,gBAAgB,EAAE;UACpB,IAAI9sF,IAAI,CAACC,GAAG,CAAC9U,CAAC,CAAC,CAAC,CAAC,GAAGiyB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIpd,IAAI,CAACC,GAAG,CAAC9U,CAAC,CAAC,CAAC,CAAC,GAAGiyB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAClD;YACA,IAAMiwE,EAAE,GAAG,CAAC,CAACjiG,CAAC,CAAC,CAAC,CAAC,GAAGgyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAChyB,CAAC,CAAC,CAAC,CAAC,GAAGgyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMkwE,KAAK,GAAG,IAAI,CAACtC,aAAa,CAACqC,EAAE,CAAC;YACpC,IAAME,EAAE,GAAG,CAAC,CAACh7E,CAAC,CAAC,CAAC,CAAC,GAAGpnB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAConB,CAAC,CAAC,CAAC,CAAC,GAAGpnB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMqiG,KAAK,GAAG,IAAI,CAACxC,aAAa,CAACuC,EAAE,CAAC;YAEpC,IAAI,CAACrB,QAAQ,CACX/gG,CAAC,EACDC,CAAC,EACDiiG,EAAE,EACFE,EAAE,EACFjB,IAAI,EACJC,IAAI,EACJe,KAAK,EACLE,KAAK,EACLxB,cAAc,GAAG,CACnB,CAAC;YACD,IAAI,CAACE,QAAQ,CACXqB,EAAE,EACFF,EAAE,EACFjwE,CAAC,EACD7K,CAAC,EACDi7E,KAAK,EACLF,KAAK,EACLd,IAAI,EACJC,IAAI,EACJT,cAAc,GAAG,CACnB,CAAC;UACH,CAAC,MAAM;YACL;YACA,IAAMyB,EAAE,GAAG,CAAC,CAACtiG,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMsiG,KAAK,GAAG,IAAI,CAAC1C,aAAa,CAACyC,EAAE,CAAC;YACpC,IAAME,EAAE,GAAG,CAAC,CAACvwE,CAAC,CAAC,CAAC,CAAC,GAAG7K,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC6K,CAAC,CAAC,CAAC,CAAC,GAAG7K,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMq7E,KAAK,GAAG,IAAI,CAAC5C,aAAa,CAAC2C,EAAE,CAAC;YAEpC,IAAI,CAACzB,QAAQ,CACX/gG,CAAC,EACDsiG,EAAE,EACFE,EAAE,EACFp7E,CAAC,EACD+5E,IAAI,EACJoB,KAAK,EACLE,KAAK,EACLnB,IAAI,EACJT,cAAc,GAAG,CACnB,CAAC;YACD,IAAI,CAACE,QAAQ,CACXuB,EAAE,EACFriG,CAAC,EACDgyB,CAAC,EACDuwE,EAAE,EACFD,KAAK,EACLnB,IAAI,EACJC,IAAI,EACJoB,KAAK,EACL5B,cAAc,GAAG,CACnB,CAAC;UACH;UACA;QACF;MACF;MAEA,IAAIa,MAAM,EAAE;QACV,IAAI,CAAC,IAAI,CAACxB,iBAAiB,EAAE;UAC3B;QACF;QACA,IAAI,CAACD,eAAe,GAAG,IAAI;MAC7B;;MAEA;MACA;MACA;MACA;MACA,IAAI,CAAC6B,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACZ,YAAY,CAAClhG,CAAC,EAAEiyB,CAAC,EAAE7K,CAAC,EAAE+5E,IAAI,EAAEE,IAAI,EAAEC,IAAI,CAAC;MAC9C;MACA,IAAI,CAACQ,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACZ,YAAY,CAAClhG,CAAC,EAAEiyB,CAAC,EAAEhyB,CAAC,EAAEkhG,IAAI,EAAEE,IAAI,EAAED,IAAI,CAAC;MAC9C;MACA,IAAIU,WAAW,EAAE;QACf;QACA,IAAI,CAACA,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;UAC5B,IAAI,CAACZ,YAAY,CAACjhG,CAAC,EAAEmnB,CAAC,EAAEpnB,CAAC,EAAEohG,IAAI,EAAEE,IAAI,EAAEH,IAAI,CAAC;QAC9C;QACA,IAAI,CAACW,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;UAC5B,IAAI,CAACZ,YAAY,CAACjhG,CAAC,EAAEmnB,CAAC,EAAE6K,CAAC,EAAEmvE,IAAI,EAAEE,IAAI,EAAED,IAAI,CAAC;QAC9C;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApiG,GAAA;IAAAC,KAAA,EAKA,SAAAwjG,qBAAqBA,CAAA,EAAG;MACtB,IAAMnlF,MAAM,GAAG,IAAAsC,mBAAW,EAAC,CAAC;MAE5B,IAAI,CAACmgF,UAAU,CAAClyF,OAAO,CAAC,UAAUywF,QAAQ,EAAE/9F,CAAC,EAAEJ,GAAG,EAAE;QAClD,IAAMgxE,GAAG,GAAGmtB,QAAQ,CAAC5xF,MAAM;QAC3B,IAAAmT,wBAAgB,EAACvC,MAAM,EAAE6zD,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,IAAAtxD,wBAAgB,EAACvC,MAAM,EAAE6zD,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,IAAAtxD,wBAAgB,EAACvC,MAAM,EAAE6zD,GAAG,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC;MAEF,OAAO7zD,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAAte,GAAA;IAAAC,KAAA,EAGA,SAAAo/F,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC0B,UAAU;IACxB;EAAC;AAAA;AAAA,IAAA1iG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY2hG,aAAa;;;;;;;;ACngB5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMwD,eAAe,GAAAplG,OAAA,CAAAolG,eAAA,GAAG,GAAG;;;;;;;;ACLlC,IAAAtI,MAAA,GAAA31F,sBAAA,CAAAnC,OAAA;AACA,IAAA0V,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAqgG,OAAA,GAAArgG,OAAA;AAKA,IAAAsgG,cAAA,GAAAn+F,sBAAA,CAAAnC,OAAA;AACA,IAAA6nC,OAAA,GAAA7nC,OAAA;AAA4C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAjB5C;AACA;AACA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMg+F,UAAU,0BAAA7H,KAAA;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAA6H,WACEtrE,UAAU,EACVurE,cAAc,EACdhG,UAAU,EACViG,cAAc,EACdtJ,SAAS,EACTuJ,gBAAgB,EAChBpzB,UAAU,EACVytB,MAAM,EACN4F,eAAe,EACf7D,cAAc,EACd9B,WAAW,EACXjwF,OAAO,EACP;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAgkG,UAAA;IACAx7F,KAAA,GAAAnB,UAAA,OAAA28F,UAAA,GAAMpJ,SAAS,EAAEngF,kBAAS,CAAC7D,IAAI,EAAEpI,OAAO;;IAExC;AACJ;AACA;AACA;IACIhG,KAAA,CAAK67F,YAAY,GAAG5F,WAAW,KAAK10F,SAAS,GAAG00F,WAAW,GAAG,KAAK;;IAEnE;AACJ;AACA;AACA;IACIj2F,KAAA,CAAKyoE,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACIvoE,KAAA,CAAK87F,OAAO,GAAG9F,MAAM;;IAErB;AACJ;AACA;AACA;IACIh2F,KAAA,CAAK6rE,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACI7rE,KAAA,CAAK+7F,eAAe,GAAGN,cAAc;;IAErC;AACJ;AACA;AACA;IACIz7F,KAAA,CAAKg8F,eAAe,GAAGN,cAAc;;IAErC;AACJ;AACA;AACA;IACI17F,KAAA,CAAKi8F,iBAAiB,GAAGN,gBAAgB,GAAGA,gBAAgB,GAAGvJ,SAAS;;IAExE;AACJ;AACA;AACA;IACIpyF,KAAA,CAAKk8F,YAAY,GAAG,EAAE;;IAEtB;AACJ;AACA;AACA;IACIl8F,KAAA,CAAKm8F,oBAAoB,GAAG,IAAI;;IAEhC;AACJ;AACA;AACA;IACIn8F,KAAA,CAAKo8F,QAAQ,GAAG,CAAC;;IAEjB;AACJ;AACA;AACA;IACIp8F,KAAA,CAAKq8F,WAAW,GAAGnsE,UAAU,CAAChS,QAAQ,CAAC,CAAC,GACpCgS,UAAU,CAACjS,SAAS,CAAC,CAAC,GACtB1c,SAAS;IAEb,IAAMs0F,YAAY,GAAG6F,cAAc,CAACY,kBAAkB,CACpDt8F,KAAA,CAAKi8F,iBACP,CAAC;IACD,IAAMM,eAAe,GAAGv8F,KAAA,CAAKg8F,eAAe,CAAC/9E,SAAS,CAAC,CAAC;IACxD,IAAI65E,eAAe,GAAG93F,KAAA,CAAK+7F,eAAe,CAAC99E,SAAS,CAAC,CAAC;IAEtD,IAAMu+E,mBAAmB,GAAGD,eAAe,GACvC,IAAA7/E,uBAAe,EAACm5E,YAAY,EAAE0G,eAAe,CAAC,GAC9C1G,YAAY;IAEhB,IAAI,IAAA96E,eAAO,EAACyhF,mBAAmB,CAAC,KAAK,CAAC,EAAE;MACtC;MACA;MACAx8F,KAAA,CAAK+R,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;MAC5B,OAAAxP,0BAAA,CAAAiB,KAAA;IACF;IAEA,IAAMy8F,gBAAgB,GAAGvsE,UAAU,CAACjS,SAAS,CAAC,CAAC;IAC/C,IAAIw+E,gBAAgB,EAAE;MACpB,IAAI,CAAC3E,eAAe,EAAE;QACpBA,eAAe,GAAG2E,gBAAgB;MACpC,CAAC,MAAM;QACL3E,eAAe,GAAG,IAAAp7E,uBAAe,EAACo7E,eAAe,EAAE2E,gBAAgB,CAAC;MACtE;IACF;IAEA,IAAMr1D,gBAAgB,GAAGs0D,cAAc,CAACh2D,aAAa,CACnD1lC,KAAA,CAAKi8F,iBAAiB,CAAC,CAAC,CAC1B,CAAC;IAED,IAAM90D,gBAAgB,GAAG,IAAAyuD,uCAA+B,EACtD1lE,UAAU,EACVulE,UAAU,EACV+G,mBAAmB,EACnBp1D,gBACF,CAAC;IAED,IAAI,CAAC7oB,QAAQ,CAAC4oB,gBAAgB,CAAC,IAAIA,gBAAgB,IAAI,CAAC,EAAE;MACxD;MACA;MACAnnC,KAAA,CAAK+R,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;MAC5B,OAAAxP,0BAAA,CAAAiB,KAAA;IACF;IAEA,IAAM08F,sBAAsB,GAC1B3E,cAAc,KAAKx2F,SAAS,GAAGw2F,cAAc,GAAGsD,uBAAe;;IAEjE;AACJ;AACA;AACA;IACIr7F,KAAA,CAAK28F,cAAc,GAAG,IAAI9E,sBAAa,CACrC3nE,UAAU,EACVulE,UAAU,EACV+G,mBAAmB,EACnB1E,eAAe,EACf3wD,gBAAgB,GAAGu1D,sBAAsB,EACzCt1D,gBACF,CAAC;IAED,IAAIpnC,KAAA,CAAK28F,cAAc,CAAC3F,YAAY,CAAC,CAAC,CAACx+F,MAAM,KAAK,CAAC,EAAE;MACnD;MACAwH,KAAA,CAAK+R,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;MAC5B,OAAAxP,0BAAA,CAAAiB,KAAA;IACF;IAEAA,KAAA,CAAKo8F,QAAQ,GAAGX,cAAc,CAACmB,iBAAiB,CAACz1D,gBAAgB,CAAC;IAClE,IAAIzU,YAAY,GAAG1yB,KAAA,CAAK28F,cAAc,CAACvB,qBAAqB,CAAC,CAAC;IAE9D,IAAItD,eAAe,EAAE;MACnB,IAAI5nE,UAAU,CAAChS,QAAQ,CAAC,CAAC,EAAE;QACzBwU,YAAY,CAAC,CAAC,CAAC,GAAG,IAAAlf,WAAK,EACrBkf,YAAY,CAAC,CAAC,CAAC,EACfolE,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CACnB,CAAC;QACDplE,YAAY,CAAC,CAAC,CAAC,GAAG,IAAAlf,WAAK,EACrBkf,YAAY,CAAC,CAAC,CAAC,EACfolE,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CACnB,CAAC;MACH,CAAC,MAAM;QACLplE,YAAY,GAAG,IAAAhW,uBAAe,EAACgW,YAAY,EAAEolE,eAAe,CAAC;MAC/D;IACF;IAEA,IAAI,CAAC,IAAA/8E,eAAO,EAAC2X,YAAY,CAAC,EAAE;MAC1B1yB,KAAA,CAAK+R,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;IAC9B,CAAC,MAAM;MACL,IAAI4P,UAAU,GAAG,CAAC;MAClB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAI8R,UAAU,CAAChS,QAAQ,CAAC,CAAC,EAAE;QACzBC,UAAU,GAAG,IAAAlD,gBAAQ,EAACwhF,gBAAgB,CAAC;QACvCr+E,UAAU,GAAG7Q,IAAI,CAACoI,KAAK,CACrB,CAAC+c,YAAY,CAAC,CAAC,CAAC,GAAG+pE,gBAAgB,CAAC,CAAC,CAAC,IAAIt+E,UAC5C,CAAC;MACH;MAEA,IAAM0+E,aAAa,GAAG,IAAAx+E,qBAAa,EACjCqU,YAAY,CAAC92B,KAAK,CAAC,CAAC,EACpBs0B,UAAU,EACV,IACF,CAAC;MACD2sE,aAAa,CAACr2F,OAAO,CAAC,UAACyP,MAAM,EAAK;QAChC,IAAM6mF,WAAW,GAAGrB,cAAc,CAACsB,yBAAyB,CAC1D9mF,MAAM,EACNjW,KAAA,CAAKo8F,QACP,CAAC;QAED,KAAK,IAAIY,IAAI,GAAGF,WAAW,CAAClmF,IAAI,EAAEomF,IAAI,IAAIF,WAAW,CAACjmF,IAAI,EAAEmmF,IAAI,EAAE,EAAE;UAClE,KAAK,IAAIC,IAAI,GAAGH,WAAW,CAAChmF,IAAI,EAAEmmF,IAAI,IAAIH,WAAW,CAAC/lF,IAAI,EAAEkmF,IAAI,EAAE,EAAE;YAClE,IAAMprF,IAAI,GAAG+pF,eAAe,CAAC57F,KAAA,CAAKo8F,QAAQ,EAAEY,IAAI,EAAEC,IAAI,EAAE10B,UAAU,CAAC;YACnE,IAAI12D,IAAI,EAAE;cACR,IAAMkI,MAAM,GAAGqE,UAAU,GAAGD,UAAU;cACtCne,KAAA,CAAKk8F,YAAY,CAACx7F,IAAI,CAAC;gBAACmR,IAAI,EAAJA,IAAI;gBAAEkI,MAAM,EAANA;cAAM,CAAC,CAAC;YACxC;UACF;QACF;QACA,EAAEqE,UAAU;MACd,CAAC,CAAC;MAEF,IAAIpe,KAAA,CAAKk8F,YAAY,CAAC1jG,MAAM,KAAK,CAAC,EAAE;QAClCwH,KAAA,CAAK+R,KAAK,GAAGE,kBAAS,CAAC1D,KAAK;MAC9B;IACF;IAAC,OAAAvO,KAAA;EACH;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA67F,UAAA,EAAA7H,KAAA;EAAA,OAAAj8F,YAAA,CAAA8jG,UAAA;IAAA7jG,GAAA;IAAAC,KAAA,EAIA,SAAAixE,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACgD,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAAl0E,GAAA;IAAAC,KAAA,EAGA,SAAAslG,UAAUA,CAAA,EAAG;MAAA,IAAAh5F,MAAA;MACX,IAAM6xF,OAAO,GAAG,EAAE;MAClB,IAAI,CAACmG,YAAY,CAAC11F,OAAO,CAAC,UAACnB,MAAM,EAAK;QACpC,IAAMwM,IAAI,GAAGxM,MAAM,CAACwM,IAAI;QACxB,IAAIA,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAAC,CAAC,IAAIC,kBAAS,CAAC3D,MAAM,EAAE;UAAA,IAAA6uF,kBAAA;UAC/C,IAAMlnF,MAAM,GAAG/R,MAAI,CAAC63F,eAAe,CAACO,kBAAkB,CAACzqF,IAAI,CAACugF,SAAS,CAAC;UACtEn8E,MAAM,CAAC,CAAC,CAAC,IAAI5Q,MAAM,CAAC0U,MAAM;UAC1B9D,MAAM,CAAC,CAAC,CAAC,IAAI5Q,MAAM,CAAC0U,MAAM;UAC1B,IAAMo8E,UAAU,IAAAgH,kBAAA,GAAGj5F,MAAI,CAACm4F,WAAW,cAAAc,kBAAA,uBAAhBA,kBAAA,CAAkBvhG,KAAK,CAAC,CAAC;UAC5C,IAAIu6F,UAAU,EAAE;YACdA,UAAU,CAAC,CAAC,CAAC,IAAI9wF,MAAM,CAAC0U,MAAM;YAC9Bo8E,UAAU,CAAC,CAAC,CAAC,IAAI9wF,MAAM,CAAC0U,MAAM;UAChC;UACAg8E,OAAO,CAACr1F,IAAI,CAAC;YACXuV,MAAM,EAAEA,MAAM;YACdkgF,UAAU,EAAEA,UAAU;YACtBntB,KAAK,EAAEn3D,IAAI,CAACg3D,QAAQ,CAAC;UACvB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI,CAACqzB,YAAY,CAAC1jG,MAAM,GAAG,CAAC;MAE5B,IAAIu9F,OAAO,CAACv9F,MAAM,KAAK,CAAC,EAAE;QACxB,IAAI,CAACuZ,KAAK,GAAGE,kBAAS,CAAC1b,KAAK;MAC9B,CAAC,MAAM;QACL,IAAMmrC,CAAC,GAAG,IAAI,CAACu6D,iBAAiB,CAAC,CAAC,CAAC;QACnC,IAAM5lF,IAAI,GAAG,IAAI,CAAC2lF,eAAe,CAACoB,WAAW,CAAC17D,CAAC,CAAC;QAChD,IAAM9jB,KAAK,GAAG,OAAOvH,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACvD,IAAMwH,MAAM,GAAG,OAAOxH,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACxD,IAAM+wB,gBAAgB,GAAG,IAAI,CAAC40D,eAAe,CAACt2D,aAAa,CAAChE,CAAC,CAAC;QAC9D,IAAMyF,gBAAgB,GAAG,IAAI,CAAC40D,eAAe,CAACr2D,aAAa,CACzD,IAAI,CAAC02D,QACP,CAAC;QAED,IAAMvG,YAAY,GAAG,IAAI,CAACmG,eAAe,CAACM,kBAAkB,CAC1D,IAAI,CAACL,iBACP,CAAC;QAED,IAAI,CAACpwB,OAAO,GAAG,IAAAwxB,cAAiB,EAC9Bz/E,KAAK,EACLC,MAAM,EACN,IAAI,CAAC4qD,WAAW,EAChBthC,gBAAgB,EAChB,IAAI,CAAC40D,eAAe,CAAC99E,SAAS,CAAC,CAAC,EAChCmpB,gBAAgB,EAChByuD,YAAY,EACZ,IAAI,CAAC8G,cAAc,EACnB5G,OAAO,EACP,IAAI,CAAC+F,OAAO,EACZ,IAAI,CAACD,YAAY,EACjB,IAAI,CAACrJ,WACP,CAAC;QAED,IAAI,CAACzgF,KAAK,GAAGE,kBAAS,CAAC3D,MAAM;MAC/B;MACA,IAAI,CAAC1L,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAA2a,IAAIA,CAAA,EAAG;MAAA,IAAA28C,MAAA;MACL,IAAI,IAAI,CAACn9C,KAAK,IAAIE,kBAAS,CAAC7D,IAAI,EAAE;QAChC,IAAI,CAAC2D,KAAK,GAAGE,kBAAS,CAAC5D,OAAO;QAC9B,IAAI,CAACzL,OAAO,CAAC,CAAC;QAEd,IAAI06F,UAAU,GAAG,CAAC;QAElB,IAAI,CAACnB,oBAAoB,GAAG,EAAE;QAC9B,IAAI,CAACD,YAAY,CAAC11F,OAAO,CAAC,UAAAkgE,IAAA,EAAY;UAAA,IAAV70D,IAAI,GAAA60D,IAAA,CAAJ70D,IAAI;UAC9B,IAAME,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;UAC7B,IAAID,KAAK,IAAIE,kBAAS,CAAC7D,IAAI,IAAI2D,KAAK,IAAIE,kBAAS,CAAC5D,OAAO,EAAE;YACzDivF,UAAU,EAAE;YAEZ,IAAMC,eAAe,GAAG,IAAA77F,cAAM,EAACmQ,IAAI,EAAEhP,kBAAS,CAACvM,MAAM,EAAE,UAACkH,CAAC,EAAK;cAC5D,IAAMuU,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;cAC7B,IACED,KAAK,IAAIE,kBAAS,CAAC3D,MAAM,IACzByD,KAAK,IAAIE,kBAAS,CAAC1b,KAAK,IACxBwb,KAAK,IAAIE,kBAAS,CAAC1D,KAAK,EACxB;gBACA,IAAAvM,qBAAa,EAACu7F,eAAe,CAAC;gBAC9BD,UAAU,EAAE;gBACZ,IAAIA,UAAU,KAAK,CAAC,EAAE;kBACpBpuC,MAAI,CAACsuC,gBAAgB,CAAC,CAAC;kBACvBtuC,MAAI,CAACguC,UAAU,CAAC,CAAC;gBACnB;cACF;YACF,CAAC,CAAC;YACFhuC,MAAI,CAACitC,oBAAoB,CAACz7F,IAAI,CAAC68F,eAAe,CAAC;UACjD;QACF,CAAC,CAAC;QAEF,IAAID,UAAU,KAAK,CAAC,EAAE;UACpB7wF,UAAU,CAAC,IAAI,CAACywF,UAAU,CAACz9F,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC,MAAM;UACL,IAAI,CAACy8F,YAAY,CAAC11F,OAAO,CAAC,UAAAi3F,KAAA,EAAkBvkG,CAAC,EAAEJ,GAAG,EAAE;YAAA,IAAf+Y,IAAI,GAAA4rF,KAAA,CAAJ5rF,IAAI;YACvC,IAAME,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;YAC7B,IAAID,KAAK,IAAIE,kBAAS,CAAC7D,IAAI,EAAE;cAC3ByD,IAAI,CAACU,IAAI,CAAC,CAAC;YACb;UACF,CAAC,CAAC;QACJ;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAA5a,GAAA;IAAAC,KAAA,EAGA,SAAA4lG,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACrB,oBAAoB,CAAC31F,OAAO,CAACxE,qBAAa,CAAC;MAChD,IAAI,CAACm6F,oBAAoB,GAAG,IAAI;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAAxkG,GAAA;IAAAC,KAAA,EAIA,SAAA66F,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAAC5mB,OAAO,EAAE;QAChB,IAAAr7B,kBAAa,EAAC,IAAI,CAACq7B,OAAO,CAACx7B,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5CN,kBAAU,CAACrvC,IAAI,CAAC,IAAI,CAACmrE,OAAO,CAAC;QAC7B,IAAI,CAACA,OAAO,GAAG,IAAI;MACrB;MACAtkE,aAAA,CAAAi0F,UAAA;IACF;EAAC;AAAA,EA5WsBrJ,cAAI;AAAA,IAAAn8F,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA+WdslG,UAAU;;;;;;;;AC9YzB,IAAAz7F,WAAA,GAAA3C,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KALrC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMw/F,QAAQ;EACZ;AACF;AACA;EACE,SAAAA,SAAYC,aAAa,EAAE;IAAAnmG,eAAA,OAAAkmG,QAAA;IACzB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAGA,aAAa,KAAKp8F,SAAS,GAAGo8F,aAAa,GAAG,IAAI;;IAEvE;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;EAAC,OAAArmG,YAAA,CAAAgmG,QAAA;IAAA/lG,GAAA;IAAAC,KAAA,EAED,SAAAomG,YAAYA,CAAA,EAAG;MACb,IAAMC,KAAK,GAAG,IAAI,CAAC13F,GAAG,CAAC,CAAC;MACxB,IAAI03F,KAAK,YAAY1mG,mBAAU,EAAE;QAC/B0mG,KAAK,CAACpmG,OAAO,CAAC,CAAC;MACjB;IACF;;IAEA;AACF;AACA;EAFE;IAAAF,GAAA;IAAAC,KAAA,EAGA,SAAA4yE,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACmzB,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC9tF,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC8tF,aAAa;IACvE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhmG,GAAA;IAAAC,KAAA,EAKA,SAAAsmG,WAAWA,CAACC,IAAI,EAAE;MAChB,OAAO,IAAI,CAAC3zB,cAAc,CAAC,CAAC,EAAE;QAC5B,IAAI,CAACwzB,YAAY,CAAC,CAAC;MACrB;IACF;;IAEA;AACF;AACA;EAFE;IAAArmG,GAAA;IAAAC,KAAA,EAGA,SAAA4E,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACshG,OAAO,EAAE;QACnB,IAAI,CAACE,YAAY,CAAC,CAAC;MACrB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAArmG,GAAA;IAAAC,KAAA,EAIA,SAAAwmG,WAAWA,CAACzmG,GAAG,EAAE;MACf,OAAO,IAAI,CAACkmG,QAAQ,CAACv5F,cAAc,CAAC3M,GAAG,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAA4O,OAAOA,CAACC,CAAC,EAAE;MACT,IAAIw3F,KAAK,GAAG,IAAI,CAACH,OAAO;MACxB,OAAOG,KAAK,EAAE;QACZx3F,CAAC,CAACw3F,KAAK,CAACI,MAAM,EAAEJ,KAAK,CAACK,IAAI,EAAE,IAAI,CAAC;QACjCL,KAAK,GAAGA,KAAK,CAACM,KAAK;MACrB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5mG,GAAA;IAAAC,KAAA,EAKA,SAAAyM,GAAGA,CAAC1M,GAAG,EAAEqO,OAAO,EAAE;MAChB,IAAMi4F,KAAK,GAAG,IAAI,CAACJ,QAAQ,CAAClmG,GAAG,CAAC;MAChC,IAAA6W,eAAM,EACJyvF,KAAK,KAAK18F,SAAS,EACnB,iEACF,CAAC;MACD,IAAI08F,KAAK,KAAK,IAAI,CAACF,OAAO,EAAE;QAC1B,OAAOE,KAAK,CAACI,MAAM;MACrB;MACA,IAAIJ,KAAK,KAAK,IAAI,CAACH,OAAO,EAAE;QAC1B,IAAI,CAACA,OAAO,GAAG,oBAAsB,IAAI,CAACA,OAAO,CAACS,KAAM;QACxD,IAAI,CAACT,OAAO,CAACU,KAAK,GAAG,IAAI;MAC3B,CAAC,MAAM;QACLP,KAAK,CAACM,KAAK,CAACC,KAAK,GAAGP,KAAK,CAACO,KAAK;QAC/BP,KAAK,CAACO,KAAK,CAACD,KAAK,GAAGN,KAAK,CAACM,KAAK;MACjC;MACAN,KAAK,CAACM,KAAK,GAAG,IAAI;MAClBN,KAAK,CAACO,KAAK,GAAG,IAAI,CAACT,OAAO;MAC1B,IAAI,CAACA,OAAO,CAACQ,KAAK,GAAGN,KAAK;MAC1B,IAAI,CAACF,OAAO,GAAGE,KAAK;MACpB,OAAOA,KAAK,CAACI,MAAM;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1mG,GAAA;IAAAC,KAAA,EAKA,SAAAiC,MAAMA,CAAClC,GAAG,EAAE;MACV,IAAMsmG,KAAK,GAAG,IAAI,CAACJ,QAAQ,CAAClmG,GAAG,CAAC;MAChC,IAAA6W,eAAM,EACJyvF,KAAK,KAAK18F,SAAS,EACnB,iEACF,CAAC;MACD,IAAI08F,KAAK,KAAK,IAAI,CAACF,OAAO,EAAE;QAC1B,IAAI,CAACA,OAAO,GAAG,oBAAsBE,KAAK,CAACO,KAAM;QACjD,IAAI,IAAI,CAACT,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACQ,KAAK,GAAG,IAAI;QAC3B;MACF,CAAC,MAAM,IAAIN,KAAK,KAAK,IAAI,CAACH,OAAO,EAAE;QACjC,IAAI,CAACA,OAAO,GAAG,oBAAsBG,KAAK,CAACM,KAAM;QACjD,IAAI,IAAI,CAACT,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACU,KAAK,GAAG,IAAI;QAC3B;MACF,CAAC,MAAM;QACLP,KAAK,CAACM,KAAK,CAACC,KAAK,GAAGP,KAAK,CAACO,KAAK;QAC/BP,KAAK,CAACO,KAAK,CAACD,KAAK,GAAGN,KAAK,CAACM,KAAK;MACjC;MACA,OAAO,IAAI,CAACV,QAAQ,CAAClmG,GAAG,CAAC;MACzB,EAAE,IAAI,CAACimG,MAAM;MACb,OAAOK,KAAK,CAACI,MAAM;IACrB;;IAEA;AACF;AACA;EAFE;IAAA1mG,GAAA;IAAAC,KAAA,EAGA,SAAAiY,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAC+tF,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAjmG,GAAA;IAAAC,KAAA,EAGA,SAAA2M,OAAOA,CAAA,EAAG;MACR,IAAM9C,IAAI,GAAG,IAAI9H,KAAK,CAAC,IAAI,CAACikG,MAAM,CAAC;MACnC,IAAI1kG,CAAC,GAAG,CAAC;MACT,IAAI+kG,KAAK;MACT,KAAKA,KAAK,GAAG,IAAI,CAACF,OAAO,EAAEE,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACO,KAAK,EAAE;QACrD/8F,IAAI,CAACvI,CAAC,EAAE,CAAC,GAAG+kG,KAAK,CAACK,IAAI;MACxB;MACA,OAAO78F,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAA9J,GAAA;IAAAC,KAAA,EAGA,SAAA6mG,SAASA,CAAA,EAAG;MACV,IAAMx6F,MAAM,GAAG,IAAItK,KAAK,CAAC,IAAI,CAACikG,MAAM,CAAC;MACrC,IAAI1kG,CAAC,GAAG,CAAC;MACT,IAAI+kG,KAAK;MACT,KAAKA,KAAK,GAAG,IAAI,CAACF,OAAO,EAAEE,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACO,KAAK,EAAE;QACrDv6F,MAAM,CAAC/K,CAAC,EAAE,CAAC,GAAG+kG,KAAK,CAACI,MAAM;MAC5B;MACA,OAAOp6F,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAAtM,GAAA;IAAAC,KAAA,EAGA,SAAA8mG,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACZ,OAAO,CAACO,MAAM;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA1mG,GAAA;IAAAC,KAAA,EAGA,SAAA+mG,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACb,OAAO,CAACQ,IAAI;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAA3mG,GAAA;IAAAC,KAAA,EAIA,SAAAgnG,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACb,OAAO,CAACO,IAAI;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3mG,GAAA;IAAAC,KAAA,EAKA,SAAAinG,IAAIA,CAAClnG,GAAG,EAAE;MAAA,IAAAmnG,kBAAA;MACR,QAAAA,kBAAA,GAAO,IAAI,CAACjB,QAAQ,CAAClmG,GAAG,CAAC,cAAAmnG,kBAAA,uBAAlBA,kBAAA,CAAoBT,MAAM;IACnC;;IAEA;AACF;AACA;EAFE;IAAA1mG,GAAA;IAAAC,KAAA,EAGA,SAAA2O,GAAGA,CAAA,EAAG;MACJ,IAAM03F,KAAK,GAAG,IAAI,CAACH,OAAO;MAC1B,OAAO,IAAI,CAACD,QAAQ,CAACI,KAAK,CAACK,IAAI,CAAC;MAChC,IAAIL,KAAK,CAACM,KAAK,EAAE;QACfN,KAAK,CAACM,KAAK,CAACC,KAAK,GAAG,IAAI;MAC1B;MACA,IAAI,CAACV,OAAO,GAAG,oBAAsBG,KAAK,CAACM,KAAM;MACjD,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE;QACjB,IAAI,CAACC,OAAO,GAAG,IAAI;MACrB;MACA,EAAE,IAAI,CAACH,MAAM;MACb,OAAOK,KAAK,CAACI,MAAM;IACrB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1mG,GAAA;IAAAC,KAAA,EAIA,SAAAmpB,OAAOA,CAACppB,GAAG,EAAEC,KAAK,EAAE;MAClB,IAAI,CAACyM,GAAG,CAAC1M,GAAG,CAAC,CAAC,CAAC;MACf,IAAI,CAACkmG,QAAQ,CAAClmG,GAAG,CAAC,CAAC0mG,MAAM,GAAGzmG,KAAK;IACnC;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAC,KAAA,EAIA,SAAAsN,GAAGA,CAACvN,GAAG,EAAEC,KAAK,EAAE;MACd,IAAA4W,eAAM,EACJ,EAAE7W,GAAG,IAAI,IAAI,CAACkmG,QAAQ,CAAC,EACvB,qDACF,CAAC;MACD,IAAMI,KAAK,GAAG;QACZK,IAAI,EAAE3mG,GAAG;QACT4mG,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,IAAI,CAACT,OAAO;QACnBM,MAAM,EAAEzmG;MACV,CAAC;MACD,IAAI,CAAC,IAAI,CAACmmG,OAAO,EAAE;QACjB,IAAI,CAACD,OAAO,GAAGG,KAAK;MACtB,CAAC,MAAM;QACL,IAAI,CAACF,OAAO,CAACQ,KAAK,GAAGN,KAAK;MAC5B;MACA,IAAI,CAACF,OAAO,GAAGE,KAAK;MACpB,IAAI,CAACJ,QAAQ,CAAClmG,GAAG,CAAC,GAAGsmG,KAAK;MAC1B,EAAE,IAAI,CAACL,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjmG,GAAA;IAAAC,KAAA,EAKA,SAAAszE,OAAOA,CAAC70D,IAAI,EAAE;MACZ,IAAI,CAACsnF,aAAa,GAAGtnF,IAAI;IAC3B;EAAC;AAAA;AAAA,IAAArgB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYwnG,QAAQ;;;;;;;;;;;;;;;;;;;;;AC5SvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS7kF,cAAcA,CAAC6oB,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAEu+E,SAAS,EAAE;EACjD,IAAIA,SAAS,KAAK7wF,SAAS,EAAE;IAC3B6wF,SAAS,CAAC,CAAC,CAAC,GAAG1wD,CAAC;IAChB0wD,SAAS,CAAC,CAAC,CAAC,GAAGx+E,CAAC;IAChBw+E,SAAS,CAAC,CAAC,CAAC,GAAGv+E,CAAC;IAChB,OAAOu+E,SAAS;EAClB;EACA,OAAO,CAAC1wD,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkrF,SAASA,CAACr9D,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE;EACjC,OAAO6tB,CAAC,GAAG,GAAG,GAAG9tB,CAAC,GAAG,GAAG,GAAGC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASvC,MAAMA,CAAC8gF,SAAS,EAAE;EAChC,OAAO2M,SAAS,CAAC3M,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS4M,qBAAqBA,CAAC9sF,OAAO,EAAE;EAC7C,IAAA+sF,qBAAA,GAAkB/sF,OAAO,CACtBg0D,SAAS,CAACh0D,OAAO,CAACgtF,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEhtF,OAAO,CAAC1Z,MAAM,CAAC,CACvD0mB,KAAK,CAAC,GAAG,CAAC,CACV9X,GAAG,CAACxI,MAAM,CAAC;IAAAugG,sBAAA,GAAA1nF,cAAA,CAAAwnF,qBAAA;IAHPv9D,CAAC,GAAAy9D,sBAAA;IAAEvrF,CAAC,GAAAurF,sBAAA;IAAEtrF,CAAC,GAAAsrF,sBAAA;EAId,OAAOJ,SAAS,CAACr9D,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASurF,OAAOA,CAACznG,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACunB,KAAK,CAAC,GAAG,CAAC,CAAC9X,GAAG,CAACxI,MAAM,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACO,SAASygG,IAAIA,CAACjN,SAAS,EAAE;EAC9B,OAAOkN,OAAO,CAAClN,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkN,OAAOA,CAAC59D,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE;EAC/B,OAAO,CAACD,CAAC,IAAI8tB,CAAC,IAAI7tB,CAAC;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS0rF,gBAAgBA,CAACnN,SAAS,EAAE9rE,QAAQ,EAAE;EACpD,IAAMob,CAAC,GAAG0wD,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMx+E,CAAC,GAAGw+E,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMv+E,CAAC,GAAGu+E,SAAS,CAAC,CAAC,CAAC;EAEtB,IAAI9rE,QAAQ,CAAC0jB,UAAU,CAAC,CAAC,GAAGtI,CAAC,IAAIA,CAAC,GAAGpb,QAAQ,CAACsjB,UAAU,CAAC,CAAC,EAAE;IAC1D,OAAO,KAAK;EACd;EACA,IAAMkrD,SAAS,GAAGxuE,QAAQ,CAACk5E,gBAAgB,CAAC99D,CAAC,CAAC;EAC9C,IAAI,CAACozD,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EACA,OAAOA,SAAS,CAAC57E,UAAU,CAACtF,CAAC,EAAEC,CAAC,CAAC;AACnC;;;;;;;;ACrGA,IAAA0/B,IAAA,GAAAt4C,OAAA;AAAsD,SAAAyC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAwgE,mBAAAlgE,CAAA,WAAAmgE,kBAAA,CAAAngE,CAAA,KAAAogE,gBAAA,CAAApgE,CAAA,KAAA2Z,2BAAA,CAAA3Z,CAAA,KAAAqgE,kBAAA;AAAA,SAAAA,mBAAA,cAAAvgE,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAA2lE,iBAAApgE,CAAA,8BAAAL,MAAA,YAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,aAAAI,CAAA,uBAAAtE,KAAA,CAAAse,IAAA,CAAAha,CAAA;AAAA,SAAAmgE,mBAAAngE,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAA6Z,iBAAA,CAAA7Z,CAAA;AAAA,SAAA6Z,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAAzB,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAA+gE,gBAAA/gE,CAAA,EAAAS,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAO,cAAA,CAAAP,CAAA,MAAAT,CAAA,GAAAc,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAS,CAAA,IAAArG,KAAA,EAAAsG,CAAA,EAAAC,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAb,CAAA,CAAAS,CAAA,IAAAC,CAAA,EAAAV,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAJtD;AACA;AACA;AAIA;AAEA;AACA;AACA;AAFA,IAGMuhG,aAAa;EACjB,SAAAA,cAAA,EAAc;IAAA,IAAAz/F,KAAA;IAAAxI,eAAA,OAAAioG,aAAA;IA+Cd;AACF;AACA;AACA;AACA;IAJElhC,eAAA,0BAKkB,YAAa;MAAA,SAAA0B,IAAA,GAAAnkE,SAAA,CAAAtD,MAAA,EAAT8tC,IAAI,OAAA3sC,KAAA,CAAAsmE,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;QAAJ55B,IAAI,CAAA45B,IAAA,IAAApkE,SAAA,CAAAokE,IAAA;MAAA;MACxBlgE,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,CAAC14E,IAAI,CAAC4lC,IAAI,CAAC;MACzD,OAAOtmC,KAAI;IACb,CAAC;IAtDC;AACJ;AACA;AACA;IACI,IAAI,CAAC0/F,aAAa,GAAG,EAAE;IACvB;AACJ;AACA;IACI,IAAI,CAAC30C,MAAM,GAAG,CAAC;IACf;AACJ;AACA;AACA;IACI,IAAI,CAACquB,OAAO,GAAG,CAAC;;IAEhB;AACJ;AACA;AACA;IACI,IAAI,CAACumB,QAAQ,GAAG;IACd,IAAIC,KAAK,CAAC,IAAArvD,6BAAwB,EAAC,CAAC,EAAE;MACpClsC,GAAG,EAAE,SAALA,GAAGA,CAAGtL,MAAM,EAAE2D,QAAQ,EAAK;QACzB,IACE,QAAQ,gBAAkB,IAAA6zC,6BAAwB,EAAC,CAAC,CAAE7zC,QAAQ,CAAC,CAAC,KAChE,UAAU,EACV;UACA;UACA,OAAO6E,SAAS;QAClB;QACA,IAAI,CAACvB,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,EAAE;UACnDp5E,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,GAAG,EAAE;QACrD;QACAp5E,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,CAAC14E,IAAI,CAAChE,QAAQ,CAAC;QAC7D,OAAOsD,KAAI,CAAC6/F,eAAe;MAC7B,CAAC;MACD36F,GAAG,EAAE,SAALA,GAAGA,CAAGnM,MAAM,EAAE2D,QAAQ,EAAE9E,KAAK,EAAK;QAChC,IAAI,CAACoI,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,EAAE;UACnDp5E,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,GAAG,EAAE;QACrD;QACAp5E,KAAI,CAAC0/F,aAAa,CAAC1/F,KAAI,CAAC+qD,MAAM,GAAG/qD,KAAI,CAACo5E,OAAO,CAAC,CAAC14E,IAAI,CAAChE,QAAQ,EAAE9E,KAAK,CAAC;QACpE,OAAO,IAAI;MACb;IACF,CAAC,CACF;EACH;EAAC,OAAAF,YAAA,CAAA+nG,aAAA;IAAA9nG,GAAA;IAAAC,KAAA;IAYD;AACF;AACA;AACA;IACE,SAAAkoG,YAAYA,CAACntD,MAAM,EAAE;MACnB,IAAI,CAAC+sD,aAAa,CAAC,IAAI,CAAC30C,MAAM,GAAG,IAAI,CAACquB,OAAO,CAAC,CAAC14E,IAAI,CAACiyC,MAAM,CAAC;IAC7D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAh7C,GAAA;IAAAC,KAAA,EAOA,SAAAy4C,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACsvD,QAAQ;IACtB;;IAEA;AACF;AACA;EAFE;IAAAhoG,GAAA;IAAAC,KAAA,EAGA,SAAAmoG,IAAIA,CAACtvD,OAAO,EAAE;MACZ,IAAI,CAACivD,aAAa,CAACl5F,OAAO,CAAC,UAACw5F,mBAAmB,EAAK;QAClD,KAAK,IAAI9mG,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG8+F,mBAAmB,CAACxnG,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC5D,IAAMwD,QAAQ,GAAGsjG,mBAAmB,CAAC9mG,CAAC,CAAC;UACvC,IAAI,OAAOwD,QAAQ,KAAK,UAAU,EAAE;YAClCA,QAAQ,CAAC+zC,OAAO,CAAC;YACjB;UACF;UACA,IAAMwvD,kBAAkB,GAAGD,mBAAmB,CAAC,EAAE9mG,CAAC,CAAC;UACnD,IAAI,QAAQ,gBAAkBu3C,OAAO,CAAE/zC,QAAQ,CAAC,CAAC,KAAK,UAAU,EAAE;YAChE,gBAAkB+zC,OAAO,CAAE/zC,QAAQ,CAAC,CAAAV,KAAA,CAAlBy0C,OAAO,EAAA0tB,kBAAA,CAAe8hC,kBAAkB,EAAC;UAC7D,CAAC,MAAM;YACL,IAAI,OAAOA,kBAAkB,KAAK,UAAU,EAAE;cAC5C,gBAAkBxvD,OAAO,CAAE/zC,QAAQ,CAAC,GAAGujG,kBAAkB,CAACxvD,OAAO,CAAC;cAClE;YACF;YACA;YAAkBA,OAAO,CAAE/zC,QAAQ,CAAC,GAAGujG,kBAAkB;UAC3D;QACF;MACF,CAAC,CAAC;IACJ;EAAC;IAAAtoG,GAAA;IAAAC,KAAA,EAED,SAAA4E,KAAKA,CAAA,EAAG;MACN,IAAI,CAACkjG,aAAa,CAAClnG,MAAM,GAAG,CAAC;MAC7B,IAAI,CAACuyD,MAAM,GAAG,CAAC;MACf,IAAI,CAACquB,OAAO,GAAG,CAAC;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAAzhF,GAAA;IAAAC,KAAA,EAIA,SAAAmiB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACq/D,OAAO,GAAG,IAAI,CAACsmB,aAAa,CAAClnG,MAAM;MACxC,IAAI,CAACuyD,MAAM,GAAG,CAAC;IACjB;EAAC;AAAA;AAAA,IAAA/0D,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYupG,aAAa;;;;;;;;AC9H5B,IAAAp3B,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAAyI,YAAA,GAAAtG,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAoC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANpC;AACA;AACA;AAMA,IAAM0iG,YAAY,GAAG,CAAC;;AAEtB;AACA;AACA;AAFA,IAGMC,aAAa,0BAAAn8F,WAAA;EACjB;AACF;AACA;EACE,SAAAm8F,cAAYnnD,KAAK,EAAE;IAAA,IAAAh5C,KAAA;IAAAxI,eAAA,OAAA2oG,aAAA;IACjBngG,KAAA,GAAAnB,UAAA,OAAAshG,aAAA;;IAEA;AACJ;AACA;AACA;IACIngG,KAAA,CAAKgrE,KAAK,GAAG,IAAI;;IAEjB;IACAhrE,KAAA,CAAKogG,uBAAuB,GAAGpgG,KAAA,CAAKqgG,kBAAkB,CAAC5gG,IAAI,CAAAO,KAAK,CAAC;;IAEjE;AACJ;AACA;AACA;IACIA,KAAA,CAAKsgG,MAAM,GAAGtnD,KAAK;;IAEnB;AACJ;AACA;AACA;IACIh5C,KAAA,CAAKugG,UAAU,GAAG,IAAI5mG,KAAK,CAAC,CAAC;;IAE7B;AACJ;AACA;AACA;IACIqG,KAAA,CAAKkgG,YAAY,GAAGA,YAAY;IAAC,OAAAlgG,KAAA;EACnC;;EAEA;AACF;AACA;EAFEL,SAAA,CAAAwgG,aAAA,EAAAn8F,WAAA;EAAA,OAAAtM,YAAA,CAAAyoG,aAAA;IAAAxoG,GAAA;IAAAC,KAAA,EAGA,SAAA4oG,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACD,UAAU;IACxB;;IAEA;AACF;AACA;EAFE;IAAA5oG,GAAA;IAAAC,KAAA,EAGA,SAAA6oG,eAAeA,CAAC9oG,GAAG,EAAE;MACnB,IAAI,CAAC4oG,UAAU,CAACG,OAAO,CAAC/oG,GAAG,CAAC;MAC5B,IAAI,IAAI,CAAC4oG,UAAU,CAAC/nG,MAAM,GAAG,IAAI,CAAC0nG,YAAY,EAAE;QAC9C,IAAI,CAACK,UAAU,CAAC/nG,MAAM,GAAG,IAAI,CAAC0nG,YAAY;MAC5C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAvoG,GAAA;IAAAC,KAAA,EAMA,SAAAm3D,WAAWA,CAAC3mD,KAAK,EAAE;MACjB,OAAO,IAAAjF,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAxL,GAAA;IAAAC,KAAA,EAIA,SAAAo3D,OAAOA,CAAC5mD,KAAK,EAAE;MACb,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzQ,GAAA;IAAAC,KAAA,EAMA,SAAAg4D,YAAYA,CAACvoD,UAAU,EAAE;MACvB,OAAO,IAAAlE,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAxL,GAAA;IAAAC,KAAA,EAOA,SAAAi4D,WAAWA,CAACxoD,UAAU,EAAEtO,MAAM,EAAE;MAC9B,OAAO,IAAAoK,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAxL,GAAA;IAAAC,KAAA,EAUA,SAAAswF,0BAA0BA,CACxB5/E,UAAU,EACVjB,UAAU,EACV8gF,YAAY,EACZ1tE,QAAQ,EACRkuE,OAAO,EACP;MACA,OAAOpnF,SAAS;IAClB;;IAEA;AACF;AACA;EAFE;IAAA5J,GAAA;IAAAC,KAAA,EAGA,SAAA+oG,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACL,MAAM;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAA3oG,GAAA;IAAAC,KAAA,EAIA,SAAAq5F,kBAAkBA,CAAA,EAAG,CAAC;;IAEtB;AACF;AACA;AACA;AACA;EAJE;IAAAt5F,GAAA;IAAAC,KAAA,EAKA,SAAAyoG,kBAAkBA,CAACz/F,KAAK,EAAE;MACxB,IAAMooE,KAAK,GAAG,4CAA8CpoE,KAAK,CAAC7H,MAAO;MACzE,IACEiwE,KAAK,CAACh3D,QAAQ,CAAC,CAAC,KAAK02D,mBAAU,CAACp6D,MAAM,IACtC06D,KAAK,CAACh3D,QAAQ,CAAC,CAAC,KAAK02D,mBAAU,CAACnyE,KAAK,EACrC;QACA,IAAI,CAACqqG,uBAAuB,CAAC,CAAC;MAChC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjpG,GAAA;IAAAC,KAAA,EAOA,SAAAipG,SAASA,CAAC73B,KAAK,EAAE;MACf,IAAI0C,UAAU,GAAG1C,KAAK,CAACh3D,QAAQ,CAAC,CAAC;MACjC,IAAI05D,UAAU,IAAIhD,mBAAU,CAACp6D,MAAM,IAAIo9D,UAAU,IAAIhD,mBAAU,CAACnyE,KAAK,EAAE;QACrEyyE,KAAK,CAAC3oE,gBAAgB,CAACwC,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAAC8pG,uBAAuB,CAAC;MACxE;MACA,IAAI10B,UAAU,IAAIhD,mBAAU,CAACt6D,IAAI,EAAE;QACjC46D,KAAK,CAACz2D,IAAI,CAAC,CAAC;QACZm5D,UAAU,GAAG1C,KAAK,CAACh3D,QAAQ,CAAC,CAAC;MAC/B;MACA,OAAO05D,UAAU,IAAIhD,mBAAU,CAACp6D,MAAM;IACxC;;IAEA;AACF;AACA;EAFE;IAAA3W,GAAA;IAAAC,KAAA,EAGA,SAAAgpG,uBAAuBA,CAAA,EAAG;MACxB,IAAM5nD,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;MAC7B,IAAI3nD,KAAK,IAAIA,KAAK,CAACwS,UAAU,CAAC,CAAC,IAAIxS,KAAK,CAAC4S,cAAc,CAAC,CAAC,KAAK,OAAO,EAAE;QACrE5S,KAAK,CAACp2C,OAAO,CAAC,CAAC;MACjB;IACF;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAAq4D,cAAcA,CAAC5oD,UAAU,EAAE,CAAC;;IAE5B;AACF;AACA;AACA;EAHE;IAAA1P,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACwoG,MAAM;MAClB/4F,aAAA,CAAA44F,aAAA;IACF;EAAC;AAAA,EApLyB/9F,oBAAU;AAAA,IAAApM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuLvBiqG,aAAa;;;;;;;;ACjM5B,IAAAnlG,MAAA,GAAAC,OAAA;AACA,IAAA8iE,MAAA,GAAA9iE,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAQA,IAAAsC,MAAA,GAAAH,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAA6lG,cAAA,GAAA1jG,sBAAA,CAAAnC,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAOA,IAAAgrF,MAAA,GAAA7oF,sBAAA,CAAAnC,OAAA;AAAwC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAxBxC;AACA;AACA;AAwBA;AACA;AACA;AACO,IAAMuyC,UAAU,GAAA95C,OAAA,CAAA85C,UAAA,GAAG,EAAE;;AAE5B;AACA;AACA;AACA,IAAIgxD,YAAY,GAAG,IAAI;AAEvB,SAASC,kBAAkBA,CAAA,EAAG;EAC5BD,YAAY,GAAG,IAAAjxD,0BAAqB,EAAC,CAAC,EAAE,CAAC,EAAEvuC,SAAS,EAAE;IACpD+qE,kBAAkB,EAAE;EACtB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKM20B,mBAAmB,0BAAAC,cAAA;EACvB;AACF;AACA;EACE,SAAAD,oBAAYjoD,KAAK,EAAE;IAAA,IAAAh5C,KAAA;IAAAxI,eAAA,OAAAypG,mBAAA;IACjBjhG,KAAA,GAAAnB,UAAA,OAAAoiG,mBAAA,GAAMjoD,KAAK;;IAEX;AACJ;AACA;AACA;IACIh5C,KAAA,CAAK2pF,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACI3pF,KAAA,CAAKmhG,kBAAkB;;IAEvB;AACJ;AACA;AACA;AACA;AACA;IACInhG,KAAA,CAAKohG,aAAa,GAAG,IAAA9rE,iBAAe,EAAC,CAAC;;IAEtC;AACJ;AACA;AACA;AACA;AACA;IACIt1B,KAAA,CAAKqhG,cAAc,GAAG,IAAA/rE,iBAAe,EAAC,CAAC;;IAEvC;AACJ;AACA;AACA;AACA;AACA;IACIt1B,KAAA,CAAK4nF,qBAAqB,GAAG,IAAAtyD,iBAAe,EAAC,CAAC;;IAE9C;AACJ;AACA;IACIt1B,KAAA,CAAKywC,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIzwC,KAAA,CAAKshG,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;IACIthG,KAAA,CAAKuhG,eAAe,GAAG,KAAK;;IAE5B;AACJ;AACA;AACA;IACIvhG,KAAA,CAAKqH,UAAU,GAAG,IAAI;IAAC,OAAArH,KAAA;EACzB;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAshG,mBAAA,EAAAC,cAAA;EAAA,OAAAxpG,YAAA,CAAAupG,mBAAA;IAAAtpG,GAAA;IAAAC,KAAA,EAMA,SAAA40E,YAAYA,CAACxD,KAAK,EAAEw4B,GAAG,EAAEC,GAAG,EAAE;MAC5B,IAAI,CAACV,YAAY,EAAE;QACjBC,kBAAkB,CAAC,CAAC;MACtB;MACAD,YAAY,CAACrwD,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAElC,IAAIj3C,IAAI;MACR,IAAI;QACFsnG,YAAY,CAACx0B,SAAS,CAACvD,KAAK,EAAEw4B,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzDhoG,IAAI,GAAGsnG,YAAY,CAACv0B,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC/yE,IAAI;MACnD,CAAC,CAAC,OAAAgR,OAAA,EAAM;QACNs2F,YAAY,GAAG,IAAI;QACnB,OAAO,IAAI;MACb;MACA,OAAOtnG,IAAI;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA9B,GAAA;IAAAC,KAAA,EAIA,SAAAszD,aAAaA,CAAC7jD,UAAU,EAAE;MACxB,IAAM2xC,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;MAC7B,IAAI/1C,UAAU,GAAG5R,KAAK,CAACkS,aAAa,CAAC,CAAC;MACtC,IAAI,OAAON,UAAU,KAAK,UAAU,EAAE;QACpCA,UAAU,GAAGA,UAAU,CAACvjD,UAAU,CAACyL,SAAS,CAACsD,UAAU,CAAC;MAC1D;MACA,OAAOw0C,UAAU,IAAIrpD,SAAS;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5J,GAAA;IAAAC,KAAA,EAMA,SAAA8pG,YAAYA,CAAC3oG,MAAM,EAAEiqB,SAAS,EAAE2+E,eAAe,EAAE;MAC/C,IAAMC,cAAc,GAAG,IAAI,CAACjB,QAAQ,CAAC,CAAC,CAACx1C,YAAY,CAAC,CAAC;MACrD,IAAIw+B,SAAS,EAAEl5C,OAAO;MACtB,IACE13C,MAAM,IACNA,MAAM,CAAC0+C,SAAS,KAAKmqD,cAAc,KAClC,CAACD,eAAe,IACd5oG,MAAM,IACLA,MAAM,CAACy2C,KAAK,CAACmyD,eAAe,IAC5B,IAAA1nG,aAAM,EACJ,IAAAyjE,cAAO,EAAC3kE,MAAM,CAACy2C,KAAK,CAACmyD,eAAe,CAAC,EACrC,IAAAjkC,cAAO,EAACikC,eAAe,CACzB,CAAE,CAAC,EACP;QACA,IAAM1xD,MAAM,GAAGl3C,MAAM,CAAC8oG,iBAAiB;QACvC,IAAI5xD,MAAM,YAAYk5B,iBAAiB,EAAE;UACvC14B,OAAO,GAAGR,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;QACnC;MACF;MACA,IAAII,OAAO,IAAIA,OAAO,CAACR,MAAM,CAACT,KAAK,CAACxsB,SAAS,KAAKA,SAAS,EAAE;QAC3D;QACA,IAAI,CAAC2mE,SAAS,GAAG5wF,MAAM;QACvB,IAAI,CAAC03C,OAAO,GAAGA,OAAO;QACtB,IAAI,CAAC8wD,eAAe,GAAG,IAAI;MAC7B,CAAC,MAAM,IAAI,IAAI,CAACA,eAAe,EAAE;QAC/B;QACA,IAAI,CAAC5X,SAAS,GAAG,IAAI;QACrB,IAAI,CAACl5C,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC8wD,eAAe,GAAG,KAAK;MAC9B,CAAC,MAAM,IAAI,IAAI,CAAC5X,SAAS,EAAE;QACzB,IAAI,CAACA,SAAS,CAACn6C,KAAK,CAACmyD,eAAe,GAAG,IAAI;MAC7C;MACA,IAAI,CAAC,IAAI,CAAChY,SAAS,EAAE;QACnBA,SAAS,GAAGx5C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACzCu5C,SAAS,CAAClyC,SAAS,GAAGmqD,cAAc;QACpC,IAAIpyD,KAAK,GAAGm6C,SAAS,CAACn6C,KAAK;QAC3BA,KAAK,CAAClD,QAAQ,GAAG,UAAU;QAC3BkD,KAAK,CAAC5xB,KAAK,GAAG,MAAM;QACpB4xB,KAAK,CAAC3xB,MAAM,GAAG,MAAM;QACrB4yB,OAAO,GAAG,IAAAX,0BAAqB,EAAC,CAAC;QACjC,IAAMG,OAAM,GAAGQ,OAAO,CAACR,MAAM;QAC7B05C,SAAS,CAACx3C,WAAW,CAAClC,OAAM,CAAC;QAC7BT,KAAK,GAAGS,OAAM,CAACT,KAAK;QACpBA,KAAK,CAAClD,QAAQ,GAAG,UAAU;QAC3BkD,KAAK,CAACmU,IAAI,GAAG,GAAG;QAChBnU,KAAK,CAACsyD,eAAe,GAAG,UAAU;QAClC,IAAI,CAACnY,SAAS,GAAGA,SAAS;QAC1B,IAAI,CAACl5C,OAAO,GAAGA,OAAO;MACxB;MACA,IACE,CAAC,IAAI,CAAC8wD,eAAe,IACrBI,eAAe,IACf,CAAC,IAAI,CAAChY,SAAS,CAACn6C,KAAK,CAACmyD,eAAe,EACrC;QACA,IAAI,CAAChY,SAAS,CAACn6C,KAAK,CAACmyD,eAAe,GAAGA,eAAe;MACxD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhqG,GAAA;IAAAC,KAAA,EAMA,SAAAmqG,aAAaA,CAACtxD,OAAO,EAAEppC,UAAU,EAAE4O,MAAM,EAAE;MACzC,IAAM+rF,OAAO,GAAG,IAAAlnF,kBAAU,EAAC7E,MAAM,CAAC;MAClC,IAAMgsF,QAAQ,GAAG,IAAApnF,mBAAW,EAAC5E,MAAM,CAAC;MACpC,IAAMisF,WAAW,GAAG,IAAAtnF,sBAAc,EAAC3E,MAAM,CAAC;MAC1C,IAAMksF,UAAU,GAAG,IAAAxnF,qBAAa,EAAC1E,MAAM,CAAC;MAExC,IAAAwH,gBAAc,EAACpW,UAAU,CAAC2gF,0BAA0B,EAAEga,OAAO,CAAC;MAC9D,IAAAvkF,gBAAc,EAACpW,UAAU,CAAC2gF,0BAA0B,EAAEia,QAAQ,CAAC;MAC/D,IAAAxkF,gBAAc,EAACpW,UAAU,CAAC2gF,0BAA0B,EAAEka,WAAW,CAAC;MAClE,IAAAzkF,gBAAc,EAACpW,UAAU,CAAC2gF,0BAA0B,EAAEma,UAAU,CAAC;MAEjE,IAAMC,QAAQ,GAAG,IAAI,CAACxa,qBAAqB;MAC3C,IAAAnqE,gBAAc,EAAC2kF,QAAQ,EAAEJ,OAAO,CAAC;MACjC,IAAAvkF,gBAAc,EAAC2kF,QAAQ,EAAEH,QAAQ,CAAC;MAClC,IAAAxkF,gBAAc,EAAC2kF,QAAQ,EAAEF,WAAW,CAAC;MACrC,IAAAzkF,gBAAc,EAAC2kF,QAAQ,EAAED,UAAU,CAAC;MAEpC1xD,OAAO,CAACohC,IAAI,CAAC,CAAC;MACdphC,OAAO,CAAC0kD,SAAS,CAAC,CAAC;MACnB1kD,OAAO,CAAC2kD,MAAM,CAAC7nF,IAAI,CAACmI,KAAK,CAACssF,OAAO,CAAC,CAAC,CAAC,CAAC,EAAEz0F,IAAI,CAACmI,KAAK,CAACssF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DvxD,OAAO,CAACmnC,MAAM,CAACrqE,IAAI,CAACmI,KAAK,CAACusF,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE10F,IAAI,CAACmI,KAAK,CAACusF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAChExxD,OAAO,CAACmnC,MAAM,CAACrqE,IAAI,CAACmI,KAAK,CAACwsF,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE30F,IAAI,CAACmI,KAAK,CAACwsF,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;MACtEzxD,OAAO,CAACmnC,MAAM,CAACrqE,IAAI,CAACmI,KAAK,CAACysF,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE50F,IAAI,CAACmI,KAAK,CAACysF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MACpE1xD,OAAO,CAAC4kD,IAAI,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA19F,GAAA;IAAAC,KAAA,EAKA,SAAAyqG,gBAAgBA,CAACh7F,UAAU,EAAEtO,MAAM,EAAE;MACnC,IAAMkd,MAAM,GAAG5O,UAAU,CAAC4O,MAAM;MAChC,IAAMG,UAAU,GAAG/O,UAAU,CAACyL,SAAS,CAACsD,UAAU;MAClD,IAAMoF,QAAQ,GAAGnU,UAAU,CAACyL,SAAS,CAAC0I,QAAQ;MAC9C,IAAM+sD,UAAU,GAAGlhE,UAAU,CAACkhE,UAAU;MACxC,IAAM3qD,KAAK,GAAGrQ,IAAI,CAACmI,KAAK,CAAE,IAAAuF,gBAAQ,EAAChF,MAAM,CAAC,GAAGG,UAAU,GAAImyD,UAAU,CAAC;MACtE,IAAM1qD,MAAM,GAAGtQ,IAAI,CAACmI,KAAK,CAAE,IAAAwF,iBAAS,EAACjF,MAAM,CAAC,GAAGG,UAAU,GAAImyD,UAAU,CAAC;MACxE;MACA,IAAAtxC,kBAAgB,EACd,IAAI,CAACoqE,cAAc,EACnBh6F,UAAU,CAACgP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtBhP,UAAU,CAACgP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAGkyD,UAAU,EACd,CAAC,GAAGA,UAAU,EACd/sD,QAAQ,EACR,CAACoC,KAAK,GAAG,CAAC,EACV,CAACC,MAAM,GAAG,CACZ,CAAC;MACD,IAAA0W,sBAAW,EAAC,IAAI,CAACqzD,qBAAqB,EAAE,IAAI,CAACyZ,cAAc,CAAC;MAE5D,IAAMiB,eAAe,GAAG,IAAAC,mBAAiB,EAAC,IAAI,CAAClB,cAAc,CAAC;MAC9D,IAAI,CAACK,YAAY,CAAC3oG,MAAM,EAAEupG,eAAe,EAAE,IAAI,CAACp3C,aAAa,CAAC7jD,UAAU,CAAC,CAAC;MAE1E,IAAI,CAAC,IAAI,CAACk6F,eAAe,EAAE;QACzB,IAAMtxD,MAAM,GAAG,IAAI,CAACQ,OAAO,CAACR,MAAM;QAClC,IAAIA,MAAM,CAACryB,KAAK,IAAIA,KAAK,IAAIqyB,MAAM,CAACpyB,MAAM,IAAIA,MAAM,EAAE;UACpDoyB,MAAM,CAACryB,KAAK,GAAGA,KAAK;UACpBqyB,MAAM,CAACpyB,MAAM,GAAGA,MAAM;QACxB,CAAC,MAAM;UACL,IAAI,CAAC4yB,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE9yB,KAAK,EAAEC,MAAM,CAAC;QAC7C;QACA,IAAIykF,eAAe,KAAKryD,MAAM,CAACT,KAAK,CAACxsB,SAAS,EAAE;UAC9CitB,MAAM,CAACT,KAAK,CAACxsB,SAAS,GAAGs/E,eAAe;QAC1C;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3qG,GAAA;IAAAC,KAAA,EAMA,SAAA4qG,oBAAoBA,CAAC3lG,IAAI,EAAE4zC,OAAO,EAAEppC,UAAU,EAAE;MAC9C,IAAM2xC,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;MAC7B,IAAI3nD,KAAK,CAACx3C,WAAW,CAAC3E,IAAI,CAAC,EAAE;QAC3B,IAAM+D,KAAK,GAAG,IAAI+mF,cAAW,CAC3B9qF,IAAI,EACJ,IAAI,CAAC+qF,qBAAqB,EAC1BvgF,UAAU,EACVopC,OACF,CAAC;QACDuI,KAAK,CAACr4C,aAAa,CAACC,KAAK,CAAC;MAC5B;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjJ,GAAA;IAAAC,KAAA,EAKA,SAAA6qG,SAASA,CAAChyD,OAAO,EAAEppC,UAAU,EAAE;MAC7B,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC5B,IAAIA,UAAU,CAACi/E,SAAS,EAAE;QACxB;MACF;MACA,IAAI,CAACkc,oBAAoB,CAACryC,kBAAe,CAACtC,SAAS,EAAEpd,OAAO,EAAEppC,UAAU,CAAC;IAC3E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1P,GAAA;IAAAC,KAAA,EAKA,SAAA8qG,UAAUA,CAACjyD,OAAO,EAAEppC,UAAU,EAAE;MAC9B,IAAIA,UAAU,CAACi/E,SAAS,EAAE;QACxB;MACF;MACA,IAAI,CAACkc,oBAAoB,CAACryC,kBAAe,CAACxiD,UAAU,EAAE8iC,OAAO,EAAEppC,UAAU,CAAC;IAC5E;;IAEA;AACF;AACA;EAFE;IAAA1P,GAAA;IAAAC,KAAA,EAGA,SAAA+qG,sBAAsBA,CAACt7F,UAAU,EAAE,CAAC;;IAEpC;AACF;AACA;AACA;EAHE;IAAA1P,GAAA;IAAAC,KAAA,EAIA,SAAAgrG,gBAAgBA,CAACv7F,UAAU,EAAE;MAC3B,IAAIA,UAAU,CAACi/E,SAAS,IAAI,CAAC,IAAI,CAACgb,gBAAgB,EAAE;QAClD,IAAI,CAACA,gBAAgB,GAAG,IAAI7B,sBAAa,CAAC,CAAC;MAC7C;MACA,OAAOp4F,UAAU,CAACi/E,SAAS,GACvB,IAAI,CAACgb,gBAAgB,CAACjxD,UAAU,CAAC,CAAC,GAClC,IAAI,CAACI,OAAO;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAA94C,GAAA;IAAAC,KAAA,EAIA,SAAAq4D,cAAcA,CAAC5oD,UAAU,EAAE;MACzB,IAAI,CAACA,UAAU,CAACi/E,SAAS,EAAE;QACzB;MACF;MACA,IAAI,CAACkc,oBAAoB,CACvBryC,kBAAe,CAACtC,SAAS,EACzB,IAAI,CAACpd,OAAO,EACZppC,UACF,CAAC;MACD,IAAIA,UAAU,CAACi/E,SAAS,IAAI,IAAI,CAACgb,gBAAgB,EAAE;QACjD,IAAI,CAACA,gBAAgB,CAACvB,IAAI,CAAC,IAAI,CAACtvD,OAAO,CAAC;QACxC,IAAI,CAAC6wD,gBAAgB,CAAC9kG,KAAK,CAAC,CAAC;MAC/B;MACA,IAAI,CAACmmG,sBAAsB,CAACt7F,UAAU,CAAC;MACvC,IAAI,CAACm7F,oBAAoB,CACvBryC,kBAAe,CAACxiD,UAAU,EAC1B,IAAI,CAAC8iC,OAAO,EACZppC,UACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAA1P,GAAA;IAAAC,KAAA,EAYA,SAAAirG,kBAAkBA,CAChBhwF,MAAM,EACNuD,UAAU,EACVoF,QAAQ,EACR+sD,UAAU,EACV3qD,KAAK,EACLC,MAAM,EACN8nB,OAAO,EACP;MACA,IAAM5R,GAAG,GAAGnW,KAAK,GAAG,CAAC;MACrB,IAAMoW,GAAG,GAAGnW,MAAM,GAAG,CAAC;MACtB,IAAMoW,EAAE,GAAGs0C,UAAU,GAAGnyD,UAAU;MAClC,IAAM8d,EAAE,GAAG,CAACD,EAAE;MACd,IAAME,GAAG,GAAG,CAACthB,MAAM,CAAC,CAAC,CAAC,GAAG8yB,OAAO;MAChC,IAAMvR,GAAG,GAAG,CAACvhB,MAAM,CAAC,CAAC,CAAC;MACtB,OAAO,IAAAokB,kBAAgB,EACrB,IAAI,CAACmqE,aAAa,EAClBrtE,GAAG,EACHC,GAAG,EACHC,EAAE,EACFC,EAAE,EACF,CAAC1Y,QAAQ,EACT2Y,GAAG,EACHC,GACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAz8B,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACuP,UAAU;MACtBE,aAAA,CAAA05F,mBAAA;IACF;EAAC;AAAA,EArX+Bd,cAAa;AAAA,IAAAnqG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwXhC+qG,mBAAmB;;;;;;;;ACpalC,IAAA6B,SAAA,GAAAjyF,uBAAA,CAAA5V,OAAA;AACA,IAAA8nG,UAAA,GAAA3lG,sBAAA,CAAAnC,OAAA;AACA,IAAA+nG,UAAA,GAAA5lG,sBAAA,CAAAnC,OAAA;AACA,IAAA0V,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AASA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAA04F,KAAA,GAAAv2F,sBAAA,CAAAnC,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAAgoG,SAAA,GAAA7lG,sBAAA,CAAAnC,OAAA;AACA,IAAAioG,UAAA,GAAAjoG,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAIA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAgrF,MAAA,GAAA7oF,sBAAA,CAAAnC,OAAA;AAA6C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAsT,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAyqB,2BAAAnqB,CAAA,EAAAT,CAAA,QAAAU,CAAA,yBAAAN,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,qBAAAC,CAAA,QAAAvE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,MAAAC,CAAA,GAAA0Z,2BAAA,CAAA3Z,CAAA,MAAAT,CAAA,IAAAS,CAAA,uBAAAA,CAAA,CAAAzF,MAAA,IAAA0F,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmqB,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAArvB,CAAA,WAAAA,EAAA,WAAAovB,EAAA,IAAApqB,CAAA,CAAAzF,MAAA,KAAA2f,IAAA,WAAAA,IAAA,MAAAvgB,KAAA,EAAAqG,CAAA,CAAAoqB,EAAA,UAAA7qB,CAAA,WAAAA,EAAAS,CAAA,UAAAA,CAAA,KAAAwI,CAAA,EAAA6hB,CAAA,gBAAAvqB,SAAA,iJAAAJ,CAAA,EAAAjF,CAAA,OAAAuY,CAAA,gBAAAsX,CAAA,WAAAA,EAAA,IAAArqB,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,MAAAhF,CAAA,WAAAA,EAAA,QAAAgF,CAAA,GAAAC,CAAA,CAAAga,IAAA,WAAAxf,CAAA,GAAAuF,CAAA,CAAAka,IAAA,EAAAla,CAAA,KAAAT,CAAA,WAAAA,EAAAS,CAAA,IAAAgT,CAAA,OAAAtT,CAAA,GAAAM,CAAA,KAAAwI,CAAA,WAAAA,EAAA,UAAA/N,CAAA,YAAAwF,CAAA,CAAAka,MAAA,IAAAla,CAAA,CAAAka,MAAA,oBAAAnH,CAAA,QAAAtT,CAAA;AAAA,SAAAia,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAAzB,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA3B7C;AACA;AACA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASotE,WAAWA,CAACu4B,SAAS,EAAEzhE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE;EACvC,UAAA/O,MAAA,CAAUq+F,SAAS,OAAAr+F,MAAA,CAAI,IAAAi6F,oBAAS,EAACr9D,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASuvF,eAAeA,CAACC,QAAQ,EAAExxF,IAAI,EAAE6vB,CAAC,EAAE;EAC1C,IAAI,EAAEA,CAAC,IAAI2hE,QAAQ,CAAC,EAAE;IACpBA,QAAQ,CAAC3hE,CAAC,CAAC,GAAG,IAAIoX,GAAG,CAAC,CAACjnC,IAAI,CAAC,CAAC;IAC7B,OAAO,IAAI;EACb;EACA,IAAM3M,GAAG,GAAGm+F,QAAQ,CAAC3hE,CAAC,CAAC;EACvB,IAAM4hE,QAAQ,GAAGp+F,GAAG,CAAC8L,GAAG,CAACa,IAAI,CAAC;EAC9B,IAAI,CAACyxF,QAAQ,EAAE;IACbp+F,GAAG,CAACua,GAAG,CAAC5N,IAAI,CAAC;EACf;EACA,OAAO,CAACyxF,QAAQ;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACF,QAAQ,EAAExxF,IAAI,EAAE6vB,CAAC,EAAE;EAC/C,IAAMx8B,GAAG,GAAGm+F,QAAQ,CAAC3hE,CAAC,CAAC;EACvB,IAAIx8B,GAAG,EAAE;IACP,OAAOA,GAAG,CAACs+F,MAAM,CAAC3xF,IAAI,CAAC;EACzB;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS4xF,eAAeA,CAACp8F,UAAU,EAAE4O,MAAM,EAAE;EAC3C,IAAM23C,UAAU,GAAGvmD,UAAU,CAAC+nD,gBAAgB,CAAC/nD,UAAU,CAAC2iF,UAAU,CAAC;EACrE,IAAIp8B,UAAU,CAAC33C,MAAM,EAAE;IACrBA,MAAM,GAAG,IAAAyG,uBAAe,EACtBzG,MAAM,EACN,IAAAic,oBAAc,EAAC07B,UAAU,CAAC33C,MAAM,EAAE5O,UAAU,CAACyL,SAAS,CAACiL,UAAU,CACnE,CAAC;EACH;EACA,IAAM1Y,MAAM,GAAG;EACbuoD,UAAU,CAAC5U,KAAK,CAAC4V,eAAe,CAAC,CAClC;EACD,IAAI,CAACvpD,MAAM,CAACwjF,QAAQ,CAAC,CAAC,EAAE;IACtB,IAAM6a,UAAU,GAAGr+F,MAAM,CACtBs+F,wBAAwB,CAACt8F,UAAU,CAACyL,SAAS,CAACiL,UAAU,CAAC,CACzDE,SAAS,CAAC,CAAC;IACd,IAAIylF,UAAU,EAAE;MACdztF,MAAM,GAAG,IAAAyG,uBAAe,EAACzG,MAAM,EAAEytF,UAAU,CAAC;IAC9C;EACF;EACA,OAAOztF,MAAM;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOM2tF,uBAAuB,0BAAAC,oBAAA;EAC3B;AACF;AACA;AACA;EACE,SAAAD,wBAAYE,SAAS,EAAE99F,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAosG,uBAAA;IAC9B5jG,KAAA,GAAAnB,UAAA,OAAA+kG,uBAAA,GAAME,SAAS;IAEf99F,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACIhG,KAAA,CAAK+jG,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACI/jG,KAAA,CAAKgkG,cAAc,GAAG,KAAK;;IAE3B;AACJ;AACA;AACA;IACIhkG,KAAA,CAAKikG,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACIjkG,KAAA,CAAKkkG,kBAAkB;;IAEvB;AACJ;AACA;AACA;IACIlkG,KAAA,CAAKmkG,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACInkG,KAAA,CAAKokG,iBAAiB;;IAEtB;AACJ;AACA;AACA;IACIpkG,KAAA,CAAKqkG,aAAa,GAAG,EAAE;;IAEvB;AACJ;AACA;AACA;IACIrkG,KAAA,CAAKskG,kBAAkB;;IAEvB;AACJ;AACA;AACA;IACItkG,KAAA,CAAKukG,uBAAuB;;IAE5B;AACJ;AACA;AACA;IACIvkG,KAAA,CAAKwkG,UAAU,GAAG,IAAAjsF,mBAAW,EAAC,CAAC;;IAE/B;AACJ;AACA;AACA;IACIvY,KAAA,CAAKykG,cAAc,GAAG,IAAI7P,kBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAE/C;AACJ;AACA;AACA;IACI50F,KAAA,CAAK0kG,cAAc,GAAG,IAAAC,yBAAe,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE9C,IAAMxnC,SAAS,GAAGn3D,OAAO,CAACm3D,SAAS,KAAK57D,SAAS,GAAGyE,OAAO,CAACm3D,SAAS,GAAG,GAAG;;IAE3E;AACJ;AACA;AACA;IACIn9D,KAAA,CAAK4kG,UAAU,GAAG,IAAIlH,iBAAQ,CAACvgC,SAAS,CAAC;IAEzCn9D,KAAA,CAAKkgG,YAAY,GAAG/iC,SAAS,GAAG,GAAG;IAAC,OAAAn9D,KAAA;EACtC;;EAEA;AACF;AACA;EAFEL,SAAA,CAAAikG,uBAAA,EAAAC,oBAAA;EAAA,OAAAnsG,YAAA,CAAAksG,uBAAA;IAAAjsG,GAAA;IAAAC,KAAA,EAGA,SAAAitG,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACD,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAjtG,GAAA;IAAAC,KAAA,EAUA,SAAAktG,eAAeA,CAACpjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAExM,UAAU,EAAE;MACnC,IAAM09F,SAAS,GAAG,IAAI,CAACH,UAAU;MACjC,IAAMd,SAAS,GAAG,IAAI,CAACnD,QAAQ,CAAC,CAAC;MACjC,IAAMqE,UAAU,GAAGlB,SAAS,CAAC1qD,SAAS,CAAC,CAAC;MACxC,IAAMi0B,QAAQ,GAAGzC,WAAW,CAACo6B,UAAU,CAAC1zF,MAAM,CAAC,CAAC,EAAEowB,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;;MAE1D;MACA,IAAIhC,IAAI;MAER,IAAIkzF,SAAS,CAAC3G,WAAW,CAAC/wB,QAAQ,CAAC,EAAE;QACnCx7D,IAAI,GAAGkzF,SAAS,CAAC1gG,GAAG,CAACgpE,QAAQ,CAAC;MAChC,CAAC,MAAM;QACLx7D,IAAI,GAAGmzF,UAAU,CAACC,OAAO,CACvBvjE,CAAC,EACD9tB,CAAC,EACDC,CAAC,EACDxM,UAAU,CAACkhE,UAAU,EACrBlhE,UAAU,CAACyL,SAAS,CAACiL,UACvB,CAAC;QACD,IAAI,CAAClM,IAAI,EAAE;UACT,OAAO,IAAI;QACb;QACAkzF,SAAS,CAAC7/F,GAAG,CAACmoE,QAAQ,EAAEx7D,IAAI,CAAC;MAC/B;MACA,OAAOA,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAla,GAAA;IAAAC,KAAA,EAQA,SAAAqtG,OAAOA,CAACvjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAExM,UAAU,EAAE;MAC3B,IAAMwK,IAAI,GAAG,IAAI,CAACizF,eAAe,CAACpjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAExM,UAAU,CAAC;MACtD,IAAI,CAACwK,IAAI,EAAE;QACT,OAAO,IAAI;MACb;MACA,OAAOA,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAla,GAAA;IAAAC,KAAA,EAKA,SAAAo3D,OAAOA,CAAC5mD,KAAK,EAAE;MACb,IAAMf,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAI,CAACA,UAAU,EAAE;QACf,OAAO,IAAI;MACb;MAEA,IAAM2xC,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;MAC7B,IAAMr4F,UAAU,GAAG,IAAAmV,gBAAc,EAC/BpW,UAAU,CAAC4gF,0BAA0B,EACrC7/E,KAAK,CAACxM,KAAK,CAAC,CACd,CAAC;MAED,IAAM2zD,WAAW,GAAGvW,KAAK,CAAC/6B,SAAS,CAAC,CAAC;MACrC,IAAIsxC,WAAW,EAAE;QACf,IAAI,CAAC,IAAAt2C,0BAAkB,EAACs2C,WAAW,EAAEjnD,UAAU,CAAC,EAAE;UAChD,OAAO,IAAI;QACb;MACF;MAEA,IAAMwK,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMzN,MAAM,GAAG2zC,KAAK,CAAC4V,eAAe,CAAC,CAAC;MACtC,IAAMtoC,QAAQ,GAAGjhB,MAAM,CAACs+F,wBAAwB,CAAC7wF,SAAS,CAACiL,UAAU,CAAC;MACtE,IAAMmnF,cAAc,GAAG7/F,MAAM,CAAC8/F,iBAAiB,CAAC99F,UAAU,CAACkhE,UAAU,CAAC;MAEtE,KACE,IAAI7mC,CAAC,GAAGpb,QAAQ,CAACs2E,iBAAiB,CAAC9pF,SAAS,CAACsD,UAAU,CAAC,EACxDsrB,CAAC,IAAIpb,QAAQ,CAAC0jB,UAAU,CAAC,CAAC,EAC1B,EAAEtI,CAAC,EACH;QACA,IAAM0wD,SAAS,GAAG9rE,QAAQ,CAAC8+E,wBAAwB,CAAC98F,UAAU,EAAEo5B,CAAC,CAAC;QAClE,IAAM7vB,IAAI,GAAG,IAAI,CAACozF,OAAO,CAACvjE,CAAC,EAAE0wD,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAE/qF,UAAU,CAAC;QACpE,IAAI,CAACwK,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAKC,kBAAS,CAAC3D,MAAM,EAAE;UACjD;QACF;QAEA,IAAM+2F,UAAU,GAAG/+E,QAAQ,CAAC6sD,SAAS,CAACzxC,CAAC,CAAC;QACxC,IAAM4jE,QAAQ,GAAG,IAAAxnC,YAAM,EAACx3C,QAAQ,CAAC82E,WAAW,CAAC17D,CAAC,CAAC,CAAC;QAChD,IAAM/uB,cAAc,GAAG2T,QAAQ,CAACof,aAAa,CAAChE,CAAC,CAAC;;QAEhD;AACN;AACA;QACM,IAAIsnC,KAAK;QACT,IAAIn3D,IAAI,YAAYuiF,kBAAS,IAAIviF,IAAI,YAAY2pF,aAAU,EAAE;UAC3DxyB,KAAK,GAAGn3D,IAAI,CAACg3D,QAAQ,CAAC,CAAC;QACzB,CAAC,MAAM,IAAIh3D,IAAI,YAAY6hF,iBAAQ,EAAE;UACnC1qB,KAAK,GAAG,IAAAgqB,qBAAW,EAACnhF,IAAI,CAACm9C,OAAO,CAAC,CAAC,CAAC;UACnC,IAAI,CAACga,KAAK,EAAE;YACV;UACF;QACF,CAAC,MAAM;UACL;QACF;QAEA,IAAMw4B,GAAG,GAAGj0F,IAAI,CAACoI,KAAK,CACpBuvF,cAAc,IACX,CAAC58F,UAAU,CAAC,CAAC,CAAC,GAAG+8F,UAAU,CAAC,CAAC,CAAC,IAAI1yF,cAAc,GAC/Cy/E,SAAS,CAAC,CAAC,CAAC,GAAGkT,QAAQ,CAAC,CAAC,CAAC,CAChC,CAAC;QAED,IAAM7D,GAAG,GAAGl0F,IAAI,CAACoI,KAAK,CACpBuvF,cAAc,IACX,CAACG,UAAU,CAAC,CAAC,CAAC,GAAG/8F,UAAU,CAAC,CAAC,CAAC,IAAIqK,cAAc,GAC/Cy/E,SAAS,CAAC,CAAC,CAAC,GAAGkT,QAAQ,CAAC,CAAC,CAAC,CAChC,CAAC;QAED,IAAMtP,MAAM,GAAGzoF,IAAI,CAACmI,KAAK,CACvBwvF,cAAc,GAAG7/F,MAAM,CAACkgG,sBAAsB,CAACzyF,SAAS,CAACiL,UAAU,CACrE,CAAC;QAED,OAAO,IAAI,CAACyuD,YAAY,CAACxD,KAAK,EAAEw4B,GAAG,GAAGxL,MAAM,EAAEyL,GAAG,GAAGzL,MAAM,CAAC;MAC7D;MAEA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAr+F,GAAA;IAAAC,KAAA,EAMA,SAAAg4D,YAAYA,CAACvoD,UAAU,EAAE;MACvB,IAAI,CAAC,IAAI,CAAC88F,kBAAkB,EAAE;QAC5B,IAAI,CAACA,kBAAkB,GAAG98F,UAAU,CAACyL,SAAS,CAACiL,UAAU;MAC3D,CAAC,MAAM,IAAI1W,UAAU,CAACyL,SAAS,CAACiL,UAAU,KAAK,IAAI,CAAComF,kBAAkB,EAAE;QACtE,IAAI,CAACS,UAAU,CAACpoG,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC2nG,kBAAkB,GAAG98F,UAAU,CAACyL,SAAS,CAACiL,UAAU;MAC3D;MAEA,IAAM1Y,MAAM,GAAG,IAAI,CAACs7F,QAAQ,CAAC,CAAC,CAACvnD,SAAS,CAAC,CAAC;MAC1C,IAAI,CAAC/zC,MAAM,EAAE;QACX,OAAO,KAAK;MACd;MACA,IAAMmgG,cAAc,GAAGngG,MAAM,CAACvC,WAAW,CAAC,CAAC;MAC3C,IAAI,CAAC,IAAI,CAACshG,iBAAiB,EAAE;QAC3B,IAAI,CAACA,iBAAiB,GAAGoB,cAAc;MACzC,CAAC,MAAM,IAAI,IAAI,CAACpB,iBAAiB,KAAKoB,cAAc,EAAE;QACpD,IAAI,CAACpB,iBAAiB,GAAGoB,cAAc;QACvC,IAAI,IAAI,CAAClB,kBAAkB,KAAKj/F,MAAM,CAACiM,MAAM,CAAC,CAAC,EAAE;UAC/C,IAAI,CAACszF,UAAU,CAACpoG,KAAK,CAAC,CAAC;QACzB;MACF;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA7E,GAAA;IAAAC,KAAA,EAOA,SAAA6tG,YAAYA,CAACp+F,UAAU,EAAE4O,MAAM,EAAEyvF,QAAQ,EAAErC,QAAQ,EAAEsC,OAAO,EAAE;MAC5D,IAAM7yF,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMgxF,SAAS,GAAG,IAAI,CAACnD,QAAQ,CAAC,CAAC;MACjC,IAAMqE,UAAU,GAAGlB,SAAS,CAACl1C,eAAe,CAAC,CAAC;MAC9C,IAAMtoC,QAAQ,GAAG0+E,UAAU,CAACrB,wBAAwB,CAAC7wF,SAAS,CAACiL,UAAU,CAAC;MAE1E,IAAMtL,aAAa,GAAG,IAAAnP,YAAM,EAAC0hG,UAAU,CAAC;MACxC,IAAI,EAAEvyF,aAAa,IAAIpL,UAAU,CAACuL,WAAW,CAAC,EAAE;QAC9CvL,UAAU,CAACuL,WAAW,CAACH,aAAa,CAAC,GAAG,CAAC,CAAC;MAC5C;MAEA,IAAMG,WAAW,GAAGvL,UAAU,CAACuL,WAAW,CAACH,aAAa,CAAC;MAEzD,IAAMrL,GAAG,GAAG08F,SAAS,CAAC30C,cAAc,CAAC,CAAC;MACtC,IAAMy2C,IAAI,GAAGr4F,IAAI,CAACmG,GAAG,CACnBgyF,QAAQ,GAAGC,OAAO,EAClBr/E,QAAQ,CAAC0jB,UAAU,CAAC,CAAC,EACrB1jB,QAAQ,CAACs2E,iBAAiB,CACxBrvF,IAAI,CAACkG,GAAG,CACNqwF,SAAS,CAACp6D,gBAAgB,CAAC,CAAC,EAC5BtiC,GAAG,GACCA,GAAG,CACA8zC,OAAO,CAAC,CAAC,CACT7T,oBAAoB,CAAC95B,IAAI,CAACmG,GAAG,CAACowF,SAAS,CAAC95D,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAC5D1jB,QAAQ,CAACof,aAAa,CAAC,CAAC,CAC9B,CAAC,EACDs/D,UAAU,CAACa,UACb,CACF,CAAC;MACD,IAAMrqF,QAAQ,GAAG1I,SAAS,CAAC0I,QAAQ;MACnC,IAAMuzE,QAAQ,GAAGvzE,QAAQ,GACrB,IAAAE,0BAAkB,EAChB5I,SAAS,CAACD,MAAM,EAChBC,SAAS,CAACsD,UAAU,EACpBoF,QAAQ,EACRnU,UAAU,CAACgP,IACb,CAAC,GACD9U,SAAS;MACb,KAAK,IAAImgC,CAAC,GAAGgkE,QAAQ,EAAEhkE,CAAC,IAAIkkE,IAAI,EAAE,EAAElkE,CAAC,EAAE;QACrC,IAAMozD,SAAS,GAAGxuE,QAAQ,CAACy2E,yBAAyB,CAClD9mF,MAAM,EACNyrB,CAAC,EACD,IAAI,CAAC+iE,cACP,CAAC;QAED,IAAM9xF,cAAc,GAAG2T,QAAQ,CAACof,aAAa,CAAChE,CAAC,CAAC;QAEhD,KAAK,IAAI9tB,CAAC,GAAGkhF,SAAS,CAACl+E,IAAI,EAAEhD,CAAC,IAAIkhF,SAAS,CAACj+E,IAAI,EAAE,EAAEjD,CAAC,EAAE;UACrD,KAAK,IAAIC,CAAC,GAAGihF,SAAS,CAACh+E,IAAI,EAAEjD,CAAC,IAAIihF,SAAS,CAAC/9E,IAAI,EAAE,EAAElD,CAAC,EAAE;YACrD,IACE2H,QAAQ,IACR,CAAC8K,QAAQ,CAACw/E,2BAA2B,CAAC,CAACpkE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC,EAAEk7E,QAAQ,CAAC,EAC1D;cACA;YACF;YACA,IAAMl9E,IAAI,GAAG,IAAI,CAACozF,OAAO,CAACvjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAExM,UAAU,CAAC;YAC9C,IAAI,CAACwK,IAAI,EAAE;cACT;YACF;YACA,IAAMD,KAAK,GAAGwxF,eAAe,CAACC,QAAQ,EAAExxF,IAAI,EAAE6vB,CAAC,CAAC;YAChD,IAAI,CAAC9vB,KAAK,EAAE;cACV;YACF;YAEA,IAAMm0F,YAAY,GAAGl0F,IAAI,CAACP,MAAM,CAAC,CAAC;YAClCsB,WAAW,CAACmzF,YAAY,CAAC,GAAG,IAAI;YAEhC,IAAIl0F,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAKC,kBAAS,CAAC7D,IAAI,EAAE;cACtC,IAAI,CAAC/G,UAAU,CAAC8oF,SAAS,CAACjgF,WAAW,CAAC61F,YAAY,CAAC,EAAE;gBACnD,IAAM3T,SAAS,GAAG,IAAAuS,yBAAe,EAACjjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE,IAAI,CAAC6wF,cAAc,CAAC;gBAC/Dr9F,UAAU,CAAC8oF,SAAS,CAACzgF,OAAO,CAAC,CAC3BmC,IAAI,EACJY,aAAa,EACb6T,QAAQ,CAAC0/E,kBAAkB,CAAC5T,SAAS,CAAC,EACtCz/E,cAAc,CACf,CAAC;cACJ;YACF;UACF;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAhb,GAAA;IAAAC,KAAA,EAQA,SAAAquG,cAAcA,CAAC7T,SAAS,EAAEiR,QAAQ,EAAE;MAClC,IAAM0B,SAAS,GAAG,IAAI,CAACH,UAAU;MACjC,IAAMljE,CAAC,GAAG0wD,SAAS,CAAC,CAAC,CAAC;MACtB,IAAMx+E,CAAC,GAAGw+E,SAAS,CAAC,CAAC,CAAC;MACtB,IAAMv+E,CAAC,GAAGu+E,SAAS,CAAC,CAAC,CAAC;MACtB,IAAM8T,SAAS,GAAG,IAAI,CAAC1F,YAAY,CAAC,CAAC;MACrC,KAAK,IAAItnG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgtG,SAAS,CAAC1tG,MAAM,EAAE,EAAEU,CAAC,EAAE;QACzC,IAAMm0E,QAAQ,GAAGzC,WAAW,CAACs7B,SAAS,CAAChtG,CAAC,CAAC,EAAEwoC,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;QACnD,IAAIkxF,SAAS,CAAC3G,WAAW,CAAC/wB,QAAQ,CAAC,EAAE;UACnC,IAAMx7D,IAAI,GAAGkzF,SAAS,CAAClG,IAAI,CAACxxB,QAAQ,CAAC;UACrC,IAAIx7D,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAKC,kBAAS,CAAC3D,MAAM,EAAE;YACxCuD,IAAI,CAACihF,aAAa,CAAC,IAAAxvF,YAAM,EAAC,IAAI,CAAC,CAAC;YAChC8/F,eAAe,CAACC,QAAQ,EAAExxF,IAAI,EAAE6vB,CAAC,CAAC;YAClC,OAAO,IAAI;UACb;QACF;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA/pC,GAAA;IAAAC,KAAA,EAUA,SAAAuuG,aAAaA,CAAC7/E,QAAQ,EAAE8rE,SAAS,EAAEgU,IAAI,EAAE/C,QAAQ,EAAE;MACjD,IAAMvO,SAAS,GAAGxuE,QAAQ,CAAC+/E,4BAA4B,CACrDjU,SAAS,EACTgU,IAAI,EACJ,IAAI,CAAC3B,cACP,CAAC;MAED,IAAI,CAAC3P,SAAS,EAAE;QACd,OAAO,KAAK;MACd;MAEA,IAAIwR,OAAO,GAAG,IAAI;MAClB,IAAMvB,SAAS,GAAG,IAAI,CAACH,UAAU;MACjC,IAAMv/F,MAAM,GAAG,IAAI,CAACs7F,QAAQ,CAAC,CAAC,CAAC/xC,eAAe,CAAC,CAAC;MAChD,IAAMu0C,SAAS,GAAG99F,MAAM,CAACiM,MAAM,CAAC,CAAC;MACjC,KAAK,IAAIsC,CAAC,GAAGkhF,SAAS,CAACl+E,IAAI,EAAEhD,CAAC,IAAIkhF,SAAS,CAACj+E,IAAI,EAAE,EAAEjD,CAAC,EAAE;QACrD,KAAK,IAAIC,CAAC,GAAGihF,SAAS,CAACh+E,IAAI,EAAEjD,CAAC,IAAIihF,SAAS,CAAC/9E,IAAI,EAAE,EAAElD,CAAC,EAAE;UACrD,IAAMw5D,QAAQ,GAAGzC,WAAW,CAACu4B,SAAS,EAAEiD,IAAI,EAAExyF,CAAC,EAAEC,CAAC,CAAC;UACnD,IAAIg2D,MAAM,GAAG,KAAK;UAClB,IAAIk7B,SAAS,CAAC3G,WAAW,CAAC/wB,QAAQ,CAAC,EAAE;YACnC,IAAMx7D,IAAI,GAAGkzF,SAAS,CAAClG,IAAI,CAACxxB,QAAQ,CAAC;YACrC,IAAIx7D,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAKC,kBAAS,CAAC3D,MAAM,EAAE;cACxC80F,eAAe,CAACC,QAAQ,EAAExxF,IAAI,EAAEu0F,IAAI,CAAC;cACrCv8B,MAAM,GAAG,IAAI;YACf;UACF;UACA,IAAI,CAACA,MAAM,EAAE;YACXy8B,OAAO,GAAG,KAAK;UACjB;QACF;MACF;MACA,OAAOA,OAAO;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAA3uG,GAAA;IAAAC,KAAA,EAcA,SAAAi4D,WAAWA,CAACxoD,UAAU,EAAEtO,MAAM,EAAE;MAAA,IAAAmL,MAAA;MAC9B,IAAIqiG,YAAY,GAAG,IAAI;MACvB,IAAI,CAACvC,cAAc,GAAG,IAAI;;MAE1B;AACJ;AACA;AACA;AACA;;MAEI,IAAMp2C,UAAU,GAAGvmD,UAAU,CAAC+nD,gBAAgB,CAAC/nD,UAAU,CAAC2iF,UAAU,CAAC;MACrE,IAAMl3E,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMiL,UAAU,GAAGjL,SAAS,CAACiL,UAAU;MACvC,IAAMyoF,cAAc,GAAG1zF,SAAS,CAACsD,UAAU;MAC3C,IAAMqwF,UAAU,GAAG3zF,SAAS,CAACD,MAAM;MACnC,IAAM01D,UAAU,GAAGlhE,UAAU,CAACkhE,UAAU;MAExC,IAAMu7B,SAAS,GAAG,IAAI,CAACnD,QAAQ,CAAC,CAAC;MACjC,IAAMqE,UAAU,GAAGlB,SAAS,CAAC1qD,SAAS,CAAC,CAAC;MACxC,IAAM9yB,QAAQ,GAAG0+E,UAAU,CAACrB,wBAAwB,CAAC5lF,UAAU,CAAC;MAChE,IAAM2jB,CAAC,GAAGpb,QAAQ,CAACs2E,iBAAiB,CAAC4J,cAAc,EAAExB,UAAU,CAACa,UAAU,CAAC;MAC3E,IAAMlzF,cAAc,GAAG2T,QAAQ,CAACof,aAAa,CAAChE,CAAC,CAAC;MAEhD,IAAMyhE,SAAS,GAAG6B,UAAU,CAAC1zF,MAAM,CAAC,CAAC;MACrC,IAAI,CAAC,IAAI,CAACgzF,kBAAkB,EAAE;QAC5B,IAAI,CAACA,kBAAkB,GAAGnB,SAAS;MACrC,CAAC,MAAM,IAAI,IAAI,CAACmB,kBAAkB,KAAKnB,SAAS,EAAE;QAChD,IAAI,CAAC1C,eAAe,CAAC,IAAI,CAAC6D,kBAAkB,CAAC;QAC7C,IAAI,CAACA,kBAAkB,GAAGnB,SAAS;MACrC;MAEA,IAAIuD,WAAW,GAAGr/F,UAAU,CAAC4O,MAAM;MACnC,IAAMivF,cAAc,GAAGF,UAAU,CAACG,iBAAiB,CAAC58B,UAAU,CAAC;MAE/D,IAAI,CAAC85B,gBAAgB,CAACh7F,UAAU,EAAEtO,MAAM,CAAC;;MAEzC;MACA,IAAM6kB,KAAK,GAAG,IAAI,CAAC6yB,OAAO,CAACR,MAAM,CAACryB,KAAK;MACvC,IAAMC,MAAM,GAAG,IAAI,CAAC4yB,OAAO,CAACR,MAAM,CAACpyB,MAAM;MAEzC,IAAM0xC,WAAW,GACf3B,UAAU,CAAC33C,MAAM,IAAI,IAAAic,oBAAc,EAAC07B,UAAU,CAAC33C,MAAM,EAAE8H,UAAU,CAAC;MACpE,IAAIwxC,WAAW,EAAE;QACfm3C,WAAW,GAAG,IAAAhqF,uBAAe,EAC3BgqF,WAAW,EACX,IAAAx0E,oBAAc,EAAC07B,UAAU,CAAC33C,MAAM,EAAE8H,UAAU,CAC9C,CAAC;MACH;MAEA,IAAM7J,EAAE,GAAIvB,cAAc,GAAGiL,KAAK,GAAI,CAAC,GAAGsnF,cAAc;MACxD,IAAM/wF,EAAE,GAAIxB,cAAc,GAAGkL,MAAM,GAAI,CAAC,GAAGqnF,cAAc;MACzD,IAAMyB,YAAY,GAAG,CACnBF,UAAU,CAAC,CAAC,CAAC,GAAGvyF,EAAE,EAClBuyF,UAAU,CAAC,CAAC,CAAC,GAAGtyF,EAAE,EAClBsyF,UAAU,CAAC,CAAC,CAAC,GAAGvyF,EAAE,EAClBuyF,UAAU,CAAC,CAAC,CAAC,GAAGtyF,EAAE,CACnB;;MAED;AACJ;AACA;MACI,IAAMkvF,QAAQ,GAAG,CAAC,CAAC;MAEnB,IAAI,CAACgB,aAAa,CAAC7rG,MAAM,GAAG,CAAC;;MAE7B;AACJ;AACA;;MAEI,IAAMmtG,OAAO,GAAG7B,SAAS,CAAC8C,UAAU,CAAC,CAAC;MACtC,IAAIv/F,UAAU,CAACqqF,UAAU,EAAE;QACzB,IAAMmV,OAAO,GAAGvgF,QAAQ,CAACs2E,iBAAiB,CACxC9pF,SAAS,CAACi4B,cAAc,EACxBi6D,UAAU,CAACa,UACb,CAAC;QACD,IAAMnU,UAAU,GAAG+R,eAAe,CAACp8F,UAAU,EAAEA,UAAU,CAACqqF,UAAU,CAAC;QACrE,IAAI,CAAC+T,YAAY,CAACp+F,UAAU,EAAEqqF,UAAU,EAAEmV,OAAO,EAAExD,QAAQ,EAAEsC,OAAO,CAAC;MACvE;MAEA,IAAMmB,YAAY,GAAGrD,eAAe,CAACp8F,UAAU,EAAEq/F,WAAW,CAAC;MAC7D,IAAI,CAACjB,YAAY,CAACp+F,UAAU,EAAEy/F,YAAY,EAAEplE,CAAC,EAAE2hE,QAAQ,EAAE,CAAC,CAAC;MAC3D,IAAIsC,OAAO,GAAG,CAAC,EAAE;QACfl5F,UAAU,CAAC,YAAM;UACfvI,MAAI,CAACuhG,YAAY,CACfp+F,UAAU,EACVy/F,YAAY,EACZplE,CAAC,GAAG,CAAC,EACL2hE,QAAQ,EACRsC,OAAO,GAAG,CACZ,CAAC;QACH,CAAC,EAAE,CAAC,CAAC;MACP;MAEA,IAAI,EAAEjkE,CAAC,IAAI2hE,QAAQ,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC1Z,SAAS;MACvB;;MAEA;AACJ;AACA;;MAEI,IAAMod,GAAG,GAAG,IAAAzjG,YAAM,EAAC,IAAI,CAAC;MACxB,IAAMgtF,IAAI,GAAGjpF,UAAU,CAACipF,IAAI;;MAE5B;MAAA,IAAA5jE,SAAA,GAAAtE,0BAAA,CACmBi7E,QAAQ,CAAC3hE,CAAC,CAAC;QAAA/U,KAAA;MAAA;QAA9B,KAAAD,SAAA,CAAAnE,CAAA,MAAAoE,KAAA,GAAAD,SAAA,CAAAzzB,CAAA,IAAAkf,IAAA,GAAgC;UAAA,IAArBtG,KAAI,GAAA8a,KAAA,CAAA/0B,KAAA;UACb,IAAMovG,SAAS,GAAGn1F,KAAI,CAACG,QAAQ,CAAC,CAAC;UACjC,IAAIg1F,SAAS,KAAK/0F,kBAAS,CAAC1D,KAAK,EAAE;YACjC;UACF;UACA,IAAM6jF,UAAS,GAAGvgF,KAAI,CAACugF,SAAS;UAEhC,IAAI4U,SAAS,KAAK/0F,kBAAS,CAAC3D,MAAM,EAAE;YAClC,IAAM2rD,KAAK,GAAGpoD,KAAI,CAAC+gF,QAAQ,CAACmU,GAAG,EAAEzW,IAAI,CAAC;YACtC,IAAIr2B,KAAK,KAAK,CAAC,EAAE;cACf;cACApoD,KAAI,CAACihF,aAAa,CAACiU,GAAG,CAAC;cACvB;YACF;UACF;UACA,IAAIC,SAAS,KAAK/0F,kBAAS,CAAC7D,IAAI,EAAE;YAChCm4F,YAAY,GAAG,KAAK;UACtB;UACA,IAAIS,SAAS,KAAK/0F,kBAAS,CAAC1b,KAAK,EAAE;YACjC,IAAI,CAACytG,cAAc,GAAG,KAAK;UAC7B;UAEA,IAAMiD,YAAY,GAAG,IAAI,CAAChB,cAAc,CAAC7T,UAAS,EAAEiR,QAAQ,CAAC;UAC7D,IAAI4D,YAAY,EAAE;YAChB;YACA1D,oBAAoB,CAACF,QAAQ,EAAExxF,KAAI,EAAE6vB,CAAC,CAAC;YACvCr6B,UAAU,CAAC4+B,OAAO,GAAG,IAAI;YACzB;UACF;;UAEA;UACA,IAAMihE,iBAAiB,GAAG,IAAI,CAACf,aAAa,CAC1C7/E,QAAQ,EACR8rE,UAAS,EACT1wD,CAAC,GAAG,CAAC,EACL2hE,QACF,CAAC;UAED,IAAI6D,iBAAiB,EAAE;YACrB;UACF;;UAEA;UACA,IAAMxiE,OAAO,GAAGpe,QAAQ,CAAC0jB,UAAU,CAAC,CAAC;UACrC,KAAK,IAAIm9D,OAAO,GAAGzlE,CAAC,GAAG,CAAC,EAAEylE,OAAO,IAAIziE,OAAO,EAAE,EAAEyiE,OAAO,EAAE;YACvD,IAAMC,eAAe,GAAG,IAAI,CAACjB,aAAa,CACxC7/E,QAAQ,EACR8rE,UAAS,EACT+U,OAAO,EACP9D,QACF,CAAC;YAED,IAAI+D,eAAe,EAAE;cACnB;YACF;UACF;QACF;;QAEA;AACJ;AACA;MAFI,SAAAhrG,GAAA;QAAAswB,SAAA,CAAAlvB,CAAA,CAAApB,GAAA;MAAA;QAAAswB,SAAA,CAAAjmB,CAAA;MAAA;MAIA,IAAM4gG,WAAW,GACb10F,cAAc,GAAG6zF,cAAc,GAAIj+B,UAAU,GAAI28B,cAAc;MAEnE,IAAMz0D,OAAO,GAAG,IAAI,CAACmyD,gBAAgB,CAACv7F,UAAU,CAAC;;MAEjD;MACA,IAAA4vB,kBAAgB,EACd,IAAI,CAACmqE,aAAa,EAClBxjF,KAAK,GAAG,CAAC,EACTC,MAAM,GAAG,CAAC,EACVwpF,WAAW,EACXA,WAAW,EACX,CAAC,EACD,CAACzpF,KAAK,GAAG,CAAC,EACV,CAACC,MAAM,GAAG,CACZ,CAAC;MAED,IAAI+vC,UAAU,CAAC33C,MAAM,EAAE;QACrB,IAAI,CAAC8rF,aAAa,CAACtxD,OAAO,EAAEppC,UAAU,EAAEkoD,WAAW,CAAC;MACtD;MAEA,IAAI,CAACy1C,UAAU,CAACsC,cAAc,CAAC,CAAC,EAAE;QAChC72D,OAAO,CAAC2lD,qBAAqB,GAAG,KAAK;MACvC;MAEA,IAAI,CAACqM,SAAS,CAAChyD,OAAO,EAAEppC,UAAU,CAAC;;MAEnC;MACA,IAAMkgG,EAAE,GAAGjpG,MAAM,CAACmD,IAAI,CAAC4hG,QAAQ,CAAC,CAACj8F,GAAG,CAACxI,MAAM,CAAC;MAC5C2oG,EAAE,CAAC/sG,IAAI,CAACnC,gBAAS,CAAC;MAElB,IAAImvG,WAAW;MACf,IAAMC,KAAK,GAAG,EAAE;MAChB,IAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIxuG,CAAC,GAAGquG,EAAE,CAAC/uG,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACvC,IAAMyuG,QAAQ,GAAGJ,EAAE,CAACruG,CAAC,CAAC;QACtB,IAAM0uG,oBAAoB,GAAG5C,UAAU,CAAC6C,gBAAgB,CACtDF,QAAQ,EACRp/B,UAAU,EACVxqD,UACF,CAAC;QACD,IAAMgrB,iBAAiB,GAAGziB,QAAQ,CAACof,aAAa,CAACiiE,QAAQ,CAAC;QAC1D,IAAMG,YAAY,GAAG/+D,iBAAiB,GAAGp2B,cAAc;QACvD,IAAMuB,GAAE,GAAG0zF,oBAAoB,CAAC,CAAC,CAAC,GAAGE,YAAY,GAAGT,WAAW;QAC/D,IAAMlzF,GAAE,GAAGyzF,oBAAoB,CAAC,CAAC,CAAC,GAAGE,YAAY,GAAGT,WAAW;QAC/D,IAAMU,eAAe,GAAGzhF,QAAQ,CAAC8+E,wBAAwB,CACvD,IAAAtqF,kBAAU,EAAC6rF,YAAY,CAAC,EACxBgB,QACF,CAAC;QACD,IAAMK,gBAAgB,GAAG1hF,QAAQ,CAACg2E,kBAAkB,CAACyL,eAAe,CAAC;QACrE,IAAME,MAAM,GAAG,IAAAxqF,gBAAc,EAAC,IAAI,CAAC2jF,aAAa,EAAE,CAC/C8D,cAAc,IAAI8C,gBAAgB,CAAC,CAAC,CAAC,GAAGrB,YAAY,CAAC,CAAC,CAAC,CAAC,GACvDh0F,cAAc,EACfuyF,cAAc,IAAIyB,YAAY,CAAC,CAAC,CAAC,GAAGqB,gBAAgB,CAAC,CAAC,CAAC,CAAC,GACvDr1F,cAAc,CACjB,CAAC;QACF,IAAMu1F,UAAU,GACdhD,cAAc,GAAGF,UAAU,CAACO,sBAAsB,CAACxnF,UAAU,CAAC;QAAC,IAAA4S,UAAA,GAAAvI,0BAAA,CAC9Ci7E,QAAQ,CAACsE,QAAQ,CAAC;UAAA/2E,MAAA;QAAA;UAArC,KAAAD,UAAA,CAAApI,CAAA,MAAAqI,MAAA,GAAAD,UAAA,CAAA13B,CAAA,IAAAkf,IAAA,GAAuC;YAAA,IAA5BtG,IAAI,GAAA+e,MAAA,CAAAh5B,KAAA;YACb,IAAIia,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAKC,kBAAS,CAAC3D,MAAM,EAAE;cACxC;YACF;YACA,IAAM8jF,SAAS,GAAGvgF,IAAI,CAACugF,SAAS;;YAEhC;YACA,IAAM+V,MAAM,GAAGJ,eAAe,CAAC,CAAC,CAAC,GAAG3V,SAAS,CAAC,CAAC,CAAC;YAChD,IAAMgW,KAAK,GAAG76F,IAAI,CAACmI,KAAK,CAACuyF,MAAM,CAAC,CAAC,CAAC,GAAG,CAACE,MAAM,GAAG,CAAC,IAAIj0F,GAAE,CAAC;YACvD,IAAMm0F,MAAM,GAAGN,eAAe,CAAC,CAAC,CAAC,GAAG3V,SAAS,CAAC,CAAC,CAAC;YAChD,IAAMkW,KAAK,GAAG/6F,IAAI,CAACmI,KAAK,CAACuyF,MAAM,CAAC,CAAC,CAAC,GAAG,CAACI,MAAM,GAAG,CAAC,IAAIl0F,GAAE,CAAC;YACvD,IAAMP,CAAC,GAAGrG,IAAI,CAACmI,KAAK,CAACuyF,MAAM,CAAC,CAAC,CAAC,GAAGE,MAAM,GAAGj0F,GAAE,CAAC;YAC7C,IAAML,CAAC,GAAGtG,IAAI,CAACmI,KAAK,CAACuyF,MAAM,CAAC,CAAC,CAAC,GAAGI,MAAM,GAAGl0F,GAAE,CAAC;YAC7C,IAAM60B,CAAC,GAAGo/D,KAAK,GAAGx0F,CAAC;YACnB,IAAMq1B,CAAC,GAAGq/D,KAAK,GAAGz0F,CAAC;YACnB,IAAMy+E,UAAU,GAAGiV,EAAE,CAAC/uG,MAAM,KAAK,CAAC;YAElC,IAAI+vG,YAAY,GAAG,KAAK;;YAExB;YACAf,WAAW,GAAG,CAAC5zF,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGo1B,CAAC,EAAEn1B,CAAC,EAAED,CAAC,GAAGo1B,CAAC,EAAEn1B,CAAC,GAAGo1B,CAAC,EAAEr1B,CAAC,EAAEC,CAAC,GAAGo1B,CAAC,CAAC;YACtD,KAAK,IAAI/vC,EAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGumG,KAAK,CAACjvG,MAAM,EAAEU,EAAC,GAAGgI,EAAE,EAAE,EAAEhI,EAAC,EAAE;cAC9C,IAAI,CAACo5F,UAAU,IAAIqV,QAAQ,GAAGD,MAAM,CAACxuG,EAAC,CAAC,EAAE;gBACvC,IAAMm8F,IAAI,GAAGoS,KAAK,CAACvuG,EAAC,CAAC;gBACrB,IACE,IAAAyjB,kBAAU,EACR,CAAC/I,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGo1B,CAAC,EAAEn1B,CAAC,GAAGo1B,CAAC,CAAC,EACpB,CAACosD,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CACrC,CAAC,EACD;kBACA,IAAI,CAACkT,YAAY,EAAE;oBACjB93D,OAAO,CAACohC,IAAI,CAAC,CAAC;oBACd02B,YAAY,GAAG,IAAI;kBACrB;kBACA93D,OAAO,CAAC0kD,SAAS,CAAC,CAAC;kBACnB;kBACA1kD,OAAO,CAAC2kD,MAAM,CAACoS,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;kBAC9C/2D,OAAO,CAACmnC,MAAM,CAAC4vB,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;kBAC9C/2D,OAAO,CAACmnC,MAAM,CAAC4vB,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;kBAC9C/2D,OAAO,CAACmnC,MAAM,CAAC4vB,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;kBAC9C;kBACA/2D,OAAO,CAAC2kD,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;kBAChC5kD,OAAO,CAACmnC,MAAM,CAACyd,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;kBAChC5kD,OAAO,CAACmnC,MAAM,CAACyd,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;kBAChC5kD,OAAO,CAACmnC,MAAM,CAACyd,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;kBAChC5kD,OAAO,CAAC4kD,IAAI,CAAC,CAAC;gBAChB;cACF;YACF;YACAoS,KAAK,CAAC/mG,IAAI,CAAC8mG,WAAW,CAAC;YACvBE,MAAM,CAAChnG,IAAI,CAACinG,QAAQ,CAAC;YAErB,IAAI,CAACa,QAAQ,CAAC32F,IAAI,EAAExK,UAAU,EAAEuM,CAAC,EAAEC,CAAC,EAAEm1B,CAAC,EAAEC,CAAC,EAAEi/D,UAAU,EAAE5V,UAAU,CAAC;YACnE,IAAIiW,YAAY,EAAE;cAChB93D,OAAO,CAACwhC,OAAO,CAAC,CAAC;YACnB;YACA,IAAI,CAACoyB,aAAa,CAAC3D,OAAO,CAAC7uF,IAAI,CAAC;;YAEhC;YACA,IAAI,CAAC42F,eAAe,CAACphG,UAAU,CAACkqF,SAAS,EAAEyT,UAAU,EAAEnzF,IAAI,CAAC;UAC9D;QAAC,SAAAzV,GAAA;UAAAu0B,UAAA,CAAAnzB,CAAA,CAAApB,GAAA;QAAA;UAAAu0B,UAAA,CAAAlqB,CAAA;QAAA;MACH;MAEA,IAAI,CAAC06F,kBAAkB,GAAGxuF,cAAc;MACxC,IAAI,CAACoxF,aAAa,GAChB,CAAC,IAAI,CAACE,eAAe,IAAI,CAAC,IAAAhqG,cAAM,EAAC,IAAI,CAACgqG,eAAe,EAAE0C,YAAY,CAAC;MACtE,IAAI,CAAC1C,eAAe,GAAG0C,YAAY;MACnC,IAAI,CAACzC,kBAAkB,GAAG37B,UAAU;MAEpC,IAAI,CAACm6B,UAAU,CAAC,IAAI,CAACjyD,OAAO,EAAEppC,UAAU,CAAC;MAEzC,IAAIumD,UAAU,CAAC33C,MAAM,EAAE;QACrBw6B,OAAO,CAACwhC,OAAO,CAAC,CAAC;MACnB;MACAxhC,OAAO,CAAC2lD,qBAAqB,GAAG,IAAI;MAEpC,IAAI,IAAI,CAAC4N,cAAc,EAAE;QACvB;AACN;AACA;AACA;QACM,IAAM0E,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIthG,GAAG,EAAEC,UAAU,EAAK;UAC9C,IAAMoL,aAAa,GAAG,IAAAnP,YAAM,EAAC0hG,UAAU,CAAC;UACxC,IAAMpyF,WAAW,GAAGvL,UAAU,CAACuL,WAAW,CAACH,aAAa,CAAC;UACzD,IAAMk2F,UAAU,GAAG/1F,WAAW,GAAGtU,MAAM,CAACmD,IAAI,CAACmR,WAAW,CAAC,CAACpa,MAAM,GAAG,CAAC;UACpE0L,MAAI,CAAC0kG,eAAe,CAACD,UAAU,CAAC;UAChCzkG,MAAI,CAAC0gG,UAAU,CAAC1G,WAAW,CAAC,CAAC;QAC/B,CAAC;QAED72F,UAAU,CAAC8hF,mBAAmB,CAACzoF,IAAI,CAACgoG,kBAAkB,CAAC;MACzD;MACA,IAAI,CAAC,IAAI,CAAC1E,cAAc,IAAI,CAACuC,YAAY,EAAE;QACzCl/F,UAAU,CAAC4+B,OAAO,GAAG,IAAI;MAC3B;MAEA,OAAO,IAAI,CAAC0jD,SAAS;IACvB;;IAEA;AACF;AACA;AACA;EAHE;IAAAhyF,GAAA;IAAAC,KAAA,EAIA,SAAAgxG,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAI,CAACjE,UAAU,CAACjH,aAAa,GAAGpwF,IAAI,CAACmG,GAAG,CACtC,IAAI,CAACkxF,UAAU,CAACjH,aAAa,EAC7BkL,SAAS,GAAG,CACd,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAlxG,GAAA;IAAAC,KAAA,EAWA,SAAA4wG,QAAQA,CAAC32F,IAAI,EAAExK,UAAU,EAAEuM,CAAC,EAAEC,CAAC,EAAEm1B,CAAC,EAAEC,CAAC,EAAE+sD,MAAM,EAAE1D,UAAU,EAAE;MACzD,IAAItpB,KAAK;MACT,IAAIn3D,IAAI,YAAY6hF,iBAAQ,EAAE;QAC5B1qB,KAAK,GAAG,IAAAgqB,qBAAW,EAACnhF,IAAI,CAACm9C,OAAO,CAAC,CAAC,CAAC;QACnC,IAAI,CAACga,KAAK,EAAE;UACV,MAAM,IAAI5lE,KAAK,CAAC,2CAA2C,CAAC;QAC9D;MACF,CAAC,MAAM;QACL4lE,KAAK,GAAG,IAAI,CAAC8/B,YAAY,CACvB,mDAAqDj3F,IACvD,CAAC;MACH;MACA,IAAI,CAACm3D,KAAK,EAAE;QACV;MACF;MACA,IAAMv4B,OAAO,GAAG,IAAI,CAACmyD,gBAAgB,CAACv7F,UAAU,CAAC;MACjD,IAAM0/F,GAAG,GAAG,IAAAzjG,YAAM,EAAC,IAAI,CAAC;MACxB,IAAMsqD,UAAU,GAAGvmD,UAAU,CAAC+nD,gBAAgB,CAAC/nD,UAAU,CAAC2iF,UAAU,CAAC;MACrE,IAAM/vB,KAAK,GACTrM,UAAU,CAAC9C,OAAO,IACjBwnC,UAAU,GAAGzgF,IAAI,CAAC+gF,QAAQ,CAACmU,GAAG,EAAE1/F,UAAU,CAACipF,IAAI,CAAC,GAAG,CAAC,CAAC;MACxD,IAAMyY,YAAY,GAAG9uC,KAAK,KAAKxpB,OAAO,CAACqhC,WAAW;MAClD,IAAIi3B,YAAY,EAAE;QAChBt4D,OAAO,CAACohC,IAAI,CAAC,CAAC;QACdphC,OAAO,CAACqhC,WAAW,GAAG7X,KAAK;MAC7B;MACAxpB,OAAO,CAAC87B,SAAS,CACfvD,KAAK,EACLgtB,MAAM,EACNA,MAAM,EACNhtB,KAAK,CAACprD,KAAK,GAAG,CAAC,GAAGo4E,MAAM,EACxBhtB,KAAK,CAACnrD,MAAM,GAAG,CAAC,GAAGm4E,MAAM,EACzBpiF,CAAC,EACDC,CAAC,EACDm1B,CAAC,EACDC,CACF,CAAC;MAED,IAAI8/D,YAAY,EAAE;QAChBt4D,OAAO,CAACwhC,OAAO,CAAC,CAAC;MACnB;MACA,IAAIhY,KAAK,KAAKrM,UAAU,CAAC9C,OAAO,EAAE;QAChCzjD,UAAU,CAAC4+B,OAAO,GAAG,IAAI;MAC3B,CAAC,MAAM,IAAIqsD,UAAU,EAAE;QACrBzgF,IAAI,CAACihF,aAAa,CAACiU,GAAG,CAAC;MACzB;IACF;;IAEA;AACF;AACA;EAFE;IAAApvG,GAAA;IAAAC,KAAA,EAGA,SAAAixE,QAAQA,CAAA,EAAG;MACT,IAAMp4B,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,OAAOA,OAAO,GAAGA,OAAO,CAACR,MAAM,GAAG,IAAI;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAt4C,GAAA;IAAAC,KAAA,EAMA,SAAAkxG,YAAYA,CAACj3F,IAAI,EAAE;MACjB,OAAOA,IAAI,CAACg3D,QAAQ,CAAC,CAAC;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlxE,GAAA;IAAAC,KAAA,EAMA,SAAA6wG,eAAeA,CAAClX,SAAS,EAAEyT,UAAU,EAAEnzF,IAAI,EAAE;MAC3C;MACA,IAAMY,aAAa,GAAG,IAAAnP,YAAM,EAAC0hG,UAAU,CAAC;MACxC,IAAI,EAAEvyF,aAAa,IAAI8+E,SAAS,CAAC,EAAE;QACjCA,SAAS,CAAC9+E,aAAa,CAAC,GAAG,CAAC,CAAC;MAC/B;MACA8+E,SAAS,CAAC9+E,aAAa,CAAC,CAACZ,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;IAChD;EAAC;AAAA,EAh2BmC2vF,cAAmB;AAAA,IAAAjrG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAm2B1C0tG,uBAAuB;;;;;;;;ACz9BtC;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA5tG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb8yG,OAAO,EAAE,SAAS;EAClBC,0BAA0B,EAAE;AAC9B,CAAC;;;;;;;;ACPD,IAAAnjB,OAAA,GAAA1oF,sBAAA,CAAAnC,OAAA;AACA,IAAAiuG,aAAA,GAAA9rG,sBAAA,CAAAnC,OAAA;AAA6C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ7C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaM2rG,aAAa,0BAAAljB,MAAA;EACjB;AACF;AACA;EACE,SAAAkjB,cAAYnjG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAA2xG,aAAA;IACnBnjG,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMymD,WAAW,GAAGnuD,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAEuB,OAAO,CAAC;IAE9C,IAAMm3D,SAAS,GAAGn3D,OAAO,CAACm3D,SAAS;IACnC,OAAOn3D,OAAO,CAACm3D,SAAS;IAExB,OAAO1Q,WAAW,CAACk5C,OAAO;IAC1B,OAAOl5C,WAAW,CAAC28C,sBAAsB;IACzCppG,KAAA,GAAAnB,UAAA,OAAAsqG,aAAA,GAAM18C,WAAW;;IAEjB;AACJ;AACA;IACIzsD,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAKsqE,UAAU,GAAGnN,SAAS;IAE3Bn9D,KAAA,CAAKqpG,UAAU,CAACrjG,OAAO,CAAC2/F,OAAO,KAAKpkG,SAAS,GAAGyE,OAAO,CAAC2/F,OAAO,GAAG,CAAC,CAAC;IACpE3lG,KAAA,CAAKspG,yBAAyB,CAC5BtjG,OAAO,CAACojG,sBAAsB,KAAK7nG,SAAS,GACxCyE,OAAO,CAACojG,sBAAsB,GAC9B,IACN,CAAC;IAAC,OAAAppG,KAAA;EACJ;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAwpG,aAAA,EAAAljB,MAAA;EAAA,OAAAvuF,YAAA,CAAAyxG,aAAA;IAAAxxG,GAAA;IAAAC,KAAA,EAIA,SAAA2xG,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACj/B,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3yE,GAAA;IAAAC,KAAA,EAMA,SAAAgvG,UAAUA,CAAA,EAAG;MACX,OAAO,qBAAuB,IAAI,CAACviG,GAAG,CAACmlG,qBAAY,CAACR,OAAO,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArxG,GAAA;IAAAC,KAAA,EAMA,SAAAyxG,UAAUA,CAAC1D,OAAO,EAAE;MAClB,IAAI,CAACzgG,GAAG,CAACskG,qBAAY,CAACR,OAAO,EAAErD,OAAO,CAAC;IACzC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhuG,GAAA;IAAAC,KAAA,EAMA,SAAA6xG,yBAAyBA,CAAA,EAAG;MAC1B,OAAO,sBACL,IAAI,CAACplG,GAAG,CAACmlG,qBAAY,CAACP,0BAA0B,CAAC;IAErD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtxG,GAAA;IAAAC,KAAA,EAMA,SAAA0xG,yBAAyBA,CAACF,sBAAsB,EAAE;MAChD,IAAI,CAAClkG,GAAG,CAACskG,qBAAY,CAACP,0BAA0B,EAAEG,sBAAsB,CAAC;IAC3E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBE;IAAAzxG,GAAA;IAAAC,KAAA,EAiBA,SAAAo3D,OAAOA,CAAC5mD,KAAK,EAAE;MACb,OAAAb,aAAA,CAAA4hG,aAAA,uBAAqB/gG,KAAK;IAC5B;EAAC;AAAA,EAlHyB+lD,eAAK;AAAA,IAAAn4D,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAqHlBizG,aAAa;;;;;;;;AClL5B,IAAAO,UAAA,GAAAtsG,sBAAA,CAAAnC,OAAA;AACA,IAAA0uG,SAAA,GAAAvsG,sBAAA,CAAAnC,OAAA;AAA0C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ1C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMosG,SAAS,0BAAAC,cAAA;EACb;AACF;AACA;EACE,SAAAD,UAAY5jG,OAAO,EAAE;IAAAxO,eAAA,OAAAoyG,SAAA;IAAA,OAAA/qG,UAAA,OAAA+qG,SAAA,GACb5jG,OAAO;EACf;;EAEA;AACF;AACA;EAFErG,SAAA,CAAAiqG,SAAA,EAAAC,cAAA;EAAA,OAAAnyG,YAAA,CAAAkyG,SAAA;IAAAjyG,GAAA;IAAAC,KAAA,EAGA,SAAA24D,cAAcA,CAAA,EAAG;MACf,OAAO,IAAIqzC,kBAAuB,CAAC,IAAI,EAAE;QACvCzmC,SAAS,EAAE,IAAI,CAACosC,YAAY,CAAC;MAC/B,CAAC,CAAC;IACJ;EAAC;AAAA,EAfqBJ,iBAAa;AAAA,IAAAnzG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkBtB0zG,SAAS;;;;;;;;ACjCxB,IAAA5G,UAAA,GAAAnyF,uBAAA,CAAA5V,OAAA;AAGA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA+jC,iBAAA,GAAA/jC,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAAioG,UAAA,GAAAjoG,OAAA;AACA,IAAA6nC,OAAA,GAAA7nC,OAAA;AAA8C,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAb9C;AACA;AACA;AAaA;AACA;AACA;AACA;AACA,IAAM4rG,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE9B;AACA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,QAAQ;EACZ;AACF;AACA;EACE,SAAAA,SAAYhkG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAwyG,QAAA;IACnB;AACJ;AACA;AACA;IACI,IAAI,CAACtlE,OAAO,GAAG1+B,OAAO,CAAC0+B,OAAO,KAAKnjC,SAAS,GAAGyE,OAAO,CAAC0+B,OAAO,GAAG,CAAC;;IAElE;AACJ;AACA;AACA;IACI,IAAI,CAACJ,YAAY,GAAGt+B,OAAO,CAACu7B,WAAW;IACvC,IAAA/yB,eAAM,EACJ,IAAA/T,eAAQ,EACN,IAAI,CAAC6pC,YAAY;IACjB;AACR;AACA;AACA;AACA;IACQ,UAAC5rC,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC,GAAGD,CAAC;IAAA,GACf,IACF,CAAC,EACD,kDACF,CAAC;;IAED;IACA,IAAI2rC,UAAU;IACd,IAAI,CAACr+B,OAAO,CAACikG,OAAO,EAAE;MACpB,KAAK,IAAI/wG,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAACojC,YAAY,CAAC9rC,MAAM,GAAG,CAAC,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC9D,IAAI,CAACmrC,UAAU,EAAE;UACfA,UAAU,GAAG,IAAI,CAACC,YAAY,CAACprC,CAAC,CAAC,GAAG,IAAI,CAACorC,YAAY,CAACprC,CAAC,GAAG,CAAC,CAAC;QAC9D,CAAC,MAAM;UACL,IAAI,IAAI,CAACorC,YAAY,CAACprC,CAAC,CAAC,GAAG,IAAI,CAACorC,YAAY,CAACprC,CAAC,GAAG,CAAC,CAAC,KAAKmrC,UAAU,EAAE;YAClEA,UAAU,GAAG9iC,SAAS;YACtB;UACF;QACF;MACF;IACF;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAAC6iC,WAAW,GAAGC,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAAC0F,OAAO,GAAG,IAAI,CAACzF,YAAY,CAAC9rC,MAAM,GAAG,CAAC;;IAE3C;AACJ;AACA;AACA;IACI,IAAI,CAACw7E,OAAO,GAAGhuE,OAAO,CAACiiG,MAAM,KAAK1mG,SAAS,GAAGyE,OAAO,CAACiiG,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAACiC,QAAQ,GAAG,IAAI;IACpB,IAAIlkG,OAAO,CAACikG,OAAO,KAAK1oG,SAAS,EAAE;MACjC,IAAI,CAAC2oG,QAAQ,GAAGlkG,OAAO,CAACikG,OAAO;MAC/B,IAAAz7F,eAAM,EACJ,IAAI,CAAC07F,QAAQ,CAAC1xG,MAAM,IAAI,IAAI,CAAC8rC,YAAY,CAAC9rC,MAAM,EAChD,qDACF,CAAC;IACH;IAEA,IAAMyd,MAAM,GAAGjQ,OAAO,CAACiQ,MAAM;IAE7B,IAAIA,MAAM,KAAK1U,SAAS,IAAI,CAAC,IAAI,CAACyyE,OAAO,IAAI,CAAC,IAAI,CAACk2B,QAAQ,EAAE;MAC3D,IAAI,CAACl2B,OAAO,GAAG,IAAAl5D,kBAAU,EAAC7E,MAAM,CAAC;IACnC;IAEA,IAAAzH,eAAM,EACH,CAAC,IAAI,CAACwlE,OAAO,IAAI,IAAI,CAACk2B,QAAQ,IAAM,IAAI,CAACl2B,OAAO,IAAI,CAAC,IAAI,CAACk2B,QAAS,EACpE,6DACF,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAInkG,OAAO,CAACokG,SAAS,KAAK7oG,SAAS,EAAE;MACnC,IAAI,CAAC4oG,UAAU,GAAGnkG,OAAO,CAACokG,SAAS;MACnC,IAAA57F,eAAM,EACJ,IAAI,CAAC27F,UAAU,CAAC3xG,MAAM,IAAI,IAAI,CAAC8rC,YAAY,CAAC9rC,MAAM,EAClD,uDACF,CAAC;IACH;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAAC6xG,SAAS,GACZrkG,OAAO,CAACs/F,QAAQ,KAAK/jG,SAAS,GAC1ByE,OAAO,CAACs/F,QAAQ,GAChB,CAAC,IAAI,CAAC6E,UAAU,GACd7nE,yBAAiB,GACjB,IAAI;IACZ,IAAA9zB,eAAM,EACH,CAAC,IAAI,CAAC67F,SAAS,IAAI,IAAI,CAACF,UAAU,IAChC,IAAI,CAACE,SAAS,IAAI,CAAC,IAAI,CAACF,UAAW,EACtC,iEACF,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACnlF,OAAO,GAAG/O,MAAM,KAAK1U,SAAS,GAAG0U,MAAM,GAAG,IAAI;;IAEnD;AACJ;AACA;AACA;IACI,IAAI,CAACq0F,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE9B,IAAIxkG,OAAO,CAACykG,KAAK,KAAKlpG,SAAS,EAAE;MAC/B,IAAI,CAAC+oG,eAAe,GAAGtkG,OAAO,CAACykG,KAAK,CAACrjG,GAAG,CAAC,UAACiP,IAAI,EAAEqrB,CAAC,EAAK;QACpD,IAAMozD,SAAS,GAAG,IAAIF,kBAAS,CAC7BrnF,IAAI,CAACkG,GAAG,CAAC,CAAC,EAAE4C,IAAI,CAAC,CAAC,CAAC,CAAC,EACpB9I,IAAI,CAACmG,GAAG,CAAC2C,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EACzB9I,IAAI,CAACkG,GAAG,CAAC,CAAC,EAAE4C,IAAI,CAAC,CAAC,CAAC,CAAC,EACpB9I,IAAI,CAACmG,GAAG,CAAC2C,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAC1B,CAAC;QACD,IAAIJ,MAAM,EAAE;UACV,IAAMy0F,mBAAmB,GAAG1qG,KAAI,CAAC+8F,yBAAyB,CAAC9mF,MAAM,EAAEyrB,CAAC,CAAC;UACrEozD,SAAS,CAACl+E,IAAI,GAAGrJ,IAAI,CAACmG,GAAG,CAACg3F,mBAAmB,CAAC9zF,IAAI,EAAEk+E,SAAS,CAACl+E,IAAI,CAAC;UACnEk+E,SAAS,CAACj+E,IAAI,GAAGtJ,IAAI,CAACkG,GAAG,CAACi3F,mBAAmB,CAAC7zF,IAAI,EAAEi+E,SAAS,CAACj+E,IAAI,CAAC;UACnEi+E,SAAS,CAACh+E,IAAI,GAAGvJ,IAAI,CAACmG,GAAG,CAACg3F,mBAAmB,CAAC5zF,IAAI,EAAEg+E,SAAS,CAACh+E,IAAI,CAAC;UACnEg+E,SAAS,CAAC/9E,IAAI,GAAGxJ,IAAI,CAACkG,GAAG,CAACi3F,mBAAmB,CAAC3zF,IAAI,EAAE+9E,SAAS,CAAC/9E,IAAI,CAAC;QACrE;QACA,OAAO+9E,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI7+E,MAAM,EAAE;MACjB,IAAI,CAAC00F,oBAAoB,CAAC10F,MAAM,CAAC;IACnC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE,OAAAve,YAAA,CAAAsyG,QAAA;IAAAryG,GAAA;IAAAC,KAAA,EAQA,SAAAgzG,gBAAgBA,CAAC30F,MAAM,EAAEovB,IAAI,EAAE5qB,QAAQ,EAAE;MACvC,IAAMq6E,SAAS,GAAG,IAAI,CAACiI,yBAAyB,CAAC9mF,MAAM,EAAEovB,IAAI,CAAC;MAC9D,KAAK,IAAInsC,CAAC,GAAG47F,SAAS,CAACl+E,IAAI,EAAE1V,EAAE,GAAG4zF,SAAS,CAACj+E,IAAI,EAAE3d,CAAC,IAAIgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC9D,KAAK,IAAIwb,CAAC,GAAGogF,SAAS,CAACh+E,IAAI,EAAEoM,EAAE,GAAG4xE,SAAS,CAAC/9E,IAAI,EAAErC,CAAC,IAAIwO,EAAE,EAAE,EAAExO,CAAC,EAAE;UAC9D+F,QAAQ,CAAC,CAAC4qB,IAAI,EAAEnsC,CAAC,EAAEwb,CAAC,CAAC,CAAC;QACxB;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA/c,GAAA;IAAAC,KAAA,EAOA,SAAAizG,+BAA+BA,CAC7BzY,SAAS,EACT33E,QAAQ,EACRqwF,aAAa,EACbtG,UAAU,EACV;MACA,IAAI1P,SAAS,EAAElhF,CAAC,EAAEC,CAAC;MACnB,IAAIk3F,eAAe,GAAG,IAAI;MAC1B,IAAIrpE,CAAC,GAAG0wD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MACxB,IAAI,IAAI,CAAChuD,WAAW,KAAK,CAAC,EAAE;QAC1BxwB,CAAC,GAAGw+E,SAAS,CAAC,CAAC,CAAC;QAChBv+E,CAAC,GAAGu+E,SAAS,CAAC,CAAC,CAAC;MAClB,CAAC,MAAM;QACL2Y,eAAe,GAAG,IAAI,CAACzO,kBAAkB,CAAClK,SAAS,EAAEoS,UAAU,CAAC;MAClE;MACA,OAAO9iE,CAAC,IAAI,IAAI,CAACgD,OAAO,EAAE;QACxB,IAAI9wB,CAAC,KAAKrS,SAAS,IAAIsS,CAAC,KAAKtS,SAAS,EAAE;UACtCqS,CAAC,GAAGrG,IAAI,CAACoI,KAAK,CAAC/B,CAAC,GAAG,CAAC,CAAC;UACrBC,CAAC,GAAGtG,IAAI,CAACoI,KAAK,CAAC9B,CAAC,GAAG,CAAC,CAAC;UACrBihF,SAAS,GAAG,IAAAkW,yBAAuB,EAACp3F,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEi3F,aAAa,CAAC;QAChE,CAAC,MAAM;UACLhW,SAAS,GAAG,IAAI,CAACiI,yBAAyB,CACxCgO,eAAe,EACfrpE,CAAC,EACDopE,aACF,CAAC;QACH;QACA,IAAIrwF,QAAQ,CAACinB,CAAC,EAAEozD,SAAS,CAAC,EAAE;UAC1B,OAAO,IAAI;QACb;QACA,EAAEpzD,CAAC;MACL;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/pC,GAAA;IAAAC,KAAA,EAKA,SAAAqmB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC+G,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArtB,GAAA;IAAAC,KAAA,EAKA,SAAAgyC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACG,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApyC,GAAA;IAAAC,KAAA,EAKA,SAAAoyC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACtF,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/sC,GAAA;IAAAC,KAAA,EAMA,SAAAu7E,SAASA,CAACzxC,CAAC,EAAE;MACX,IAAI,IAAI,CAACsyC,OAAO,EAAE;QAChB,OAAO,IAAI,CAACA,OAAO;MACrB;MACA,OAAO,IAAI,CAACk2B,QAAQ,CAACxoE,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/pC,GAAA;IAAAC,KAAA,EAMA,SAAA8tC,aAAaA,CAAChE,CAAC,EAAE;MACf,OAAO,IAAI,CAAC4C,YAAY,CAAC5C,CAAC,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/pC,GAAA;IAAAC,KAAA,EAKA,SAAAyyC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC/F,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3sC,GAAA;IAAAC,KAAA,EAMA,SAAAqzG,0BAA0BA,CAAC7Y,SAAS,EAAE0Y,aAAa,EAAEtG,UAAU,EAAE;MAC/D,IAAIpS,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACroD,OAAO,EAAE;QAC/B,IAAI,IAAI,CAAC3F,WAAW,KAAK,CAAC,EAAE;UAC1B,IAAMxtB,IAAI,GAAGw7E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;UAC7B,IAAMt7E,IAAI,GAAGs7E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;UAC7B,OAAO,IAAA4Y,yBAAuB,EAC5Bp0F,IAAI,EACJA,IAAI,GAAG,CAAC,EACRE,IAAI,EACJA,IAAI,GAAG,CAAC,EACRg0F,aACF,CAAC;QACH;QACA,IAAMC,eAAe,GAAG,IAAI,CAACzO,kBAAkB,CAC7ClK,SAAS,EACToS,UAAU,IAAI,IAAI,CAACgG,UACrB,CAAC;QACD,OAAO,IAAI,CAACzN,yBAAyB,CACnCgO,eAAe,EACf3Y,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB0Y,aACF,CAAC;MACH;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAnzG,GAAA;IAAAC,KAAA,EAMA,SAAAyuG,4BAA4BA,CAACjU,SAAS,EAAE1wD,CAAC,EAAEopE,aAAa,EAAE;MACxD,IAAIppE,CAAC,GAAG,IAAI,CAACqI,OAAO,IAAIrI,CAAC,GAAG,IAAI,CAACgD,OAAO,EAAE;QACxC,OAAO,IAAI;MACb;MAEA,IAAMwmE,UAAU,GAAG9Y,SAAS,CAAC,CAAC,CAAC;MAC/B,IAAM+Y,UAAU,GAAG/Y,SAAS,CAAC,CAAC,CAAC;MAC/B,IAAMgZ,UAAU,GAAGhZ,SAAS,CAAC,CAAC,CAAC;MAE/B,IAAI1wD,CAAC,KAAKwpE,UAAU,EAAE;QACpB,OAAO,IAAAF,yBAAuB,EAC5BG,UAAU,EACVC,UAAU,EACVD,UAAU,EACVC,UAAU,EACVN,aACF,CAAC;MACH;MAEA,IAAI,IAAI,CAAC1mE,WAAW,EAAE;QACpB,IAAM5uB,MAAM,GAAGjI,IAAI,CAACkI,GAAG,CAAC,IAAI,CAAC2uB,WAAW,EAAE1C,CAAC,GAAGwpE,UAAU,CAAC;QACzD,IAAMt0F,IAAI,GAAGrJ,IAAI,CAACoI,KAAK,CAACw1F,UAAU,GAAG31F,MAAM,CAAC;QAC5C,IAAMsB,IAAI,GAAGvJ,IAAI,CAACoI,KAAK,CAACy1F,UAAU,GAAG51F,MAAM,CAAC;QAC5C,IAAIksB,CAAC,GAAGwpE,UAAU,EAAE;UAClB,OAAO,IAAAF,yBAAuB,EAACp0F,IAAI,EAAEA,IAAI,EAAEE,IAAI,EAAEA,IAAI,EAAEg0F,aAAa,CAAC;QACvE;QAEA,IAAMj0F,IAAI,GAAGtJ,IAAI,CAACoI,KAAK,CAACH,MAAM,IAAI21F,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACtD,IAAMp0F,IAAI,GAAGxJ,IAAI,CAACoI,KAAK,CAACH,MAAM,IAAI41F,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACtD,OAAO,IAAAJ,yBAAuB,EAACp0F,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE+zF,aAAa,CAAC;MACvE;MAEA,IAAMC,eAAe,GAAG,IAAI,CAACzO,kBAAkB,CAAClK,SAAS,EAAE,IAAI,CAACoY,UAAU,CAAC;MAC3E,OAAO,IAAI,CAACzN,yBAAyB,CAACgO,eAAe,EAAErpE,CAAC,EAAEopE,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnzG,GAAA;IAAAC,KAAA,EAOA,SAAAmlG,yBAAyBA,CAAC9mF,MAAM,EAAEyrB,CAAC,EAAEopE,aAAa,EAAE;MAClD,IAAI,CAACO,sBAAsB,CAACp1F,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEyrB,CAAC,EAAE,KAAK,EAAEooE,YAAY,CAAC;MACzE,IAAMlzF,IAAI,GAAGkzF,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAMhzF,IAAI,GAAGgzF,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAI,CAACuB,sBAAsB,CAACp1F,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEyrB,CAAC,EAAE,IAAI,EAAEooE,YAAY,CAAC;MACxE,IAAMjzF,IAAI,GAAGizF,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAM/yF,IAAI,GAAG+yF,YAAY,CAAC,CAAC,CAAC;MAC5B,OAAO,IAAAkB,yBAAuB,EAACp0F,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE+zF,aAAa,CAAC;IACvE;;IAEA;AACF;AACA;AACA;EAHE;IAAAnzG,GAAA;IAAAC,KAAA,EAIA,SAAAouG,kBAAkBA,CAAC5T,SAAS,EAAE;MAC5B,IAAM6V,MAAM,GAAG,IAAI,CAAC90B,SAAS,CAACif,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAMh8E,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC0sD,SAAS,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMkT,QAAQ,GAAG,IAAAxnC,YAAM,EAAC,IAAI,CAACs/B,WAAW,CAAChL,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmY,QAAQ,CAAC;MACtE,OAAO,CACLtC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC7V,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIkT,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU,EAC3D6xF,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC7V,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIkT,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU,CAC5D;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAze,GAAA;IAAAC,KAAA,EAQA,SAAA0kG,kBAAkBA,CAAClK,SAAS,EAAEoS,UAAU,EAAE;MACxC,IAAMyD,MAAM,GAAG,IAAI,CAAC90B,SAAS,CAACif,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAMh8E,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAC0sD,SAAS,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMkT,QAAQ,GAAG,IAAAxnC,YAAM,EAAC,IAAI,CAACs/B,WAAW,CAAChL,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmY,QAAQ,CAAC;MACtE,IAAM3zF,IAAI,GAAGqxF,MAAM,CAAC,CAAC,CAAC,GAAG7V,SAAS,CAAC,CAAC,CAAC,GAAGkT,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU;MAChE,IAAMU,IAAI,GAAGmxF,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC7V,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIkT,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU;MACtE,IAAMS,IAAI,GAAGD,IAAI,GAAG0uF,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU;MAC5C,IAAMW,IAAI,GAAGD,IAAI,GAAGwuF,QAAQ,CAAC,CAAC,CAAC,GAAGlvF,UAAU;MAC5C,OAAO,IAAAyC,sBAAc,EAACjC,IAAI,EAAEE,IAAI,EAAED,IAAI,EAAEE,IAAI,EAAEytF,UAAU,CAAC;IAC3D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAA7sG,GAAA;IAAAC,KAAA,EAWA,SAAA0zG,iCAAiCA,CAAChjG,UAAU,EAAE8N,UAAU,EAAEm1F,aAAa,EAAE;MACvE,OAAO,IAAI,CAACC,+BAA+B,CACzCljG,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACb8N,UAAU,EACV,KAAK,EACLm1F,aACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZE;IAAA5zG,GAAA;IAAAC,KAAA,EAaA,SAAA4zG,+BAA+BA,CAC7B53F,CAAC,EACDC,CAAC,EACDuC,UAAU,EACVq1F,yBAAyB,EACzBF,aAAa,EACb;MACA,IAAM7pE,CAAC,GAAG,IAAI,CAACk7D,iBAAiB,CAACxmF,UAAU,CAAC;MAC5C,IAAMkL,KAAK,GAAGlL,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAChE,CAAC,CAAC;MAChD,IAAMumE,MAAM,GAAG,IAAI,CAAC90B,SAAS,CAACzxC,CAAC,CAAC;MAChC,IAAM4jE,QAAQ,GAAG,IAAAxnC,YAAM,EAAC,IAAI,CAACs/B,WAAW,CAAC17D,CAAC,CAAC,EAAE,IAAI,CAAC6oE,QAAQ,CAAC;MAE3D,IAAIY,UAAU,GAAI7pF,KAAK,IAAI1N,CAAC,GAAGq0F,MAAM,CAAC,CAAC,CAAC,CAAC,GAAI7xF,UAAU,GAAGkvF,QAAQ,CAAC,CAAC,CAAC;MACrE,IAAI8F,UAAU,GAAI9pF,KAAK,IAAI2mF,MAAM,CAAC,CAAC,CAAC,GAAGp0F,CAAC,CAAC,GAAIuC,UAAU,GAAGkvF,QAAQ,CAAC,CAAC,CAAC;MAErE,IAAImG,yBAAyB,EAAE;QAC7BN,UAAU,GAAG,IAAAv1F,UAAI,EAACu1F,UAAU,EAAEpB,QAAQ,CAAC,GAAG,CAAC;QAC3CqB,UAAU,GAAG,IAAAx1F,UAAI,EAACw1F,UAAU,EAAErB,QAAQ,CAAC,GAAG,CAAC;MAC7C,CAAC,MAAM;QACLoB,UAAU,GAAG,IAAAx1F,WAAK,EAACw1F,UAAU,EAAEpB,QAAQ,CAAC;QACxCqB,UAAU,GAAG,IAAAz1F,WAAK,EAACy1F,UAAU,EAAErB,QAAQ,CAAC;MAC1C;MAEA,OAAO,IAAA2B,yBAAuB,EAAChqE,CAAC,EAAEypE,UAAU,EAAEC,UAAU,EAAEG,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAA5zG,GAAA;IAAAC,KAAA,EAeA,SAAAyzG,sBAAsBA,CAACz3F,CAAC,EAAEC,CAAC,EAAE6tB,CAAC,EAAE+pE,yBAAyB,EAAEF,aAAa,EAAE;MACxE,IAAMtD,MAAM,GAAG,IAAI,CAAC90B,SAAS,CAACzxC,CAAC,CAAC;MAChC,IAAMtrB,UAAU,GAAG,IAAI,CAACsvB,aAAa,CAAChE,CAAC,CAAC;MACxC,IAAM4jE,QAAQ,GAAG,IAAAxnC,YAAM,EAAC,IAAI,CAACs/B,WAAW,CAAC17D,CAAC,CAAC,EAAE,IAAI,CAAC6oE,QAAQ,CAAC;MAE3D,IAAIY,UAAU,GAAG,CAACv3F,CAAC,GAAGq0F,MAAM,CAAC,CAAC,CAAC,IAAI7xF,UAAU,GAAGkvF,QAAQ,CAAC,CAAC,CAAC;MAC3D,IAAI8F,UAAU,GAAG,CAACnD,MAAM,CAAC,CAAC,CAAC,GAAGp0F,CAAC,IAAIuC,UAAU,GAAGkvF,QAAQ,CAAC,CAAC,CAAC;MAE3D,IAAImG,yBAAyB,EAAE;QAC7BN,UAAU,GAAG,IAAAv1F,UAAI,EAACu1F,UAAU,EAAEpB,QAAQ,CAAC,GAAG,CAAC;QAC3CqB,UAAU,GAAG,IAAAx1F,UAAI,EAACw1F,UAAU,EAAErB,QAAQ,CAAC,GAAG,CAAC;MAC7C,CAAC,MAAM;QACLoB,UAAU,GAAG,IAAAx1F,WAAK,EAACw1F,UAAU,EAAEpB,QAAQ,CAAC;QACxCqB,UAAU,GAAG,IAAAz1F,WAAK,EAACy1F,UAAU,EAAErB,QAAQ,CAAC;MAC1C;MAEA,OAAO,IAAA2B,yBAAuB,EAAChqE,CAAC,EAAEypE,UAAU,EAAEC,UAAU,EAAEG,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA5zG,GAAA;IAAAC,KAAA,EAQA,SAAAwtG,wBAAwBA,CAAC98F,UAAU,EAAEo5B,CAAC,EAAE6pE,aAAa,EAAE;MACrD,OAAO,IAAI,CAACF,sBAAsB,CAChC/iG,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACbo5B,CAAC,EACD,KAAK,EACL6pE,aACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA5zG,GAAA;IAAAC,KAAA,EAIA,SAAA+zG,sBAAsBA,CAACvZ,SAAS,EAAE;MAChC,OAAO,IAAI,CAAC9tD,YAAY,CAAC8tD,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAz6F,GAAA;IAAAC,KAAA,EAQA,SAAAwlG,WAAWA,CAAC17D,CAAC,EAAE;MACb,IAAI,IAAI,CAAC2oE,SAAS,EAAE;QAClB,OAAO,IAAI,CAACA,SAAS;MACvB;MACA,OAAO,IAAI,CAACF,UAAU,CAACzoE,CAAC,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAA/pC,GAAA;IAAAC,KAAA,EAIA,SAAA4nG,gBAAgBA,CAAC99D,CAAC,EAAE;MAClB,IAAI,CAAC,IAAI,CAAC4oE,eAAe,EAAE;QACzB,OAAO,IAAI,CAACtlF,OAAO,GACf,IAAI,CAAC+3E,yBAAyB,CAAC,IAAI,CAAC/3E,OAAO,EAAE0c,CAAC,CAAC,GAC/C,IAAI;MACV;MACA,OAAO,IAAI,CAAC4oE,eAAe,CAAC5oE,CAAC,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBE;IAAA/pC,GAAA;IAAAC,KAAA,EAiBA,SAAAglG,iBAAiBA,CAACxmF,UAAU,EAAEw1F,aAAa,EAAE;MAC3C,IAAMlqE,CAAC,GAAG,IAAA7oC,wBAAiB,EACzB,IAAI,CAACyrC,YAAY,EACjBluB,UAAU,EACVw1F,aAAa,IAAI,CACnB,CAAC;MACD,OAAO,IAAAp4F,WAAK,EAACkuB,CAAC,EAAE,IAAI,CAACgD,OAAO,EAAE,IAAI,CAACqF,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApyC,GAAA;IAAAC,KAAA,EAMA,SAAAkuG,2BAA2BA,CAAC1T,SAAS,EAAErD,QAAQ,EAAE;MAC/C,OAAO,IAAApxD,sCAAoB,EACzBoxD,QAAQ,EACR,CAAC,EACDA,QAAQ,CAACv2F,MAAM,EACf,CAAC,EACD,IAAI,CAAC8jG,kBAAkB,CAAClK,SAAS,CACnC,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAz6F,GAAA;IAAAC,KAAA,EAIA,SAAA+yG,oBAAoBA,CAAC10F,MAAM,EAAE;MAC3B,IAAMzd,MAAM,GAAG,IAAI,CAAC8rC,YAAY,CAAC9rC,MAAM;MACvC,IAAMqzG,cAAc,GAAG,IAAIlyG,KAAK,CAACnB,MAAM,CAAC;MACxC,KAAK,IAAIkpC,CAAC,GAAG,IAAI,CAACgD,OAAO,EAAEhD,CAAC,GAAGlpC,MAAM,EAAE,EAAEkpC,CAAC,EAAE;QAC1CmqE,cAAc,CAACnqE,CAAC,CAAC,GAAG,IAAI,CAACq7D,yBAAyB,CAAC9mF,MAAM,EAAEyrB,CAAC,CAAC;MAC/D;MACA,IAAI,CAAC4oE,eAAe,GAAGuB,cAAc;IACvC;EAAC;AAAA;AAAA,IAAA71G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY8zG,QAAQ;;;;;;;;;AC5pBvB,IAAA90E,KAAA,GAAAj6B,OAAA;AACA,IAAA6wG,UAAA,GAAA1uG,sBAAA,CAAAnC,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALrC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMuuG,YAAY,0BAAAC,SAAA;EAChB;AACF;AACA;EACE,SAAAD,aAAY/lG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAu0G,YAAA;IACnB/rG,KAAA,GAAAnB,UAAA,OAAAktG,YAAA,GAAM;MACJ91F,MAAM,EAAEjQ,OAAO,CAACiQ,MAAM;MACtBgyF,MAAM,EAAEjiG,OAAO,CAACiiG,MAAM;MACtBgC,OAAO,EAAEjkG,OAAO,CAACikG,OAAO;MACxB1oE,WAAW,EAAEv7B,OAAO,CAACu7B,WAAW;MAChC+jE,QAAQ,EAAEt/F,OAAO,CAACs/F,QAAQ;MAC1B8E,SAAS,EAAEpkG,OAAO,CAACokG,SAAS;MAC5BK,KAAK,EAAEzkG,OAAO,CAACykG;IACjB,CAAC;;IAED;AACJ;AACA;AACA;IACIzqG,KAAA,CAAKisG,UAAU,GAAGjmG,OAAO,CAACkmG,SAAS;IAAC,OAAAlsG,KAAA;EACtC;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAosG,YAAA,EAAAC,SAAA;EAAA,OAAAt0G,YAAA,CAAAq0G,YAAA;IAAAp0G,GAAA;IAAAC,KAAA,EAIA,SAAAu0G,WAAWA,CAACzqE,CAAC,EAAE;MACb,OAAO,IAAI,CAACuqE,UAAU,CAACvqE,CAAC,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/pC,GAAA;IAAAC,KAAA,EAKA,SAAAw0G,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACH,UAAU;IACxB;EAAC;AAAA,EArCwBjC,kBAAQ;AAAA,IAAAh0G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwCpB61G,YAAY;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,+BAA+BA,CAC7CC,SAAS,EACTr2F,MAAM,EACNs2F,YAAY,EACZ;EACA;EACA,IAAMhrE,WAAW,GAAG,EAAE;EACtB;EACA,IAAM2qE,SAAS,GAAG,EAAE;EACpB;EACA,IAAMjC,OAAO,GAAG,EAAE;EAClB;EACA,IAAMG,SAAS,GAAG,EAAE;EACpB;EACA,IAAMK,KAAK,GAAG,EAAE;EAEhB8B,YAAY,GAAGA,YAAY,KAAKhrG,SAAS,GAAGgrG,YAAY,GAAG,EAAE;EAE7D,IAAMC,oBAAoB,GAAG,cAAc;EAC3C,IAAMC,iBAAiB,GAAG,YAAY;EACtC,IAAMC,kBAAkB,GAAG,YAAY;EACvC,IAAMC,wBAAwB,GAAG,kBAAkB;EACnD,IAAMC,qBAAqB,GAAG,eAAe;EAC7C,IAAMC,iBAAiB,GAAG,WAAW;EACrC,IAAMC,kBAAkB,GAAG,YAAY;EAEvC,IAAMroF,IAAI,GAAG6nF,SAAS,CAACE,oBAAoB,CAAC;EAC5C,IAAMzuF,UAAU,GAAG,IAAA6Y,SAAa,EAACnS,IAAI,CAAC;EACtC,IAAMmB,aAAa,GAAG7H,UAAU,CAACgI,gBAAgB,CAAC,CAAC;EACnD;EACA,IAAMgnF,cAAc,GAAGhvF,UAAU,CAACkI,kBAAkB,CAAC,CAAC,CAACoS,UAAU,CAAC,IAAI,CAAC;EAEvEi0E,SAAS,CAACG,iBAAiB,CAAC,CAACjyG,IAAI,CAAC,UAAU9B,CAAC,EAAEC,CAAC,EAAE;IAChD,OAAOA,CAAC,CAACg0G,wBAAwB,CAAC,GAAGj0G,CAAC,CAACi0G,wBAAwB,CAAC;EAClE,CAAC,CAAC;EAEFL,SAAS,CAACG,iBAAiB,CAAC,CAACjmG,OAAO,CAAC,UAAUwmG,GAAG,EAAE;IAClD,IAAIC,eAAe;IACnB;IACA;IACA,IAAIV,YAAY,CAAC/zG,MAAM,GAAG,CAAC,EAAE;MAC3By0G,eAAe,GAAGV,YAAY,CAACj9C,IAAI,CAAC,UAAU49C,MAAM,EAAE;QACpD,IAAIF,GAAG,CAACN,kBAAkB,CAAC,IAAIQ,MAAM,CAACT,iBAAiB,CAAC,EAAE;UACxD,OAAO,IAAI;QACb;QACA;QACA;QACA,IAAI,CAACO,GAAG,CAACN,kBAAkB,CAAC,CAACjsG,QAAQ,CAAC,GAAG,CAAC,EAAE;UAC1C,OACE6rG,SAAS,CAACI,kBAAkB,CAAC,GAAG,GAAG,GAAGM,GAAG,CAACN,kBAAkB,CAAC,KAC7DQ,MAAM,CAACT,iBAAiB,CAAC;QAE7B;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ,CAAC,MAAM;MACLQ,eAAe,GAAG,IAAI;IACxB;IAEA,IAAIA,eAAe,EAAE;MACnBf,SAAS,CAACxrG,IAAI,CAACssG,GAAG,CAACN,kBAAkB,CAAC,CAAC;MACvC,IAAMt2F,UAAU,GACb42F,GAAG,CAACL,wBAAwB,CAAC,GAAG,OAAO,GAAI/mF,aAAa;MAC3D,IAAMunF,SAAS,GAAGH,GAAG,CAACH,iBAAiB,CAAC;MACxC,IAAMO,UAAU,GAAGJ,GAAG,CAACF,kBAAkB,CAAC;MAC1C,IAAIC,cAAc,EAAE;QAClB9C,OAAO,CAACvpG,IAAI,CAAC,CACXssG,GAAG,CAACJ,qBAAqB,CAAC,CAAC,CAAC,CAAC,EAC7BI,GAAG,CAACJ,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;MACJ,CAAC,MAAM;QACL3C,OAAO,CAACvpG,IAAI,CAACssG,GAAG,CAACJ,qBAAqB,CAAC,CAAC;MAC1C;MACArrE,WAAW,CAAC7gC,IAAI,CAAC0V,UAAU,CAAC;MAC5Bg0F,SAAS,CAAC1pG,IAAI,CACZysG,SAAS,IAAIC,UAAU,GAAGD,SAAS,GAAG,CAACA,SAAS,EAAEC,UAAU,CAC9D,CAAC;MACD3C,KAAK,CAAC/pG,IAAI,CAAC,CAACssG,GAAG,CAAC,aAAa,CAAC,EAAEA,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACvD;EACF,CAAC,CAAC;EAEF,OAAO,IAAIjB,YAAY,CAAC;IACtB91F,MAAM,EAAEA,MAAM;IACdg0F,OAAO,EAAEA,OAAO;IAChB1oE,WAAW,EAAEA,WAAW;IACxB2qE,SAAS,EAAEA,SAAS;IACpB9B,SAAS,EAAEA,SAAS;IACpBK,KAAK,EAAEA;EACT,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA,IAAAlrF,OAAA,GAAAtkB,OAAA;AAOA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAA+wG,SAAA,GAAA5uG,sBAAA,CAAAnC,OAAA;AACA,IAAA6nC,OAAA,GAAA7nC,OAAA;AAGA,IAAAoyG,KAAA,GAAAjwG,sBAAA,CAAAnC,OAAA;AAAmD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAhBnD;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACO,SAAS8vG,gBAAgBA,CAACvvF,UAAU,EAAE;EAC3C,IAAIuI,QAAQ,GAAGvI,UAAU,CAACqI,kBAAkB,CAAC,CAAC;EAC9C,IAAI,CAACE,QAAQ,EAAE;IACbA,QAAQ,GAAGinF,mBAAmB,CAACxvF,UAAU,CAAC;IAC1CA,UAAU,CAACsI,kBAAkB,CAACC,QAAQ,CAAC;EACzC;EACA,OAAOA,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxI,KAAKA,CAACwI,QAAQ,EAAE8rE,SAAS,EAAEr0E,UAAU,EAAE;EACrD,IAAM2jB,CAAC,GAAG0wD,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMv/E,MAAM,GAAGyT,QAAQ,CAAC0/E,kBAAkB,CAAC5T,SAAS,CAAC;EACrD,IAAMp0E,gBAAgB,GAAGwvF,oBAAoB,CAACzvF,UAAU,CAAC;EACzD,IAAI,CAAC,IAAA9E,0BAAkB,EAAC+E,gBAAgB,EAAEnL,MAAM,CAAC,EAAE;IACjD,IAAMsL,UAAU,GAAG,IAAAlD,gBAAQ,EAAC+C,gBAAgB,CAAC;IAC7C,IAAMI,UAAU,GAAG7Q,IAAI,CAACqI,IAAI,CAC1B,CAACoI,gBAAgB,CAAC,CAAC,CAAC,GAAGnL,MAAM,CAAC,CAAC,CAAC,IAAIsL,UACtC,CAAC;IACDtL,MAAM,CAAC,CAAC,CAAC,IAAIsL,UAAU,GAAGC,UAAU;IACpC,OAAOkI,QAAQ,CAAC8+E,wBAAwB,CAACvyF,MAAM,EAAE6uB,CAAC,CAAC;EACrD;EACA,OAAO0wD,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqb,eAAeA,CAACx3F,MAAM,EAAE8zB,OAAO,EAAEu7D,QAAQ,EAAEjqF,MAAM,EAAE;EACjEA,MAAM,GAAGA,MAAM,KAAK9Z,SAAS,GAAG8Z,MAAM,GAAG,UAAU;EAEnD,IAAMkmB,WAAW,GAAGmsE,qBAAqB,CAACz3F,MAAM,EAAE8zB,OAAO,EAAEu7D,QAAQ,CAAC;EAEpE,OAAO,IAAI0E,iBAAQ,CAAC;IAClB/zF,MAAM,EAAEA,MAAM;IACdgyF,MAAM,EAAE,IAAA7sF,iBAAS,EAACnF,MAAM,EAAEoF,MAAM,CAAC;IACjCkmB,WAAW,EAAEA,WAAW;IACxB+jE,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqI,SAASA,CAAC3nG,OAAO,EAAE;EACjC,IAAM4nG,UAAU,GAAG5nG,OAAO,IAAI,CAAC,CAAC;EAEhC,IAAMiQ,MAAM,GAAG23F,UAAU,CAAC33F,MAAM,IAAI,IAAA2gB,SAAa,EAAC,WAAW,CAAC,CAAC3Y,SAAS,CAAC,CAAC;EAE1E,IAAM4vF,WAAW,GAAG;IAClB53F,MAAM,EAAEA,MAAM;IACdyuB,OAAO,EAAEkpE,UAAU,CAAClpE,OAAO;IAC3B4gE,QAAQ,EAAEsI,UAAU,CAACtI,QAAQ;IAC7B/jE,WAAW,EAAEmsE,qBAAqB,CAChCz3F,MAAM,EACN23F,UAAU,CAAC7jE,OAAO,EAClB6jE,UAAU,CAACtI,QAAQ,EACnBsI,UAAU,CAACzsE,aACb;EACF,CAAC;EACD,OAAO,IAAI6oE,iBAAQ,CAAC6D,WAAW,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,qBAAqBA,CAACz3F,MAAM,EAAE8zB,OAAO,EAAEu7D,QAAQ,EAAEnkE,aAAa,EAAE;EACvE4I,OAAO,GAAGA,OAAO,KAAKxoC,SAAS,GAAGwoC,OAAO,GAAG1H,wBAAgB;EAC5DijE,QAAQ,GAAG,IAAAxnC,YAAM,EAACwnC,QAAQ,KAAK/jG,SAAS,GAAG+jG,QAAQ,GAAGhjE,yBAAiB,CAAC;EAExE,IAAMzkB,MAAM,GAAG,IAAA3C,iBAAS,EAACjF,MAAM,CAAC;EAChC,IAAM2H,KAAK,GAAG,IAAA3C,gBAAQ,EAAChF,MAAM,CAAC;EAE9BkrB,aAAa,GACXA,aAAa,GAAG,CAAC,GACbA,aAAa,GACb5zB,IAAI,CAACmG,GAAG,CAACkK,KAAK,GAAG0nF,QAAQ,CAAC,CAAC,CAAC,EAAEznF,MAAM,GAAGynF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzD,IAAM9sG,MAAM,GAAGuxC,OAAO,GAAG,CAAC;EAC1B,IAAMxI,WAAW,GAAG,IAAI5nC,KAAK,CAACnB,MAAM,CAAC;EACrC,KAAK,IAAIkpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlpC,MAAM,EAAE,EAAEkpC,CAAC,EAAE;IAC/BH,WAAW,CAACG,CAAC,CAAC,GAAGP,aAAa,GAAG5zB,IAAI,CAACkI,GAAG,CAAC,CAAC,EAAEisB,CAAC,CAAC;EACjD;EACA,OAAOH,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgsE,mBAAmBA,CAACxvF,UAAU,EAAEgsB,OAAO,EAAEu7D,QAAQ,EAAEjqF,MAAM,EAAE;EACzE,IAAMpF,MAAM,GAAGu3F,oBAAoB,CAACzvF,UAAU,CAAC;EAC/C,OAAO0vF,eAAe,CAACx3F,MAAM,EAAE8zB,OAAO,EAAEu7D,QAAQ,EAAEjqF,MAAM,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmyF,oBAAoBA,CAACzvF,UAAU,EAAE;EAC/CA,UAAU,GAAG,IAAA6Y,SAAa,EAAC7Y,UAAU,CAAC;EACtC,IAAI9H,MAAM,GAAG8H,UAAU,CAACE,SAAS,CAAC,CAAC;EACnC,IAAI,CAAChI,MAAM,EAAE;IACX,IAAM63F,IAAI,GACP,GAAG,GAAGppF,qBAAe,CAACnE,OAAO,GAAIxC,UAAU,CAACgI,gBAAgB,CAAC,CAAC;IACjE9P,MAAM,GAAG,IAAA4C,sBAAc,EAAC,CAACi1F,IAAI,EAAE,CAACA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAC;EACnD;EACA,OAAO73F,MAAM;AACf;;;;;;;;;;;ACvKA,IAAAF,KAAA,GAAA9a,OAAA;AACA,IAAAioG,UAAA,GAAAjoG,OAAA;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8yG,YAAYA,CAACC,GAAG,EAAEC,MAAM,EAAE;EACxC;EACA,IAAMC,SAAS,GAAG,EAAE;EACpB;EACA5vG,MAAM,CAACmD,IAAI,CAACwsG,MAAM,CAAC,CAACznG,OAAO,CAAC,UAAUoO,CAAC,EAAE;IACvC,IAAIq5F,MAAM,CAACr5F,CAAC,CAAC,KAAK,IAAI,IAAIq5F,MAAM,CAACr5F,CAAC,CAAC,KAAKrT,SAAS,EAAE;MACjD2sG,SAAS,CAACxtG,IAAI,CAACkU,CAAC,GAAG,GAAG,GAAGu5F,kBAAkB,CAACF,MAAM,CAACr5F,CAAC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC,CAAC;EACF,IAAMw5F,EAAE,GAAGF,SAAS,CAACrvF,IAAI,CAAC,GAAG,CAAC;EAC9B;EACAmvF,GAAG,GAAGA,GAAG,CAACjtF,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;EAC9B;EACAitF,GAAG,IAAIA,GAAG,CAACvtG,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EACpC,OAAOutG,GAAG,GAAGI,EAAE;AACjB;AAEA,IAAMC,MAAM,GAAG,QAAQ;AACvB,IAAMC,MAAM,GAAG,QAAQ;AACvB,IAAMC,MAAM,GAAG,QAAQ;AACvB,IAAMC,UAAU,GAAG,SAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAAC3tF,QAAQ,EAAE4gB,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAEkD,IAAI,EAAE;EACzD,OAAO+J,QAAQ,CACZC,OAAO,CAACstF,MAAM,EAAE3sE,CAAC,CAAC3pB,QAAQ,CAAC,CAAC,CAAC,CAC7BgJ,OAAO,CAACutF,MAAM,EAAE16F,CAAC,CAACmE,QAAQ,CAAC,CAAC,CAAC,CAC7BgJ,OAAO,CAACwtF,MAAM,EAAE16F,CAAC,CAACkE,QAAQ,CAAC,CAAC,CAAC,CAC7BgJ,OAAO,CAACytF,UAAU,EAAE,YAAY;IAC/B,IAAIz3F,IAAI,KAAKxV,SAAS,EAAE;MACtB,MAAM,IAAI6B,KAAK,CACb,2EACF,CAAC;IACH;IACA,OAAO,CAAC2T,IAAI,GAAGlD,CAAC,EAAEkE,QAAQ,CAAC,CAAC;EAC9B,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS22F,OAAOA,CAACC,IAAI,EAAEjtE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE;EACrC,IAAMwrF,IAAI,GAAG,IAAAC,kBAAO,EAAC59D,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;EAC7B,IAAMtZ,KAAK,GAAG,IAAA6a,YAAM,EAACiqF,IAAI,EAAEsP,IAAI,CAACn2G,MAAM,CAAC;EACvC,OAAOm2G,IAAI,CAACp0G,KAAK,CAAC;AACpB;;AAEA;AACA;AACA;AACA;AACO,SAASq0G,SAASA,CAACC,GAAG,EAAE;EAC7B,IAAMF,IAAI,GAAG,EAAE;EACf,IAAI9hF,KAAK,GAAG,qBAAqB,CAACytC,IAAI,CAACu0C,GAAG,CAAC;EAC3C,IAAIhiF,KAAK,EAAE;IACT;IACA,IAAMiiF,aAAa,GAAGjiF,KAAK,CAAC,CAAC,CAAC,CAACkiF,UAAU,CAAC,CAAC,CAAC;IAC5C,IAAMC,YAAY,GAAGniF,KAAK,CAAC,CAAC,CAAC,CAACkiF,UAAU,CAAC,CAAC,CAAC;IAC3C,IAAIE,QAAQ;IACZ,KAAKA,QAAQ,GAAGH,aAAa,EAAEG,QAAQ,IAAID,YAAY,EAAE,EAAEC,QAAQ,EAAE;MACnEN,IAAI,CAACjuG,IAAI,CAACmuG,GAAG,CAAC9tF,OAAO,CAAC8L,KAAK,CAAC,CAAC,CAAC,EAAEluB,MAAM,CAACuwG,YAAY,CAACD,QAAQ,CAAC,CAAC,CAAC;IACjE;IACA,OAAON,IAAI;EACb;EACA9hF,KAAK,GAAG,iBAAiB,CAACytC,IAAI,CAACu0C,GAAG,CAAC;EACnC,IAAIhiF,KAAK,EAAE;IACT;IACA,IAAMspB,IAAI,GAAG92B,QAAQ,CAACwN,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACnC,KAAK,IAAI3zB,CAAC,GAAGmmB,QAAQ,CAACwN,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE3zB,CAAC,IAAIi9C,IAAI,EAAEj9C,CAAC,EAAE,EAAE;MACnDy1G,IAAI,CAACjuG,IAAI,CAACmuG,GAAG,CAAC9tF,OAAO,CAAC8L,KAAK,CAAC,CAAC,CAAC,EAAE3zB,CAAC,CAAC6e,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChD;IACA,OAAO42F,IAAI;EACb;EACAA,IAAI,CAACjuG,IAAI,CAACmuG,GAAG,CAAC;EACd,OAAOF,IAAI;AACb;;;;;;;;;;;ACnGA,IAAA54F,KAAA,GAAA9a,OAAA;AACA,IAAAioG,UAAA,GAAAjoG,OAAA;AACA,IAAAk0G,IAAA,GAAAl0G,OAAA;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACO,SAASm0G,kBAAkBA,CAACtuF,QAAQ,EAAEwF,QAAQ,EAAE;EACrD;IACE;AACJ;AACA;AACA;AACA;AACA;IACI,UAAU8rE,SAAS,EAAE7pB,UAAU,EAAExqD,UAAU,EAAE;MAC3C,IAAI,CAACq0E,SAAS,EAAE;QACd,OAAO7wF,SAAS;MAClB;MACA,IAAIwV,IAAI;MACR,IAAM2qB,CAAC,GAAG0wD,SAAS,CAAC,CAAC,CAAC;MACtB,IAAI9rE,QAAQ,EAAE;QACZ;QACA,IAAMxQ,KAAK,GAAGwQ,QAAQ,CAACk5E,gBAAgB,CAAC99D,CAAC,CAAC;QAC1C,IAAI5rB,KAAK,EAAE;UACTiB,IAAI,GAAGjB,KAAK,CAACoF,SAAS,CAAC,CAAC,GAAG,CAAC;QAC9B;MACF;MACA,OAAO,IAAAuzF,sBAAiB,EAAC3tF,QAAQ,EAAE4gB,CAAC,EAAE0wD,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEr7E,IAAI,CAAC;IACzE;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASs4F,mBAAmBA,CAACC,SAAS,EAAEhpF,QAAQ,EAAE;EACvD,IAAMvjB,GAAG,GAAGusG,SAAS,CAAC92G,MAAM;EAC5B,IAAM+2G,gBAAgB,GAAG,IAAI51G,KAAK,CAACoJ,GAAG,CAAC;EACvC,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE,EAAE7J,CAAC,EAAE;IAC5Bq2G,gBAAgB,CAACr2G,CAAC,CAAC,GAAGk2G,kBAAkB,CAACE,SAAS,CAACp2G,CAAC,CAAC,EAAEotB,QAAQ,CAAC;EAClE;EACA,OAAOkpF,0BAA0B,CAACD,gBAAgB,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACO,SAASC,0BAA0BA,CAACD,gBAAgB,EAAE;EAC3D,IAAIA,gBAAgB,CAAC/2G,MAAM,KAAK,CAAC,EAAE;IACjC,OAAO+2G,gBAAgB,CAAC,CAAC,CAAC;EAC5B;EACA;IACE;AACJ;AACA;AACA;AACA;AACA;IACI,UAAUnd,SAAS,EAAE7pB,UAAU,EAAExqD,UAAU,EAAE;MAC3C,IAAI,CAACq0E,SAAS,EAAE;QACd,OAAO7wF,SAAS;MAClB;MACA,IAAM0nC,CAAC,GAAG,IAAAwmE,eAAa,EAACrd,SAAS,CAAC;MAClC,IAAM73F,KAAK,GAAG,IAAA6a,YAAM,EAAC6zB,CAAC,EAAEsmE,gBAAgB,CAAC/2G,MAAM,CAAC;MAChD,OAAO+2G,gBAAgB,CAACh1G,KAAK,CAAC,CAAC63F,SAAS,EAAE7pB,UAAU,EAAExqD,UAAU,CAAC;IACnE;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2xF,mBAAmBA,CAACtd,SAAS,EAAE7pB,UAAU,EAAExqD,UAAU,EAAE;EACrE,OAAOxc,SAAS;AAClB;;;;;;;;ACnFA,IAAAiE,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAAgD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJhD;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUMmyG,MAAM,0BAAA7pG,WAAA;EACV;AACF;AACA;EACE,SAAA6pG,OAAY3pG,OAAO,EAAE;IAAA,IAAA4pG,qBAAA;IAAA,IAAA5vG,KAAA;IAAAxI,eAAA,OAAAm4G,MAAA;IACnB3vG,KAAA,GAAAnB,UAAA,OAAA8wG,MAAA;;IAEA;AACJ;AACA;AACA;IACI3vG,KAAA,CAAK+d,UAAU,GAAG,IAAA6Y,SAAa,EAAC5wB,OAAO,CAAC+X,UAAU,CAAC;;IAEnD;AACJ;AACA;AACA;IACI/d,KAAA,CAAKu3C,aAAa,GAAGs4D,iBAAiB,CAAC7pG,OAAO,CAACwxC,YAAY,CAAC;;IAE5D;AACJ;AACA;AACA;IACIx3C,KAAA,CAAK8vG,wBAAwB,IAAAF,qBAAA,GAAG5pG,OAAO,CAAC+pG,uBAAuB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,IAAI;;IAEvE;AACJ;AACA;AACA;AACA;IACI5vG,KAAA,CAAKu0E,OAAO,GAAG,KAAK;;IAEpB;AACJ;AACA;AACA;IACIv0E,KAAA,CAAKirD,MAAM,GAAGjlD,OAAO,CAAC+L,KAAK,KAAKxQ,SAAS,GAAGyE,OAAO,CAAC+L,KAAK,GAAG,OAAO;;IAEnE;AACJ;AACA;AACA;IACI/R,KAAA,CAAKgwG,MAAM,GAAGhqG,OAAO,CAAC8X,KAAK,KAAKvc,SAAS,GAAGyE,OAAO,CAAC8X,KAAK,GAAG,KAAK;;IAEjE;AACJ;AACA;AACA;IACI9d,KAAA,CAAKiwG,YAAY,GAAG,CAAC,CAACjqG,OAAO,CAACwsF,WAAW;;IAEzC;AACJ;AACA;AACA;IACIxyF,KAAA,CAAKkwG,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACIlwG,KAAA,CAAKmwG,YAAY,GAAG,IAAI;IAExB,IAAMnmG,IAAI,GAAAhK,KAAO;IACjB;AACJ;AACA;AACA;IACIA,KAAA,CAAKowG,YAAY,GAAG,IAAI/zG,OAAO,CAAC,UAAUE,OAAO,EAAED,MAAM,EAAE;MACzD0N,IAAI,CAACkmG,YAAY,GAAG3zG,OAAO;MAC3ByN,IAAI,CAACmmG,YAAY,GAAG7zG,MAAM;IAC5B,CAAC,CAAC;IAAC,OAAA0D,KAAA;EACL;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAgwG,MAAA,EAAA7pG,WAAA;EAAA,OAAApO,YAAA,CAAAi4G,MAAA;IAAAh4G,GAAA;IAAAC,KAAA,EAKA,SAAAqhD,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAAC1B,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAA5/C,GAAA;IAAAC,KAAA,EAIA,SAAAyhD,0BAA0BA,CAAA,EAAG;MAC3B,OAAO,IAAI,CAACy2D,wBAAwB;IACtC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAn4G,GAAA;IAAAC,KAAA,EAKA,SAAAg/B,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAAC7Y,UAAU;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAApmB,GAAA;IAAAC,KAAA,EAIA,SAAAyyC,cAAcA,CAACtsB,UAAU,EAAE;MACzB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAApmB,GAAA;IAAAC,KAAA,EAGA,SAAAsjD,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACk1D,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz4G,GAAA;IAAAC,KAAA,EAKA,SAAAoa,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACi5C,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAtzD,GAAA;IAAAC,KAAA,EAGA,SAAAixF,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACmnB,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAr4G,GAAA;IAAAC,KAAA,EAGA,SAAA0vG,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC2I,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAAt4G,GAAA;IAAAC,KAAA,EAIA,SAAAy4G,OAAOA,CAAA,EAAG;MACR,IAAI,CAACztG,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAA04G,eAAeA,CAAC94D,YAAY,EAAE;MAC5B,IAAI,CAACD,aAAa,GAAGs4D,iBAAiB,CAACr4D,YAAY,CAAC;MACpD,IAAI,CAAC50C,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAA86F,QAAQA,CAAC3gF,KAAK,EAAE;MACd,IAAI,CAACk5C,MAAM,GAAGl5C,KAAK;MACnB,IAAI,CAACnP,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EApKkBmB,eAAU;AAuK/B;AACA;AACA;AACA;AACA;AACA,SAAS8rG,iBAAiBA,CAACU,eAAe,EAAE;EAC1C,IAAI,CAACA,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EACA,IAAI,OAAOA,eAAe,KAAK,UAAU,EAAE;IACzC,OAAOA,eAAe;EACxB;EACA,IAAI,CAAC52G,KAAK,CAACC,OAAO,CAAC22G,eAAe,CAAC,EAAE;IACnCA,eAAe,GAAG,CAACA,eAAe,CAAC;EACrC;EACA,OAAO,UAAClpG,UAAU;IAAA,OAAKkpG,eAAe;EAAA;AACxC;AAAC,IAAAv6G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcy5G,MAAM;;;;;;;;ACxOrB,IAAAhsG,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AACA,IAAA+iE,KAAA,GAAA/iE,OAAA;AACA,IAAAioG,UAAA,GAAAjoG,OAAA;AACA,IAAAu1G,SAAA,GAAAv1G,OAAA;AAIA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAw1G,QAAA,GAAArzG,sBAAA,CAAAnC,OAAA;AAAiC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAXjC;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUMkzG,UAAU,0BAAAC,OAAA;EACd;AACF;AACA;EACE,SAAAD,WAAY1qG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAk5G,UAAA;IACnB1wG,KAAA,GAAAnB,UAAA,OAAA6xG,UAAA,GAAM;MACJl5D,YAAY,EAAExxC,OAAO,CAACwxC,YAAY;MAClCu4D,uBAAuB,EAAE/pG,OAAO,CAAC+pG,uBAAuB;MACxDhyF,UAAU,EAAE/X,OAAO,CAAC+X,UAAU;MAC9BhM,KAAK,EAAE/L,OAAO,CAAC+L,KAAK;MACpB+L,KAAK,EAAE9X,OAAO,CAAC8X,KAAK;MACpB00E,WAAW,EAAExsF,OAAO,CAACwsF;IACvB,CAAC;;IAED;AACJ;AACA;IACIxyF,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAK4wG,eAAe,GAClB5qG,OAAO,CAACk/F,cAAc,KAAK3jG,SAAS,GAAGyE,OAAO,CAACk/F,cAAc,GAAG,CAAC;;IAEnE;AACJ;AACA;AACA;IACIllG,KAAA,CAAKsmB,QAAQ,GAAGtgB,OAAO,CAACsgB,QAAQ,KAAK/kB,SAAS,GAAGyE,OAAO,CAACsgB,QAAQ,GAAG,IAAI;IAExE,IAAMg/E,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;IAC3B,IAAItlG,KAAA,CAAKsmB,QAAQ,EAAE;MACjB,IAAAw3C,YAAM,EAAC99D,KAAA,CAAKsmB,QAAQ,CAAC82E,WAAW,CAACp9F,KAAA,CAAKsmB,QAAQ,CAAC0jB,UAAU,CAAC,CAAC,CAAC,EAAEs7D,QAAQ,CAAC;IACzE;;IAEA;AACJ;AACA;AACA;IACItlG,KAAA,CAAK6wG,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAErB;AACJ;AACA;AACA;IACI7wG,KAAA,CAAKs+F,IAAI,GAAGt4F,OAAO,CAACrO,GAAG,IAAI,IAAA2L,YAAM,EAAAtD,KAAK,CAAC;;IAEvC;AACJ;AACA;AACA;IACIA,KAAA,CAAK8wG,WAAW,GAAG;MACjBxe,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9BE,WAAW,EAAExsF,OAAO,CAACwsF;IACvB,CAAC;;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IACIxyF,KAAA,CAAK6lG,UAAU,GAAG7/F,OAAO,CAAC6/F,UAAU,GAAG7/F,OAAO,CAAC6/F,UAAU,GAAG,CAAC;IAAC,OAAA7lG,KAAA;EAChE;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA+wG,UAAA,EAAAC,OAAA;EAAA,OAAAj5G,YAAA,CAAAg5G,UAAA;IAAA/4G,GAAA;IAAAC,KAAA,EAIA,SAAA2tG,sBAAsBA,CAACxnF,UAAU,EAAE;MACjC,OAAO,CAAC;IACV;;IAEA;AACF;AACA;AACA;EAHE;IAAApmB,GAAA;IAAAC,KAAA,EAIA,SAAA0Z,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACgtF,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3mG,GAAA;IAAAC,KAAA,EAKA,SAAAm5G,MAAMA,CAACp5G,GAAG,EAAE;MACV,IAAI,IAAI,CAAC2mG,IAAI,KAAK3mG,GAAG,EAAE;QACrB,IAAI,CAAC2mG,IAAI,GAAG3mG,GAAG;QACf,IAAI,CAACiL,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAyyC,cAAcA,CAACtsB,UAAU,EAAE;MACzB,IAAMuI,QAAQ,GAAGvI,UAAU,GACvB,IAAI,CAAC4lF,wBAAwB,CAAC5lF,UAAU,CAAC,GACzC,IAAI,CAACuI,QAAQ;MACjB,IAAI,CAACA,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MACA,OAAOA,QAAQ,CAAC+jB,cAAc,CAAC,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA1yC,GAAA;IAAAC,KAAA,EASA,SAAAqtG,OAAOA,CAACvjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAExqD,UAAU,EAAE;MACvC,OAAO,IAAA5a,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAxL,GAAA;IAAAC,KAAA,EAKA,SAAAo5G,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC1qF,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAA3uB,GAAA;IAAAC,KAAA,EAIA,SAAA+rG,wBAAwBA,CAAC5lF,UAAU,EAAE;MACnC,IAAI,CAAC,IAAI,CAACuI,QAAQ,EAAE;QAClB,OAAO,IAAAq9E,0BAAwB,EAAC5lF,UAAU,CAAC;MAC7C;MACA,OAAO,IAAI,CAACuI,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3uB,GAAA;IAAAC,KAAA,EAOA,SAAAutG,iBAAiBA,CAAC58B,UAAU,EAAE;MAC5B,OAAO,IAAI,CAACqoC,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAj5G,GAAA;IAAAC,KAAA,EAMA,SAAAiwG,gBAAgBA,CAACnmE,CAAC,EAAE6mC,UAAU,EAAExqD,UAAU,EAAE;MAC1C,IAAMuI,QAAQ,GAAG,IAAI,CAACq9E,wBAAwB,CAAC5lF,UAAU,CAAC;MAC1D,IAAMmnF,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC58B,UAAU,CAAC;MACzD,IAAM+8B,QAAQ,GAAG,IAAAxnC,YAAM,EAACx3C,QAAQ,CAAC82E,WAAW,CAAC17D,CAAC,CAAC,EAAE,IAAI,CAACmvE,OAAO,CAAC;MAC9D,IAAI3L,cAAc,IAAI,CAAC,EAAE;QACvB,OAAOI,QAAQ;MACjB;MACA,OAAO,IAAA2L,WAAS,EAAC3L,QAAQ,EAAEJ,cAAc,EAAE,IAAI,CAAC2L,OAAO,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAl5G,GAAA;IAAAC,KAAA,EASA,SAAAs5G,8BAA8BA,CAAC9e,SAAS,EAAEr0E,UAAU,EAAE;MACpD,IAAMozF,cAAc,GAClBpzF,UAAU,KAAKxc,SAAS,GAAGwc,UAAU,GAAG,IAAI,CAAC6Y,aAAa,CAAC,CAAC;MAC9D,IAAMtQ,QAAQ,GACZvI,UAAU,KAAKxc,SAAS,GACpB,IAAI,CAACoiG,wBAAwB,CAACwN,cAAc,CAAC,GAC7C,IAAI,CAAC7qF,QAAQ,IAAI,IAAI,CAACq9E,wBAAwB,CAACwN,cAAc,CAAC;MACpE,IAAI,IAAI,CAACtoB,QAAQ,CAAC,CAAC,IAAIsoB,cAAc,CAACjrF,QAAQ,CAAC,CAAC,EAAE;QAChDksE,SAAS,GAAG,IAAAt0E,eAAK,EAACwI,QAAQ,EAAE8rE,SAAS,EAAE+e,cAAc,CAAC;MACxD;MACA,OAAO,IAAA5R,2BAAgB,EAACnN,SAAS,EAAE9rE,QAAQ,CAAC,GAAG8rE,SAAS,GAAG,IAAI;IACjE;;IAEA;AACF;AACA;AACA;EAHE;IAAAz6F,GAAA;IAAAC,KAAA,EAIA,SAAA4E,KAAKA,CAAA,EAAG,CAAC;;IAET;AACF;AACA;EAFE;IAAA7E,GAAA;IAAAC,KAAA,EAGA,SAAAy4G,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC7zG,KAAK,CAAC,CAAC;MACZ+K,aAAA,CAAAmpG,UAAA;IACF;EAAC;AAAA,EAvNsBf,gBAAM;AA0N/B;AACA;AACA;AACA;AACA;AAJA,IAKayB,eAAe,GAAAn7G,OAAA,CAAAm7G,eAAA,0BAAA7zG,MAAA;EAC1B;AACF;AACA;AACA;EACE,SAAA6zG,gBAAYv0G,IAAI,EAAEgV,IAAI,EAAE;IAAA,IAAA3N,MAAA;IAAA1M,eAAA,OAAA45G,eAAA;IACtBltG,MAAA,GAAArF,UAAA,OAAAuyG,eAAA,GAAMv0G,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACIqH,MAAA,CAAK2N,IAAI,GAAGA,IAAI;IAAC,OAAA3N,MAAA;EACnB;EAACvE,SAAA,CAAAyxG,eAAA,EAAA7zG,MAAA;EAAA,OAAA7F,YAAA,CAAA05G,eAAA;AAAA,EAdkCtwG,eAAK;AAAA,IAAA9K,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAiB3Bw6G,UAAU;;;;;;;;ACjSzB;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA16G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACEm7G,aAAa,EAAE,eAAe;EAE9B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,aAAa,EAAE;AACjB,CAAC;AAED;AACA;AACA;;;;;;;;AChCA,IAAA5gG,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAu2G,gBAAA,GAAAv2G,OAAA;AACA,IAAAk0G,IAAA,GAAAl0G,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAA04F,KAAA,GAAA9iF,uBAAA,CAAA5V,OAAA;AACA,IAAAw2G,cAAA,GAAAr0G,sBAAA,CAAAnC,OAAA;AAA+C,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAR/C;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMk0G,OAAO,0BAAAC,WAAA;EACX;AACF;AACA;EACE,SAAAD,QAAY1rG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAk6G,OAAA;IACnB1xG,KAAA,GAAAnB,UAAA,OAAA6yG,OAAA,GAAM;MACJl6D,YAAY,EAAExxC,OAAO,CAACwxC,YAAY;MAClC2lB,SAAS,EAAEn3D,OAAO,CAACm3D,SAAS;MAC5Bp/C,UAAU,EAAE/X,OAAO,CAAC+X,UAAU;MAC9BhM,KAAK,EAAE/L,OAAO,CAAC+L,KAAK;MACpBuU,QAAQ,EAAEtgB,OAAO,CAACsgB,QAAQ;MAC1B4+E,cAAc,EAAEl/F,OAAO,CAACk/F,cAAc;MACtCpnF,KAAK,EAAE9X,OAAO,CAAC8X,KAAK;MACpBw0E,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9BE,WAAW,EAAExsF,OAAO,CAACwsF,WAAW;MAChC76F,GAAG,EAAEqO,OAAO,CAACrO,GAAG;MAChBo4G,uBAAuB,EAAE/pG,OAAO,CAAC+pG,uBAAuB;MACxDlK,UAAU,EAAE7/F,OAAO,CAAC6/F;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACI7lG,KAAA,CAAK4xG,wBAAwB,GAC3B5xG,KAAA,CAAK6xG,eAAe,KAAKH,OAAO,CAAC/1G,SAAS,CAACk2G,eAAe;;IAE5D;AACJ;AACA;AACA;IACI7xG,KAAA,CAAKq0F,gBAAgB,GAAGruF,OAAO,CAACquF,gBAAgB;IAEhD,IAAIruF,OAAO,CAAC6rG,eAAe,EAAE;MAC3B7xG,KAAA,CAAK6xG,eAAe,GAAG7rG,OAAO,CAAC6rG,eAAe;IAChD;;IAEA;AACJ;AACA;AACA;IACI7xG,KAAA,CAAK2uG,IAAI,GAAG,IAAI;IAEhB,IAAI3oG,OAAO,CAAC2oG,IAAI,EAAE;MAChB3uG,KAAA,CAAK8xG,OAAO,CAAC9rG,OAAO,CAAC2oG,IAAI,CAAC;IAC5B,CAAC,MAAM,IAAI3oG,OAAO,CAAC6oG,GAAG,EAAE;MACtB7uG,KAAA,CAAK+xG,MAAM,CAAC/rG,OAAO,CAAC6oG,GAAG,CAAC;IAC1B;;IAEA;AACJ;AACA;AACA;IACI7uG,KAAA,CAAKgyG,gBAAgB,GAAG,CAAC,CAAC;IAAC,OAAAhyG,KAAA;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAA+xG,OAAA,EAAAC,WAAA;EAAA,OAAAj6G,YAAA,CAAAg6G,OAAA;IAAA/5G,GAAA;IAAAC,KAAA,EAMA,SAAAq6G,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAAC5d,gBAAgB;IAC9B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA18F,GAAA;IAAAC,KAAA,EAMA,SAAAs6G,kBAAkBA,CAAA,EAAG;MACnB,OAAO5zG,MAAM,CAACkB,cAAc,CAAC,IAAI,CAAC,CAACqyG,eAAe,KAAK,IAAI,CAACA,eAAe,GACvE,IAAI,CAACA,eAAe,CAACpyG,IAAI,CAAC,IAAI,CAAC,GAC/B,IAAI,CAACoyG,eAAe;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAl6G,GAAA;IAAAC,KAAA,EAQA,SAAAu6G,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACxD,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAh3G,GAAA;IAAAC,KAAA,EAKA,SAAA4Z,gBAAgBA,CAAC5Q,KAAK,EAAE;MACtB,IAAMiR,IAAI,GAAG,2CAA6CjR,KAAK,CAAC7H,MAAO;MACvE,IAAMguG,GAAG,GAAG,IAAAzjG,YAAM,EAACuO,IAAI,CAAC;MACxB,IAAMm1F,SAAS,GAAGn1F,IAAI,CAACG,QAAQ,CAAC,CAAC;MACjC,IAAInV,IAAI;MACR,IAAImqG,SAAS,IAAI/0F,kBAAS,CAAC5D,OAAO,EAAE;QAClC,IAAI,CAAC2jG,gBAAgB,CAACjL,GAAG,CAAC,GAAG,IAAI;QACjClqG,IAAI,GAAGu1G,sBAAa,CAACf,aAAa;MACpC,CAAC,MAAM,IAAItK,GAAG,IAAI,IAAI,CAACiL,gBAAgB,EAAE;QACvC,OAAO,IAAI,CAACA,gBAAgB,CAACjL,GAAG,CAAC;QACjClqG,IAAI,GACFmqG,SAAS,IAAI/0F,kBAAS,CAAC1b,KAAK,GACxB67G,sBAAa,CAACb,aAAa,GAC3BvK,SAAS,IAAI/0F,kBAAS,CAAC3D,MAAM,GAC3B8jG,sBAAa,CAACd,WAAW,GACzB/vG,SAAS;MACnB;MACA,IAAI1E,IAAI,IAAI0E,SAAS,EAAE;QACrB,IAAI,CAACZ,aAAa,CAAC,IAAIywG,qBAAe,CAACv0G,IAAI,EAAEgV,IAAI,CAAC,CAAC;MACrD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAla,GAAA;IAAAC,KAAA,EAMA,SAAAy6G,mBAAmBA,CAAChe,gBAAgB,EAAE;MACpC,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;MACxC,IAAI,CAACzxF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAA06G,kBAAkBA,CAACT,eAAe,EAAEl6G,GAAG,EAAE;MACvC,IAAI,CAACk6G,eAAe,GAAGA,eAAe;MACtC,IAAI,OAAOl6G,GAAG,KAAK,WAAW,EAAE;QAC9B,IAAI,CAACo5G,MAAM,CAACp5G,GAAG,CAAC;MAClB,CAAC,MAAM;QACL,IAAI,CAACiL,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAm6G,MAAMA,CAAClD,GAAG,EAAE;MACV,IAAMF,IAAI,GAAG,IAAAC,cAAS,EAACC,GAAG,CAAC;MAC3B,IAAI,CAACF,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACmD,OAAO,CAACnD,IAAI,CAAC;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAh3G,GAAA;IAAAC,KAAA,EAMA,SAAAk6G,OAAOA,CAACnD,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAMh3G,GAAG,GAAGg3G,IAAI,CAAC9vF,IAAI,CAAC,IAAI,CAAC;MAC3B,IAAI,IAAI,CAAC+yF,wBAAwB,EAAE;QACjC,IAAI,CAACU,kBAAkB,CAAC,IAAAjD,oCAAmB,EAACV,IAAI,EAAE,IAAI,CAACroF,QAAQ,CAAC,EAAE3uB,GAAG,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,CAACo5G,MAAM,CAACp5G,GAAG,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAAi6G,eAAeA,CAACzf,SAAS,EAAE7pB,UAAU,EAAExqD,UAAU,EAAE;MACjD,OAAOxc,SAAS;IAClB;EAAC;AAAA,EAnLmBmvG,aAAU;AAAA,IAAA16G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsLjBw7G,OAAO;;;;;;;;ACxNtB,IAAA3O,UAAA,GAAA3lG,sBAAA,CAAAnC,OAAA;AACA,IAAA0V,UAAA,GAAAvT,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAA04F,KAAA,GAAAv2F,sBAAA,CAAAnC,OAAA;AACA,IAAAu1G,SAAA,GAAAv1G,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAs3G,SAAA,GAAAn1G,sBAAA,CAAAnC,OAAA;AAAmC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAVnC;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMg1G,SAAS,0BAAAC,QAAA;EACb;AACF;AACA;EACE,SAAAD,UAAYxsG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAg7G,SAAA;IACnBxyG,KAAA,GAAAnB,UAAA,OAAA2zG,SAAA,GAAM;MACJh7D,YAAY,EAAExxC,OAAO,CAACwxC,YAAY;MAClC2lB,SAAS,EAAEn3D,OAAO,CAACm3D,SAAS;MAC5Bp/C,UAAU,EAAE/X,OAAO,CAAC+X,UAAU;MAC9BhM,KAAK,EAAE/L,OAAO,CAAC+L,KAAK;MACpBuU,QAAQ,EAAEtgB,OAAO,CAACsgB,QAAQ;MAC1B+tE,gBAAgB,EAAEruF,OAAO,CAACquF,gBAAgB,GACtCruF,OAAO,CAACquF,gBAAgB,GACxBqe,uBAAuB;MAC3BxN,cAAc,EAAEl/F,OAAO,CAACk/F,cAAc;MACtC2M,eAAe,EAAE7rG,OAAO,CAAC6rG,eAAe;MACxChD,GAAG,EAAE7oG,OAAO,CAAC6oG,GAAG;MAChBF,IAAI,EAAE3oG,OAAO,CAAC2oG,IAAI;MAClB7wF,KAAK,EAAE9X,OAAO,CAAC8X,KAAK;MACpBw0E,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9BE,WAAW,EACTxsF,OAAO,CAACwsF,WAAW,KAAKjxF,SAAS,GAAGyE,OAAO,CAACwsF,WAAW,GAAG,IAAI;MAChE76F,GAAG,EAAEqO,OAAO,CAACrO,GAAG;MAChBo4G,uBAAuB,EAAE/pG,OAAO,CAAC+pG,uBAAuB;MACxDlK,UAAU,EAAE7/F,OAAO,CAAC6/F;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACI7lG,KAAA,CAAK2qE,WAAW,GACd3kE,OAAO,CAAC2kE,WAAW,KAAKppE,SAAS,GAAGyE,OAAO,CAAC2kE,WAAW,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI3qE,KAAA,CAAK2yG,SAAS,GACZ3sG,OAAO,CAAC2sG,SAAS,KAAKpxG,SAAS,GAAGyE,OAAO,CAAC2sG,SAAS,GAAGve,kBAAS;;IAEjE;AACJ;AACA;AACA;IACIp0F,KAAA,CAAK4yG,qBAAqB,GAAG,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;IACI5yG,KAAA,CAAK6yG,2BAA2B,GAAG7sG,OAAO,CAAC8sG,0BAA0B;;IAErE;AACJ;AACA;AACA;IACI9yG,KAAA,CAAK+yG,wBAAwB,GAAG,KAAK;IAAC,OAAA/yG,KAAA;EACxC;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA6yG,SAAA,EAAAC,QAAA;EAAA,OAAA/6G,YAAA,CAAA86G,SAAA;IAAA76G,GAAA;IAAAC,KAAA,EAKA,SAAA2tG,sBAAsBA,CAACxnF,UAAU,EAAE;MACjC,IACE,IAAI,CAAC6Y,aAAa,CAAC,CAAC,IACpB7Y,UAAU,IACV,CAAC,IAAAsS,gBAAU,EAAC,IAAI,CAACuG,aAAa,CAAC,CAAC,EAAE7Y,UAAU,CAAC,EAC7C;QACA,OAAO,CAAC;MACV;MACA,OAAO,IAAI,CAACi1F,SAAS,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;EAFE;IAAAr7G,GAAA;IAAAC,KAAA,EAGA,SAAAo7G,SAASA,CAAA,EAAG;MACV,OAAO,CAAC;IACV;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr7G,GAAA;IAAAC,KAAA,EAKA,SAAA0Z,MAAMA,CAAA,EAAG;MACP,IAAI3Z,GAAG,GAAA4P,aAAA,CAAAirG,SAAA,wBAAiB;MACxB,IAAI,CAAC,IAAI,CAAClL,cAAc,CAAC,CAAC,EAAE;QAC1B3vG,GAAG,IAAI,wBAAwB;MACjC;MACA,OAAOA,GAAG;IACZ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAA,GAAA;IAAAC,KAAA,EAKA,SAAA+rG,wBAAwBA,CAAC5lF,UAAU,EAAE;MACnC,IAAMk1F,QAAQ,GAAG,IAAI,CAACr8E,aAAa,CAAC,CAAC;MACrC,IAAI,IAAI,CAACtQ,QAAQ,KAAK,CAAC2sF,QAAQ,IAAI,IAAA5iF,gBAAU,EAAC4iF,QAAQ,EAAEl1F,UAAU,CAAC,CAAC,EAAE;QACpE,OAAO,IAAI,CAACuI,QAAQ;MACtB;MACA,IAAM4sF,OAAO,GAAG,IAAA5vG,YAAM,EAACya,UAAU,CAAC;MAClC,IAAI,EAAEm1F,OAAO,IAAI,IAAI,CAACN,qBAAqB,CAAC,EAAE;QAC5C,IAAI,CAACA,qBAAqB,CAACM,OAAO,CAAC,GACjC,IAAAvP,0BAAwB,EAAC5lF,UAAU,CAAC;MACxC;MACA,OAAO,IAAI,CAAC60F,qBAAqB,CAACM,OAAO,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAv7G,GAAA;IAAAC,KAAA,EAUA,SAAAu7G,WAAWA,CAACzxE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAExqD,UAAU,EAAEpmB,GAAG,EAAE;MAChD,IAAMy6F,SAAS,GAAG,CAAC1wD,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;MAC3B,IAAMu/F,YAAY,GAAG,IAAI,CAAClC,8BAA8B,CACtD9e,SAAS,EACTr0E,UACF,CAAC;MACD,IAAMs1F,OAAO,GAAGD,YAAY,GACxB,IAAI,CAACvB,eAAe,CAACuB,YAAY,EAAE7qC,UAAU,EAAExqD,UAAU,CAAC,GAC1Dxc,SAAS;MACb,IAAMsQ,IAAI,GAAG,IAAI,IAAI,CAAC8gG,SAAS,CAC7BvgB,SAAS,EACTihB,OAAO,KAAK9xG,SAAS,GAAG0Q,kBAAS,CAAC7D,IAAI,GAAG6D,kBAAS,CAAC1D,KAAK,EACxD8kG,OAAO,KAAK9xG,SAAS,GAAG8xG,OAAO,GAAG,EAAE,EACpC,IAAI,CAAC1oC,WAAW,EAChB,IAAI,CAAC0pB,gBAAgB,EACrB,IAAI,CAACyc,WACP,CAAC;MACDj/F,IAAI,CAACla,GAAG,GAAGA,GAAG;MACdka,IAAI,CAACxR,gBAAgB,CAACwC,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACkb,gBAAgB,CAAC/R,IAAI,CAAC,IAAI,CAAC,CAAC;MACzE,OAAOoS,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAla,GAAA;IAAAC,KAAA,EASA,SAAAqtG,OAAOA,CAACvjE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAExqD,UAAU,EAAE;MAAA,IAAA7Z,MAAA;MACvC,IAAMmtB,gBAAgB,GAAG,IAAI,CAACuF,aAAa,CAAC,CAAC;MAC7C,IACE,CAACvF,gBAAgB,IACjB,CAACtT,UAAU,IACX,IAAAsS,gBAAU,EAACgB,gBAAgB,EAAEtT,UAAU,CAAC,EACxC;QACA,OAAO,IAAI,CAACu1F,eAAe,CACzB5xE,CAAC,EACD9tB,CAAC,EACDC,CAAC,EACD00D,UAAU,EACVl3C,gBAAgB,IAAItT,UACtB,CAAC;MACH;MACA,IAAMq0E,SAAS,GAAG,CAAC1wD,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,CAAC;MAC3B,IAAMlc,GAAG,GAAG,IAAI,CAAC2Z,MAAM,CAAC,CAAC;MACzB,IAAMmqF,cAAc,GAAG,IAAI,CAACkI,wBAAwB,CAACtyE,gBAAgB,CAAC;MACtE,IAAMqqE,cAAc,GAAG,IAAI,CAACiI,wBAAwB,CAAC5lF,UAAU,CAAC;MAChE,IAAM49E,gBAAgB,GAAG,IAAI,CAACuV,8BAA8B,CAC1D9e,SAAS,EACTr0E,UACF,CAAC;MACD,IAAMlM,IAAI,GAAG,IAAI2pF,aAAU,CACzBnqE,gBAAgB,EAChBoqE,cAAc,EACd19E,UAAU,EACV29E,cAAc,EACdtJ,SAAS,EACTuJ,gBAAgB,EAChB,IAAI,CAACwJ,iBAAiB,CAAC58B,UAAU,CAAC,EAClC,IAAI,CAACyqC,SAAS,CAAC,CAAC,EAChB,UAACtxE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU;QAAA,OAClBrkE,MAAI,CAACovG,eAAe,CAAC5xE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAEl3C,gBAAgB,CAAC;MAAA,GAC7D,IAAI,CAACwhF,2BAA2B,EAChC,IAAI,CAACE,wBAAwB,EAC7B,IAAI,CAACjC,WACP,CAAC;MACDj/F,IAAI,CAACla,GAAG,GAAGA,GAAG;MACd,OAAOka,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAla,GAAA;IAAAC,KAAA,EASA,SAAA07G,eAAeA,CAAC5xE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAExqD,UAAU,EAAE;MAC/C,IAAMpmB,GAAG,GAAG,IAAI,CAAC2Z,MAAM,CAAC,CAAC;MACzB,OAAO,IAAI,CAAC6hG,WAAW,CAACzxE,CAAC,EAAE9tB,CAAC,EAAEC,CAAC,EAAE00D,UAAU,EAAExqD,UAAU,EAAEpmB,GAAG,CAAC;IAC/D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAA,GAAA;IAAAC,KAAA,EAKA,SAAA27G,0BAA0BA,CAAC5gE,MAAM,EAAE;MACjC,IAAI,IAAI,CAACogE,wBAAwB,IAAIpgE,MAAM,EAAE;QAC3C;MACF;MACA,IAAI,CAACogE,wBAAwB,GAAGpgE,MAAM;MACtC,IAAI,CAAC/vC,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAAjL,GAAA;IAAAC,KAAA,EAYA,SAAA47G,wBAAwBA,CAACz1F,UAAU,EAAE01F,QAAQ,EAAE;MAC7C,IAAMC,IAAI,GAAG,IAAA98E,SAAa,EAAC7Y,UAAU,CAAC;MACtC,IAAI21F,IAAI,EAAE;QACR,IAAMR,OAAO,GAAG,IAAA5vG,YAAM,EAACowG,IAAI,CAAC;QAC5B,IAAI,EAAER,OAAO,IAAI,IAAI,CAACN,qBAAqB,CAAC,EAAE;UAC5C,IAAI,CAACA,qBAAqB,CAACM,OAAO,CAAC,GAAGO,QAAQ;QAChD;MACF;IACF;EAAC;AAAA,EApPqB/B,iBAAO;AAuP/B;AACA;AACA;AACA;AACA,SAASgB,uBAAuBA,CAACiB,SAAS,EAAE7pC,GAAG,EAAE;EAC/C,gDAAkD6pC,SAAS,CAAC9qC,QAAQ,CAAC,CAAC,CAAEiB,GAAG,GACzEA,GAAG;AACP;AAAC,IAAA9zE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcs8G,SAAS;;;;;;;;AC3TxB,IAAAhC,SAAA,GAAAv1G,OAAA;AACA,IAAA24G,WAAA,GAAAx2G,sBAAA,CAAAnC,OAAA;AAAuC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALvC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,IAiBMq2G,GAAG,0BAAAC,UAAA;EACP;AACF;AACA;EACE,SAAAD,IAAY7tG,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAq8G,GAAA;IACnB7tG,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAM+X,UAAU,GACd/X,OAAO,CAAC+X,UAAU,KAAKxc,SAAS,GAAGyE,OAAO,CAAC+X,UAAU,GAAG,WAAW;IAErE,IAAMuI,QAAQ,GACZtgB,OAAO,CAACsgB,QAAQ,KAAK/kB,SAAS,GAC1ByE,OAAO,CAACsgB,QAAQ,GAChB,IAAAqnF,mBAAS,EAAC;MACR13F,MAAM,EAAE,IAAAu3F,8BAAoB,EAACzvF,UAAU,CAAC;MACxCojB,aAAa,EAAEn7B,OAAO,CAACm7B,aAAa;MACpC4I,OAAO,EAAE/jC,OAAO,CAAC+jC,OAAO;MACxBrF,OAAO,EAAE1+B,OAAO,CAAC0+B,OAAO;MACxB4gE,QAAQ,EAAEt/F,OAAO,CAACs/F;IACpB,CAAC,CAAC;IAERtlG,KAAA,GAAAnB,UAAA,OAAAg1G,GAAA,GAAM;MACJr8D,YAAY,EAAExxC,OAAO,CAACwxC,YAAY;MAClC2lB,SAAS,EAAEn3D,OAAO,CAACm3D,SAAS;MAC5BwN,WAAW,EAAE3kE,OAAO,CAAC2kE,WAAW;MAChC6nB,WAAW,EAAExsF,OAAO,CAACwsF,WAAW;MAChCz0E,UAAU,EAAEA,UAAU;MACtB+0F,0BAA0B,EAAE9sG,OAAO,CAAC8sG,0BAA0B;MAC9DxsF,QAAQ,EAAEA,QAAQ;MAClB+tE,gBAAgB,EAAEruF,OAAO,CAACquF,gBAAgB;MAC1C6Q,cAAc,EAAEl/F,OAAO,CAACk/F,cAAc;MACtC2M,eAAe,EAAE7rG,OAAO,CAAC6rG,eAAe;MACxChD,GAAG,EAAE7oG,OAAO,CAAC6oG,GAAG;MAChBF,IAAI,EAAE3oG,OAAO,CAAC2oG,IAAI;MAClB7wF,KAAK,EAAE9X,OAAO,CAAC8X,KAAK,KAAKvc,SAAS,GAAGyE,OAAO,CAAC8X,KAAK,GAAG,IAAI;MACzDw0E,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9Byd,uBAAuB,EAAE/pG,OAAO,CAAC+pG,uBAAuB;MACxDlK,UAAU,EAAE7/F,OAAO,CAAC6/F;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACI7lG,KAAA,CAAK87F,OAAO,GAAG91F,OAAO,CAACgwF,MAAM,KAAKz0F,SAAS,GAAGyE,OAAO,CAACgwF,MAAM,GAAG,CAAC;IAAC,OAAAh2F,KAAA;EACnE;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAAk0G,GAAA,EAAAC,UAAA;EAAA,OAAAp8G,YAAA,CAAAm8G,GAAA;IAAAl8G,GAAA;IAAAC,KAAA,EAIA,SAAAo7G,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAClX,OAAO;IACrB;EAAC;AAAA,EArDe0W,mBAAS;AAAA,IAAAx8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwDZ29G,GAAG;;;;;;;;AC5HlB,IAAAE,KAAA,GAAA32G,sBAAA,CAAAnC,OAAA;AAA2B,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ3B;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMw2G,WAAW,GAAA/9G,OAAA,CAAA+9G,WAAA,GACtB,SAAS,GACT,sFAAsF,GACtF,eAAe;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMC,GAAG,0BAAAC,IAAA;EACP;AACF;AACA;EACE,SAAAD,IAAYjuG,OAAO,EAAE;IAAAxO,eAAA,OAAAy8G,GAAA;IACnBjuG,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAIwxC,YAAY;IAChB,IAAIxxC,OAAO,CAACwxC,YAAY,KAAKj2C,SAAS,EAAE;MACtCi2C,YAAY,GAAGxxC,OAAO,CAACwxC,YAAY;IACrC,CAAC,MAAM;MACLA,YAAY,GAAG,CAACw8D,WAAW,CAAC;IAC9B;IAEA,IAAMrpC,WAAW,GACf3kE,OAAO,CAAC2kE,WAAW,KAAKppE,SAAS,GAAGyE,OAAO,CAAC2kE,WAAW,GAAG,WAAW;IAEvE,IAAMkkC,GAAG,GACP7oG,OAAO,CAAC6oG,GAAG,KAAKttG,SAAS,GACrByE,OAAO,CAAC6oG,GAAG,GACX,gDAAgD;IAAC,OAAAhwG,UAAA,OAAAo1G,GAAA,GAEjD;MACJz8D,YAAY,EAAEA,YAAY;MAC1Bu4D,uBAAuB,EAAE,KAAK;MAC9B5yC,SAAS,EAAEn3D,OAAO,CAACm3D,SAAS;MAC5BwN,WAAW,EAAEA,WAAW;MACxB6nB,WAAW,EAAExsF,OAAO,CAACwsF,WAAW;MAChCzoD,OAAO,EAAE/jC,OAAO,CAAC+jC,OAAO,KAAKxoC,SAAS,GAAGyE,OAAO,CAAC+jC,OAAO,GAAG,EAAE;MAC7D+oE,0BAA0B,EAAE9sG,OAAO,CAAC8sG,0BAA0B;MAC9Dze,gBAAgB,EAAEruF,OAAO,CAACquF,gBAAgB;MAC1C/B,UAAU,EAAEtsF,OAAO,CAACssF,UAAU;MAC9Buc,GAAG,EAAEA,GAAG;MACR/wF,KAAK,EAAE9X,OAAO,CAAC8X,KAAK;MACpB+nF,UAAU,EAAE7/F,OAAO,CAAC6/F;IACtB,CAAC;EACH;EAAClmG,SAAA,CAAAs0G,GAAA,EAAAC,IAAA;EAAA,OAAAx8G,YAAA,CAAAu8G,GAAA;AAAA,EApCeJ,aAAG;AAAA,IAAA79G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAuCN+9G,GAAG;;;;;;;;;;;;;;AC1FlB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMME,aAAa;EAAA,SAAAA,cAAA;IAAA38G,eAAA,OAAA28G,aAAA;EAAA;EAAA,OAAAz8G,YAAA,CAAAy8G,aAAA;IAAAx8G,GAAA;IAAAC,KAAA;IACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAAw8G,UAAUA,CAACtxF,QAAQ,EAAE84D,OAAO,EAAEZ,QAAQ,EAAEE,oBAAoB,EAAE3gF,KAAK,EAAE,CAAC;;IAEtE;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAy8G,YAAYA,CAACvxF,QAAQ,EAAE,CAAC;;IAExB;AACF;AACA;AACA;AACA;EAJE;IAAAnrB,GAAA;IAAAC,KAAA,EAKA,SAAA8uF,QAAQA,CAACl3C,KAAK,EAAE,CAAC;;IAEjB;AACF;AACA;AACA;AACA;EAJE;IAAA73C,GAAA;IAAAC,KAAA,EAKA,SAAA08G,UAAUA,CAACC,cAAc,EAAE34B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAE5C;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAA48G,WAAWA,CAAC54B,OAAO,EAAEpsC,KAAK,EAAEj1C,KAAK,EAAE,CAAC;;IAEpC;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAA68G,sBAAsBA,CAACC,0BAA0B,EAAE94B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAEpE;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAA+8G,cAAcA,CAACC,kBAAkB,EAAEh5B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAEpD;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAi9G,mBAAmBA,CAACC,uBAAuB,EAAEl5B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAE9D;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAm9G,cAAcA,CAACC,kBAAkB,EAAEp5B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAEpD;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAq9G,gBAAgBA,CAACC,oBAAoB,EAAEt5B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAExD;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAu9G,SAASA,CAACC,aAAa,EAAEx5B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAE1C;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAAy9G,WAAWA,CAACC,eAAe,EAAE15B,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAE9C;AACF;AACA;AACA;AACA;EAJE;IAAA5C,GAAA;IAAAC,KAAA,EAKA,SAAA29G,QAAQA,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,EAAE,CAAC;;IAEpC;AACF;AACA;AACA;EAHE;IAAA5C,GAAA;IAAAC,KAAA,EAIA,SAAA49G,kBAAkBA,CAACroC,SAAS,EAAEoJ,WAAW,EAAE,CAAC;;IAE5C;AACF;AACA;AACA;EAHE;IAAA5+E,GAAA;IAAAC,KAAA,EAIA,SAAA69G,aAAaA,CAACC,UAAU,EAAEC,sBAAsB,EAAE,CAAC;;IAEnD;AACF;AACA;AACA;EAHE;IAAAh+G,GAAA;IAAAC,KAAA,EAIA,SAAAg+G,YAAYA,CAACC,SAAS,EAAEF,sBAAsB,EAAE,CAAC;EAAC;AAAA;AAAA,IAAA3/G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGrCi+G,aAAa;;;;;;;;AC7H5B;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAM2B,WAAW,GAAG;EAClBC,cAAc,EAAE,CAAC;EACjBC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE,CAAC;EACTC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE,CAAC;EACTC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE,CAAC;EACbC,YAAY,EAAE,CAAC;EACfC,IAAI,EAAE,CAAC;EACPC,eAAe,EAAE,CAAC;EAClBC,cAAc,EAAE,EAAE;EAClBC,gBAAgB,EAAE,EAAE;EACpBC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACO,IAAMC,eAAe,GAAA3gH,OAAA,CAAA2gH,eAAA,GAAG,CAACd,WAAW,CAACS,IAAI,CAAC;;AAEjD;AACA;AACA;AACO,IAAMM,iBAAiB,GAAA5gH,OAAA,CAAA4gH,iBAAA,GAAG,CAACf,WAAW,CAACa,MAAM,CAAC;;AAErD;AACA;AACA;AACO,IAAMG,oBAAoB,GAAA7gH,OAAA,CAAA6gH,oBAAA,GAAG,CAAChB,WAAW,CAACE,UAAU,CAAC;;AAE5D;AACA;AACA;AACO,IAAMe,oBAAoB,GAAA9gH,OAAA,CAAA8gH,oBAAA,GAAG,CAACjB,WAAW,CAACI,UAAU,CAAC;AAAC,IAAAlgH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAE9C4/G,WAAW;;;;;;;;ACxC1B,IAAA96G,MAAA,GAAAC,OAAA;AACA,IAAAw4E,UAAA,GAAAx4E,OAAA;AACA,IAAAuc,aAAA,GAAApa,sBAAA,CAAAnC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAMA,IAAAygC,QAAA,GAAAzgC,OAAA;AAKA,IAAA+7G,eAAA,GAAA55G,sBAAA,CAAAnC,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAUA,IAAAg8G,YAAA,GAAA75G,sBAAA,CAAAnC,OAAA;AAAiD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA5BjD;AACA;AACA;AAFA,IA8BM05G,aAAa,0BAAAC,cAAA;EACjB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAD,cAAY58F,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA,IAAAvoE,KAAA;IAAAxI,eAAA,OAAA0/G,aAAA;IACxDl3G,KAAA,GAAAnB,UAAA,OAAAq4G,aAAA;;IAEA;AACJ;AACA;AACA;IACIl3G,KAAA,CAAKsa,SAAS,GAAGA,SAAS;;IAE1B;AACJ;AACA;AACA;AACA;IACIta,KAAA,CAAK6gC,SAAS,GAAGA,SAAS;;IAE1B;AACJ;AACA;AACA;IACI7gC,KAAA,CAAKuoE,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;IACIvoE,KAAA,CAAKo3G,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;AACA;IACIp3G,KAAA,CAAKoW,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;IACIpW,KAAA,CAAKq3G,0BAA0B,GAAG,IAAI;;IAEtC;AACJ;AACA;AACA;IACIr3G,KAAA,CAAKs3G,0BAA0B,GAAG,IAAI;;IAEtC;AACJ;AACA;AACA;IACIt3G,KAAA,CAAKu3G,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACIv3G,KAAA,CAAKw3G,YAAY,GAAG,EAAE;;IAEtB;AACJ;AACA;AACA;IACIx3G,KAAA,CAAKsY,WAAW,GAAG,EAAE;;IAErB;AACJ;AACA;AACA;IACItY,KAAA,CAAKy3G,cAAc,GAAG,EAAE;;IAExB;AACJ;AACA;AACA;IACIz3G,KAAA,CAAK03G,wBAAwB,GAAG,EAAE;;IAElC;AACJ;AACA;AACA;IACI13G,KAAA,CAAK+R,KAAK,GAAG,qDAAuD,CAAC,CAAE;IAAC,OAAA/R,KAAA;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAu3G,aAAA,EAAAC,cAAA;EAAA,OAAAz/G,YAAA,CAAAw/G,aAAA;IAAAv/G,GAAA;IAAAC,KAAA,EAKA,SAAA+/G,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAMrvC,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,OAAOA,UAAU,IAAI,CAAC,GAClBqvC,SAAS,GACTA,SAAS,CAACxwG,GAAG,CAAC,UAAUywG,IAAI,EAAE;QAC5B,OAAOA,IAAI,GAAGtvC,UAAU;MAC1B,CAAC,CAAC;IACR;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5wE,GAAA;IAAAC,KAAA,EAMA,SAAAkgH,0BAA0BA,CAACh+F,eAAe,EAAEE,MAAM,EAAE;MAClD,IAAM/D,MAAM,GAAG,IAAI,CAAC8hG,oBAAoB,CAAC,CAAC;MAC1C,IAAMnvB,QAAQ,GAAG,IAAI,CAAC6uB,cAAc;MACpC,IAAMn/F,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAI0/F,KAAK,GAAG1/F,WAAW,CAAC9f,MAAM;MAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG4Y,eAAe,CAACthB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI8gB,MAAM,EAAE;QAChE4uE,QAAQ,CAAC,CAAC,CAAC,GAAG9uE,eAAe,CAAC5gB,CAAC,CAAC;QAChC0vF,QAAQ,CAAC,CAAC,CAAC,GAAG9uE,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,IAAA+f,0BAAkB,EAAChD,MAAM,EAAE2yE,QAAQ,CAAC,EAAE;UACxCtwE,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGpvB,QAAQ,CAAC,CAAC,CAAC;UAClCtwE,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGpvB,QAAQ,CAAC,CAAC,CAAC;QACpC;MACF;MACA,OAAOovB,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAArgH,GAAA;IAAAC,KAAA,EAUA,SAAAqgH,yBAAyBA,CACvBn+F,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNk+F,MAAM,EACNC,SAAS,EACT;MACA,IAAM7/F,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAI0/F,KAAK,GAAG1/F,WAAW,CAAC9f,MAAM;MAC9B,IAAMyd,MAAM,GAAG,IAAI,CAAC8hG,oBAAoB,CAAC,CAAC;MAC1C,IAAII,SAAS,EAAE;QACbp+F,MAAM,IAAIC,MAAM;MAClB;MACA,IAAIo+F,UAAU,GAAGt+F,eAAe,CAACC,MAAM,CAAC;MACxC,IAAIs+F,UAAU,GAAGv+F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;MAC5C,IAAMu+F,SAAS,GAAG,IAAI,CAACb,cAAc;MACrC,IAAIc,OAAO,GAAG,IAAI;MAElB,IAAIr/G,CAAC,EAAEs/G,OAAO,EAAEC,OAAO;MACvB,KAAKv/G,CAAC,GAAG6gB,MAAM,GAAGC,MAAM,EAAE9gB,CAAC,GAAGI,GAAG,EAAEJ,CAAC,IAAI8gB,MAAM,EAAE;QAC9Cs+F,SAAS,CAAC,CAAC,CAAC,GAAGx+F,eAAe,CAAC5gB,CAAC,CAAC;QACjCo/G,SAAS,CAAC,CAAC,CAAC,GAAGx+F,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;QACrCu/G,OAAO,GAAG,IAAAn/F,8BAAsB,EAACrD,MAAM,EAAEqiG,SAAS,CAAC;QACnD,IAAIG,OAAO,KAAKD,OAAO,EAAE;UACvB,IAAID,OAAO,EAAE;YACXjgG,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGI,UAAU;YACjC9/F,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGK,UAAU;YACjCE,OAAO,GAAG,KAAK;UACjB;UACAjgG,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGM,SAAS,CAAC,CAAC,CAAC;UACnChgG,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGM,SAAS,CAAC,CAAC,CAAC;QACrC,CAAC,MAAM,IAAIG,OAAO,KAAKj/F,qBAAY,CAACrC,YAAY,EAAE;UAChDmB,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGM,SAAS,CAAC,CAAC,CAAC;UACnChgG,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGM,SAAS,CAAC,CAAC,CAAC;UACnCC,OAAO,GAAG,KAAK;QACjB,CAAC,MAAM;UACLA,OAAO,GAAG,IAAI;QAChB;QACAH,UAAU,GAAGE,SAAS,CAAC,CAAC,CAAC;QACzBD,UAAU,GAAGC,SAAS,CAAC,CAAC,CAAC;QACzBE,OAAO,GAAGC,OAAO;MACnB;;MAEA;MACA,IAAKP,MAAM,IAAIK,OAAO,IAAKr/G,CAAC,KAAK6gB,MAAM,GAAGC,MAAM,EAAE;QAChD1B,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGI,UAAU;QACjC9/F,WAAW,CAAC0/F,KAAK,EAAE,CAAC,GAAGK,UAAU;MACnC;MACA,OAAOL,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAArgH,GAAA;IAAAC,KAAA,EAQA,SAAA8gH,sBAAsBA,CAAC5+F,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAE2+F,WAAW,EAAE;MACzE,KAAK,IAAIz/G,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;QACnB,IAAM0/G,UAAU,GAAG,IAAI,CAACX,yBAAyB,CAC/Cn+F,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,KAAK,EACL,KACF,CAAC;QACD2+F,WAAW,CAACj4G,IAAI,CAACk4G,UAAU,CAAC;QAC5B7+F,MAAM,GAAGzgB,GAAG;MACd;MACA,OAAOygB,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApiB,GAAA;IAAAC,KAAA,EAQA,SAAAw8G,UAAUA,CAACtxF,QAAQ,EAAE84D,OAAO,EAAEZ,QAAQ,EAAEE,oBAAoB,EAAE3gF,KAAK,EAAE;MACnE,IAAI,CAACs+G,aAAa,CAAC/1F,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;MAE5C,IAAMsC,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;MAC/B,IAAM/I,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;MACnC,IAAMghF,YAAY,GAAG,IAAI,CAACxgG,WAAW,CAAC9f,MAAM;MAE5C,IAAIshB,eAAe,EAAE8+F,UAAU,EAAED,WAAW,EAAEI,YAAY;MAC1D,IAAIh/F,MAAM;MAEV,QAAQld,IAAI;QACV,KAAK,cAAc;UACjBid,eAAe,GACb,2DACEgJ,QAAQ,CACR4c,0BAA0B,CAAC,CAAC;UAChCq5E,YAAY,GAAG,EAAE;UACjB,IAAMlgF,KAAK,GACT,2DACE/V,QAAQ,CACRk2F,QAAQ,CAAC,CAAC;UACdj/F,MAAM,GAAG,CAAC;UACV,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;YAC9C,IAAM+/G,MAAM,GAAG,EAAE;YACjBl/F,MAAM,GAAG,IAAI,CAAC2+F,sBAAsB,CAClC5+F,eAAe,EACfC,MAAM,EACN8e,KAAK,CAAC3/B,CAAC,CAAC,EACR8gB,MAAM,EACNi/F,MACF,CAAC;YACDF,YAAY,CAACr4G,IAAI,CAACu4G,MAAM,CAAC;UAC3B;UACA,IAAI,CAACzB,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZC,YAAY,EACZj2F,QAAQ,EACRk4D,QAAQ,EACR7gD,qCAA4B,EAC5B5/B,KAAK,CACN,CAAC;UACF,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZC,YAAY,EACZj2F,QAAQ,EACRo4D,oBAAoB,IAAIF,QAAQ,EAChC7gD,qCAA4B,EAC5B5/B,KAAK,CACN,CAAC;UACF;QACF,KAAK,SAAS;QACd,KAAK,iBAAiB;UACpBo+G,WAAW,GAAG,EAAE;UAChB7+F,eAAe,GACbjd,IAAI,IAAI,SAAS,GACb,sDACEimB,QAAQ,CACR4c,0BAA0B,CAAC,CAAC,GAC9B5c,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;UACnCzd,MAAM,GAAG,IAAI,CAAC2+F,sBAAsB,CAClC5+F,eAAe,EACf,CAAC,EACD,sGACEgJ,QAAQ,CACR8c,OAAO,CAAC,CAAC,EACX5lB,MAAM,EACN2+F,WACF,CAAC;UACD,IAAI,CAACnB,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZH,WAAW,EACX71F,QAAQ,EACRk4D,QAAQ,EACR9gD,gCAAuB,EACvB3/B,KAAK,CACN,CAAC;UACF,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZH,WAAW,EACX71F,QAAQ,EACRo4D,oBAAoB,IAAIF,QAAQ,EAChC9gD,gCAAuB,EACvB3/B,KAAK,CACN,CAAC;UACF;QACF,KAAK,YAAY;QACjB,KAAK,QAAQ;UACXuf,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;UAC/CohF,UAAU,GAAG,IAAI,CAACX,yBAAyB,CACzCn+F,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACN,KAAK,EACL,KACF,CAAC;UACD,IAAI,CAACw9F,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRk4D,QAAQ,EACR/gD,2BAAkB,EAClB1/B,KAAK,CACN,CAAC;UACF,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRo4D,oBAAoB,IAAIF,QAAQ,EAChC/gD,2BAAkB,EAClB1/B,KAAK,CACN,CAAC;UACF;QACF,KAAK,YAAY;UACfuf,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;UAC/CohF,UAAU,GAAG,IAAI,CAACd,0BAA0B,CAACh+F,eAAe,EAAEE,MAAM,CAAC;UAErE,IAAI4+F,UAAU,GAAGE,YAAY,EAAE;YAC7B,IAAI,CAACtB,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRk4D,QAAQ,EACR/gD,2BAAkB,EAClB1/B,KAAK,CACN,CAAC;YACF,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRo4D,oBAAoB,IAAIF,QAAQ,EAChC/gD,2BAAkB,EAClB1/B,KAAK,CACN,CAAC;UACJ;UACA;QACF,KAAK,OAAO;UACVuf,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;UAC/C,IAAI,CAAClf,WAAW,CAAC5X,IAAI,CAACoZ,eAAe,CAAC,CAAC,CAAC,EAAEA,eAAe,CAAC,CAAC,CAAC,CAAC;UAC7D8+F,UAAU,GAAG,IAAI,CAACtgG,WAAW,CAAC9f,MAAM;UAEpC,IAAI,CAACg/G,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRk4D,QAAQ,EACRz5E,SAAS,EACThH,KAAK,CACN,CAAC;UACF,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC/C,MAAM,EACxB2C,YAAY,EACZF,UAAU,EACV91F,QAAQ,EACRo4D,oBAAoB,IAAIF,QAAQ,EAChCz5E,SAAS,EACThH,KAAK,CACN,CAAC;UACF;QACF;MACF;MACA,IAAI,CAAC4+G,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAihH,aAAaA,CAAC/1F,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,EAAE;MACtC,IAAI,CAAC88G,0BAA0B,GAAG,CAChC6B,oBAAiB,CAACnD,cAAc,EAChCn6B,OAAO,EACP,CAAC,EACD94D,QAAQ,EACRvoB,KAAK,CACN;MACD,IAAI,CAACi9G,YAAY,CAAC92G,IAAI,CAAC,IAAI,CAAC22G,0BAA0B,CAAC;MACvD,IAAI,CAACC,0BAA0B,GAAG,CAChC4B,oBAAiB,CAACnD,cAAc,EAChCn6B,OAAO,EACP,CAAC,EACD94D,QAAQ,EACRvoB,KAAK,CACN;MACD,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAAC,IAAI,CAAC42G,0BAA0B,CAAC;IACrE;;IAEA;AACF;AACA;EAFE;IAAA3/G,GAAA;IAAAC,KAAA,EAGA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,OAAO;QACLkhE,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BE,wBAAwB,EAAE,IAAI,CAACA,wBAAwB;QACvDp/F,WAAW,EAAE,IAAI,CAACA;MACpB,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAA3gB,GAAA;IAAAC,KAAA,EAGA,SAAAwhH,+BAA+BA,CAAA,EAAG;MAChC,IAAM1B,wBAAwB,GAAG,IAAI,CAACA,wBAAwB;MAC9D;MACAA,wBAAwB,CAACp5E,OAAO,CAAC,CAAC;MAClC;MACA,IAAIplC,CAAC;MACL,IAAMD,CAAC,GAAGy+G,wBAAwB,CAACl/G,MAAM;MACzC,IAAI6gH,WAAW;MACf,IAAIx8G,IAAI;MACR,IAAIxD,KAAK,GAAG,CAAC,CAAC;MACd,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAE,EAAEC,CAAC,EAAE;QACtBmgH,WAAW,GAAG3B,wBAAwB,CAACx+G,CAAC,CAAC;QACzC2D,IAAI,GAAG,iDAAmDw8G,WAAW,CAAC,CAAC,CAAE;QACzE,IAAIx8G,IAAI,IAAIq8G,oBAAiB,CAAC5C,YAAY,EAAE;UAC1Cj9G,KAAK,GAAGH,CAAC;QACX,CAAC,MAAM,IAAI2D,IAAI,IAAIq8G,oBAAiB,CAACnD,cAAc,EAAE;UACnDsD,WAAW,CAAC,CAAC,CAAC,GAAGngH,CAAC;UAClB,IAAAE,sBAAe,EAAC,IAAI,CAACs+G,wBAAwB,EAAEr+G,KAAK,EAAEH,CAAC,CAAC;UACxDG,KAAK,GAAG,CAAC,CAAC;QACZ;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1B,GAAA;IAAAC,KAAA,EAKA,SAAA0hH,gBAAgBA,CACdnsC,SAAS,EAET;MAAA,IADAp7D,KAAK,GAAAjW,SAAA,CAAAtD,MAAA,QAAAsD,SAAA,QAAAyF,SAAA,GAAAzF,SAAA,OAAG,qDAAuD,CAAC,CAAC;MAEjE,IAAIqxE,SAAS,EAAE;QACb,IAAMosC,cAAc,GAAGpsC,SAAS,CAAC2J,QAAQ,CAAC,CAAC;QAC3C/kE,KAAK,CAACynG,gBAAgB,GACpBD,cAAc,IACd77G,OAAA,CAAO67G,cAAc,MAAK,QAAQ,IAClC,KAAK,IAAIA,cAAc,GACnB,IAAI,CAAChxC,UAAU,GACf,CAAC;QACPx2D,KAAK,CAACo7D,SAAS,GAAG,IAAAK,sBAAW,EAC3B+rC,cAAc,GAAGA,cAAc,GAAGxrC,wBACpC,CAAC;MACH,CAAC,MAAM;QACLh8D,KAAK,CAACo7D,SAAS,GAAG5rE,SAAS;MAC7B;MACA,OAAOwQ,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApa,GAAA;IAAAC,KAAA,EAKA,SAAA6hH,kBAAkBA,CAChBljC,WAAW,EAEX;MAAA,IADAxkE,KAAK,GAAAjW,SAAA,CAAAtD,MAAA,QAAAsD,SAAA,QAAAyF,SAAA,GAAAzF,SAAA,OAAG,qDAAuD,CAAC,CAAC;MAEjE,IAAIy6E,WAAW,EAAE;QACf,IAAMmjC,gBAAgB,GAAGnjC,WAAW,CAACO,QAAQ,CAAC,CAAC;QAC/C/kE,KAAK,CAACwkE,WAAW,GAAG,IAAA/I,sBAAW,EAC7BksC,gBAAgB,GAAGA,gBAAgB,GAAGrrC,0BACxC,CAAC;QACD,IAAMsrC,kBAAkB,GAAGpjC,WAAW,CAACW,UAAU,CAAC,CAAC;QACnDnlE,KAAK,CAACqkE,OAAO,GACXujC,kBAAkB,KAAKp4G,SAAS,GAAGo4G,kBAAkB,GAAG3rC,sBAAc;QACxE,IAAM4rC,mBAAmB,GAAGrjC,WAAW,CAACQ,WAAW,CAAC,CAAC;QACrDhlE,KAAK,CAACskE,QAAQ,GAAGujC,mBAAmB,GAChCA,mBAAmB,CAACh+G,KAAK,CAAC,CAAC,GAC3BqyE,uBAAe;QACnB,IAAM4rC,yBAAyB,GAAGtjC,WAAW,CAACS,iBAAiB,CAAC,CAAC;QACjEjlE,KAAK,CAACukE,cAAc,GAAGujC,yBAAyB,GAC5CA,yBAAyB,GACzB3rC,6BAAqB;QACzB,IAAM4rC,mBAAmB,GAAGvjC,WAAW,CAACU,WAAW,CAAC,CAAC;QACrDllE,KAAK,CAACsjE,QAAQ,GACZykC,mBAAmB,KAAKv4G,SAAS,GAC7Bu4G,mBAAmB,GACnB3rC,uBAAe;QACrB,IAAM4rC,gBAAgB,GAAGxjC,WAAW,CAACt7D,QAAQ,CAAC,CAAC;QAC/ClJ,KAAK,CAACs/D,SAAS,GACb0oC,gBAAgB,KAAKx4G,SAAS,GAAGw4G,gBAAgB,GAAGtrC,wBAAgB;QACtE,IAAMurC,qBAAqB,GAAGzjC,WAAW,CAACY,aAAa,CAAC,CAAC;QACzDplE,KAAK,CAACwjE,UAAU,GACdykC,qBAAqB,KAAKz4G,SAAS,GAC/By4G,qBAAqB,GACrB5rC,yBAAiB;QAEvB,IAAIr8D,KAAK,CAACs/D,SAAS,GAAG,IAAI,CAAC+lC,YAAY,EAAE;UACvC,IAAI,CAACA,YAAY,GAAGrlG,KAAK,CAACs/D,SAAS;UACnC;UACA,IAAI,CAACkmC,kBAAkB,GAAG,IAAI;QAChC;MACF,CAAC,MAAM;QACLxlG,KAAK,CAACwkE,WAAW,GAAGh1E,SAAS;QAC7BwQ,KAAK,CAACqkE,OAAO,GAAG70E,SAAS;QACzBwQ,KAAK,CAACskE,QAAQ,GAAG,IAAI;QACrBtkE,KAAK,CAACukE,cAAc,GAAG/0E,SAAS;QAChCwQ,KAAK,CAACsjE,QAAQ,GAAG9zE,SAAS;QAC1BwQ,KAAK,CAACs/D,SAAS,GAAG9vE,SAAS;QAC3BwQ,KAAK,CAACwjE,UAAU,GAAGh0E,SAAS;MAC9B;MACA,OAAOwQ,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApa,GAAA;IAAAC,KAAA,EAKA,SAAA49G,kBAAkBA,CAACroC,SAAS,EAAEoJ,WAAW,EAAE;MACzC,IAAMxkE,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI,CAACunG,gBAAgB,CAACnsC,SAAS,EAAEp7D,KAAK,CAAC;MACvC,IAAI,CAAC0nG,kBAAkB,CAACljC,WAAW,EAAExkE,KAAK,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;EAHE;IAAApa,GAAA;IAAAC,KAAA,EAIA,SAAAqiH,UAAUA,CAACloG,KAAK,EAAE;MAChB,IAAMo7D,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC;MACA,IAAMypC,eAAe,GAAG,CAACsC,oBAAiB,CAACzC,cAAc,EAAEtpC,SAAS,CAAC;MACrE,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;QACjC;QACAypC,eAAe,CAACl2G,IAAI,CAACqR,KAAK,CAACynG,gBAAgB,CAAC;MAC9C;MACA,OAAO5C,eAAe;IACxB;;IAEA;AACF;AACA;EAFE;IAAAj/G,GAAA;IAAAC,KAAA,EAGA,SAAAsiH,WAAWA,CAACnoG,KAAK,EAAE;MACjB,IAAI,CAACylG,YAAY,CAAC92G,IAAI,CAAC,IAAI,CAACy5G,YAAY,CAACpoG,KAAK,CAAC,CAAC;IAClD;;IAEA;AACF;AACA;AACA;EAHE;IAAApa,GAAA;IAAAC,KAAA,EAIA,SAAAuiH,YAAYA,CAACpoG,KAAK,EAAE;MAClB,OAAO,CACLmnG,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,GAAG,IAAI,CAAC9I,UAAU,EACjCx2D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBxjE,KAAK,CAACskE,QAAQ,GAAG,IAAI,CAACshC,eAAe,CAAC5lG,KAAK,CAACskE,QAAQ,CAAC,GAAG,IAAI,EAC5DtkE,KAAK,CAACukE,cAAc,GAAG,IAAI,CAAC/N,UAAU,CACvC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA5wE,GAAA;IAAAC,KAAA,EAIA,SAAAwiH,eAAeA,CAACroG,KAAK,EAAEkoG,UAAU,EAAE;MACjC,IAAM9sC,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC,IAAI,OAAOA,SAAS,KAAK,QAAQ,IAAIp7D,KAAK,CAACsoG,gBAAgB,IAAIltC,SAAS,EAAE;QACxE,IAAIA,SAAS,KAAK5rE,SAAS,EAAE;UAC3B,IAAI,CAACi2G,YAAY,CAAC92G,IAAI,CAACu5G,UAAU,CAACp+G,IAAI,CAAC,IAAI,EAAEkW,KAAK,CAAC,CAAC;QACtD;QACAA,KAAK,CAACsoG,gBAAgB,GAAGltC,SAAS;MACpC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAx1E,GAAA;IAAAC,KAAA,EAIA,SAAA0iH,iBAAiBA,CAACvoG,KAAK,EAAEmoG,WAAW,EAAE;MACpC,IAAM3jC,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAMH,OAAO,GAAGrkE,KAAK,CAACqkE,OAAO;MAC7B,IAAMC,QAAQ,GAAGtkE,KAAK,CAACskE,QAAQ;MAC/B,IAAMC,cAAc,GAAGvkE,KAAK,CAACukE,cAAc;MAC3C,IAAMjB,QAAQ,GAAGtjE,KAAK,CAACsjE,QAAQ;MAC/B,IAAMhE,SAAS,GAAGt/D,KAAK,CAACs/D,SAAS;MACjC,IAAMkE,UAAU,GAAGxjE,KAAK,CAACwjE,UAAU;MACnC,IACExjE,KAAK,CAACwoG,kBAAkB,IAAIhkC,WAAW,IACvCxkE,KAAK,CAACyoG,cAAc,IAAIpkC,OAAO,IAC9BC,QAAQ,IAAItkE,KAAK,CAAC0oG,eAAe,IAChC,CAAC,IAAAxgH,aAAM,EAAC8X,KAAK,CAAC0oG,eAAe,EAAEpkC,QAAQ,CAAE,IAC3CtkE,KAAK,CAAC2oG,qBAAqB,IAAIpkC,cAAc,IAC7CvkE,KAAK,CAAC4oG,eAAe,IAAItlC,QAAQ,IACjCtjE,KAAK,CAAC6oG,gBAAgB,IAAIvpC,SAAS,IACnCt/D,KAAK,CAAC8oG,iBAAiB,IAAItlC,UAAU,EACrC;QACA,IAAIgB,WAAW,KAAKh1E,SAAS,EAAE;UAC7B24G,WAAW,CAACr+G,IAAI,CAAC,IAAI,EAAEkW,KAAK,CAAC;QAC/B;QACAA,KAAK,CAACwoG,kBAAkB,GAAGhkC,WAAW;QACtCxkE,KAAK,CAACyoG,cAAc,GAAGpkC,OAAO;QAC9BrkE,KAAK,CAAC0oG,eAAe,GAAGpkC,QAAQ;QAChCtkE,KAAK,CAAC2oG,qBAAqB,GAAGpkC,cAAc;QAC5CvkE,KAAK,CAAC4oG,eAAe,GAAGtlC,QAAQ;QAChCtjE,KAAK,CAAC6oG,gBAAgB,GAAGvpC,SAAS;QAClCt/D,KAAK,CAAC8oG,iBAAiB,GAAGtlC,UAAU;MACtC;IACF;;IAEA;AACF;AACA;EAFE;IAAA59E,GAAA;IAAAC,KAAA,EAGA,SAAAuhH,WAAWA,CAACv9B,OAAO,EAAE;MACnB,IAAI,CAACy7B,0BAA0B,CAAC,CAAC,CAAC,GAAG,IAAI,CAACG,YAAY,CAACh/G,MAAM;MAC7D,IAAI,CAAC6+G,0BAA0B,GAAG,IAAI;MACtC,IAAI,CAACC,0BAA0B,CAAC,CAAC,CAAC,GAAG,IAAI,CAACI,wBAAwB,CAACl/G,MAAM;MACzE,IAAI,CAAC8+G,0BAA0B,GAAG,IAAI;MACtC,IAAMwD,sBAAsB,GAAG,CAAC5B,oBAAiB,CAAC5C,YAAY,EAAE16B,OAAO,CAAC;MACxE,IAAI,CAAC47B,YAAY,CAAC92G,IAAI,CAACo6G,sBAAsB,CAAC;MAC9C,IAAI,CAACpD,wBAAwB,CAACh3G,IAAI,CAACo6G,sBAAsB,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnjH,GAAA;IAAAC,KAAA,EAOA,SAAAmgH,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACR,kBAAkB,EAAE;QAC5B,IAAI,CAACA,kBAAkB,GAAG,IAAAx+F,aAAK,EAAC,IAAI,CAAC8nB,SAAS,CAAC;QAC/C,IAAI,IAAI,CAACu2E,YAAY,GAAG,CAAC,EAAE;UACzB,IAAMx5F,KAAK,GAAI,IAAI,CAACxH,UAAU,IAAI,IAAI,CAACghG,YAAY,GAAG,CAAC,CAAC,GAAI,CAAC;UAC7D,IAAAt+F,cAAM,EAAC,IAAI,CAACy+F,kBAAkB,EAAE35F,KAAK,EAAE,IAAI,CAAC25F,kBAAkB,CAAC;QACjE;MACF;MACA,OAAO,IAAI,CAACA,kBAAkB;IAChC;EAAC;AAAA,EA3pByBpD,uBAAa;AAAA,IAAAn+G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8pB1BghH,aAAa;;;;;;;;ACzrB5B,IAAA33F,OAAA,GAAAtkB,OAAA;AACA,IAAA8/G,QAAA,GAAA39G,sBAAA,CAAAnC,OAAA;AACA,IAAAg8G,YAAA,GAAA75G,sBAAA,CAAAnC,OAAA;AAAiD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KALjD;AACA;AACA;AAFA,IAOMw9G,kBAAkB,0BAAAC,cAAA;EACtB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAD,mBAAY1gG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA,IAAAvoE,KAAA;IAAAxI,eAAA,OAAAwjH,kBAAA;IACxDh7G,KAAA,GAAAnB,UAAA,OAAAm8G,kBAAA,GAAM1gG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU;;IAElD;AACJ;AACA;AACA;IACIvoE,KAAA,CAAK2rE,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACI3rE,KAAA,CAAK2oE,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI3oE,KAAA,CAAKk7G,gBAAgB,GAAG35G,SAAS;;IAEjC;AACJ;AACA;AACA;IACIvB,KAAA,CAAKm7G,QAAQ,GAAG55G,SAAS;;IAEzB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKo7G,QAAQ,GAAG75G,SAAS;;IAEzB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKq7G,OAAO,GAAG95G,SAAS;;IAExB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKmyE,QAAQ,GAAG5wE,SAAS;;IAEzB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKs7G,QAAQ,GAAG/5G,SAAS;;IAEzB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKu7G,QAAQ,GAAGh6G,SAAS;;IAEzB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKoyE,eAAe,GAAG7wE,SAAS;;IAEhC;AACJ;AACA;AACA;IACIvB,KAAA,CAAK+6C,SAAS,GAAGx5C,SAAS;;IAE1B;AACJ;AACA;AACA;IACIvB,KAAA,CAAKsyE,MAAM,GAAG/wE,SAAS;;IAEvB;AACJ;AACA;AACA;IACIvB,KAAA,CAAKm6E,MAAM,GAAG54E,SAAS;;IAEvB;AACJ;AACA;AACA;IACIvB,KAAA,CAAK0yE,cAAc,GAAGnxE,SAAS;;IAE/B;AACJ;AACA;AACA;AACA;IACIvB,KAAA,CAAKw7G,uBAAuB,GAAGj6G,SAAS;IAAC,OAAAvB,KAAA;EAC3C;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAq7G,kBAAA,EAAAC,cAAA;EAAA,OAAAvjH,YAAA,CAAAsjH,kBAAA;IAAArjH,GAAA;IAAAC,KAAA,EAMA,SAAAu9G,SAASA,CAACC,aAAa,EAAEx5B,OAAO,EAAErhF,KAAK,EAAE;MACvC,IACE,CAAC,IAAI,CAACouE,MAAM,IACX,IAAI,CAAC9nC,SAAS,IACb,CAAC,IAAA5nB,0BAAkB,EAAC,IAAI,CAAC4nB,SAAS,EAAEu0E,aAAa,CAAC59E,kBAAkB,CAAC,CAAC,CAAE,EAC1E;QACA;MACF;MACA,IAAI,CAACqhF,aAAa,CAACzD,aAAa,EAAEx5B,OAAO,EAAErhF,KAAK,CAAC;MACjD,IAAMuf,eAAe,GAAGs7F,aAAa,CAAC59E,kBAAkB,CAAC,CAAC;MAC1D,IAAMxd,MAAM,GAAGo7F,aAAa,CAACt9E,SAAS,CAAC,CAAC;MACxC,IAAM2jF,OAAO,GAAG,IAAI,CAACnjG,WAAW,CAAC9f,MAAM;MACvC,IAAMw/G,KAAK,GAAG,IAAI,CAACF,0BAA0B,CAACh+F,eAAe,EAAEE,MAAM,CAAC;MACtE,IAAI,CAACw9F,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC7C,UAAU,EAC5BoF,OAAO,EACPzD,KAAK,EACL,IAAI,CAACrvC,MAAM;MACX;MACA,IAAI,CAACwyC,QAAQ,GAAG,IAAI,CAACD,gBAAgB,EACrC,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACF,gBAAgB,EACrC3tG,IAAI,CAACqI,IAAI,CAAC,IAAI,CAACylG,OAAO,GAAG,IAAI,CAACH,gBAAgB,CAAC,EAC/C,IAAI,CAAC/oC,QAAQ,EACb,IAAI,CAACmpC,QAAQ,GAAG,IAAI,CAACJ,gBAAgB,EACrC,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACL,gBAAgB,EACrC,IAAI,CAAC9oC,eAAe,EACpB,IAAI,CAACr3B,SAAS,EACd,CACG,IAAI,CAACu3B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/J,UAAU,GAAI,IAAI,CAAC2yC,gBAAgB,EACzD,IAAI,CAAC5oC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/J,UAAU,GAAI,IAAI,CAAC2yC,gBAAgB,CAC3D,EACD3tG,IAAI,CAACqI,IAAI,CAAC,IAAI,CAACukE,MAAM,GAAG,IAAI,CAAC+gC,gBAAgB,CAAC,EAC9C,IAAI,CAACxoC,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,CAC7B,CAAC;MACF,IAAI,CAAC9D,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC7C,UAAU,EAC5BoF,OAAO,EACPzD,KAAK,EACL,IAAI,CAACrsC,kBAAkB;MACvB;MACA,IAAI,CAACwvC,QAAQ,EACb,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,OAAO,EACZ,CAAC,EACD,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,QAAQ,EACb,IAAI,CAACnpC,eAAe,EACpB,IAAI,CAACr3B,SAAS,EACd,IAAI,CAACu3B,MAAM,EACX,IAAI,CAAC6H,MAAM,EACX,IAAI,CAACzH,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,CAC7B,CAAC;MACF,IAAI,CAACrC,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAm9G,cAAcA,CAACC,kBAAkB,EAAEp5B,OAAO,EAAErhF,KAAK,EAAE;MACjD,IAAI,CAAC,IAAI,CAACouE,MAAM,EAAE;QAChB;MACF;MACA,IAAI,CAACkwC,aAAa,CAAC7D,kBAAkB,EAAEp5B,OAAO,EAAErhF,KAAK,CAAC;MACtD,IAAMuf,eAAe,GAAGk7F,kBAAkB,CAACx9E,kBAAkB,CAAC,CAAC;MAC/D,IAAMkkF,uBAAuB,GAAG,EAAE;MAClC,KACE,IAAIxiH,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG4Y,eAAe,CAACthB,MAAM,EACtCU,CAAC,GAAGgI,EAAE,EACNhI,CAAC,IAAI87G,kBAAkB,CAACl9E,SAAS,CAAC,CAAC,EACnC;QACA,IACE,CAAC,IAAI,CAAC+I,SAAS,IACf,IAAA5nB,0BAAkB,EAAC,IAAI,CAAC4nB,SAAS,EAAE/mB,eAAe,CAACle,KAAK,CAAC1C,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC,EACnE;UACAwiH,uBAAuB,CAACh7G,IAAI,CAC1BoZ,eAAe,CAAC5gB,CAAC,CAAC,EAClB4gB,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CACvB,CAAC;QACH;MACF;MACA,IAAMuiH,OAAO,GAAG,IAAI,CAACnjG,WAAW,CAAC9f,MAAM;MACvC,IAAMw/G,KAAK,GAAG,IAAI,CAACF,0BAA0B,CAAC4D,uBAAuB,EAAE,CAAC,CAAC;MACzE,IAAI,CAAClE,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC7C,UAAU,EAC5BoF,OAAO,EACPzD,KAAK,EACL,IAAI,CAACrvC,MAAM;MACX;MACA,IAAI,CAACwyC,QAAQ,GAAG,IAAI,CAACD,gBAAgB,EACrC,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACF,gBAAgB,EACrC3tG,IAAI,CAACqI,IAAI,CAAC,IAAI,CAACylG,OAAO,GAAG,IAAI,CAACH,gBAAgB,CAAC,EAC/C,IAAI,CAAC/oC,QAAQ,EACb,IAAI,CAACmpC,QAAQ,GAAG,IAAI,CAACJ,gBAAgB,EACrC,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACL,gBAAgB,EACrC,IAAI,CAAC9oC,eAAe,EACpB,IAAI,CAACr3B,SAAS,EACd,CACG,IAAI,CAACu3B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/J,UAAU,GAAI,IAAI,CAAC2yC,gBAAgB,EACzD,IAAI,CAAC5oC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/J,UAAU,GAAI,IAAI,CAAC2yC,gBAAgB,CAC3D,EACD3tG,IAAI,CAACqI,IAAI,CAAC,IAAI,CAACukE,MAAM,GAAG,IAAI,CAAC+gC,gBAAgB,CAAC,EAC9C,IAAI,CAACxoC,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,CAC7B,CAAC;MACF,IAAI,CAAC9D,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC7C,UAAU,EAC5BoF,OAAO,EACPzD,KAAK,EACL,IAAI,CAACrsC,kBAAkB;MACvB;MACA,IAAI,CAACwvC,QAAQ,EACb,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,OAAO,EACZ,CAAC,EACD,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,QAAQ,EACb,IAAI,CAACnpC,eAAe,EACpB,IAAI,CAACr3B,SAAS,EACd,IAAI,CAACu3B,MAAM,EACX,IAAI,CAAC6H,MAAM,EACX,IAAI,CAACzH,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,CAC7B,CAAC;MACF,IAAI,CAACrC,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAjkF,GAAA;IAAAC,KAAA,EAIA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC8iE,+BAA+B,CAAC,CAAC;MACtC;MACA,IAAI,CAAC+B,QAAQ,GAAG55G,SAAS;MACzB,IAAI,CAAC65G,QAAQ,GAAG75G,SAAS;MACzB,IAAI,CAACoqE,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAAChD,MAAM,GAAG,IAAI;MAClB,IAAI,CAACuyC,gBAAgB,GAAG35G,SAAS;MACjC,IAAI,CAAC85G,OAAO,GAAG95G,SAAS;MACxB,IAAI,CAAC+wE,MAAM,GAAG/wE,SAAS;MACvB,IAAI,CAAC4wE,QAAQ,GAAG5wE,SAAS;MACzB,IAAI,CAAC+5G,QAAQ,GAAG/5G,SAAS;MACzB,IAAI,CAACg6G,QAAQ,GAAGh6G,SAAS;MACzB,IAAI,CAAC6wE,eAAe,GAAG7wE,SAAS;MAChC,IAAI,CAACw5C,SAAS,GAAGx5C,SAAS;MAC1B,IAAI,CAAC44E,MAAM,GAAG54E,SAAS;MACvB,OAAAgG,aAAA,CAAAyzG,kBAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArjH,GAAA;IAAAC,KAAA,EAKA,SAAA69G,aAAaA,CAACC,UAAU,EAAEiG,UAAU,EAAE;MACpC,IAAM7mF,MAAM,GAAG4gF,UAAU,CAACziC,SAAS,CAAC,CAAC;MACrC,IAAM58D,IAAI,GAAGq/F,UAAU,CAAC74F,OAAO,CAAC,CAAC;MACjC,IAAMorF,MAAM,GAAGyN,UAAU,CAACviC,SAAS,CAAC,CAAC;MACrC,IAAI,CAAC+nC,gBAAgB,GAAGxF,UAAU,CAAC5sC,aAAa,CAAC,IAAI,CAACP,UAAU,CAAC;MACjE,IAAI,CAAC4yC,QAAQ,GAAGrmF,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,CAACsmF,QAAQ,GAAGtmF,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,CAAC62C,kBAAkB,GAAG+pC,UAAU,CAAC7oC,oBAAoB,CAAC,CAAC;MAC3D,IAAI,CAAClE,MAAM,GAAG+sC,UAAU,CAAC7sC,QAAQ,CAAC,IAAI,CAACN,UAAU,CAAC;MAClD,IAAI,CAAC8yC,OAAO,GAAGhlG,IAAI,CAAC,CAAC,CAAC;MACtB,IAAI,CAAC87D,QAAQ,GAAGujC,UAAU,CAACnqD,UAAU,CAAC,CAAC;MACvC,IAAI,CAAC+vD,QAAQ,GAAGrT,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,CAACsT,QAAQ,GAAGtT,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,CAAC71B,eAAe,GAAGsjC,UAAU,CAAC7iC,iBAAiB,CAAC,CAAC;MACrD,IAAI,CAAC93B,SAAS,GAAG26D,UAAU,CAAC1vE,WAAW,CAAC,CAAC;MACzC,IAAI,CAACssC,MAAM,GAAGojC,UAAU,CAAC1iC,aAAa,CAAC,CAAC;MACxC,IAAI,CAACmH,MAAM,GAAG9jE,IAAI,CAAC,CAAC,CAAC;MACrB,IAAI,CAACq8D,cAAc,GAAGgjC,UAAU,CAAC3iC,gBAAgB,CAAC,CAAC;MACnD,IAAI,CAACyoC,uBAAuB,GAAGG,UAAU;IAC3C;EAAC;AAAA,EA9R8BzE,gBAAa;AAAA,IAAAlhH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAiS/B8kH,kBAAkB;;;;;;;;ACrSjC,IAAAtnC,OAAA,GAAAz4E,OAAA;AACA,IAAA8/G,QAAA,GAAA39G,sBAAA,CAAAnC,OAAA;AACA,IAAAg8G,YAAA,GAAApmG,uBAAA,CAAA5V,OAAA;AAG0B,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAR1B;AACA;AACA;AAFA,IAUMo+G,uBAAuB,0BAAAX,cAAA;EAC3B;AACF;AACA;AACA;AACA;AACA;EACE,SAAAW,wBAAYthG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA/wE,eAAA,OAAAokH,uBAAA;IAAA,OAAA/8G,UAAA,OAAA+8G,uBAAA,GAClDthG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU;EACpD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE5oE,SAAA,CAAAi8G,uBAAA,EAAAX,cAAA;EAAA,OAAAvjH,YAAA,CAAAkkH,uBAAA;IAAAjkH,GAAA;IAAAC,KAAA,EAQA,SAAAikH,oBAAoBA,CAAC/hG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;MACzD,IAAMyhG,OAAO,GAAG,IAAI,CAACnjG,WAAW,CAAC9f,MAAM;MACvC,IAAMw/G,KAAK,GAAG,IAAI,CAACC,yBAAyB,CAC1Cn+F,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,KAAK,EACL,KACF,CAAC;MACD,IAAM8hG,uBAAuB,GAAG,CAC9B5C,oBAAiB,CAAC1C,eAAe,EACjCiF,OAAO,EACPzD,KAAK,CACN;MACD,IAAI,CAACR,YAAY,CAAC92G,IAAI,CAACo7G,uBAAuB,CAAC;MAC/C,IAAI,CAACpE,wBAAwB,CAACh3G,IAAI,CAACo7G,uBAAuB,CAAC;MAC3D,OAAOxiH,GAAG;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3B,GAAA;IAAAC,KAAA,EAMA,SAAA+8G,cAAcA,CAACC,kBAAkB,EAAEh5B,OAAO,EAAErhF,KAAK,EAAE;MACjD,IAAMwX,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMwkE,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAMlF,SAAS,GAAGt/D,KAAK,CAACs/D,SAAS;MACjC,IAAIkF,WAAW,KAAKh1E,SAAS,IAAI8vE,SAAS,KAAK9vE,SAAS,EAAE;QACxD;MACF;MACA,IAAI,CAAC+4G,iBAAiB,CAACvoG,KAAK,EAAE,IAAI,CAACmoG,WAAW,CAAC;MAC/C,IAAI,CAACrB,aAAa,CAACjE,kBAAkB,EAAEh5B,OAAO,EAAErhF,KAAK,CAAC;MACtD,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAChC,CACEw4G,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,EACft/D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBtH,uBAAe,EACfC,6BAAqB,CACtB,EACD4oC,iCACF,CAAC;MACD,IAAMh9F,eAAe,GAAG86F,kBAAkB,CAACp9E,kBAAkB,CAAC,CAAC;MAC/D,IAAMxd,MAAM,GAAG46F,kBAAkB,CAAC98E,SAAS,CAAC,CAAC;MAC7C,IAAI,CAAC+jF,oBAAoB,CACvB/hG,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MACF,CAAC;MACD,IAAI,CAAC09F,wBAAwB,CAACh3G,IAAI,CAACm2G,8BAAiB,CAAC;MACrD,IAAI,CAACsC,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAi9G,mBAAmBA,CAACC,uBAAuB,EAAEl5B,OAAO,EAAErhF,KAAK,EAAE;MAC3D,IAAMwX,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMwkE,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAMlF,SAAS,GAAGt/D,KAAK,CAACs/D,SAAS;MACjC,IAAIkF,WAAW,KAAKh1E,SAAS,IAAI8vE,SAAS,KAAK9vE,SAAS,EAAE;QACxD;MACF;MACA,IAAI,CAAC+4G,iBAAiB,CAACvoG,KAAK,EAAE,IAAI,CAACmoG,WAAW,CAAC;MAC/C,IAAI,CAACrB,aAAa,CAAC/D,uBAAuB,EAAEl5B,OAAO,EAAErhF,KAAK,CAAC;MAC3D,IAAI,CAACm9G,wBAAwB,CAACh3G,IAAI,CAChC,CACEw4G,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,EACft/D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBtH,uBAAe,EACfC,6BAAqB,CACtB,EACD4oC,iCACF,CAAC;MACD,IAAMn+E,IAAI,GAAGm8E,uBAAuB,CAACl1E,OAAO,CAAC,CAAC;MAC9C,IAAM9lB,eAAe,GAAGg7F,uBAAuB,CAACt9E,kBAAkB,CAAC,CAAC;MACpE,IAAMxd,MAAM,GAAG86F,uBAAuB,CAACh9E,SAAS,CAAC,CAAC;MAClD,IAAI/d,MAAM,GAAG,CAAC;MACd,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C6gB,MAAM,GAAG,IAAI,CAAC8hG,oBAAoB,CAChC/hG,eAAe,EACfC,MAAM,EACN,qBAAuB4e,IAAI,CAACz/B,CAAC,CAAC,EAC9B8gB,MACF,CAAC;MACH;MACA,IAAI,CAAC09F,wBAAwB,CAACh3G,IAAI,CAACm2G,8BAAiB,CAAC;MACrD,IAAI,CAACsC,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAjkF,GAAA;IAAAC,KAAA,EAIA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,IAAMvkC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IACEA,KAAK,CAACgqG,UAAU,IAAIx6G,SAAS,IAC7BwQ,KAAK,CAACgqG,UAAU,IAAI,IAAI,CAACzjG,WAAW,CAAC9f,MAAM,EAC3C;QACA,IAAI,CAACg/G,YAAY,CAAC92G,IAAI,CAACm2G,8BAAiB,CAAC;MAC3C;MACA,IAAI,CAACuC,+BAA+B,CAAC,CAAC;MACtC,IAAI,CAACrnG,KAAK,GAAG,IAAI;MACjB,OAAAxK,aAAA,CAAAq0G,uBAAA;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAjkH,GAAA;IAAAC,KAAA,EAIA,SAAAsiH,WAAWA,CAACnoG,KAAK,EAAE;MACjB,IACEA,KAAK,CAACgqG,UAAU,IAAIx6G,SAAS,IAC7BwQ,KAAK,CAACgqG,UAAU,IAAI,IAAI,CAACzjG,WAAW,CAAC9f,MAAM,EAC3C;QACA,IAAI,CAACg/G,YAAY,CAAC92G,IAAI,CAACm2G,8BAAiB,CAAC;QACzC9kG,KAAK,CAACgqG,UAAU,GAAG,IAAI,CAACzjG,WAAW,CAAC9f,MAAM;MAC5C;MACAuZ,KAAK,CAACgqG,UAAU,GAAG,CAAC;MACpBx0G,aAAA,CAAAq0G,uBAAA,2BAAkB7pG,KAAK;MACvB,IAAI,CAACylG,YAAY,CAAC92G,IAAI,CAACo2G,iCAAoB,CAAC;IAC9C;EAAC;AAAA,EA3JmCI,gBAAa;AAAA,IAAAlhH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8JpC0lH,uBAAuB;;;;;;;;ACrKtC,IAAAjgF,SAAA,GAAA1gC,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAKA,IAAA8/G,QAAA,GAAA39G,sBAAA,CAAAnC,OAAA;AACA,IAAAg8G,YAAA,GAAApmG,uBAAA,CAAA5V,OAAA;AAK0B,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAf1B;AACA;AACA;AAFA,IAiBMw+G,oBAAoB,0BAAAf,cAAA;EACxB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAe,qBAAY1hG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA/wE,eAAA,OAAAwkH,oBAAA;IAAA,OAAAn9G,UAAA,OAAAm9G,oBAAA,GAClD1hG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU;EACpD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE5oE,SAAA,CAAAq8G,oBAAA,EAAAf,cAAA;EAAA,OAAAvjH,YAAA,CAAAskH,oBAAA;IAAArkH,GAAA;IAAAC,KAAA,EAQA,SAAAqkH,qBAAqBA,CAACniG,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAE;MAC3D,IAAMjI,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMgiE,IAAI,GAAGhiE,KAAK,CAACo7D,SAAS,KAAK5rE,SAAS;MAC1C,IAAM8yE,MAAM,GAAGtiE,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS;MAC9C,IAAM26G,OAAO,GAAGvjF,IAAI,CAACngC,MAAM;MAC3B,IAAI,CAACg/G,YAAY,CAAC92G,IAAI,CAACo2G,iCAAoB,CAAC;MAC5C,IAAI,CAACY,wBAAwB,CAACh3G,IAAI,CAACo2G,iCAAoB,CAAC;MACxD,KAAK,IAAI59G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgjH,OAAO,EAAE,EAAEhjH,CAAC,EAAE;QAChC,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;QACnB,IAAMuiH,OAAO,GAAG,IAAI,CAACnjG,WAAW,CAAC9f,MAAM;QACvC,IAAMw/G,KAAK,GAAG,IAAI,CAACC,yBAAyB,CAC1Cn+F,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,IAAI,EACJ,CAACq6D,MACH,CAAC;QACD,IAAMynC,uBAAuB,GAAG,CAC9B5C,oBAAiB,CAAC1C,eAAe,EACjCiF,OAAO,EACPzD,KAAK,CACN;QACD,IAAI,CAACR,YAAY,CAAC92G,IAAI,CAACo7G,uBAAuB,CAAC;QAC/C,IAAI,CAACpE,wBAAwB,CAACh3G,IAAI,CAACo7G,uBAAuB,CAAC;QAC3D,IAAIznC,MAAM,EAAE;UACV;UACA;UACA,IAAI,CAACmjC,YAAY,CAAC92G,IAAI,CAACq2G,iCAAoB,CAAC;UAC5C,IAAI,CAACW,wBAAwB,CAACh3G,IAAI,CAACq2G,iCAAoB,CAAC;QAC1D;QACAh9F,MAAM,GAAGzgB,GAAG;MACd;MACA,IAAIy6E,IAAI,EAAE;QACR,IAAI,CAACyjC,YAAY,CAAC92G,IAAI,CAACk2G,4BAAe,CAAC;QACvC,IAAI,CAACc,wBAAwB,CAACh3G,IAAI,CAACk2G,4BAAe,CAAC;MACrD;MACA,IAAIviC,MAAM,EAAE;QACV,IAAI,CAACmjC,YAAY,CAAC92G,IAAI,CAACm2G,8BAAiB,CAAC;QACzC,IAAI,CAACa,wBAAwB,CAACh3G,IAAI,CAACm2G,8BAAiB,CAAC;MACvD;MACA,OAAO98F,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApiB,GAAA;IAAAC,KAAA,EAMA,SAAA08G,UAAUA,CAACC,cAAc,EAAE34B,OAAO,EAAErhF,KAAK,EAAE;MACzC,IAAMwX,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMo7D,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC,IAAMoJ,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAIpJ,SAAS,KAAK5rE,SAAS,IAAIg1E,WAAW,KAAKh1E,SAAS,EAAE;QACxD;MACF;MACA,IAAI,CAAC46G,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACtD,aAAa,CAACtE,cAAc,EAAE34B,OAAO,EAAErhF,KAAK,CAAC;MAClD,IAAIwX,KAAK,CAACo7D,SAAS,KAAK5rE,SAAS,EAAE;QACjC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACzC,cAAc,EAChC1oC,wBAAgB,CACjB,CAAC;MACJ;MACA,IAAIh8D,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS,EAAE;QACnC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,EACft/D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBtH,uBAAe,EACfC,6BAAqB,CACtB,CAAC;MACJ;MACA,IAAMp0D,eAAe,GAAGy6F,cAAc,CAAC/8E,kBAAkB,CAAC,CAAC;MAC3D,IAAMxd,MAAM,GAAGu6F,cAAc,CAACz8E,SAAS,CAAC,CAAC;MACzC,IAAM2jF,OAAO,GAAG,IAAI,CAACnjG,WAAW,CAAC9f,MAAM;MACvC,IAAI,CAACy/G,yBAAyB,CAC5Bn+F,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBwhB,MAAM,EACN,KAAK,EACL,KACF,CAAC;MACD,IAAMoiG,iBAAiB,GAAG,CAAClD,oBAAiB,CAACjD,MAAM,EAAEwF,OAAO,CAAC;MAC7D,IAAI,CAACjE,YAAY,CAAC92G,IAAI,CAACo2G,iCAAoB,EAAEsF,iBAAiB,CAAC;MAC/D,IAAI,CAAC1E,wBAAwB,CAACh3G,IAAI,CAACo2G,iCAAoB,EAAEsF,iBAAiB,CAAC;MAC3E,IAAIrqG,KAAK,CAACo7D,SAAS,KAAK5rE,SAAS,EAAE;QACjC,IAAI,CAACi2G,YAAY,CAAC92G,IAAI,CAACk2G,4BAAe,CAAC;QACvC,IAAI,CAACc,wBAAwB,CAACh3G,IAAI,CAACk2G,4BAAe,CAAC;MACrD;MACA,IAAI7kG,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS,EAAE;QACnC,IAAI,CAACi2G,YAAY,CAAC92G,IAAI,CAACm2G,8BAAiB,CAAC;QACzC,IAAI,CAACa,wBAAwB,CAACh3G,IAAI,CAACm2G,8BAAiB,CAAC;MACvD;MACA,IAAI,CAACsC,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAy9G,WAAWA,CAACC,eAAe,EAAE15B,OAAO,EAAErhF,KAAK,EAAE;MAC3C,IAAMwX,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMo7D,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC,IAAMoJ,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAIpJ,SAAS,KAAK5rE,SAAS,IAAIg1E,WAAW,KAAKh1E,SAAS,EAAE;QACxD;MACF;MACA,IAAI,CAAC46G,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACtD,aAAa,CAACvD,eAAe,EAAE15B,OAAO,EAAErhF,KAAK,CAAC;MACnD,IAAIwX,KAAK,CAACo7D,SAAS,KAAK5rE,SAAS,EAAE;QACjC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACzC,cAAc,EAChC1oC,wBAAgB,CACjB,CAAC;MACJ;MACA,IAAIh8D,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS,EAAE;QACnC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,EACft/D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBtH,uBAAe,EACfC,6BAAqB,CACtB,CAAC;MACJ;MACA,IAAMv1C,IAAI,GAAG28E,eAAe,CAAC11E,OAAO,CAAC,CAAC;MACtC,IAAM9lB,eAAe,GAAGw7F,eAAe,CAAC51E,0BAA0B,CAAC,CAAC;MACpE,IAAM1lB,MAAM,GAAGs7F,eAAe,CAACx9E,SAAS,CAAC,CAAC;MAC1C,IAAI,CAACmkF,qBAAqB,CACxBniG,eAAe,EACf,CAAC,EACD,4BAA8B6e,IAAI,EAClC3e,MACF,CAAC;MACD,IAAI,CAACm/F,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAq9G,gBAAgBA,CAACC,oBAAoB,EAAEt5B,OAAO,EAAErhF,KAAK,EAAE;MACrD,IAAMwX,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMo7D,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC,IAAMoJ,WAAW,GAAGxkE,KAAK,CAACwkE,WAAW;MACrC,IAAIpJ,SAAS,KAAK5rE,SAAS,IAAIg1E,WAAW,KAAKh1E,SAAS,EAAE;QACxD;MACF;MACA,IAAI,CAAC46G,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACtD,aAAa,CAAC3D,oBAAoB,EAAEt5B,OAAO,EAAErhF,KAAK,CAAC;MACxD,IAAIwX,KAAK,CAACo7D,SAAS,KAAK5rE,SAAS,EAAE;QACjC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACzC,cAAc,EAChC1oC,wBAAgB,CACjB,CAAC;MACJ;MACA,IAAIh8D,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS,EAAE;QACnC,IAAI,CAACm2G,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAACxC,gBAAgB,EAClC3kG,KAAK,CAACwkE,WAAW,EACjBxkE,KAAK,CAACs/D,SAAS,EACft/D,KAAK,CAACqkE,OAAO,EACbrkE,KAAK,CAACsjE,QAAQ,EACdtjE,KAAK,CAACwjE,UAAU,EAChBtH,uBAAe,EACfC,6BAAqB,CACtB,CAAC;MACJ;MACA,IAAMr1C,KAAK,GAAGq8E,oBAAoB,CAAC8D,QAAQ,CAAC,CAAC;MAC7C,IAAMl/F,eAAe,GAAGo7F,oBAAoB,CAACx1E,0BAA0B,CAAC,CAAC;MACzE,IAAM1lB,MAAM,GAAGk7F,oBAAoB,CAACp9E,SAAS,CAAC,CAAC;MAC/C,IAAI/d,MAAM,GAAG,CAAC;MACd,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC9C6gB,MAAM,GAAG,IAAI,CAACkiG,qBAAqB,CACjCniG,eAAe,EACfC,MAAM,EACN8e,KAAK,CAAC3/B,CAAC,CAAC,EACR8gB,MACF,CAAC;MACH;MACA,IAAI,CAACm/F,WAAW,CAACv9B,OAAO,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAjkF,GAAA;IAAAC,KAAA,EAIA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC8iE,+BAA+B,CAAC,CAAC;MACtC,IAAI,CAACrnG,KAAK,GAAG,IAAI;MACjB;MACA;MACA;MACA;MACA,IAAMuI,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIA,SAAS,KAAK,CAAC,EAAE;QACnB,IAAMhC,WAAW,GAAG,IAAI,CAACA,WAAW;QACpC,KAAK,IAAIpf,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGoX,WAAW,CAAC9f,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UACpDof,WAAW,CAACpf,CAAC,CAAC,GAAG,IAAAgiC,cAAI,EAAC5iB,WAAW,CAACpf,CAAC,CAAC,EAAEohB,SAAS,CAAC;QAClD;MACF;MACA,OAAA/S,aAAA,CAAAy0G,oBAAA;IACF;;IAEA;AACF;AACA;EAFE;IAAArkH,GAAA;IAAAC,KAAA,EAGA,SAAAukH,oBAAoBA,CAAA,EAAG;MACrB,IAAMpqG,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMo7D,SAAS,GAAGp7D,KAAK,CAACo7D,SAAS;MACjC,IAAIA,SAAS,KAAK5rE,SAAS,EAAE;QAC3B,IAAI,CAAC64G,eAAe,CAACroG,KAAK,EAAE,IAAI,CAACkoG,UAAU,CAAC;MAC9C;MACA,IAAIloG,KAAK,CAACwkE,WAAW,KAAKh1E,SAAS,EAAE;QACnC,IAAI,CAAC+4G,iBAAiB,CAACvoG,KAAK,EAAE,IAAI,CAACmoG,WAAW,CAAC;MACjD;IACF;EAAC;AAAA,EAvPgChD,gBAAa;AAAA,IAAAlhH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA0PjC8lH,oBAAoB;;;;;;;;AC3QnC,IAAAjmG,KAAA,GAAA9a,OAAA;AAAmC,SAAAwc,eAAAxZ,CAAA,EAAAT,CAAA,WAAAka,eAAA,CAAAzZ,CAAA,KAAA0Z,qBAAA,CAAA1Z,CAAA,EAAAT,CAAA,KAAAoa,2BAAA,CAAA3Z,CAAA,EAAAT,CAAA,KAAAqa,gBAAA;AAAA,SAAAA,iBAAA,cAAA9Z,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAA0e,sBAAA1Z,CAAA,EAAA4W,CAAA,QAAA3W,CAAA,WAAAD,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAC,CAAA,QAAAV,CAAA,EAAAvE,CAAA,EAAAC,CAAA,EAAA+X,CAAA,EAAAvY,CAAA,OAAA+N,CAAA,OAAA9I,CAAA,iBAAAzE,CAAA,IAAAgF,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,GAAAia,IAAA,QAAArD,CAAA,QAAAvW,MAAA,CAAAJ,CAAA,MAAAA,CAAA,UAAAuI,CAAA,uBAAAA,CAAA,IAAAjJ,CAAA,GAAAtE,CAAA,CAAA2C,IAAA,CAAAqC,CAAA,GAAAia,IAAA,MAAAzf,CAAA,CAAAgI,IAAA,CAAAlD,CAAA,CAAA5F,KAAA,GAAAc,CAAA,CAAAF,MAAA,KAAAqc,CAAA,GAAApO,CAAA,iBAAAxI,CAAA,IAAAN,CAAA,OAAA1E,CAAA,GAAAgF,CAAA,yBAAAwI,CAAA,YAAAvI,CAAA,CAAAka,MAAA,KAAAnH,CAAA,GAAA/S,CAAA,CAAAka,MAAA,IAAA9Z,MAAA,CAAA2S,CAAA,MAAAA,CAAA,2BAAAtT,CAAA,QAAA1E,CAAA,aAAAP,CAAA;AAAA,SAAAgf,gBAAAzZ,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAAA,CAAA;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASo+G,SAASA,CAACC,WAAW,EAAExiG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EAC3E,IAAMi3D,MAAM,GAAG,EAAE;EACjB,IAAIsrC,MAAM,GAAGxiG,MAAM;EACnB,IAAIyiG,MAAM,GAAG,CAAC;EACd,IAAIC,YAAY,GAAG3iG,eAAe,CAACle,KAAK,CAACme,MAAM,EAAE,CAAC,CAAC;EACnD,OAAOyiG,MAAM,GAAGF,WAAW,IAAIC,MAAM,GAAGviG,MAAM,GAAG1gB,GAAG,EAAE;IACpD,IAAAojH,mBAAA,GAAiBD,YAAY,CAAC7gH,KAAK,CAAC,CAAC,CAAC,CAAC;MAAA+gH,oBAAA,GAAAllG,cAAA,CAAAilG,mBAAA;MAAhC5oG,EAAE,GAAA6oG,oBAAA;MAAE5oG,EAAE,GAAA4oG,oBAAA;IACb,IAAM3oG,EAAE,GAAG8F,eAAe,CAACyiG,MAAM,GAAGviG,MAAM,CAAC;IAC3C,IAAM/F,EAAE,GAAG6F,eAAe,CAACyiG,MAAM,GAAGviG,MAAM,GAAG,CAAC,CAAC;IAC/C,IAAMgjB,aAAa,GAAGzvB,IAAI,CAAC2F,IAAI,CAC7B,CAACc,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,GAAG,CAACG,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAC9C,CAAC;IACDyoG,MAAM,IAAIx/E,aAAa;IACvB,IAAIw/E,MAAM,IAAIF,WAAW,EAAE;MACzB,IAAMxnG,CAAC,GAAG,CAACwnG,WAAW,GAAGE,MAAM,GAAGx/E,aAAa,IAAIA,aAAa;MAChE,IAAMppB,CAAC,GAAG,IAAAyB,UAAI,EAACvB,EAAE,EAAEE,EAAE,EAAEc,CAAC,CAAC;MACzB,IAAMjB,CAAC,GAAG,IAAAwB,UAAI,EAACtB,EAAE,EAAEE,EAAE,EAAEa,CAAC,CAAC;MACzB2nG,YAAY,CAAC/7G,IAAI,CAACkT,CAAC,EAAEC,CAAC,CAAC;MACvBo9D,MAAM,CAACvwE,IAAI,CAAC+7G,YAAY,CAAC;MACzBA,YAAY,GAAG,CAAC7oG,CAAC,EAAEC,CAAC,CAAC;MACrB,IAAI2oG,MAAM,IAAIF,WAAW,EAAE;QACzBC,MAAM,IAAIviG,MAAM;MAClB;MACAwiG,MAAM,GAAG,CAAC;IACZ,CAAC,MAAM,IAAIA,MAAM,GAAGF,WAAW,EAAE;MAC/BG,YAAY,CAAC/7G,IAAI,CACfoZ,eAAe,CAACyiG,MAAM,GAAGviG,MAAM,CAAC,EAChCF,eAAe,CAACyiG,MAAM,GAAGviG,MAAM,GAAG,CAAC,CACrC,CAAC;MACDuiG,MAAM,IAAIviG,MAAM;IAClB,CAAC,MAAM;MACL,IAAM4iG,OAAO,GAAG5/E,aAAa,GAAGw/E,MAAM;MACtC,IAAM5oG,EAAC,GAAG,IAAAyB,UAAI,EAACvB,EAAE,EAAEE,EAAE,EAAE4oG,OAAO,GAAG5/E,aAAa,CAAC;MAC/C,IAAMnpB,EAAC,GAAG,IAAAwB,UAAI,EAACtB,EAAE,EAAEE,EAAE,EAAE2oG,OAAO,GAAG5/E,aAAa,CAAC;MAC/Cy/E,YAAY,CAAC/7G,IAAI,CAACkT,EAAC,EAAEC,EAAC,CAAC;MACvBo9D,MAAM,CAACvwE,IAAI,CAAC+7G,YAAY,CAAC;MACzBA,YAAY,GAAG,CAAC7oG,EAAC,EAAEC,EAAC,CAAC;MACrB2oG,MAAM,GAAG,CAAC;MACVD,MAAM,IAAIviG,MAAM;IAClB;EACF;EACA,IAAIwiG,MAAM,GAAG,CAAC,EAAE;IACdvrC,MAAM,CAACvwE,IAAI,CAAC+7G,YAAY,CAAC;EAC3B;EACA,OAAOxrC,MAAM;AACf;;;;;;;;ACxDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4rC,aAAaA,CAAC5/B,QAAQ,EAAEnjE,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EAC5E,IAAI8iG,UAAU,GAAG/iG,MAAM;EACvB,IAAIgjG,QAAQ,GAAGhjG,MAAM;EACrB,IAAIyiG,MAAM,GAAG,CAAC;EACd,IAAI1nG,CAAC,GAAG,CAAC;EACT,IAAImI,KAAK,GAAGlD,MAAM;EAClB,IAAIijG,IAAI,EAAE9jH,CAAC,EAAE+jH,GAAG,EAAEC,GAAG,EAAEppG,EAAE,EAAEC,EAAE,EAAEopG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG;EACjD,KAAKpkH,CAAC,GAAG6gB,MAAM,EAAE7gB,CAAC,GAAGI,GAAG,EAAEJ,CAAC,IAAI8gB,MAAM,EAAE;IACrC,IAAMhG,EAAE,GAAG8F,eAAe,CAAC5gB,CAAC,CAAC;IAC7B,IAAM+a,EAAE,GAAG6F,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI4a,EAAE,KAAKvS,SAAS,EAAE;MACpB87G,GAAG,GAAGrpG,EAAE,GAAGF,EAAE;MACbwpG,GAAG,GAAGrpG,EAAE,GAAGF,EAAE;MACbmpG,GAAG,GAAG3vG,IAAI,CAAC2F,IAAI,CAACmqG,GAAG,GAAGA,GAAG,GAAGC,GAAG,GAAGA,GAAG,CAAC;MACtC,IAAIH,GAAG,KAAK57G,SAAS,EAAE;QACrBuT,CAAC,IAAImoG,GAAG;QACRD,IAAI,GAAGzvG,IAAI,CAACyvG,IAAI,CAAC,CAACG,GAAG,GAAGE,GAAG,GAAGD,GAAG,GAAGE,GAAG,KAAKL,GAAG,GAAGC,GAAG,CAAC,CAAC;QACvD,IAAIF,IAAI,GAAG//B,QAAQ,EAAE;UACnB,IAAInoE,CAAC,GAAG0nG,MAAM,EAAE;YACdA,MAAM,GAAG1nG,CAAC;YACVgoG,UAAU,GAAG7/F,KAAK;YAClB8/F,QAAQ,GAAG7jH,CAAC;UACd;UACA4b,CAAC,GAAG,CAAC;UACLmI,KAAK,GAAG/jB,CAAC,GAAG8gB,MAAM;QACpB;MACF;MACAijG,GAAG,GAAGC,GAAG;MACTC,GAAG,GAAGE,GAAG;MACTD,GAAG,GAAGE,GAAG;IACX;IACAxpG,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACAa,CAAC,IAAIooG,GAAG;EACR,OAAOpoG,CAAC,GAAG0nG,MAAM,GAAG,CAACv/F,KAAK,EAAE/jB,CAAC,CAAC,GAAG,CAAC4jH,UAAU,EAAEC,QAAQ,CAAC;AACzD;;;;;;;;AC9CA,IAAAtpC,UAAA,GAAAx4E,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAsiH,UAAA,GAAAtiH,OAAA;AACA,IAAAuiH,cAAA,GAAAviH,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAeA,IAAA8/G,QAAA,GAAA39G,sBAAA,CAAAnC,OAAA;AACA,IAAAg8G,YAAA,GAAA75G,sBAAA,CAAAnC,OAAA;AAAiD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAxBjD;AACA;AACA;AAuBA;AACA;AACA;AACA;AACO,IAAMigH,UAAU,GAAAxnH,OAAA,CAAAwnH,UAAA,GAAG;EACxB,MAAM,EAAE,CAAC;EACT,QAAQ,EAAE,GAAG;EACb,OAAO,EAAE,CAAC;EACV,KAAK,EAAE,CAAC;EACR,QAAQ,EAAE,GAAG;EACb,SAAS,EAAE,GAAG;EACd,YAAY,EAAE,GAAG;EACjB,aAAa,EAAE,GAAG;EAClB,QAAQ,EAAE;AACZ,CAAC;AAAC,IAEIC,iBAAiB,0BAAAzC,cAAA;EACrB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAyC,kBAAYpjG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA,IAAAvoE,KAAA;IAAAxI,eAAA,OAAAkmH,iBAAA;IACxD19G,KAAA,GAAAnB,UAAA,OAAA6+G,iBAAA,GAAMpjG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU;;IAElD;AACJ;AACA;AACA;IACIvoE,KAAA,CAAK29G,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACI39G,KAAA,CAAKm7E,KAAK,GAAG,EAAE;;IAEf;AACJ;AACA;AACA;IACIn7E,KAAA,CAAK49G,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI59G,KAAA,CAAK69G,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI79G,KAAA,CAAK89G,mBAAmB,GAAGv8G,SAAS;;IAEpC;AACJ;AACA;AACA;IACIvB,KAAA,CAAK+9G,gBAAgB,GAAGx8G,SAAS;;IAEjC;AACJ;AACA;AACA;IACIvB,KAAA,CAAKg+G,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACIh+G,KAAA,CAAKi+G,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;IACIj+G,KAAA,CAAKk+G,UAAU,GAAG,CAAC,CAAC;IACpBl+G,KAAA,CAAKk+G,UAAU,CAACnwC,wBAAgB,CAAC,GAAG;MAACZ,SAAS,EAAEY;IAAgB,CAAC;;IAEjE;AACJ;AACA;AACA;IACI/tE,KAAA,CAAKm+G,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;IACIn+G,KAAA,CAAKo+G,YAAY,GAAG,CAAC,CAAC;;IAEtB;AACJ;AACA;AACA;IACIp+G,KAAA,CAAKq+G,UAAU,GAAG,+CAAiD,CAAC,CAAE;;IAEtE;AACJ;AACA;IACIr+G,KAAA,CAAKs+G,UAAU,GAAG,CAAC,CAAC;;IAEpB;AACJ;AACA;AACA;IACIt+G,KAAA,CAAKu+G,QAAQ,GAAG,EAAE;;IAElB;AACJ;AACA;AACA;IACIv+G,KAAA,CAAKw+G,QAAQ,GAAG,EAAE;;IAElB;AACJ;AACA;AACA;IACIx+G,KAAA,CAAKy+G,UAAU,GAAG,EAAE;;IAEpB;AACJ;AACA;AACA;IACIz+G,KAAA,CAAK0yE,cAAc,GAAGnxE,SAAS;;IAE/B;AACJ;AACA;AACA;AACA;IACIvB,KAAA,CAAKw7G,uBAAuB,GAAGj6G,SAAS;IAAC,OAAAvB,KAAA;EAC3C;;EAEA;AACF;AACA;AACA;EAHEL,SAAA,CAAA+9G,iBAAA,EAAAzC,cAAA;EAAA,OAAAvjH,YAAA,CAAAgmH,iBAAA;IAAA/lH,GAAA;IAAAC,KAAA,EAIA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,IAAMkhE,YAAY,GAAAjwG,aAAA,CAAAm2G,iBAAA,wBAAiB;MACnClG,YAAY,CAAC8G,UAAU,GAAG,IAAI,CAACA,UAAU;MACzC9G,YAAY,CAAC0G,UAAU,GAAG,IAAI,CAACA,UAAU;MACzC1G,YAAY,CAAC4G,YAAY,GAAG,IAAI,CAACA,YAAY;MAC7C,OAAO5G,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7/G,GAAA;IAAAC,KAAA,EAMA,SAAA29G,QAAQA,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,EAAE;MACjC,IAAMmkH,SAAS,GAAG,IAAI,CAACT,cAAc;MACrC,IAAMU,WAAW,GAAG,IAAI,CAACR,gBAAgB;MACzC,IAAMS,SAAS,GAAG,IAAI,CAACP,UAAU;MACjC,IAAI,IAAI,CAACljC,KAAK,KAAK,EAAE,IAAI,CAACyjC,SAAS,IAAK,CAACF,SAAS,IAAI,CAACC,WAAY,EAAE;QACnE;MACF;MAEA,IAAMrmG,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAIjf,KAAK,GAAGif,WAAW,CAAC9f,MAAM;MAE9B,IAAM8nE,YAAY,GAAGx9C,QAAQ,CAACC,OAAO,CAAC,CAAC;MACvC,IAAIjJ,eAAe,GAAG,IAAI;MAC1B,IAAIE,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;MAEjC,IACE8mF,SAAS,CAACzhC,SAAS,KAAK,MAAM,KAC7B7c,YAAY,IAAI,YAAY,IAC3BA,YAAY,IAAI,iBAAiB,IACjCA,YAAY,IAAI,SAAS,IACzBA,YAAY,IAAI,cAAc,CAAC,EACjC;QACA,IAAI,CAAC,IAAA3jD,kBAAU,EAAC,IAAI,CAACkkB,SAAS,EAAE/d,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;UACrD;QACF;QACA,IAAI0a,IAAI;QACR7e,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;QAC/C,IAAI8oC,YAAY,IAAI,YAAY,EAAE;UAChC3nC,IAAI,GAAG,CAAC7e,eAAe,CAACthB,MAAM,CAAC;QACjC,CAAC,MAAM,IAAI8nE,YAAY,IAAI,iBAAiB,EAAE;UAC5C3nC,IAAI,GAAG,8DACL7V,QAAQ,CACR8c,OAAO,CAAC,CAAC;QACb,CAAC,MAAM,IAAI0gC,YAAY,IAAI,SAAS,EAAE;UACpC3nC,IAAI,GAAG,sDAAwD7V,QAAQ,CACpE8c,OAAO,CAAC,CAAC,CACThkC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC,MAAM,IAAI0kE,YAAY,IAAI,cAAc,EAAE;UACzC,IAAMznC,KAAK,GACT,2DACE/V,QAAQ,CACRk2F,QAAQ,CAAC,CAAC;UACdrgF,IAAI,GAAG,EAAE;UACT,KAAK,IAAIz/B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;YAC9Cy/B,IAAI,CAACj4B,IAAI,CAACm4B,KAAK,CAAC3/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB;QACF;QACA,IAAI,CAAC2/G,aAAa,CAAC/1F,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;QAC5C,IAAMsiF,MAAM,GAAG+hC,SAAS,CAAC/hC,MAAM;QAC/B,IAAMJ,SAAS,GAAGI,MAAM,GAAGt7E,SAAS,GAAGq9G,SAAS,CAACniC,SAAS;QAC1D;QACA,IAAIoiC,UAAU,GAAG,CAAC;QAClB,KAAK,IAAIlhH,CAAC,GAAG,CAAC,EAAEmhH,EAAE,GAAGnmF,IAAI,CAACngC,MAAM,EAAEmF,CAAC,GAAGmhH,EAAE,EAAE,EAAEnhH,CAAC,EAAE;UAC7C,IAAIszE,MAAM;UACV,IAAI4L,MAAM,EAAE;YACV5L,MAAM,GAAG,IAAAorC,oBAAS,EAChBx/B,MAAM,GAAG,IAAI,CAACzmE,UAAU,EACxB0D,eAAe,EACf+kG,UAAU,EACVlmF,IAAI,CAACh7B,CAAC,CAAC,EACPqc,MACF,CAAC;UACH,CAAC,MAAM;YACLi3D,MAAM,GAAG,CAACn3D,eAAe,CAACle,KAAK,CAACijH,UAAU,EAAElmF,IAAI,CAACh7B,CAAC,CAAC,CAAC,CAAC;UACvD;UACA,KAAK,IAAIgtB,CAAC,GAAG,CAAC,EAAEo0F,EAAE,GAAG9tC,MAAM,CAACz4E,MAAM,EAAEmyB,CAAC,GAAGo0F,EAAE,EAAE,EAAEp0F,CAAC,EAAE;YAC/C,IAAMq0F,KAAK,GAAG/tC,MAAM,CAACtmD,CAAC,CAAC;YACvB,IAAIs0F,UAAU,GAAG,CAAC;YAClB,IAAIlC,QAAQ,GAAGiC,KAAK,CAACxmH,MAAM;YAC3B,IAAIikF,SAAS,IAAIl7E,SAAS,EAAE;cAC1B,IAAMuU,KAAK,GAAG,IAAA+mG,4BAAa,EACzB+B,SAAS,CAAC3hC,QAAQ,EAClB+hC,KAAK,EACL,CAAC,EACDA,KAAK,CAACxmH,MAAM,EACZ,CACF,CAAC;cACDymH,UAAU,GAAGnpG,KAAK,CAAC,CAAC,CAAC;cACrBinG,QAAQ,GAAGjnG,KAAK,CAAC,CAAC,CAAC;YACrB;YACA,KAAK,IAAI5c,EAAC,GAAG+lH,UAAU,EAAE/lH,EAAC,GAAG6jH,QAAQ,EAAE7jH,EAAC,IAAI8gB,MAAM,EAAE;cAClD1B,WAAW,CAAC5X,IAAI,CAACs+G,KAAK,CAAC9lH,EAAC,CAAC,EAAE8lH,KAAK,CAAC9lH,EAAC,GAAG,CAAC,CAAC,CAAC;YAC1C;YACA,IAAMI,GAAG,GAAGgf,WAAW,CAAC9f,MAAM;YAC9BqmH,UAAU,GAAGlmF,IAAI,CAACh7B,CAAC,CAAC;YACpB,IAAI,CAACuhH,UAAU,CAAC7lH,KAAK,EAAEC,GAAG,CAAC;YAC3BD,KAAK,GAAGC,GAAG;UACb;QACF;QACA,IAAI,CAAC6/G,WAAW,CAACv9B,OAAO,CAAC;MAC3B,CAAC,MAAM;QACL,IAAIujC,cAAc,GAAGP,SAAS,CAACvhC,QAAQ,GAAG,IAAI,GAAG,EAAE;QACnD,QAAQ/c,YAAY;UAClB,KAAK,OAAO;UACZ,KAAK,YAAY;YACfxmD,eAAe,GACb,yDACEgJ,QAAQ,CACR0U,kBAAkB,CAAC,CAAC;YACxB;UACF,KAAK,YAAY;YACf1d,eAAe,GACb,yDACEgJ,QAAQ,CACRs8F,eAAe,CAAC,CAAC;YACrB;UACF,KAAK,QAAQ;YACXtlG,eAAe,GACb,qDACEgJ,QAAQ,CACR3H,SAAS,CAAC,CAAC;YACf;UACF,KAAK,iBAAiB;YACpBrB,eAAe,GACb,8DACEgJ,QAAQ,CACRu8F,gBAAgB,CAAC,CAAC;YACtBrlG,MAAM,GAAG,CAAC;YACV;UACF,KAAK,SAAS;YACZF,eAAe,GACb,sDACEgJ,QAAQ,CACR+c,oBAAoB,CAAC,CAAC;YAC1B,IAAI,CAAC++E,SAAS,CAACvhC,QAAQ,EAAE;cACvB8hC,cAAc,CAACz+G,IAAI,CAACoZ,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC1D,UAAU,CAAC;YAC3D;YACA4D,MAAM,GAAG,CAAC;YACV;UACF,KAAK,cAAc;YACjB,IAAMkjB,cAAc,GAClB,2DACEpa,QAAQ,CACRw8F,qBAAqB,CAAC,CAAC;YAC3BxlG,eAAe,GAAG,EAAE;YACpB,KAAK,IAAI5gB,GAAC,GAAG,CAAC,EAAEgI,GAAE,GAAGg8B,cAAc,CAAC1kC,MAAM,EAAEU,GAAC,GAAGgI,GAAE,EAAEhI,GAAC,IAAI,CAAC,EAAE;cAC1D,IAAI,CAAC0lH,SAAS,CAACvhC,QAAQ,EAAE;gBACvB8hC,cAAc,CAACz+G,IAAI,CAACw8B,cAAc,CAAChkC,GAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACkd,UAAU,CAAC;cAC9D;cACA0D,eAAe,CAACpZ,IAAI,CAACw8B,cAAc,CAAChkC,GAAC,CAAC,EAAEgkC,cAAc,CAAChkC,GAAC,GAAG,CAAC,CAAC,CAAC;YAChE;YACA,IAAI4gB,eAAe,CAACthB,MAAM,KAAK,CAAC,EAAE;cAChC;YACF;YACAwhB,MAAM,GAAG,CAAC;YACV;UACF;QACF;QACA,IAAM1gB,IAAG,GAAG,IAAI,CAACw+G,0BAA0B,CAACh+F,eAAe,EAAEE,MAAM,CAAC;QACpE,IAAI1gB,IAAG,KAAKD,KAAK,EAAE;UACjB;QACF;QACA,IACE8lH,cAAc,IACd,CAAC7lH,IAAG,GAAGD,KAAK,IAAI,CAAC,KAAKygB,eAAe,CAACthB,MAAM,GAAGwhB,MAAM,EACrD;UACA,IAAIulG,GAAG,GAAGlmH,KAAK,GAAG,CAAC;UACnB8lH,cAAc,GAAGA,cAAc,CAACz2E,MAAM,CAAC,UAACM,CAAC,EAAE9vC,CAAC,EAAK;YAC/C,IAAMilG,IAAI,GACR7lF,WAAW,CAAC,CAACinG,GAAG,GAAGrmH,CAAC,IAAI,CAAC,CAAC,KAAK4gB,eAAe,CAAC5gB,CAAC,GAAG8gB,MAAM,CAAC,IAC1D1B,WAAW,CAAC,CAACinG,GAAG,GAAGrmH,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK4gB,eAAe,CAAC5gB,CAAC,GAAG8gB,MAAM,GAAG,CAAC,CAAC;YACpE,IAAI,CAACmkF,IAAI,EAAE;cACT,EAAEohB,GAAG;YACP;YACA,OAAOphB,IAAI;UACb,CAAC,CAAC;QACJ;QAEA,IAAI,CAACqhB,eAAe,CAAC,CAAC;QAEtB,IAAM/hC,cAAc,GAAGmhC,SAAS,CAACnhC,cAAc,GAC3C,IAAI,CAACw8B,UAAU,CAAC,IAAI,CAACX,gBAAgB,CAACsF,SAAS,CAACnhC,cAAc,CAAC,CAAC,GAChE,IAAI;QACR,IAAME,gBAAgB,GAAGihC,SAAS,CAACjhC,gBAAgB,GAC/C,IAAI,CAACw8B,YAAY,CAAC,IAAI,CAACV,kBAAkB,CAACmF,SAAS,CAACjhC,gBAAgB,CAAC,CAAC,GACtE,IAAI;QAER,IAAI,CAACk7B,aAAa,CAAC/1F,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;;QAE5C;QACA,IAAIiqC,OAAO,GAAGo6E,SAAS,CAACp6E,OAAO;QAC/B,IACEA,OAAO,IAAIgqC,sBAAc,KACxBowC,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIs9F,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAClD;UACA,IAAIm+F,EAAE,GAAGb,SAAS,CAACp6E,OAAO,CAAC,CAAC,CAAC;UAC7B,IAAIk7E,EAAE,GAAGd,SAAS,CAACp6E,OAAO,CAAC,CAAC,CAAC;UAC7B,IAAIm7E,EAAE,GAAGf,SAAS,CAACp6E,OAAO,CAAC,CAAC,CAAC;UAC7B,IAAIo7E,EAAE,GAAGhB,SAAS,CAACp6E,OAAO,CAAC,CAAC,CAAC;UAC7B,IAAIo6E,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC1Bo+F,EAAE,GAAG,CAACA,EAAE;YACRE,EAAE,GAAG,CAACA,EAAE;UACV;UACA,IAAIhB,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC1Bm+F,EAAE,GAAG,CAACA,EAAE;YACRE,EAAE,GAAG,CAACA,EAAE;UACV;UACAn7E,OAAO,GAAG,CAACi7E,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;QAC5B;;QAEA;QACA;QACA;QACA,IAAMr3C,UAAU,GAAG,IAAI,CAACA,UAAU;QAClC,IAAI,CAACivC,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC7C,UAAU,EAC5Bh9G,KAAK,EACLC,IAAG,EACH,IAAI,EACJk8B,GAAG,EACHA,GAAG,EACHA,GAAG,EACH,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAACsoF,mBAAmB,EACxB,IAAI,CAACE,aAAa,EAClB,CAAC,CAAC,EAAE,CAAC,CAAC,EACNxoF,GAAG,EACH,IAAI,CAACk9C,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,EAC5Bh3E,OAAO,IAAIgqC,sBAAc,GACrBA,sBAAc,GACdhqC,OAAO,CAACp9B,GAAG,CAAC,UAAUI,CAAC,EAAE;UACvB,OAAOA,CAAC,GAAG+gE,UAAU;QACvB,CAAC,CAAC,EACNkV,cAAc,EACdE,gBAAgB,EAChB,IAAI,CAACxC,KAAK,EACV,IAAI,CAACojC,QAAQ,EACb,IAAI,CAACE,UAAU,EACf,IAAI,CAACD,QAAQ,EACb,IAAI,CAACZ,YAAY,EACjB,IAAI,CAACC,YAAY,EACjBsB,cAAc,CACf,CAAC;QACF,IAAM79F,KAAK,GAAG,CAAC,GAAGinD,UAAU;QAC5B;QACA,IAAMs3C,0BAA0B,GAAGpiC,cAAc,GAC7CA,cAAc,CAAC7hF,KAAK,CAAC,CAAC,CAAC,GACvB,IAAI;QACR,IAAIikH,0BAA0B,EAAE;UAC9BA,0BAA0B,CAAC,CAAC,CAAC,GAAG9xC,wBAAgB;QAClD;QACA,IAAI,CAAC2pC,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC7C,UAAU,EAC5Bh9G,KAAK,EACLC,IAAG,EACH,IAAI,EACJk8B,GAAG,EACHA,GAAG,EACHA,GAAG,EACH,CAAC,EACD,CAAC,EACD,CAAC,EACD,IAAI,CAACsoF,mBAAmB,EACxB,IAAI,CAACE,aAAa,EAClB,CAAC18F,KAAK,EAAEA,KAAK,CAAC,EACdkU,GAAG,EACH,IAAI,CAACk9C,cAAc,EACnB,IAAI,CAAC8oC,uBAAuB,EAC5Bh3E,OAAO,EACPq7E,0BAA0B,EAC1BliC,gBAAgB,EAChB,IAAI,CAACxC,KAAK,EACV,IAAI,CAACojC,QAAQ,EACb,IAAI,CAACE,UAAU,EACf,IAAI,CAACD,QAAQ,GAAGzwC,wBAAgB,GAAG,IAAI,CAACywC,QAAQ,EAChD,IAAI,CAACZ,YAAY,EACjB,IAAI,CAACC,YAAY,EACjBsB,cAAc,CACf,CAAC;QAEF,IAAI,CAAChG,WAAW,CAACv9B,OAAO,CAAC;MAC3B;IACF;;IAEA;AACF;AACA;EAFE;IAAAjkF,GAAA;IAAAC,KAAA,EAGA,SAAA4nH,eAAeA,CAAA,EAAG;MAChB,IAAMb,WAAW,GAAG,IAAI,CAACR,gBAAgB;MACzC,IAAMS,SAAS,GAAG,IAAI,CAACP,UAAU;MACjC,IAAMK,SAAS,GAAG,IAAI,CAACT,cAAc;MAErC,IAAM6B,SAAS,GAAG,IAAI,CAACrB,UAAU;MACjC,IAAIE,WAAW,EAAE;QACf,IAAI,EAAEmB,SAAS,IAAI,IAAI,CAAC1B,YAAY,CAAC,EAAE;UACrC,IAAI,CAACA,YAAY,CAAC0B,SAAS,CAAC,GAAG;YAC7BvpC,WAAW,EAAEooC,WAAW,CAACpoC,WAAW;YACpCH,OAAO,EAAEuoC,WAAW,CAACvoC,OAAO;YAC5BE,cAAc,EAAEqoC,WAAW,CAACroC,cAAc;YAC1CjF,SAAS,EAAEstC,WAAW,CAACttC,SAAS;YAChCgE,QAAQ,EAAEspC,WAAW,CAACtpC,QAAQ;YAC9BE,UAAU,EAAEopC,WAAW,CAACppC,UAAU;YAClCc,QAAQ,EAAEsoC,WAAW,CAACtoC;UACxB,CAAC;QACH;MACF;MACA,IAAM0pC,OAAO,GAAG,IAAI,CAACxB,QAAQ;MAC7B,IAAI,EAAEwB,OAAO,IAAI,IAAI,CAACzB,UAAU,CAAC,EAAE;QACjC,IAAI,CAACA,UAAU,CAACyB,OAAO,CAAC,GAAG;UACzBlwC,IAAI,EAAE+uC,SAAS,CAAC/uC,IAAI;UACpB4M,SAAS,EAAEmiC,SAAS,CAACniC,SAAS,IAAInO,wBAAgB;UAClDqO,OAAO,EAAEiiC,SAAS,CAACjiC,OAAO;UAC1BI,YAAY,EAAE6hC,SAAS,CAAC7hC,YAAY,IAAIxO,2BAAmB;UAC3DjtD,KAAK,EAAEs9F,SAAS,CAACt9F;QACnB,CAAC;MACH;MACA,IAAM0zD,OAAO,GAAG,IAAI,CAACwpC,QAAQ;MAC7B,IAAIE,SAAS,EAAE;QACb,IAAI,EAAE1pC,OAAO,IAAI,IAAI,CAACkpC,UAAU,CAAC,EAAE;UACjC,IAAI,CAACA,UAAU,CAAClpC,OAAO,CAAC,GAAG;YACzB7H,SAAS,EAAEuxC,SAAS,CAACvxC;UACvB,CAAC;QACH;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAx1E,GAAA;IAAAC,KAAA,EAKA,SAAAsnH,UAAUA,CAAC7lH,KAAK,EAAEC,GAAG,EAAE;MACrB,IAAMqlH,WAAW,GAAG,IAAI,CAACR,gBAAgB;MACzC,IAAMS,SAAS,GAAG,IAAI,CAACP,UAAU;MAEjC,IAAMyB,SAAS,GAAG,IAAI,CAACrB,UAAU;MACjC,IAAMsB,OAAO,GAAG,IAAI,CAACxB,QAAQ;MAC7B,IAAMvpC,OAAO,GAAG,IAAI,CAACwpC,QAAQ;MAC7B,IAAI,CAACgB,eAAe,CAAC,CAAC;MAEtB,IAAMj3C,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAMy3C,QAAQ,GAAGvC,UAAU,CAACmB,SAAS,CAAC7hC,YAAY,CAAC;MAEnD,IAAMn3C,OAAO,GAAG,IAAI,CAACi4E,YAAY,GAAGt1C,UAAU;MAC9C,IAAM0G,IAAI,GAAG,IAAI,CAACkM,KAAK;MACvB,IAAM7F,WAAW,GAAGqpC,WAAW,GAC1BA,WAAW,CAACttC,SAAS,GAAG9jE,IAAI,CAACC,GAAG,CAACoxG,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC,GAC1D,CAAC;MAEL,IAAI,CAACk2F,YAAY,CAAC92G,IAAI,CAAC,CACrBw4G,oBAAiB,CAAC9C,UAAU,EAC5B/8G,KAAK,EACLC,GAAG,EACH0mH,QAAQ,EACRpB,SAAS,CAACvhC,QAAQ,EAClBrI,OAAO,EACP4pC,SAAS,CAAC3hC,QAAQ,EAClB1U,UAAU,EACV3iC,OAAO,EACPk6E,SAAS,EACTxqC,WAAW,GAAG/M,UAAU,EACxB0G,IAAI,EACJ8wC,OAAO,EACP,CAAC,EACD,IAAI,CAACrtC,cAAc,EACnB,IAAI,CAACqrC,gBAAgB,CACtB,CAAC;MACF,IAAI,CAACrG,wBAAwB,CAACh3G,IAAI,CAAC,CACjCw4G,oBAAiB,CAAC9C,UAAU,EAC5B/8G,KAAK,EACLC,GAAG,EACH0mH,QAAQ,EACRpB,SAAS,CAACvhC,QAAQ,EAClBrI,OAAO,GAAGjH,wBAAgB,GAAGiH,OAAO,EACpC4pC,SAAS,CAAC3hC,QAAQ,EAClB1U,UAAU,EACV3iC,OAAO,EACPk6E,SAAS,EACTxqC,WAAW,GAAG/M,UAAU,EACxB0G,IAAI,EACJ8wC,OAAO,EACP,CAAC,GAAGx3C,UAAU,EACd,IAAI,CAACmK,cAAc,EACnB,IAAI,CAACqrC,gBAAgB,CACtB,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApmH,GAAA;IAAAC,KAAA,EAKA,SAAAg+G,YAAYA,CAACC,SAAS,EAAE8F,UAAU,EAAE;MAClC,IAAIiD,SAAS,EAAEF,SAAS,EAAEC,WAAW;MACrC,IAAI,CAAC9I,SAAS,EAAE;QACd,IAAI,CAAC16B,KAAK,GAAG,EAAE;MACjB,CAAC,MAAM;QACL,IAAM8kC,aAAa,GAAGpK,SAAS,CAACrhC,OAAO,CAAC,CAAC;QACzC,IAAI,CAACyrC,aAAa,EAAE;UAClBvB,SAAS,GAAG,IAAI;UAChB,IAAI,CAACT,cAAc,GAAGS,SAAS;QACjC,CAAC,MAAM;UACLA,SAAS,GAAG,IAAI,CAACT,cAAc;UAC/B,IAAI,CAACS,SAAS,EAAE;YACdA,SAAS,GAAG,+CAAiD,CAAC,CAAE;YAChE,IAAI,CAACT,cAAc,GAAGS,SAAS;UACjC;UACAA,SAAS,CAACvxC,SAAS,GAAG,IAAAK,sBAAW,EAC/ByyC,aAAa,CAACnpC,QAAQ,CAAC,CAAC,IAAI/I,wBAC9B,CAAC;QACH;QAEA,IAAMmyC,eAAe,GAAGrK,SAAS,CAAClhC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAACurC,eAAe,EAAE;UACpBvB,WAAW,GAAG,IAAI;UAClB,IAAI,CAACR,gBAAgB,GAAGQ,WAAW;QACrC,CAAC,MAAM;UACLA,WAAW,GAAG,IAAI,CAACR,gBAAgB;UACnC,IAAI,CAACQ,WAAW,EAAE;YAChBA,WAAW,GAAG,iDAAmD,CAAC,CAAE;YACpE,IAAI,CAACR,gBAAgB,GAAGQ,WAAW;UACrC;UACA,IAAMtoC,QAAQ,GAAG6pC,eAAe,CAACnpC,WAAW,CAAC,CAAC;UAC9C,IAAMT,cAAc,GAAG4pC,eAAe,CAAClpC,iBAAiB,CAAC,CAAC;UAC1D,IAAM3F,SAAS,GAAG6uC,eAAe,CAACjlG,QAAQ,CAAC,CAAC;UAC5C,IAAMs6D,UAAU,GAAG2qC,eAAe,CAAC/oC,aAAa,CAAC,CAAC;UAClDwnC,WAAW,CAACvoC,OAAO,GAAG8pC,eAAe,CAAChpC,UAAU,CAAC,CAAC,IAAIlJ,sBAAc;UACpE2wC,WAAW,CAACtoC,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,CAACz6E,KAAK,CAAC,CAAC,GAAGqyE,uBAAe;UACpE0wC,WAAW,CAACroC,cAAc,GACxBA,cAAc,KAAK/0E,SAAS,GAAG2sE,6BAAqB,GAAGoI,cAAc;UACvEqoC,WAAW,CAACtpC,QAAQ,GAAG6qC,eAAe,CAACjpC,WAAW,CAAC,CAAC,IAAI9I,uBAAe;UACvEwwC,WAAW,CAACttC,SAAS,GACnBA,SAAS,KAAK9vE,SAAS,GAAGktE,wBAAgB,GAAG4C,SAAS;UACxDstC,WAAW,CAACppC,UAAU,GACpBA,UAAU,KAAKh0E,SAAS,GAAG6sE,yBAAiB,GAAGmH,UAAU;UAC3DopC,WAAW,CAACpoC,WAAW,GAAG,IAAA/I,sBAAW,EACnC0yC,eAAe,CAACppC,QAAQ,CAAC,CAAC,IAAIzI,0BAChC,CAAC;QACH;QAEAuwC,SAAS,GAAG,IAAI,CAACP,UAAU;QAC3B,IAAMxuC,IAAI,GAAGgmC,SAAS,CAACj4B,OAAO,CAAC,CAAC,IAAI9P,mBAAW;QAC/C,IAAAgB,oBAAY,EAACe,IAAI,CAAC;QAClB,IAAMswC,SAAS,GAAGtK,SAAS,CAAC7iC,aAAa,CAAC,CAAC;QAC3C4rC,SAAS,CAACvhC,QAAQ,GAAGw4B,SAAS,CAAC73B,WAAW,CAAC,CAAC;QAC5C4gC,SAAS,CAAC/uC,IAAI,GAAGA,IAAI;QACrB+uC,SAAS,CAAC3hC,QAAQ,GAAG44B,SAAS,CAAC93B,WAAW,CAAC,CAAC;QAC5C6gC,SAAS,CAACzhC,SAAS,GAAG04B,SAAS,CAACh4B,YAAY,CAAC,CAAC;QAC9C+gC,SAAS,CAACniC,SAAS,GAAGo5B,SAAS,CAAC33B,YAAY,CAAC,CAAC;QAC9C0gC,SAAS,CAAC/hC,MAAM,GAAGg5B,SAAS,CAAC/3B,SAAS,CAAC,CAAC;QACxC8gC,SAAS,CAACjiC,OAAO,GAAGk5B,SAAS,CAAC13B,UAAU,CAAC,CAAC;QAC1CygC,SAAS,CAAC7hC,YAAY,GACpB84B,SAAS,CAACz3B,eAAe,CAAC,CAAC,IAAI7P,2BAAmB;QACpDqwC,SAAS,CAACnhC,cAAc,GAAGo4B,SAAS,CAACt3B,iBAAiB,CAAC,CAAC;QACxDqgC,SAAS,CAACjhC,gBAAgB,GAAGk4B,SAAS,CAACr3B,mBAAmB,CAAC,CAAC;QAC5DogC,SAAS,CAACp6E,OAAO,GAAGqxE,SAAS,CAACp3B,UAAU,CAAC,CAAC,IAAIjQ,sBAAc;QAC5DowC,SAAS,CAACt9F,KAAK,GAAG6+F,SAAS,KAAK5+G,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG4+G,SAAS;QAE9D,IAAMC,WAAW,GAAGvK,SAAS,CAACx3B,UAAU,CAAC,CAAC;QAC1C,IAAMgiC,WAAW,GAAGxK,SAAS,CAACv3B,UAAU,CAAC,CAAC;QAC1C,IAAMgiC,kBAAkB,GAAGzK,SAAS,CAAChjC,iBAAiB,CAAC,CAAC;QACxD,IAAM0tC,eAAe,GAAG1K,SAAS,CAAC53B,cAAc,CAAC,CAAC;QAClD,IAAMuiC,YAAY,GAAG3K,SAAS,CAAC7vE,WAAW,CAAC,CAAC;QAC5C,IAAI,CAACm1C,KAAK,GAAG06B,SAAS,CAACv6B,OAAO,CAAC,CAAC,IAAI,EAAE;QACtC,IAAI,CAACsiC,YAAY,GAAGwC,WAAW,KAAK7+G,SAAS,GAAG,CAAC,GAAG6+G,WAAW;QAC/D,IAAI,CAACvC,YAAY,GAAGwC,WAAW,KAAK9+G,SAAS,GAAG,CAAC,GAAG8+G,WAAW;QAC/D,IAAI,CAACvC,mBAAmB,GACtBwC,kBAAkB,KAAK/+G,SAAS,GAAG,KAAK,GAAG++G,kBAAkB;QAC/D,IAAI,CAACvC,gBAAgB,GACnBwC,eAAe,KAAKh/G,SAAS,GAAG,IAAI,GAAGg/G,eAAe;QACxD,IAAI,CAACvC,aAAa,GAAGwC,YAAY,KAAKj/G,SAAS,GAAG,CAAC,GAAGi/G,YAAY;QAElE,IAAI,CAAC/B,UAAU,GAAGE,WAAW,GACzB,CAAC,OAAOA,WAAW,CAACpoC,WAAW,IAAI,QAAQ,GACvCooC,WAAW,CAACpoC,WAAW,GACvB,IAAAjzE,YAAM,EAACq7G,WAAW,CAACpoC,WAAW,CAAC,IACnCooC,WAAW,CAACvoC,OAAO,GACnBuoC,WAAW,CAACroC,cAAc,GAC1B,GAAG,GACHqoC,WAAW,CAACttC,SAAS,GACrBstC,WAAW,CAACtpC,QAAQ,GACpBspC,WAAW,CAACppC,UAAU,GACtB,GAAG,GACHopC,WAAW,CAACtoC,QAAQ,CAACx3D,IAAI,CAAC,CAAC,GAC3B,GAAG,GACH,EAAE;QACN,IAAI,CAAC0/F,QAAQ,GACXK,SAAS,CAAC/uC,IAAI,GACd+uC,SAAS,CAACt9F,KAAK,IACds9F,SAAS,CAACniC,SAAS,IAAI,GAAG,CAAC,IAC3BmiC,SAAS,CAAC/hC,MAAM,IAAI,GAAG,CAAC,IACxB+hC,SAAS,CAACjiC,OAAO,IAAI,GAAG,CAAC,IACzBiiC,SAAS,CAAC7hC,YAAY,IAAI,GAAG,CAAC;QACjC,IAAI,CAACyhC,QAAQ,GACXE,SAAS,IAAIA,SAAS,CAACvxC,SAAS,GAC5B,OAAOuxC,SAAS,CAACvxC,SAAS,IAAI,QAAQ,GACpCuxC,SAAS,CAACvxC,SAAS,GACnB,GAAG,GAAG,IAAA7pE,YAAM,EAACo7G,SAAS,CAACvxC,SAAS,CAAC,GACnC,EAAE;MACV;MACA,IAAI,CAACuF,cAAc,GAAGmjC,SAAS,CAAC9iC,gBAAgB,CAAC,CAAC;MAClD,IAAI,CAACyoC,uBAAuB,GAAGG,UAAU;IAC3C;EAAC;AAAA,EAvnB6BzE,gBAAa;AAAA,IAAAlhH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA0nB9BwnH,iBAAiB;;;;;;;;AC/pBhC,IAAA3C,QAAA,GAAA39G,sBAAA,CAAAnC,OAAA;AACA,IAAAwlH,aAAA,GAAArjH,sBAAA,CAAAnC,OAAA;AACA,IAAAylH,kBAAA,GAAAtjH,sBAAA,CAAAnC,OAAA;AACA,IAAA0lH,eAAA,GAAAvjH,sBAAA,CAAAnC,OAAA;AACA,IAAA2lH,YAAA,GAAAxjH,sBAAA,CAAAnC,OAAA;AAA2C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAR3C;AACA;AACA;AAQA;AACA;AACA;AACA,IAAM2iH,kBAAkB,GAAG;EACzB,QAAQ,EAAEC,uBAAc;EACxB,SAAS,EAAEC,gBAAO;EAClB,OAAO,EAAEC,qBAAY;EACrB,YAAY,EAAEC,0BAAiB;EAC/B,SAAS,EAAEH,uBAAc;EACzB,MAAM,EAAEI;AACV,CAAC;AAAC,IAEIC,YAAY;EAChB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,aAAY7mG,SAAS,EAAEumB,SAAS,EAAEzqB,UAAU,EAAEmyD,UAAU,EAAE;IAAA/wE,eAAA,OAAA2pH,YAAA;IACxD;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG9mG,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAAC+mG,UAAU,GAAGxgF,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAAC4nC,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAAC+4C,WAAW,GAAGlrG,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACmrG,iBAAiB,GAAG,CAAC,CAAC;EAC7B;;EAEA;AACF;AACA;EAFE,OAAA7pH,YAAA,CAAAypH,YAAA;IAAAxpH,GAAA;IAAAC,KAAA,EAGA,SAAA0+C,MAAMA,CAAA,EAAG;MACP,IAAMkrE,mBAAmB,GAAG,CAAC,CAAC;MAC9B,KAAK,IAAMC,IAAI,IAAI,IAAI,CAACF,iBAAiB,EAAE;QACzCC,mBAAmB,CAACC,IAAI,CAAC,GAAGD,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAMC,QAAQ,GAAG,IAAI,CAACH,iBAAiB,CAACE,IAAI,CAAC;QAC7C,KAAK,IAAME,UAAU,IAAID,QAAQ,EAAE;UACjC,IAAME,kBAAkB,GAAGF,QAAQ,CAACC,UAAU,CAAC,CAACrrE,MAAM,CAAC,CAAC;UACxDkrE,mBAAmB,CAACC,IAAI,CAAC,CAACE,UAAU,CAAC,GAAGC,kBAAkB;QAC5D;MACF;MACA,OAAOJ,mBAAmB;IAC5B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7pH,GAAA;IAAAC,KAAA,EAKA,SAAAiqH,UAAUA,CAAC92D,MAAM,EAAE+2D,WAAW,EAAE;MAC9B,IAAMC,SAAS,GAAGh3D,MAAM,KAAKxpD,SAAS,GAAGwpD,MAAM,CAAChzC,QAAQ,CAAC,CAAC,GAAG,GAAG;MAChE,IAAIiqG,OAAO,GAAG,IAAI,CAACT,iBAAiB,CAACQ,SAAS,CAAC;MAC/C,IAAIC,OAAO,KAAKzgH,SAAS,EAAE;QACzBygH,OAAO,GAAG,CAAC,CAAC;QACZ,IAAI,CAACT,iBAAiB,CAACQ,SAAS,CAAC,GAAGC,OAAO;MAC7C;MACA,IAAIC,MAAM,GAAGD,OAAO,CAACF,WAAW,CAAC;MACjC,IAAIG,MAAM,KAAK1gH,SAAS,EAAE;QACxB,IAAM2gH,WAAW,GAAGrB,kBAAkB,CAACiB,WAAW,CAAC;QACnDG,MAAM,GAAG,IAAIC,WAAW,CACtB,IAAI,CAACd,UAAU,EACf,IAAI,CAACC,UAAU,EACf,IAAI,CAACC,WAAW,EAChB,IAAI,CAAC74C,WACP,CAAC;QACDu5C,OAAO,CAACF,WAAW,CAAC,GAAGG,MAAM;MAC/B;MACA,OAAOA,MAAM;IACf;EAAC;AAAA;AAAA,IAAAjsH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYirH,YAAY;;;;;;;;;ACxG3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgB,gBAAgBA,CAACroG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EACrE,IAAIlG,EAAE,GAAGgG,eAAe,CAACC,MAAM,CAAC;EAChC,IAAIhG,EAAE,GAAG+F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EACpC,IAAIvhB,MAAM,GAAG,CAAC;EACd,KAAK,IAAIU,CAAC,GAAG6gB,MAAM,GAAGC,MAAM,EAAE9gB,CAAC,GAAGI,GAAG,EAAEJ,CAAC,IAAI8gB,MAAM,EAAE;IAClD,IAAMhG,EAAE,GAAG8F,eAAe,CAAC5gB,CAAC,CAAC;IAC7B,IAAM+a,EAAE,GAAG6F,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;IACjCV,MAAM,IAAI+U,IAAI,CAAC2F,IAAI,CAAC,CAACc,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,GAAG,CAACG,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,CAAC;IAClED,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;EACT;EACA,OAAOzb,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4pH,gBAAgBA,CAACtoG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;EACrE,IAAIqoG,SAAS,GAAGF,gBAAgB,CAACroG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,CAAC;EACtE,IAAM9F,EAAE,GAAG4F,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,CAAC,GAAGF,eAAe,CAACC,MAAM,CAAC;EAClE,IAAM5F,EAAE,GAAG2F,eAAe,CAACxgB,GAAG,GAAG0gB,MAAM,GAAG,CAAC,CAAC,GAAGF,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EAC1EsoG,SAAS,IAAI90G,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;EACzC,OAAOkuG,SAAS;AAClB;;;;;;;;ACnCA,IAAAtsG,KAAA,GAAA9a,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqnH,cAAcA,CAC5BxoG,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNi1D,IAAI,EACJszC,MAAM,EACNtlC,QAAQ,EACR37D,KAAK,EACLsvD,wBAAwB,EACxBf,IAAI,EACJ9nD,KAAK,EACLvM,QAAQ,EAER;EAAA,IADA+gE,WAAW,GAAAzgF,SAAA,CAAAtD,MAAA,SAAAsD,SAAA,SAAAyF,SAAA,GAAAzF,SAAA,OAAG,IAAI;EAElB,IAAIkY,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;EAChC,IAAI9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EACpC,IAAIjG,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIipB,aAAa,GAAG,CAAC;EACrB,IAAIwlF,QAAQ,GAAG,CAAC;EAEhB,SAASC,OAAOA,CAAA,EAAG;IACjB3uG,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGE,EAAE;IACP8F,MAAM,IAAIC,MAAM;IAChBhG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;IAC5B9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IAChCyoG,QAAQ,IAAIxlF,aAAa;IACzBA,aAAa,GAAGzvB,IAAI,CAAC2F,IAAI,CAAC,CAACc,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,GAAG,CAACG,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,CAAC;EAC1E;EACA,GAAG;IACD0uG,OAAO,CAAC,CAAC;EACX,CAAC,QAAQ1oG,MAAM,GAAGzgB,GAAG,GAAG0gB,MAAM,IAAIwoG,QAAQ,GAAGxlF,aAAa,GAAGulF,MAAM;EAEnE,IAAI/vB,WAAW,GACbx1D,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAACulF,MAAM,GAAGC,QAAQ,IAAIxlF,aAAa;EAC/D,IAAM0lF,MAAM,GAAG,IAAArtG,UAAI,EAACvB,EAAE,EAAEE,EAAE,EAAEw+E,WAAW,CAAC;EACxC,IAAMmwB,MAAM,GAAG,IAAAttG,UAAI,EAACtB,EAAE,EAAEE,EAAE,EAAEu+E,WAAW,CAAC;EAExC,IAAMowB,WAAW,GAAG7oG,MAAM,GAAGC,MAAM;EACnC,IAAM6oG,WAAW,GAAGL,QAAQ;EAC5B,IAAMM,IAAI,GAAGP,MAAM,GAAGjhG,KAAK,GAAGsvD,wBAAwB,CAACf,IAAI,EAAEZ,IAAI,EAAElnD,KAAK,CAAC;EACzE,OAAOhO,MAAM,GAAGzgB,GAAG,GAAG0gB,MAAM,IAAIwoG,QAAQ,GAAGxlF,aAAa,GAAG8lF,IAAI,EAAE;IAC/DL,OAAO,CAAC,CAAC;EACX;EACAjwB,WAAW,GAAGx1D,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC8lF,IAAI,GAAGN,QAAQ,IAAIxlF,aAAa;EACzE,IAAM1f,IAAI,GAAG,IAAAjI,UAAI,EAACvB,EAAE,EAAEE,EAAE,EAAEw+E,WAAW,CAAC;EACtC,IAAMj1E,IAAI,GAAG,IAAAlI,UAAI,EAACtB,EAAE,EAAEE,EAAE,EAAEu+E,WAAW,CAAC;;EAEtC;EACA,IAAIl0D,OAAO,GAAG,KAAK;EACnB,IAAIi+C,WAAW,EAAE;IACf,IAAI/gE,QAAQ,EAAE;MACZ,IAAMunG,IAAI,GAAG,CAACL,MAAM,EAAEC,MAAM,EAAErlG,IAAI,EAAEC,IAAI,CAAC;MACzC,IAAA2D,iBAAM,EAAC6hG,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEvnG,QAAQ,EAAEunG,IAAI,EAAEA,IAAI,CAAC;MAC3CzkF,OAAO,GAAGykF,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLzkF,OAAO,GAAGokF,MAAM,GAAGplG,IAAI;IACzB;EACF;EAEA,IAAMrI,EAAE,GAAG1H,IAAI,CAAC0H,EAAE;EAClB,IAAMosB,MAAM,GAAG,EAAE;EACjB,IAAM2hF,aAAa,GAAGJ,WAAW,GAAG5oG,MAAM,KAAKD,MAAM;EAErDA,MAAM,GAAG6oG,WAAW;EACpB5lF,aAAa,GAAG,CAAC;EACjBwlF,QAAQ,GAAGK,WAAW;EACtB7uG,EAAE,GAAG8F,eAAe,CAACC,MAAM,CAAC;EAC5B9F,EAAE,GAAG6F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;EAEhC,IAAIkpG,aAAa;EACjB;EACA,IAAID,aAAa,EAAE;IACjBP,OAAO,CAAC,CAAC;IAETQ,aAAa,GAAG11G,IAAI,CAACqV,KAAK,CAAC3O,EAAE,GAAGF,EAAE,EAAEC,EAAE,GAAGF,EAAE,CAAC;IAC5C,IAAIwqB,OAAO,EAAE;MACX2kF,aAAa,IAAIA,aAAa,GAAG,CAAC,GAAG,CAAChuG,EAAE,GAAGA,EAAE;IAC/C;IACA,IAAMrB,CAAC,GAAG,CAAC0J,IAAI,GAAGolG,MAAM,IAAI,CAAC;IAC7B,IAAM7uG,CAAC,GAAG,CAAC0J,IAAI,GAAGolG,MAAM,IAAI,CAAC;IAC7BthF,MAAM,CAAC,CAAC,CAAC,GAAG,CAACztB,CAAC,EAAEC,CAAC,EAAE,CAACivG,IAAI,GAAGP,MAAM,IAAI,CAAC,EAAEU,aAAa,EAAEh0C,IAAI,CAAC;IAC5D,OAAO5tC,MAAM;EACf;;EAEA;EACA4tC,IAAI,GAAGA,IAAI,CAACluD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEjC,KAAK,IAAI7nB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG+tE,IAAI,CAACz2E,MAAM,EAAEU,CAAC,GAAGgI,EAAE,GAAI;IAC1CuhH,OAAO,CAAC,CAAC;IACT,IAAIthG,KAAK,GAAG5T,IAAI,CAACqV,KAAK,CAAC3O,EAAE,GAAGF,EAAE,EAAEC,EAAE,GAAGF,EAAE,CAAC;IACxC,IAAIwqB,OAAO,EAAE;MACXnd,KAAK,IAAIA,KAAK,GAAG,CAAC,GAAG,CAAClM,EAAE,GAAGA,EAAE;IAC/B;IACA,IAAIguG,aAAa,KAAK1hH,SAAS,EAAE;MAC/B,IAAIme,KAAK,GAAGyB,KAAK,GAAG8hG,aAAa;MACjCvjG,KAAK,IAAIA,KAAK,GAAGzK,EAAE,GAAG,CAAC,CAAC,GAAGA,EAAE,GAAGyK,KAAK,GAAG,CAACzK,EAAE,GAAG,CAAC,GAAGA,EAAE,GAAG,CAAC;MACxD,IAAI1H,IAAI,CAACC,GAAG,CAACkS,KAAK,CAAC,GAAGu9D,QAAQ,EAAE;QAC9B,OAAO,IAAI;MACb;IACF;IACAgmC,aAAa,GAAG9hG,KAAK;IAErB,IAAM+hG,MAAM,GAAGhqH,CAAC;IAChB,IAAIiqH,UAAU,GAAG,CAAC;IAClB,OAAOjqH,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MAClB,IAAMqB,KAAK,GAAG+jC,OAAO,GAAGp9B,EAAE,GAAGhI,CAAC,GAAG,CAAC,GAAGA,CAAC;MACtC,IAAM6J,GAAG,GAAGue,KAAK,GAAGsvD,wBAAwB,CAACf,IAAI,EAAEZ,IAAI,CAAC10E,KAAK,CAAC,EAAEwtB,KAAK,CAAC;MACtE,IACEhO,MAAM,GAAGC,MAAM,GAAG1gB,GAAG,IACrBkpH,QAAQ,GAAGxlF,aAAa,GAAGulF,MAAM,GAAGY,UAAU,GAAGpgH,GAAG,GAAG,CAAC,EACxD;QACA;MACF;MACAogH,UAAU,IAAIpgH,GAAG;IACnB;IACA,IAAI7J,CAAC,KAAKgqH,MAAM,EAAE;MAChB;IACF;IACA,IAAME,KAAK,GAAG9kF,OAAO,GACjB2wC,IAAI,CAAC/I,SAAS,CAAChlE,EAAE,GAAGgiH,MAAM,EAAEhiH,EAAE,GAAGhI,CAAC,CAAC,GACnC+1E,IAAI,CAAC/I,SAAS,CAACg9C,MAAM,EAAEhqH,CAAC,CAAC;IAC7Bs5F,WAAW,GACTx1D,aAAa,KAAK,CAAC,GACf,CAAC,GACD,CAACulF,MAAM,GAAGY,UAAU,GAAG,CAAC,GAAGX,QAAQ,IAAIxlF,aAAa;IAC1D,IAAMppB,EAAC,GAAG,IAAAyB,UAAI,EAACvB,EAAE,EAAEE,EAAE,EAAEw+E,WAAW,CAAC;IACnC,IAAM3+E,EAAC,GAAG,IAAAwB,UAAI,EAACtB,EAAE,EAAEE,EAAE,EAAEu+E,WAAW,CAAC;IACnCnxD,MAAM,CAAC3gC,IAAI,CAAC,CAACkT,EAAC,EAAEC,EAAC,EAAEsvG,UAAU,GAAG,CAAC,EAAEhiG,KAAK,EAAEiiG,KAAK,CAAC,CAAC;IACjDb,MAAM,IAAIY,UAAU;EACtB;EACA,OAAO9hF,MAAM;AACf;;;;;;;;AC1JA,IAAArmC,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAooH,OAAA,GAAApoH,OAAA;AACA,IAAAqoH,SAAA,GAAAroH,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AACA,IAAAm6B,WAAA,GAAAn6B,OAAA;AAMA,IAAA6lG,cAAA,GAAA1jG,sBAAA,CAAAnC,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAQA,IAAAg8G,YAAA,GAAA75G,sBAAA,CAAAnC,OAAA;AACA,IAAA2lH,YAAA,GAAA3lH,OAAA;AAA4C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAxB5C;AACA;AACA;AAwBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMqlH,SAAS,GAAG,IAAAhrG,mBAAW,EAAC,CAAC;;AAE/B;AACA,IAAMmnG,EAAE,GAAG,EAAE;AACb;AACA,IAAMC,EAAE,GAAG,EAAE;AACb;AACA,IAAMC,EAAE,GAAG,EAAE;AACb;AACA,IAAM4D,EAAE,GAAG,EAAE;;AAEb;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,sBAAsB,EAAE;EAC/C,OAAOA,sBAAsB,CAAC,CAAC,CAAC,CAACC,YAAY;AAC/C;AAEA,IAAMC,QAAQ,GAAG,IAAIx0E,MAAM,CACzB;AACA,GAAG,GACDzwC,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAGvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GACjEvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAGvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GACjEvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAGvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GACjEvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAGvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GACjEvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAGvwG,MAAM,CAACuwG,YAAY,CAAC,OAAO,CAAC,GACnE;AACA,qCACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS2U,mBAAmBA,CAAC50C,IAAI,EAAE60C,KAAK,EAAE;EACxC,IAAIA,KAAK,KAAK,OAAO,EAAE;IACrBA,KAAK,GAAGF,QAAQ,CAACp6G,IAAI,CAACylE,IAAI,CAAC,GAAG,OAAO,GAAG,MAAM;EAChD,CAAC,MAAM,IAAI60C,KAAK,KAAK,KAAK,EAAE;IAC1BA,KAAK,GAAGF,QAAQ,CAACp6G,IAAI,CAACylE,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;EAChD;EACA,OAAOwuC,uBAAU,CAACqG,KAAK,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,IAAI,EAAE/qH,CAAC,EAAE;EACtC,IAAIA,CAAC,GAAG,CAAC,EAAE;IACT8qH,GAAG,CAACtjH,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;EACpB;EACAsjH,GAAG,CAACtjH,IAAI,CAACujH,IAAI,EAAE,EAAE,CAAC;EAClB,OAAOD,GAAG;AACZ;AAAC,IAEKE,QAAQ;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,SACE9tG,UAAU,EACVmyD,UAAU,EACV47C,QAAQ,EACR3M,YAAY,EACZ4M,iBAAiB,EACjB;IAAA5sH,eAAA,OAAA0sH,QAAA;IACA;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGA,QAAQ;;IAExB;AACJ;AACA;AACA;IACI,IAAI,CAAC57C,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACnyD,UAAU,GAAGA,UAAU;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACiuG,kBAAkB;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAAC7M,YAAY,GAAGA,YAAY,CAACA,YAAY;;IAE7C;AACJ;AACA;AACA;IACI,IAAI,CAACl/F,WAAW,GAAGk/F,YAAY,CAACl/F,WAAW;;IAE3C;AACJ;AACA;AACA;IACI,IAAI,CAACgsG,gBAAgB,GAAG,CAAC,CAAC;;IAE1B;AACJ;AACA;AACA;IACI,IAAI,CAACC,kBAAkB,GAAG,IAAAjvF,kBAAe,EAAC,CAAC;;IAE3C;AACJ;AACA;AACA;IACI,IAAI,CAACoiF,wBAAwB,GAAGF,YAAY,CAACE,wBAAwB;;IAErE;AACJ;AACA;AACA;IACI,IAAI,CAAC8M,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;IACI,IAAI,CAACvG,UAAU,GAAG1G,YAAY,CAAC0G,UAAU,IAAI,CAAC,CAAC;;IAE/C;AACJ;AACA;IACI,IAAI,CAACE,YAAY,GAAG5G,YAAY,CAAC4G,YAAY,IAAI,CAAC,CAAC;;IAEnD;AACJ;AACA;IACI,IAAI,CAACE,UAAU,GAAG9G,YAAY,CAAC8G,UAAU,IAAI,CAAC,CAAC;;IAE/C;AACJ;AACA;AACA;IACI,IAAI,CAACoG,OAAO,GAAG,CAAC,CAAC;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAAC/G,OAAO,GAAG,CAAC,CAAC;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACgH,cAAc,GAAGP,iBAAiB,GAAG,IAAI3kB,sBAAa,CAAC,CAAC,GAAG,IAAI;EACtE;;EAEA;AACF;AACA;EAFE,OAAA/nG,YAAA,CAAAwsH,QAAA;IAAAvsH,GAAA;IAAAC,KAAA,EAGA,SAAAgtH,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACD,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhtH,GAAA;IAAAC,KAAA,EAOA,SAAAitH,WAAWA,CAAC51C,IAAI,EAAE8wC,OAAO,EAAE/qC,OAAO,EAAE8qC,SAAS,EAAE;MAC7C,IAAMnoH,GAAG,GAAGs3E,IAAI,GAAG8wC,OAAO,GAAG/qC,OAAO,GAAG8qC,SAAS;MAChD,IAAI,IAAI,CAACnC,OAAO,CAAChmH,GAAG,CAAC,EAAE;QACrB,OAAO,IAAI,CAACgmH,OAAO,CAAChmH,GAAG,CAAC;MAC1B;MACA,IAAMgnH,WAAW,GAAGmB,SAAS,GAAG,IAAI,CAAC1B,YAAY,CAAC0B,SAAS,CAAC,GAAG,IAAI;MACnE,IAAMpB,SAAS,GAAG1pC,OAAO,GAAG,IAAI,CAACkpC,UAAU,CAAClpC,OAAO,CAAC,GAAG,IAAI;MAC3D,IAAM4pC,SAAS,GAAG,IAAI,CAACN,UAAU,CAACyB,OAAO,CAAC;MAC1C,IAAMx3C,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAMjnD,KAAK,GAAG,CACZs9F,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAGinD,UAAU,EAC/Bq2C,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAGinD,UAAU,CAChC;MACD,IAAMu7C,KAAK,GAAGlF,SAAS,CAACjiC,OAAO,GAC3B8gC,uBAAU,CAACmB,SAAS,CAACjiC,OAAO,CAAC,GAC7BknC,mBAAmB,CACjBlqH,KAAK,CAACC,OAAO,CAACq1E,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,EACpC2vC,SAAS,CAACniC,SAAS,IAAInO,wBACzB,CAAC;MACL,IAAMgH,WAAW,GACfwqC,SAAS,IAAInB,WAAW,CAACttC,SAAS,GAAGstC,WAAW,CAACttC,SAAS,GAAG,CAAC;MAEhE,IAAMJ,MAAM,GAAGt3E,KAAK,CAACC,OAAO,CAACq1E,IAAI,CAAC,GAC9BA,IAAI,GACJtwE,MAAM,CAACswE,IAAI,CAAC,CAAC/vD,KAAK,CAAC,IAAI,CAAC,CAAC2xD,MAAM,CAACkzC,gBAAgB,EAAE,EAAE,CAAC;MAEzD,IAAAe,kBAAA,GAAqD,IAAA/zC,yBAAiB,EACpE6tC,SAAS,EACT3tC,MACF,CAAC;QAHMrzD,KAAK,GAAAknG,kBAAA,CAALlnG,KAAK;QAAEC,MAAM,GAAAinG,kBAAA,CAANjnG,MAAM;QAAEqzD,MAAM,GAAA4zC,kBAAA,CAAN5zC,MAAM;QAAEC,OAAO,GAAA2zC,kBAAA,CAAP3zC,OAAO;QAAEC,UAAU,GAAA0zC,kBAAA,CAAV1zC,UAAU;MAIjD,IAAM2zC,WAAW,GAAGnnG,KAAK,GAAG03D,WAAW;MACvC,IAAMvD,mBAAmB,GAAG,EAAE;MAC9B;MACA,IAAM/oC,CAAC,GAAG,CAAC+7E,WAAW,GAAG,CAAC,IAAIzjG,KAAK,CAAC,CAAC,CAAC;MACtC,IAAM2nB,CAAC,GAAG,CAACprB,MAAM,GAAGy3D,WAAW,IAAIh0D,KAAK,CAAC,CAAC,CAAC;MAC3C;MACA,IAAM02B,KAAK,GAAG;QACZp6B,KAAK,EAAEorB,CAAC,GAAG,CAAC,GAAGz7B,IAAI,CAACoI,KAAK,CAACqzB,CAAC,CAAC,GAAGz7B,IAAI,CAACqI,IAAI,CAACozB,CAAC,CAAC;QAC3CnrB,MAAM,EAAEorB,CAAC,GAAG,CAAC,GAAG17B,IAAI,CAACoI,KAAK,CAACszB,CAAC,CAAC,GAAG17B,IAAI,CAACqI,IAAI,CAACqzB,CAAC,CAAC;QAC5C8oC,mBAAmB,EAAEA;MACvB,CAAC;MACD,IAAIzwD,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QAClCywD,mBAAmB,CAACrxE,IAAI,CAAC,OAAO,EAAE4gB,KAAK,CAAC;MAC1C;MACA,IAAIw+F,SAAS,EAAE;QACb/tC,mBAAmB,CAACrxE,IAAI,CAAC,aAAa,EAAEi+G,WAAW,CAACpoC,WAAW,CAAC;QAChExE,mBAAmB,CAACrxE,IAAI,CAAC,WAAW,EAAE40E,WAAW,CAAC;QAClDvD,mBAAmB,CAACrxE,IAAI,CAAC,SAAS,EAAEi+G,WAAW,CAACvoC,OAAO,CAAC;QACxDrE,mBAAmB,CAACrxE,IAAI,CAAC,UAAU,EAAEi+G,WAAW,CAACtpC,QAAQ,CAAC;QAC1DtD,mBAAmB,CAACrxE,IAAI,CAAC,YAAY,EAAEi+G,WAAW,CAACppC,UAAU,CAAC;QAC9DxD,mBAAmB,CAACrxE,IAAI,CAAC,aAAa,EAAE,CAACi+G,WAAW,CAACtoC,QAAQ,CAAC,CAAC;QAC/DtE,mBAAmB,CAACrxE,IAAI,CAAC,gBAAgB,EAAEi+G,WAAW,CAACroC,cAAc,CAAC;MACxE;MACA,IAAItB,OAAO,EAAE;QACXjD,mBAAmB,CAACrxE,IAAI,CAAC,WAAW,EAAEg+G,SAAS,CAACvxC,SAAS,CAAC;MAC5D;MACA4E,mBAAmB,CAACrxE,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC;MAClDqxE,mBAAmB,CAACrxE,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC;MAC/C,IAAMskH,SAAS,GAAG,GAAG,GAAGlB,KAAK;MAC7B,IAAIlwG,CAAC,GAAGkwG,KAAK,GAAGiB,WAAW,GAAGC,SAAS,GAAG1vC,WAAW;MACrD,IAAM2vC,kBAAkB,GAAG,EAAE;MAC7B,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAIz1E,UAAU,GAAG,CAAC;MAClB,IAAI01E,UAAU,GAAG,CAAC;MAClB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,YAAY;MAChB,KAAK,IAAIpsH,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG+vE,MAAM,CAACz4E,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI,CAAC,EAAE;QAClD,IAAM+1E,KAAI,GAAGgC,MAAM,CAAC/3E,CAAC,CAAC;QACtB,IAAI+1E,KAAI,KAAK,IAAI,EAAE;UACjBk2C,UAAU,IAAI11E,UAAU;UACxBA,UAAU,GAAG,CAAC;UACd77B,CAAC,GAAGkwG,KAAK,GAAGiB,WAAW,GAAGC,SAAS,GAAG1vC,WAAW;UACjD,EAAE+vC,cAAc;UAChB;QACF;QACA,IAAMx1C,IAAI,GAAGoB,MAAM,CAAC/3E,CAAC,GAAG,CAAC,CAAC,IAAI0lH,SAAS,CAAC/uC,IAAI;QAC5C,IAAIA,IAAI,KAAKy1C,YAAY,EAAE;UACzB,IAAIxF,SAAS,EAAE;YACbmF,kBAAkB,CAACvkH,IAAI,CAAC,MAAM,EAAEmvE,IAAI,CAAC;UACvC;UACA,IAAImF,OAAO,EAAE;YACXkwC,gBAAgB,CAACxkH,IAAI,CAAC,MAAM,EAAEmvE,IAAI,CAAC;UACrC;UACAy1C,YAAY,GAAGz1C,IAAI;QACrB;QACApgC,UAAU,GAAGliC,IAAI,CAACmG,GAAG,CAAC+7B,UAAU,EAAE0hC,OAAO,CAACi0C,gBAAgB,CAAC,CAAC;QAC5D,IAAMG,cAAc,GAAG,CACrBt2C,KAAI,EACJr7D,CAAC,GACCoxG,SAAS,GAAG9zC,MAAM,CAACk0C,gBAAgB,CAAC,GACpCtB,KAAK,IAAI5yC,MAAM,CAACk0C,gBAAgB,CAAC,GAAGh0C,UAAU,CAACi0C,cAAc,CAAC,CAAC,EACjE,GAAG,IAAI/vC,WAAW,GAAG7lC,UAAU,CAAC,GAAG01E,UAAU,CAC9C;QACDvxG,CAAC,IAAIs9D,MAAM,CAACk0C,gBAAgB,CAAC;QAC7B,IAAItF,SAAS,EAAE;UACbmF,kBAAkB,CAACvkH,IAAI,CAAC,YAAY,EAAE6kH,cAAc,CAAC;QACvD;QACA,IAAIvwC,OAAO,EAAE;UACXkwC,gBAAgB,CAACxkH,IAAI,CAAC,UAAU,EAAE6kH,cAAc,CAAC;QACnD;QACA,EAAEH,gBAAgB;MACpB;MACAzrH,KAAK,CAACgC,SAAS,CAAC+E,IAAI,CAAC1E,KAAK,CAAC+1E,mBAAmB,EAAEkzC,kBAAkB,CAAC;MACnEtrH,KAAK,CAACgC,SAAS,CAAC+E,IAAI,CAAC1E,KAAK,CAAC+1E,mBAAmB,EAAEmzC,gBAAgB,CAAC;MACjE,IAAI,CAACvH,OAAO,CAAChmH,GAAG,CAAC,GAAGqgD,KAAK;MACzB,OAAOA,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAArgD,GAAA;IAAAC,KAAA,EASA,SAAA4tH,qBAAqBA,CACnB/0E,OAAO,EACPivE,EAAE,EACFC,EAAE,EACFC,EAAE,EACF4D,EAAE,EACF5M,eAAe,EACfC,iBAAiB,EACjB;MACApmE,OAAO,CAAC0kD,SAAS,CAAC,CAAC;MACnB1kD,OAAO,CAAC2kD,MAAM,CAACp5F,KAAK,CAACy0C,OAAO,EAAEivE,EAAE,CAAC;MACjCjvE,OAAO,CAACmnC,MAAM,CAAC57E,KAAK,CAACy0C,OAAO,EAAEkvE,EAAE,CAAC;MACjClvE,OAAO,CAACmnC,MAAM,CAAC57E,KAAK,CAACy0C,OAAO,EAAEmvE,EAAE,CAAC;MACjCnvE,OAAO,CAACmnC,MAAM,CAAC57E,KAAK,CAACy0C,OAAO,EAAE+yE,EAAE,CAAC;MACjC/yE,OAAO,CAACmnC,MAAM,CAAC57E,KAAK,CAACy0C,OAAO,EAAEivE,EAAE,CAAC;MACjC,IAAI9I,eAAe,EAAE;QACnB,IAAI,CAACyN,kBAAkB,GAAG,qBAAuBzN,eAAe,CAAC,CAAC,CAAE;QACpEnmE,OAAO,CAAC08B,SAAS,GAAG,qBAAuBypC,eAAe,CAAC,CAAC,CAAE;QAC9D,IAAI,CAAC9iC,KAAK,CAACrjC,OAAO,CAAC;MACrB;MACA,IAAIomE,iBAAiB,EAAE;QACrB,IAAI,CAAC4O,eAAe,CAClBh1E,OAAO,EACP,uBAAyBomE,iBAC3B,CAAC;QACDpmE,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAnBE;IAAA18E,GAAA;IAAAC,KAAA,EAoBA,SAAA8tH,gCAAgCA,CAC9BC,UAAU,EACVC,WAAW,EACX15E,OAAO,EACPC,OAAO,EACPvuB,KAAK,EACLC,MAAM,EACNkX,OAAO,EACPC,OAAO,EACP28C,OAAO,EACPC,OAAO,EACPp2D,QAAQ,EACR8F,KAAK,EACLukG,WAAW,EACXrhF,OAAO,EACPshF,UAAU,EACVlqC,OAAO,EACP;MACA7mD,OAAO,IAAIzT,KAAK,CAAC,CAAC,CAAC;MACnB0T,OAAO,IAAI1T,KAAK,CAAC,CAAC,CAAC;MACnB,IAAI1N,CAAC,GAAGs4B,OAAO,GAAGnX,OAAO;MACzB,IAAIlhB,CAAC,GAAGs4B,OAAO,GAAGnX,OAAO;MAEzB,IAAMgU,CAAC,GAAGprB,KAAK,GAAG+zD,OAAO,GAAGg0C,UAAU,GAAGA,UAAU,GAAGh0C,OAAO,GAAG/zD,KAAK;MACrE,IAAMqrB,CAAC,GAAGprB,MAAM,GAAG+zD,OAAO,GAAGg0C,WAAW,GAAGA,WAAW,GAAGh0C,OAAO,GAAG/zD,MAAM;MACzE,IAAMkoG,IAAI,GAAGvhF,OAAO,CAAC,CAAC,CAAC,GAAGwE,CAAC,GAAG1nB,KAAK,CAAC,CAAC,CAAC,GAAGkjB,OAAO,CAAC,CAAC,CAAC;MACnD,IAAMwhF,IAAI,GAAGxhF,OAAO,CAAC,CAAC,CAAC,GAAGyE,CAAC,GAAG3nB,KAAK,CAAC,CAAC,CAAC,GAAGkjB,OAAO,CAAC,CAAC,CAAC;MACnD,IAAMyhF,IAAI,GAAGryG,CAAC,GAAG4wB,OAAO,CAAC,CAAC,CAAC;MAC3B,IAAM0hF,IAAI,GAAGryG,CAAC,GAAG2wB,OAAO,CAAC,CAAC,CAAC;MAE3B,IAAIshF,UAAU,IAAItqG,QAAQ,KAAK,CAAC,EAAE;QAChCkkG,EAAE,CAAC,CAAC,CAAC,GAAGuG,IAAI;QACZzC,EAAE,CAAC,CAAC,CAAC,GAAGyC,IAAI;QACZvG,EAAE,CAAC,CAAC,CAAC,GAAGwG,IAAI;QACZvG,EAAE,CAAC,CAAC,CAAC,GAAGuG,IAAI;QACZvG,EAAE,CAAC,CAAC,CAAC,GAAGsG,IAAI,GAAGF,IAAI;QACnBnG,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC;QACbC,EAAE,CAAC,CAAC,CAAC,GAAGsG,IAAI,GAAGF,IAAI;QACnBxC,EAAE,CAAC,CAAC,CAAC,GAAG5D,EAAE,CAAC,CAAC,CAAC;MACf;MAEA,IAAI58F,SAAS;MACb,IAAIxH,QAAQ,KAAK,CAAC,EAAE;QAClBwH,SAAS,GAAG,IAAAiU,mBAAgB,EAC1B,IAAA3B,kBAAe,EAAC,CAAC,EACjB4W,OAAO,EACPC,OAAO,EACP,CAAC,EACD,CAAC,EACD3wB,QAAQ,EACR,CAAC0wB,OAAO,EACR,CAACC,OACH,CAAC;QAED,IAAA1uB,iBAAc,EAACuF,SAAS,EAAE08F,EAAE,CAAC;QAC7B,IAAAjiG,iBAAc,EAACuF,SAAS,EAAE28F,EAAE,CAAC;QAC7B,IAAAliG,iBAAc,EAACuF,SAAS,EAAE48F,EAAE,CAAC;QAC7B,IAAAniG,iBAAc,EAACuF,SAAS,EAAEwgG,EAAE,CAAC;QAC7B,IAAA3qG,sBAAc,EACZtL,IAAI,CAACkG,GAAG,CAACisG,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAE4D,EAAE,CAAC,CAAC,CAAC,CAAC,EACpCj2G,IAAI,CAACkG,GAAG,CAACisG,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAE4D,EAAE,CAAC,CAAC,CAAC,CAAC,EACpCj2G,IAAI,CAACmG,GAAG,CAACgsG,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAE4D,EAAE,CAAC,CAAC,CAAC,CAAC,EACpCj2G,IAAI,CAACmG,GAAG,CAACgsG,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAE4D,EAAE,CAAC,CAAC,CAAC,CAAC,EACpCD,SACF,CAAC;MACH,CAAC,MAAM;QACL,IAAA1qG,sBAAc,EACZtL,IAAI,CAACkG,GAAG,CAACwyG,IAAI,EAAEA,IAAI,GAAGF,IAAI,CAAC,EAC3Bx4G,IAAI,CAACkG,GAAG,CAACyyG,IAAI,EAAEA,IAAI,GAAGF,IAAI,CAAC,EAC3Bz4G,IAAI,CAACmG,GAAG,CAACuyG,IAAI,EAAEA,IAAI,GAAGF,IAAI,CAAC,EAC3Bx4G,IAAI,CAACmG,GAAG,CAACwyG,IAAI,EAAEA,IAAI,GAAGF,IAAI,CAAC,EAC3BzC,SACF,CAAC;MACH;MACA,IAAIsC,WAAW,EAAE;QACfjyG,CAAC,GAAGrG,IAAI,CAACmI,KAAK,CAAC9B,CAAC,CAAC;QACjBC,CAAC,GAAGtG,IAAI,CAACmI,KAAK,CAAC7B,CAAC,CAAC;MACnB;MACA,OAAO;QACLsyG,UAAU,EAAEvyG,CAAC;QACbwyG,UAAU,EAAEvyG,CAAC;QACbwyG,UAAU,EAAEr9E,CAAC;QACbs9E,UAAU,EAAEr9E,CAAC;QACb0oC,OAAO,EAAEA,OAAO;QAChBC,OAAO,EAAEA,OAAO;QAChB+xC,YAAY,EAAE;UACZ/sG,IAAI,EAAE2sG,SAAS,CAAC,CAAC,CAAC;UAClBzsG,IAAI,EAAEysG,SAAS,CAAC,CAAC,CAAC;UAClB1sG,IAAI,EAAE0sG,SAAS,CAAC,CAAC,CAAC;UAClBxsG,IAAI,EAAEwsG,SAAS,CAAC,CAAC,CAAC;UAClB3rH,KAAK,EAAEgkF;QACT,CAAC;QACD0mB,eAAe,EAAEt/E,SAAS;QAC1B1B,KAAK,EAAEA;MACT,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAA3pB,GAAA;IAAAC,KAAA,EAWA,SAAA2uH,mBAAmBA,CACjB91E,OAAO,EACP+1E,gBAAgB,EAChBC,YAAY,EACZt1F,UAAU,EACV25B,OAAO,EACP8rD,eAAe,EACfC,iBAAiB,EACjB;MACA,IAAMiP,UAAU,GAAG,CAAC,EAAElP,eAAe,IAAIC,iBAAiB,CAAC;MAE3D,IAAM6P,GAAG,GAAGv1F,UAAU,CAACwyF,YAAY;MACnC,IAAMgD,aAAa,GAAG9P,iBAAiB,GAClCA,iBAAiB,CAAC,CAAC,CAAC,GAAG1lF,UAAU,CAAC7P,KAAK,CAAC,CAAC,CAAC,GAAI,CAAC,GAChD,CAAC;MACL,IAAM3E,UAAU,GACd+pG,GAAG,CAAC9vG,IAAI,GAAG+vG,aAAa,IAAIH,gBAAgB,CAAC,CAAC,CAAC,IAC/CE,GAAG,CAAC7vG,IAAI,GAAG8vG,aAAa,IAAI,CAAC,IAC7BD,GAAG,CAAC5vG,IAAI,GAAG6vG,aAAa,IAAIH,gBAAgB,CAAC,CAAC,CAAC,IAC/CE,GAAG,CAAC3vG,IAAI,GAAG4vG,aAAa,IAAI,CAAC;MAE/B,IAAIhqG,UAAU,EAAE;QACd,IAAImpG,UAAU,EAAE;UACd,IAAI,CAACN,qBAAqB,CACxB/0E,OAAO,EACPivE,EAAE,EACFC,EAAE,EACFC,EAAE,EACF4D,EAAE,EACF,uBAAyB5M,eAAe,EACxC,uBAAyBC,iBAC3B,CAAC;QACH;QACA,IAAAplC,wBAAgB,EACdhhC,OAAO,EACPtf,UAAU,CAACmxE,eAAe,EAC1Bx3C,OAAO,EACP27D,YAAY,EACZt1F,UAAU,CAACwgD,OAAO,EAClBxgD,UAAU,CAACygD,OAAO,EAClBzgD,UAAU,CAACk1F,UAAU,EACrBl1F,UAAU,CAACm1F,UAAU,EACrBn1F,UAAU,CAACg1F,UAAU,EACrBh1F,UAAU,CAACi1F,UAAU,EACrBj1F,UAAU,CAAC7P,KACb,CAAC;MACH;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA3pB,GAAA;IAAAC,KAAA,EAIA,SAAAk8E,KAAKA,CAACrjC,OAAO,EAAE;MACb,IAAMm2E,aAAa,GAAG,IAAI,CAACvC,kBAAkB;MAC7C,IAAIuC,aAAa,EAAE;QACjB,IAAM3e,MAAM,GAAG,IAAAxqF,iBAAc,EAAC,IAAI,CAAC8mG,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAMsC,UAAU,GAAG,GAAG,GAAG,IAAI,CAACt+C,UAAU;QACxC93B,OAAO,CAACohC,IAAI,CAAC,CAAC;QACdphC,OAAO,CAAC5c,SAAS,CAACo0E,MAAM,CAAC,CAAC,CAAC,GAAG4e,UAAU,EAAE5e,MAAM,CAAC,CAAC,CAAC,GAAG4e,UAAU,CAAC;QACjE,IAAID,aAAa,KAAK,CAAC,EAAE;UACvBn2E,OAAO,CAACnvB,KAAK,CAACslG,aAAa,EAAEA,aAAa,CAAC;QAC7C;QACAn2E,OAAO,CAACvvB,MAAM,CAAC,IAAI,CAACujG,aAAa,CAAC;MACpC;MACAh0E,OAAO,CAACsjC,IAAI,CAAC,CAAC;MACd,IAAI6yC,aAAa,EAAE;QACjBn2E,OAAO,CAACwhC,OAAO,CAAC,CAAC;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAt6E,GAAA;IAAAC,KAAA,EAKA,SAAA6tH,eAAeA,CAACh1E,OAAO,EAAE4oE,WAAW,EAAE;MACpC5oE,OAAO,CAAC8lC,WAAW,GACjB,qDAAuD8iC,WAAW,CAAC,CAAC,CAAE;MACxE5oE,OAAO,CAAC4gC,SAAS,GAAG,qBAAuBgoC,WAAW,CAAC,CAAC,CAAE;MAC1D5oE,OAAO,CAAC2lC,OAAO,GAAG,4BAA8BijC,WAAW,CAAC,CAAC,CAAE;MAC/D5oE,OAAO,CAAC4kC,QAAQ,GAAG,6BAA+BgkC,WAAW,CAAC,CAAC,CAAE;MACjE5oE,OAAO,CAAC8kC,UAAU,GAAG,qBAAuB8jC,WAAW,CAAC,CAAC,CAAE;MAC3D5oE,OAAO,CAAC6lC,cAAc,GAAG,qBAAuB+iC,WAAW,CAAC,CAAC,CAAE;MAC/D5oE,OAAO,CAAC6mC,WAAW,CAAC,4BAA8B+hC,WAAW,CAAC,CAAC,CAAE,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1hH,GAAA;IAAAC,KAAA,EAQA,SAAAkvH,4BAA4BA,CAAC73C,IAAI,EAAE8wC,OAAO,EAAED,SAAS,EAAE9qC,OAAO,EAAE;MAC9D,IAAM4pC,SAAS,GAAG,IAAI,CAACN,UAAU,CAACyB,OAAO,CAAC;MAE1C,IAAM/nE,KAAK,GAAG,IAAI,CAAC6sE,WAAW,CAAC51C,IAAI,EAAE8wC,OAAO,EAAE/qC,OAAO,EAAE8qC,SAAS,CAAC;MAEjE,IAAMnB,WAAW,GAAG,IAAI,CAACP,YAAY,CAAC0B,SAAS,CAAC;MAChD,IAAMv3C,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAMu7C,KAAK,GAAGD,mBAAmB,CAC/BlqH,KAAK,CAACC,OAAO,CAACq1E,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,EACpC2vC,SAAS,CAACniC,SAAS,IAAInO,wBACzB,CAAC;MACD,IAAM0xC,QAAQ,GAAGvC,uBAAU,CAACmB,SAAS,CAAC7hC,YAAY,IAAIxO,2BAAmB,CAAC;MAC1E,IAAM+G,WAAW,GACfqpC,WAAW,IAAIA,WAAW,CAACttC,SAAS,GAAGstC,WAAW,CAACttC,SAAS,GAAG,CAAC;;MAElE;MACA,IAAMzzD,KAAK,GAAGo6B,KAAK,CAACp6B,KAAK,GAAG2qD,UAAU,GAAG,CAAC,GAAGq2C,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC;MAC/D,IAAMyT,OAAO,GAAG+uF,KAAK,GAAGlmG,KAAK,GAAG,CAAC,IAAI,GAAG,GAAGkmG,KAAK,CAAC,GAAGxuC,WAAW;MAC/D,IAAMtgD,OAAO,GACVgrF,QAAQ,GAAGhoE,KAAK,CAACn6B,MAAM,GAAI0qD,UAAU,GACtC,CAAC,IAAI,GAAG,GAAGy3C,QAAQ,CAAC,GAAG1qC,WAAW;MAEpC,OAAO;QACLt9B,KAAK,EAAEA,KAAK;QACZjjB,OAAO,EAAEA,OAAO;QAChBC,OAAO,EAAEA;MACX,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAAr9B,GAAA;IAAAC,KAAA,EAcA,SAAAmvH,QAAQA,CACNt2E,OAAO,EACP+1E,gBAAgB,EAChBxjG,SAAS,EACTw0F,YAAY,EACZqO,WAAW,EACXmB,eAAe,EACfC,SAAS,EACTC,aAAa,EACb;MACA,IAAMC,aAAa,GAAG,IAAI,CAACxC,cAAc;MACzC;MACA,IAAIyC,gBAAgB;MACpB,IAAI,IAAI,CAAC5C,iBAAiB,IAAI,IAAAvqH,aAAM,EAAC+oB,SAAS,EAAE,IAAI,CAACuhG,kBAAkB,CAAC,EAAE;QACxE6C,gBAAgB,GAAG,IAAI,CAAC5C,iBAAiB;MAC3C,CAAC,MAAM;QACL,IAAI,CAAC,IAAI,CAACA,iBAAiB,EAAE;UAC3B,IAAI,CAACA,iBAAiB,GAAG,EAAE;QAC7B;QACA4C,gBAAgB,GAAG,IAAAxyF,sBAAW,EAC5B,IAAI,CAACtc,WAAW,EAChB,CAAC,EACD,IAAI,CAACA,WAAW,CAAC9f,MAAM,EACvB,CAAC,EACDwqB,SAAS,EACT,IAAI,CAACwhG,iBACP,CAAC;QACD,IAAA6C,wBAAqB,EAAC,IAAI,CAAC9C,kBAAkB,EAAEvhG,SAAS,CAAC;MAC3D;MACA,IAAI9pB,CAAC,GAAG,CAAC,CAAC,CAAC;MACX,IAAMgI,EAAE,GAAGs2G,YAAY,CAACh/G,MAAM,CAAC,CAAC;MAChC,IAAIsnB,CAAC,GAAG,CAAC,CAAC,CAAC;MACX,IAAIi2D,EAAE,CAAC,CAAC;MACR,IAAIhhD,OAAO,EACTC,OAAO,EACP;QACA29C,aAAa,EACb20C,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNz+C,KAAK,EACLiG,IAAI,EACJ8wC,OAAO,EACPD,SAAS,EACT9qC,OAAO;MACT,IAAI0yC,WAAW,GAAG,CAAC;MACnB,IAAIC,aAAa,GAAG,CAAC;MACrB,IAAMC,eAAe,GAAG,IAAI,CAACtD,gBAAgB;MAC7C,IAAMuD,YAAY,GAAG,IAAI,CAACpD,aAAa;MACvC,IAAMqD,yBAAyB,GAC7Bv6G,IAAI,CAACmI,KAAK,CAACnI,IAAI,CAACqV,KAAK,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI;MAEnE,IAAMjR,KAAK,GAAG,8CAAgD;QAC5D0+B,OAAO,EAAEA,OAAO;QAChB83B,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BnyD,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BoF,QAAQ,EAAEqsG;MACZ,CAAE;;MAEF;MACA;MACA,IAAME,SAAS,GACb,IAAI,CAACvQ,YAAY,IAAIA,YAAY,IAAI,IAAI,CAAC2M,QAAQ,GAAG,CAAC,GAAG,GAAG;MAC9D,IAAI,qDAAsDvoC,OAAO;MACjE,IAAIhoE,CAAC,EAAEC,CAAC,EAAEm0G,eAAe;MACzB,OAAO9uH,CAAC,GAAGgI,EAAE,EAAE;QACb,IAAMm4G,WAAW,GAAG7B,YAAY,CAACt+G,CAAC,CAAC;QACnC,IAAM2D,IAAI,GAAG;QACXw8G,WAAW,CAAC,CAAC,CACd;QACD,QAAQx8G,IAAI;UACV,KAAKq8G,oBAAiB,CAACnD,cAAc;YACnCn6B,OAAO,GAAG;YACRy9B,WAAW,CAAC,CAAC,CACd;YACD2O,eAAe,GAAG3O,WAAW,CAAC,CAAC,CAAC;YAChC,IAAI,CAACz9B,OAAO,CAAC33B,WAAW,CAAC,CAAC,EAAE;cAC1B/qD,CAAC,GAAG,qBAAuBmgH,WAAW,CAAC,CAAC,CAAE;YAC5C,CAAC,MAAM,IACL4N,SAAS,KAAK1lH,SAAS,IACvB,CAAC,IAAAob,kBAAU,EAACsqG,SAAS,EAAEe,eAAe,CAAC/pG,SAAS,CAAC,CAAC,CAAC,EACnD;cACA/kB,CAAC,GAAG,qBAAuBmgH,WAAW,CAAC,CAAC,CAAC,GAAI,CAAC;YAChD,CAAC,MAAM;cACL,EAAEngH,CAAC;YACL;YACA,IAAIiuH,aAAa,EAAE;cACjBA,aAAa,CAACp8D,MAAM,GAAGsuD,WAAW,CAAC,CAAC,CAAC;YACvC;YACA;UACF,KAAKH,oBAAiB,CAAClD,UAAU;YAC/B,IAAI0R,WAAW,GAAGK,SAAS,EAAE;cAC3B,IAAI,CAACj0C,KAAK,CAACrjC,OAAO,CAAC;cACnBi3E,WAAW,GAAG,CAAC;YACjB;YACA,IAAIC,aAAa,GAAGI,SAAS,EAAE;cAC7Bt3E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;cAChBszC,aAAa,GAAG,CAAC;YACnB;YACA,IAAI,CAACD,WAAW,IAAI,CAACC,aAAa,EAAE;cAClCl3E,OAAO,CAAC0kD,SAAS,CAAC,CAAC;cACnBmyB,KAAK,GAAG9xF,GAAG;cACX+xF,KAAK,GAAG/xF,GAAG;YACb;YACA,EAAEt8B,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAACjD,MAAM;YAC3Bn2F,CAAC,GAAG,qBAAuBu5F,WAAW,CAAC,CAAC,CAAE;YAC1C,IAAMvlG,EAAE,GAAGszG,gBAAgB,CAACtnG,CAAC,CAAC;YAC9B,IAAM/L,EAAE,GAAGqzG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;YAClC,IAAM9L,EAAE,GAAGozG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;YAClC,IAAM7L,EAAE,GAAGmzG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;YAClC,IAAM5L,EAAE,GAAGF,EAAE,GAAGF,EAAE;YAClB,IAAMK,EAAE,GAAGF,EAAE,GAAGF,EAAE;YAClB,IAAM9V,CAAC,GAAGsP,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;YACtCs8B,OAAO,CAAC2kD,MAAM,CAACthF,EAAE,GAAG7V,CAAC,EAAE8V,EAAE,CAAC;YAC1B08B,OAAO,CAAC+mC,GAAG,CAAC1jE,EAAE,EAAEC,EAAE,EAAE9V,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGsP,IAAI,CAAC0H,EAAE,EAAE,IAAI,CAAC;YAC5C,EAAE/b,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAChD,UAAU;YAC/BzlE,OAAO,CAAConC,SAAS,CAAC,CAAC;YACnB,EAAE3+E,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC/C,MAAM;YAC3Br2F,CAAC,GAAG,qBAAuBu5F,WAAW,CAAC,CAAC,CAAE;YAC1CtjC,EAAE,GAAGsjC,WAAW,CAAC,CAAC,CAAC;YACnB,IAAMv2F,QAAQ,GACZ;YACEu2F,WAAW,CAAC,CAAC,CACd;YACH,IAAMr+B,QAAQ,GAAGq+B,WAAW,CAAC,CAAC,CAAC;YAC/B,IAAM/9G,EAAE,GAAG+9G,WAAW,CAAC,CAAC,CAAC;YACzBtnG,KAAK,CAAC+Q,QAAQ,GAAGA,QAAQ;YACzB/Q,KAAK,CAAC6pE,OAAO,GAAGA,OAAO;YACvB,IAAI,EAAE1iF,CAAC,IAAI0uH,eAAe,CAAC,EAAE;cAC3BA,eAAe,CAAC1uH,CAAC,CAAC,GAAG,EAAE;YACzB;YACA,IAAM+pB,MAAM,GAAG2kG,eAAe,CAAC1uH,CAAC,CAAC;YACjC,IAAIoC,EAAE,EAAE;cACNA,EAAE,CAAC8rH,gBAAgB,EAAEtnG,CAAC,EAAEi2D,EAAE,EAAE,CAAC,EAAE9yD,MAAM,CAAC;YACxC,CAAC,MAAM;cACLA,MAAM,CAAC,CAAC,CAAC,GAAGmkG,gBAAgB,CAACtnG,CAAC,CAAC;cAC/BmD,MAAM,CAAC,CAAC,CAAC,GAAGmkG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;cACnCmD,MAAM,CAACzqB,MAAM,GAAG,CAAC;YACnB;YACA,IAAI2uH,aAAa,EAAE;cACjBA,aAAa,CAACp8D,MAAM,GAAGsuD,WAAW,CAAC,CAAC,CAAC;YACvC;YACAr+B,QAAQ,CAAC/3D,MAAM,EAAElR,KAAK,CAAC;YACvB,EAAE7Y,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC7C,UAAU;YAC/Bv2F,CAAC,GAAG,qBAAuBu5F,WAAW,CAAC,CAAC,CAAE;YAC1CtjC,EAAE,GAAG,qBAAuBsjC,WAAW,CAAC,CAAC,CAAE;YAC3CrwC,KAAK,GACH;YACEqwC,WAAW,CAAC,CAAC,CACd;;YAEH;YACAtkF,OAAO,GAAG,qBAAuBskF,WAAW,CAAC,CAAC,CAAE;YAChDrkF,OAAO,GAAG,qBAAuBqkF,WAAW,CAAC,CAAC,CAAE;YAChD,IAAIx7F,MAAM,GAAG,qBAAuBw7F,WAAW,CAAC,CAAC,CAAE;YACnD,IAAMvuD,OAAO,GAAG,qBAAuBuuD,WAAW,CAAC,CAAC,CAAE;YACtD,IAAM1nC,OAAO,GAAG,qBAAuB0nC,WAAW,CAAC,CAAC,CAAE;YACtD,IAAMznC,OAAO,GAAG,qBAAuBynC,WAAW,CAAC,CAAC,CAAE;YACtD,IAAMhnC,cAAc,GAAG,sBAAwBgnC,WAAW,CAAC,EAAE,CAAE;YAC/D,IAAI79F,QAAQ,GAAG,qBAAuB69F,WAAW,CAAC,EAAE,CAAE;YACtD,IAAM/3F,KAAK,GAAG;YACZ+3F,WAAW,CAAC,EAAE,CACf;YACD,IAAIz7F,KAAK,GAAG,qBAAuBy7F,WAAW,CAAC,EAAE,CAAE;YACnD1mC,aAAa,GAAG0mC,WAAW,CAAC,EAAE,CAAC,IAAI,WAAW;YAC9C,IAAM1D,sBAAsB,GAC1B;YACE0D,WAAW,CAAC,EAAE,CACf;YAEH,IAAI,CAACrwC,KAAK,IAAIqwC,WAAW,CAAC7gH,MAAM,IAAI,EAAE,EAAE;cACtC;cACAy2E,IAAI,GAAG,qBAAuBoqC,WAAW,CAAC,EAAE,CAAE;cAC9C0G,OAAO,GAAG,qBAAuB1G,WAAW,CAAC,EAAE,CAAE;cACjDyG,SAAS,GAAG,qBAAuBzG,WAAW,CAAC,EAAE,CAAE;cACnDrkC,OAAO,GAAG,qBAAuBqkC,WAAW,CAAC,EAAE,CAAE;cACjD,IAAM4O,eAAe,GAAG,IAAI,CAACnB,4BAA4B,CACvD73C,IAAI,EACJ8wC,OAAO,EACPD,SAAS,EACT9qC,OACF,CAAC;cACDhM,KAAK,GAAGi/C,eAAe,CAACjwE,KAAK;cAC7BqhE,WAAW,CAAC,CAAC,CAAC,GAAGrwC,KAAK;cACtB,IAAMo3C,WAAW,GAAG,qBAAuB/G,WAAW,CAAC,EAAE,CAAE;cAC3DtkF,OAAO,GAAG,CAACkzF,eAAe,CAAClzF,OAAO,GAAGqrF,WAAW,IAAI,IAAI,CAAC73C,UAAU;cACnE8wC,WAAW,CAAC,CAAC,CAAC,GAAGtkF,OAAO;cACxB,IAAMsrF,WAAW,GAAG,qBAAuBhH,WAAW,CAAC,EAAE,CAAE;cAC3DrkF,OAAO,GAAG,CAACizF,eAAe,CAACjzF,OAAO,GAAGqrF,WAAW,IAAI,IAAI,CAAC93C,UAAU;cACnE8wC,WAAW,CAAC,CAAC,CAAC,GAAGrkF,OAAO;cACxBnX,MAAM,GAAGmrD,KAAK,CAACnrD,MAAM;cACrBw7F,WAAW,CAAC,CAAC,CAAC,GAAGx7F,MAAM;cACvBD,KAAK,GAAGorD,KAAK,CAACprD,KAAK;cACnBy7F,WAAW,CAAC,EAAE,CAAC,GAAGz7F,KAAK;YACzB;YAEA,IAAIuhG,cAAc;YAClB,IAAI9F,WAAW,CAAC7gH,MAAM,GAAG,EAAE,EAAE;cAC3B2mH,cAAc,GAAG,qBAAuB9F,WAAW,CAAC,EAAE,CAAE;YAC1D;YAEA,IAAI70E,OAAO;cAAE0jF,yBAAyB;cAAEC,2BAA2B;YACnE,IAAI9O,WAAW,CAAC7gH,MAAM,GAAG,EAAE,EAAE;cAC3BgsC,OAAO,GAAG,4BAA8B60E,WAAW,CAAC,EAAE,CAAE;cACxD6O,yBAAyB,GAAG;cAC1B7O,WAAW,CAAC,EAAE,CACf;cACD8O,2BAA2B,GAAG;cAC5B9O,WAAW,CAAC,EAAE,CACf;YACH,CAAC,MAAM;cACL70E,OAAO,GAAGgqC,sBAAc;cACxB05C,yBAAyB,GAAG,IAAI;cAChCC,2BAA2B,GAAG,IAAI;YACpC;YAEA,IAAI91C,cAAc,IAAIy1C,yBAAyB,EAAE;cAC/C;cACAtsG,QAAQ,IAAIqsG,YAAY;YAC1B,CAAC,MAAM,IAAI,CAACx1C,cAAc,IAAI,CAACy1C,yBAAyB,EAAE;cACxD;cACAtsG,QAAQ,IAAIqsG,YAAY;YAC1B;YACA,IAAIO,UAAU,GAAG,CAAC;YAClB,OAAOtoG,CAAC,GAAGi2D,EAAE,EAAEj2D,CAAC,IAAI,CAAC,EAAE;cACrB,IACEq/F,cAAc,IACdA,cAAc,CAACiJ,UAAU,EAAE,CAAC,GAAGxqG,KAAK,GAAG,IAAI,CAAC2qD,UAAU,EACtD;gBACA;cACF;cACA,IAAMp3C,UAAU,GAAG,IAAI,CAACu0F,gCAAgC,CACtD18C,KAAK,CAACprD,KAAK,EACXorD,KAAK,CAACnrD,MAAM,EACZupG,gBAAgB,CAACtnG,CAAC,CAAC,EACnBsnG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC,EACvBlC,KAAK,EACLC,MAAM,EACNkX,OAAO,EACPC,OAAO,EACP28C,OAAO,EACPC,OAAO,EACPp2D,QAAQ,EACR8F,KAAK,EACLukG,WAAW,EACXrhF,OAAO,EACP,CAAC,CAAC0jF,yBAAyB,IAAI,CAAC,CAACC,2BAA2B,EAC5DvsC,OACF,CAAC;cACD;cACA,IAAMt1C,IAAI,GAAG,CACXmK,OAAO,EACP+1E,gBAAgB,EAChBx9C,KAAK,EACL73C,UAAU,EACV25B,OAAO,EACPo9D,yBAAyB,EACzBC,2BAA2B,CAC5B;cACD,IAAIjB,aAAa,EAAE;gBACjB,IAAImB,SAAS;kBAAEC,kBAAkB;kBAAEC,iBAAiB;gBACpD,IAAI5S,sBAAsB,EAAE;kBAC1B,IAAMp7G,KAAK,GAAGw7E,EAAE,GAAGj2D,CAAC;kBACpB,IAAI,CAAC61F,sBAAsB,CAACp7G,KAAK,CAAC,EAAE;oBAClC;oBACAo7G,sBAAsB,CAACp7G,KAAK,CAAC,GAAG;sBAAC+rC,IAAI,EAAJA,IAAI;sBAAEqsC,aAAa,EAAbA;oBAAa,CAAC;oBACrD;oBACA;kBACF;kBACA,IAAM61C,cAAc,GAAG7S,sBAAsB,CAACp7G,KAAK,CAAC;kBACpD8tH,SAAS,GAAGG,cAAc,CAACliF,IAAI;kBAC/BgiF,kBAAkB,GAAGE,cAAc,CAAC71C,aAAa;kBACjD,OAAOgjC,sBAAsB,CAACp7G,KAAK,CAAC;kBACpCguH,iBAAiB,GAAG9E,eAAe,CAAC4E,SAAS,CAAC;gBAChD;gBACA;gBACA,IAAII,WAAW;kBAAEC,UAAU;gBAC3B,IACEL,SAAS,KACRC,kBAAkB,KAAK,WAAW,IACjC,CAACpB,aAAa,CAACyB,QAAQ,CAACJ,iBAAiB,CAAC,CAAC,EAC7C;kBACAE,WAAW,GAAG,IAAI;gBACpB;gBACA,IACE91C,aAAa,KAAK,WAAW,IAC7B,CAACu0C,aAAa,CAACyB,QAAQ,CAACx3F,UAAU,CAACwyF,YAAY,CAAC,EAChD;kBACA+E,UAAU,GAAG,IAAI;gBACnB;gBACA,IACEJ,kBAAkB,KAAK,WAAW,IAClC31C,aAAa,KAAK,WAAW,EAC7B;kBACA,IAAMhgC,MAAM,GAAG81E,WAAW,IAAIC,UAAU;kBACxCD,WAAW,GAAG91E,MAAM;kBACpB+1E,UAAU,GAAG/1E,MAAM;gBACrB;gBACA,IAAI81E,WAAW,EAAE;kBACf,IAAIH,kBAAkB,KAAK,MAAM,EAAE;oBACjCpB,aAAa,CAAC0B,MAAM,CAACL,iBAAiB,CAAC;kBACzC;kBACA,IAAI,CAAChC,mBAAmB,CAACvqH,KAAK,CAAC,IAAI,EAAEqsH,SAAS,CAAC;gBACjD;gBACA,IAAIK,UAAU,EAAE;kBACd,IAAI/1C,aAAa,KAAK,MAAM,EAAE;oBAC5Bu0C,aAAa,CAAC0B,MAAM,CAACz3F,UAAU,CAACwyF,YAAY,CAAC;kBAC/C;kBACA,IAAI,CAAC4C,mBAAmB,CAACvqH,KAAK,CAAC,IAAI,EAAEsqC,IAAI,CAAC;gBAC5C;cACF,CAAC,MAAM;gBACL,IAAI,CAACigF,mBAAmB,CAACvqH,KAAK,CAAC,IAAI,EAAEsqC,IAAI,CAAC;cAC5C;YACF;YACA,EAAEptC,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC9C,UAAU;YAC/B,IAAM/8G,KAAK,GAAG,qBAAuBggH,WAAW,CAAC,CAAC,CAAE;YACpD,IAAM//G,GAAG,GAAG,qBAAuB+/G,WAAW,CAAC,CAAC,CAAE;YAClD,IAAM2G,QAAQ,GAAG,qBAAuB3G,WAAW,CAAC,CAAC,CAAE;YACvD,IAAMh8B,QAAQ,GAAG,qBAAuBg8B,WAAW,CAAC,CAAC,CAAE;YACvDrkC,OAAO,GAAG,qBAAuBqkC,WAAW,CAAC,CAAC,CAAE;YAChD,IAAMp8B,QAAQ,GAAG,qBAAuBo8B,WAAW,CAAC,CAAC,CAAE;YACvD,IAAMwP,iBAAiB,GAAG,qBAAuBxP,WAAW,CAAC,CAAC,CAAE;YAChE,IAAMzzE,OAAO,GAAG,qBAAuByzE,WAAW,CAAC,CAAC,CAAE;YACtDyG,SAAS,GAAG,qBAAuBzG,WAAW,CAAC,CAAC,CAAE;YAClD,IAAM/jC,WAAW,GAAG,qBAAuB+jC,WAAW,CAAC,EAAE,CAAE;YAC3DpqC,IAAI,GAAG,qBAAuBoqC,WAAW,CAAC,EAAE,CAAE;YAC9C0G,OAAO,GAAG,qBAAuB1G,WAAW,CAAC,EAAE,CAAE;YACjD,IAAMyP,eAAe,GAAG,EACtB,qBAAuBzP,WAAW,CAAC,EAAE,CAAC,IACtC,qBAAuBA,WAAW,CAAC,EAAE,CAAC,EACvC;YACD1mC,aAAa,GAAG0mC,WAAW,CAAC,EAAE,CAAC,IAAI,WAAW;YAE9C,IAAMkH,eAAe,GAAG,sBAAwBlH,WAAW,CAAC,EAAE,CAAE;YAChE,IAAMuF,SAAS,GAAG,IAAI,CAACN,UAAU,CAACyB,OAAO,CAAC;YAC1C,IAAMlwC,IAAI,GAAG+uC,SAAS,CAAC/uC,IAAI;YAC3B,IAAMswC,SAAS,GAAG,CAChBvB,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAGunG,iBAAiB,EACtCjK,SAAS,CAACt9F,KAAK,CAAC,CAAC,CAAC,GAAGunG,iBAAiB,CACvC;YAED,IAAIE,YAAY;YAChB,IAAIl5C,IAAI,IAAI,IAAI,CAAC60C,OAAO,EAAE;cACxBqE,YAAY,GAAG,IAAI,CAACrE,OAAO,CAAC70C,IAAI,CAAC;YACnC,CAAC,MAAM;cACLk5C,YAAY,GAAG,CAAC,CAAC;cACjB,IAAI,CAACrE,OAAO,CAAC70C,IAAI,CAAC,GAAGk5C,YAAY;YACnC;YAEA,IAAMC,UAAU,GAAG,IAAA7G,wBAAgB,EAACiF,gBAAgB,EAAE/tH,KAAK,EAAEC,GAAG,EAAE,CAAC,CAAC;YACpE,IAAM2vH,UAAU,GACd17G,IAAI,CAACC,GAAG,CAAC2yG,SAAS,CAAC,CAAC,CAAC,CAAC,GACtB,IAAAvvC,gCAAwB,EAACf,IAAI,EAAEZ,IAAI,EAAE85C,YAAY,CAAC;YACpD,IAAI1rC,QAAQ,IAAI4rC,UAAU,IAAID,UAAU,EAAE;cACxC,IAAMvsC,SAAS,GAAG,IAAI,CAAC6hC,UAAU,CAACyB,OAAO,CAAC,CAACtjC,SAAS;cACpD,IAAM8lC,MAAM,GACV,CAACyG,UAAU,GAAGC,UAAU,IAAIpF,mBAAmB,CAAC50C,IAAI,EAAEwN,SAAS,CAAC;cAClE,IAAMziB,KAAK,GAAG,IAAAsoD,wBAAc,EAC1B8E,gBAAgB,EAChB/tH,KAAK,EACLC,GAAG,EACH,CAAC,EACD21E,IAAI,EACJszC,MAAM,EACNtlC,QAAQ,EACR1vE,IAAI,CAACC,GAAG,CAAC2yG,SAAS,CAAC,CAAC,CAAC,CAAC,EACtBvvC,gCAAwB,EACxBf,IAAI,EACJk5C,YAAY,EACZjB,yBAAyB,GAAG,CAAC,GAAG,IAAI,CAACrD,aAAa,EAClDlE,eACF,CAAC;cACD2I,SAAS,EAAE,IAAIlvD,KAAK,EAAE;gBACpB;gBACA,IAAM0pD,sBAAsB,GAAG,EAAE;gBACjC,IAAI/4F,CAAC;kBAAEo0F,EAAE;kBAAEqE,KAAK;kBAAEprE,KAAK;kBAAEmxE,IAAI;gBAC7B,IAAIrJ,SAAS,EAAE;kBACb,KAAKn1F,CAAC,GAAG,CAAC,EAAEo0F,EAAE,GAAG/kD,KAAK,CAACxhE,MAAM,EAAEmyB,CAAC,GAAGo0F,EAAE,EAAE,EAAEp0F,CAAC,EAAE;oBAC1Cw+F,IAAI,GAAGnvD,KAAK,CAACrvC,CAAC,CAAC,CAAC,CAAC;oBACjBy4F,KAAK,GAAG,qBAAuB+F,IAAI,CAAC,CAAC,CAAE;oBACvCnxE,KAAK,GAAG,IAAI,CAAC6sE,WAAW,CAACzB,KAAK,EAAErD,OAAO,EAAE,EAAE,EAAED,SAAS,CAAC;oBACvD/qF,OAAO,GACL,qBAAuBo0F,IAAI,CAAC,CAAC,CAAC,IAC7BhJ,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC7qC,WAAW,GAAGA,WAAW,CAAC;oBACjDtgD,OAAO,GACLgrF,QAAQ,GAAGhoE,KAAK,CAACn6B,MAAM,GACtB,CAAC,GAAG,GAAGmiG,QAAQ,IAAI,CAAC,GAAG1qC,WAAW,GAAG6qC,SAAS,CAAC,CAAC,CAAC,GAChDA,SAAS,CAAC,CAAC,CAAC,GACdv6E,OAAO;oBACT,IAAMzU,WAAU,GAAG,IAAI,CAACu0F,gCAAgC,CACtD1tE,KAAK,CAACp6B,KAAK,EACXo6B,KAAK,CAACn6B,MAAM,EACZsrG,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,CAAC,CAAC,EACPnxE,KAAK,CAACp6B,KAAK,EACXo6B,KAAK,CAACn6B,MAAM,EACZkX,OAAO,EACPC,OAAO,EACP,CAAC,EACD,CAAC,EACDm0F,IAAI,CAAC,CAAC,CAAC,EACPL,eAAe,EACf,KAAK,EACLt6C,sBAAc,EACd,KAAK,EACLoN,OACF,CAAC;oBACD,IACEsrC,aAAa,IACbv0C,aAAa,KAAK,WAAW,IAC7Bu0C,aAAa,CAACyB,QAAQ,CAACx3F,WAAU,CAACwyF,YAAY,CAAC,EAC/C;sBACA,MAAMuF,SAAS;oBACjB;oBACAxF,sBAAsB,CAAChjH,IAAI,CAAC,CAC1B+vC,OAAO,EACP+1E,gBAAgB,EAChBxuE,KAAK,EACL7mB,WAAU,EACV,CAAC,EACD,IAAI,EACJ,IAAI,CACL,CAAC;kBACJ;gBACF;gBACA,IAAI6jD,OAAO,EAAE;kBACX,KAAKrqD,CAAC,GAAG,CAAC,EAAEo0F,EAAE,GAAG/kD,KAAK,CAACxhE,MAAM,EAAEmyB,CAAC,GAAGo0F,EAAE,EAAE,EAAEp0F,CAAC,EAAE;oBAC1Cw+F,IAAI,GAAGnvD,KAAK,CAACrvC,CAAC,CAAC,CAAC,CAAC;oBACjBy4F,KAAK,GAAG,qBAAuB+F,IAAI,CAAC,CAAC,CAAE;oBACvCnxE,KAAK,GAAG,IAAI,CAAC6sE,WAAW,CAACzB,KAAK,EAAErD,OAAO,EAAE/qC,OAAO,EAAE,EAAE,CAAC;oBACrDjgD,OAAO,GAAG,qBAAuBo0F,IAAI,CAAC,CAAC,CAAE;oBACzCn0F,OAAO,GAAGgrF,QAAQ,GAAGhoE,KAAK,CAACn6B,MAAM,GAAG+nB,OAAO;oBAC3C,IAAMzU,YAAU,GAAG,IAAI,CAACu0F,gCAAgC,CACtD1tE,KAAK,CAACp6B,KAAK,EACXo6B,KAAK,CAACn6B,MAAM,EACZsrG,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,CAAC,CAAC,EACPnxE,KAAK,CAACp6B,KAAK,EACXo6B,KAAK,CAACn6B,MAAM,EACZkX,OAAO,EACPC,OAAO,EACP,CAAC,EACD,CAAC,EACDm0F,IAAI,CAAC,CAAC,CAAC,EACPL,eAAe,EACf,KAAK,EACLt6C,sBAAc,EACd,KAAK,EACLoN,OACF,CAAC;oBACD,IACEsrC,aAAa,IACbv0C,aAAa,KAAK,WAAW,IAC7Bu0C,aAAa,CAACyB,QAAQ,CAACx3F,YAAU,CAACwyF,YAAY,CAAC,EAC/C;sBACA,MAAMuF,SAAS;oBACjB;oBACAxF,sBAAsB,CAAChjH,IAAI,CAAC,CAC1B+vC,OAAO,EACP+1E,gBAAgB,EAChBxuE,KAAK,EACL7mB,YAAU,EACV,CAAC,EACD,IAAI,EACJ,IAAI,CACL,CAAC;kBACJ;gBACF;gBACA,IAAI+1F,aAAa,IAAIv0C,aAAa,KAAK,MAAM,EAAE;kBAC7Cu0C,aAAa,CAAC30G,IAAI,CAACmxG,sBAAsB,CAACt8G,GAAG,CAACq8G,eAAe,CAAC,CAAC;gBACjE;gBACA,KAAK,IAAIvqH,EAAC,GAAG,CAAC,EAAEgI,GAAE,GAAGwiH,sBAAsB,CAAClrH,MAAM,EAAEU,EAAC,GAAGgI,GAAE,EAAE,EAAEhI,EAAC,EAAE;kBAC/D,IAAI,CAACqtH,mBAAmB,CAACvqH,KAAK,CAAC,IAAI,EAAE0nH,sBAAsB,CAACxqH,EAAC,CAAC,CAAC;gBACjE;cACF;YACF;YACA,EAAEA,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC5C,YAAY;YACjC,IAAI0Q,eAAe,KAAKzlH,SAAS,EAAE;cACjCq6E,OAAO,GAAG;cACRy9B,WAAW,CAAC,CAAC,CACd;cACD,IAAMh4E,MAAM,GAAG2lF,eAAe,CAC5BprC,OAAO,EACPosC,eAAe,EACfr1C,aACF,CAAC;cACD,IAAItxC,MAAM,EAAE;gBACV,OAAOA,MAAM;cACf;YACF;YACA,EAAEnoC,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC3C,IAAI;YACzB,IAAIwR,SAAS,EAAE;cACbL,WAAW,EAAE;YACf,CAAC,MAAM;cACL,IAAI,CAAC5zC,KAAK,CAACrjC,OAAO,CAAC;YACrB;YACA,EAAEv3C,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAAC1C,eAAe;YACpC12F,CAAC,GAAG,qBAAuBu5F,WAAW,CAAC,CAAC,CAAE;YAC1CtjC,EAAE,GAAG,qBAAuBsjC,WAAW,CAAC,CAAC,CAAE;YAC3CzlG,CAAC,GAAGwzG,gBAAgB,CAACtnG,CAAC,CAAC;YACvBjM,CAAC,GAAGuzG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;YAC3B2wB,OAAO,CAAC2kD,MAAM,CAACxhF,CAAC,EAAEC,CAAC,CAAC;YACpByzG,KAAK,GAAI1zG,CAAC,GAAG,GAAG,GAAI,CAAC;YACrB2zG,KAAK,GAAI1zG,CAAC,GAAG,GAAG,GAAI,CAAC;YACrB,KAAKiM,CAAC,IAAI,CAAC,EAAEA,CAAC,GAAGi2D,EAAE,EAAEj2D,CAAC,IAAI,CAAC,EAAE;cAC3BlM,CAAC,GAAGwzG,gBAAgB,CAACtnG,CAAC,CAAC;cACvBjM,CAAC,GAAGuzG,gBAAgB,CAACtnG,CAAC,GAAG,CAAC,CAAC;cAC3B0nG,MAAM,GAAI5zG,CAAC,GAAG,GAAG,GAAI,CAAC;cACtB6zG,MAAM,GAAI5zG,CAAC,GAAG,GAAG,GAAI,CAAC;cACtB,IAAIiM,CAAC,IAAIi2D,EAAE,GAAG,CAAC,IAAIyxC,MAAM,KAAKF,KAAK,IAAIG,MAAM,KAAKF,KAAK,EAAE;gBACvD92E,OAAO,CAACmnC,MAAM,CAAChkE,CAAC,EAAEC,CAAC,CAAC;gBACpByzG,KAAK,GAAGE,MAAM;gBACdD,KAAK,GAAGE,MAAM;cAChB;YACF;YACA,EAAEvuH,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAACzC,cAAc;YACnC,IAAI,CAAC4N,kBAAkB,GAAGhL,WAAW,CAAC,CAAC,CAAC;YAExC,IAAIqO,WAAW,EAAE;cACf,IAAI,CAAC5zC,KAAK,CAACrjC,OAAO,CAAC;cACnBi3E,WAAW,GAAG,CAAC;cACf,IAAIC,aAAa,EAAE;gBACjBl3E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;gBAChBszC,aAAa,GAAG,CAAC;cACnB;YACF;;YAEA;YACAl3E,OAAO,CAAC08B,SAAS,GAAGksC,WAAW,CAAC,CAAC,CAAC;YAClC,EAAEngH,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAACxC,gBAAgB;YACrC,IAAIiR,aAAa,EAAE;cACjBl3E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;cAChBszC,aAAa,GAAG,CAAC;YACnB;YACA,IAAI,CAAClC,eAAe,CAACh1E,OAAO,EAAE,uBAAyB4oE,WAAY,CAAC;YACpE,EAAEngH,CAAC;YACH;UACF,KAAKggH,oBAAiB,CAACvC,MAAM;YAC3B,IAAIoR,SAAS,EAAE;cACbJ,aAAa,EAAE;YACjB,CAAC,MAAM;cACLl3E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;YAClB;YACA,EAAEn7E,CAAC;YACH;UACF;YAAS;YACP,EAAEA,CAAC;YACH;QACJ;MACF;MACA,IAAIwuH,WAAW,EAAE;QACf,IAAI,CAAC5zC,KAAK,CAACrjC,OAAO,CAAC;MACrB;MACA,IAAIk3E,aAAa,EAAE;QACjBl3E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;MACA,OAAO9yE,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA5J,GAAA;IAAAC,KAAA,EAQA,SAAAwxH,OAAOA,CACL34E,OAAO,EACP+1E,gBAAgB,EAChBxjG,SAAS,EACT6kG,YAAY,EACZhC,WAAW,EACXqB,aAAa,EACb;MACA,IAAI,CAACzC,aAAa,GAAGoD,YAAY;MACjC,IAAI,CAACd,QAAQ,CACXt2E,OAAO,EACP+1E,gBAAgB,EAChBxjG,SAAS,EACT,IAAI,CAACw0F,YAAY,EACjBqO,WAAW,EACXtkH,SAAS,EACTA,SAAS,EACT2lH,aACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAvvH,GAAA;IAAAC,KAAA,EAUA,SAAAyxH,mBAAmBA,CACjB54E,OAAO,EACPztB,SAAS,EACT6kG,YAAY,EACZb,eAAe,EACfC,SAAS,EACT;MACA,IAAI,CAACxC,aAAa,GAAGoD,YAAY;MACjC,OAAO,IAAI,CAACd,QAAQ,CAClBt2E,OAAO,EACP,CAACA,OAAO,CAACR,MAAM,CAACryB,KAAK,EAAE6yB,OAAO,CAACR,MAAM,CAACpyB,MAAM,CAAC,EAC7CmF,SAAS,EACT,IAAI,CAAC00F,wBAAwB,EAC7B,IAAI,EACJsP,eAAe,EACfC,SACF,CAAC;IACH;EAAC;AAAA;AAAA,IAAAjxH,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYguH,QAAQ;;;;;;;;;AC7wCvB,IAAAlpH,MAAA,GAAAC,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAAm6B,WAAA,GAAAn6B,OAAA;AAIA,IAAAquH,SAAA,GAAAlsH,sBAAA,CAAAnC,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAA2gE,mBAAAlgE,CAAA,WAAAmgE,kBAAA,CAAAngE,CAAA,KAAAogE,gBAAA,CAAApgE,CAAA,KAAA2Z,2BAAA,CAAA3Z,CAAA,KAAAqgE,kBAAA;AAAA,SAAAA,mBAAA,cAAAvgE,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAA2lE,iBAAApgE,CAAA,8BAAAL,MAAA,YAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,aAAAI,CAAA,uBAAAtE,KAAA,CAAAse,IAAA,CAAAha,CAAA;AAAA,SAAAmgE,mBAAAngE,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAA6Z,iBAAA,CAAA7Z,CAAA;AAAA,SAAA6Z,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAAyE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KAbrC;AACA;AACA;AAaA;AACA;AACA;AACA;AACO,IAAMqrH,GAAG,GAAAtzH,OAAA,CAAAszH,GAAA,GAAG,CACjB,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,MAAM,EACN,SAAS,CACV;;AAED;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAAvzH,OAAA,CAAAuzH,SAAA,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;;AAE1C;AACA;AACA;AACA;AACO,IAAMC,aAAa,GAAAxzH,OAAA,CAAAwzH,aAAA,GAAGF,GAAG,CAAC7gF,MAAM,CACrC,UAACo5E,WAAW;EAAA,OAAK,CAAC0H,SAAS,CAAC/oH,QAAQ,CAACqhH,WAAW,CAAC;AAAA,CACnD,CAAC;AAAC,IAEI4H,aAAa;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,cACE7oF,SAAS,EACTzqB,UAAU,EACVmyD,UAAU,EACV47C,QAAQ,EACRwF,eAAe,EACfzjC,YAAY,EACZk+B,iBAAiB,EACjB;IAAA5sH,eAAA,OAAAkyH,aAAA;IACA;AACJ;AACA;AACA;IACI,IAAI,CAACrI,UAAU,GAAGxgF,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAAC+oF,SAAS,GAAGzF,QAAQ;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAAC17C,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAAC+4C,WAAW,GAAGlrG,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACmwE,aAAa,GAAGL,YAAY;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAAC2jC,kBAAkB,GAAG,CAAC,CAAC;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,oBAAoB,GAAG,IAAI;;IAEhC;AACJ;AACA;AACA;IACI,IAAI,CAACC,sBAAsB,GAAG,IAAAz0F,kBAAe,EAAC,CAAC;;IAE/C;AACJ;AACA;AACA;IACI,IAAI,CAAC00F,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,uBAAuB,GAAG,CAAC,CAAC;IAEjC,IAAI,CAACC,gBAAgB,CAACP,eAAe,EAAEvF,iBAAiB,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;EAHE,OAAA1sH,YAAA,CAAAgyH,aAAA;IAAA/xH,GAAA;IAAAC,KAAA,EAIA,SAAAy9F,IAAIA,CAAC5kD,OAAO,EAAEztB,SAAS,EAAE;MACvB,IAAMmnG,cAAc,GAAG,IAAI,CAACC,aAAa,CAACpnG,SAAS,CAAC;MACpDytB,OAAO,CAAC0kD,SAAS,CAAC,CAAC;MACnB1kD,OAAO,CAAC2kD,MAAM,CAAC+0B,cAAc,CAAC,CAAC,CAAC,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC;MACpD15E,OAAO,CAACmnC,MAAM,CAACuyC,cAAc,CAAC,CAAC,CAAC,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC;MACpD15E,OAAO,CAACmnC,MAAM,CAACuyC,cAAc,CAAC,CAAC,CAAC,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC;MACpD15E,OAAO,CAACmnC,MAAM,CAACuyC,cAAc,CAAC,CAAC,CAAC,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC;MACpD15E,OAAO,CAAC4kD,IAAI,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA19F,GAAA;IAAAC,KAAA,EAMA,SAAAsyH,gBAAgBA,CAACP,eAAe,EAAEvF,iBAAiB,EAAE;MACnD,KAAK,IAAMr5D,MAAM,IAAI4+D,eAAe,EAAE;QACpC,IAAIU,SAAS,GAAG,IAAI,CAACR,kBAAkB,CAAC9+D,MAAM,CAAC;QAC/C,IAAIs/D,SAAS,KAAK9oH,SAAS,EAAE;UAC3B8oH,SAAS,GAAG,CAAC,CAAC;UACd,IAAI,CAACR,kBAAkB,CAAC9+D,MAAM,CAAC,GAAGs/D,SAAS;QAC7C;QACA,IAAMC,mBAAmB,GAAGX,eAAe,CAAC5+D,MAAM,CAAC;QACnD,KAAK,IAAM+2D,WAAW,IAAIwI,mBAAmB,EAAE;UAC7C,IAAM9S,YAAY,GAAG8S,mBAAmB,CAACxI,WAAW,CAAC;UACrDuI,SAAS,CAACvI,WAAW,CAAC,GAAG,IAAIoC,iBAAQ,CACnC,IAAI,CAAC5C,WAAW,EAChB,IAAI,CAAC74C,WAAW,EAChB,IAAI,CAACmhD,SAAS,EACdpS,YAAY,EACZ4M,iBACF,CAAC;QACH;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAzsH,GAAA;IAAAC,KAAA,EAIA,SAAA2yH,YAAYA,CAACF,SAAS,EAAE;MACtB,KAAK,IAAMt/D,MAAM,IAAI,IAAI,CAAC8+D,kBAAkB,EAAE;QAC5C,IAAMW,UAAU,GAAG,IAAI,CAACX,kBAAkB,CAAC9+D,MAAM,CAAC;QAClD,KAAK,IAAI7xD,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGmpH,SAAS,CAAC7xH,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAClD,IAAImxH,SAAS,CAACnxH,CAAC,CAAC,IAAIsxH,UAAU,EAAE;YAC9B,OAAO,IAAI;UACb;QACF;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA7yH,GAAA;IAAAC,KAAA,EAUA,SAAAswF,0BAA0BA,CACxB5/E,UAAU,EACV8N,UAAU,EACVoF,QAAQ,EACR2sE,YAAY,EACZ1tE,QAAQ,EACRgwG,mBAAmB,EACnB;MACAtiC,YAAY,GAAG56E,IAAI,CAACmI,KAAK,CAACyyE,YAAY,CAAC;MACvC,IAAMuiC,WAAW,GAAGviC,YAAY,GAAG,CAAC,GAAG,CAAC;MACxC,IAAMnlE,SAAS,GAAG,IAAAiU,mBAAgB,EAChC,IAAI,CAAC8yF,sBAAsB,EAC3B5hC,YAAY,GAAG,GAAG,EAClBA,YAAY,GAAG,GAAG,EAClB,CAAC,GAAG/xE,UAAU,EACd,CAAC,CAAC,GAAGA,UAAU,EACf,CAACoF,QAAQ,EACT,CAAClT,UAAU,CAAC,CAAC,CAAC,EACd,CAACA,UAAU,CAAC,CAAC,CACf,CAAC;MAED,IAAMqiH,UAAU,GAAG,CAAC,IAAI,CAACb,oBAAoB;MAC7C,IAAIa,UAAU,EAAE;QACd,IAAI,CAACb,oBAAoB,GAAG,IAAAh6E,0BAAqB,EAC/C46E,WAAW,EACXA,WAAW,EACXnpH,SAAS,EACT;UAAC+qE,kBAAkB,EAAE;QAAI,CAC3B,CAAC;MACH;MACA,IAAM77B,OAAO,GAAG,IAAI,CAACq5E,oBAAoB;MAEzC,IACEr5E,OAAO,CAACR,MAAM,CAACryB,KAAK,KAAK8sG,WAAW,IACpCj6E,OAAO,CAACR,MAAM,CAACpyB,MAAM,KAAK6sG,WAAW,EACrC;QACAj6E,OAAO,CAACR,MAAM,CAACryB,KAAK,GAAG8sG,WAAW;QAClCj6E,OAAO,CAACR,MAAM,CAACpyB,MAAM,GAAG6sG,WAAW;MACrC,CAAC,MAAM,IAAI,CAACC,UAAU,EAAE;QACtBl6E,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEg6E,WAAW,EAAEA,WAAW,CAAC;MACnD;;MAEA;MACA,IAAIzD,SAAS;MACb,IAAI,IAAI,CAAC1gC,aAAa,KAAKhlF,SAAS,EAAE;QACpC0lH,SAAS,GAAG,IAAA1uG,mBAAW,EAAC,CAAC;QACzB,IAAAC,wBAAgB,EAACyuG,SAAS,EAAE3+G,UAAU,CAAC;QACvC,IAAAwQ,cAAM,EACJmuG,SAAS,EACT7wG,UAAU,IAAI,IAAI,CAACmwE,aAAa,GAAG4B,YAAY,CAAC,EAChD8+B,SACF,CAAC;MACH;MAEA,IAAM2D,OAAO,GAAGC,kBAAkB,CAAC1iC,YAAY,CAAC;;MAEhD;MACA,IAAI25B,WAAW;;MAEf;AACJ;AACA;AACA;AACA;AACA;MACI,SAASkF,eAAeA,CAACprC,OAAO,EAAE94D,QAAQ,EAAE6vD,aAAa,EAAE;QACzD,IAAMshB,SAAS,GAAGxjD,OAAO,CAAC+7B,YAAY,CACpC,CAAC,EACD,CAAC,EACDk+C,WAAW,EACXA,WACF,CAAC,CAACjxH,IAAI;QACN,KAAK,IAAIP,EAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG0pH,OAAO,CAACpyH,MAAM,EAAEU,EAAC,GAAGgI,EAAE,EAAEhI,EAAC,EAAE,EAAE;UAChD,IAAI+6F,SAAS,CAAC22B,OAAO,CAAC1xH,EAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC7B,IACE,CAACuxH,mBAAmB,IACpB93C,aAAa,KAAK,MAAM,IACvBmvC,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,MAAO,IACnD2I,mBAAmB,CAAChqH,QAAQ,CAACm7E,OAAO,CAAC,EACrC;cACA,IAAMkvC,GAAG,GAAG,CAACF,OAAO,CAAC1xH,EAAC,CAAC,GAAG,CAAC,IAAI,CAAC;cAChC,IAAM0a,CAAC,GAAGu0E,YAAY,GAAI2iC,GAAG,GAAGJ,WAAY;cAC5C,IAAM72G,CAAC,GAAGs0E,YAAY,IAAK2iC,GAAG,GAAGJ,WAAW,GAAI,CAAC,CAAC;cAClD,IAAMrpF,OAAM,GAAG5mB,QAAQ,CAACmhE,OAAO,EAAE94D,QAAQ,EAAElP,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;cACzD,IAAIwtB,OAAM,EAAE;gBACV,OAAOA,OAAM;cACf;YACF;YACAoP,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEg6E,WAAW,EAAEA,WAAW,CAAC;YACjD;UACF;QACF;QACA,OAAOnpH,SAAS;MAClB;;MAEA;MACA,IAAMgmG,EAAE,GAAGjpG,MAAM,CAACmD,IAAI,CAAC,IAAI,CAACooH,kBAAkB,CAAC,CAACziH,GAAG,CAACxI,MAAM,CAAC;MAC3D2oG,EAAE,CAAC/sG,IAAI,CAACnC,gBAAS,CAAC;MAElB,IAAIa,CAAC,EAAEwb,CAAC,EAAE21G,SAAS,EAAEU,QAAQ,EAAE1pF,MAAM;MACrC,KAAKnoC,CAAC,GAAGquG,EAAE,CAAC/uG,MAAM,GAAG,CAAC,EAAEU,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACnC,IAAM6oH,SAAS,GAAGxa,EAAE,CAACruG,CAAC,CAAC,CAAC6e,QAAQ,CAAC,CAAC;QAClCsyG,SAAS,GAAG,IAAI,CAACR,kBAAkB,CAAC9H,SAAS,CAAC;QAC9C,KAAKrtG,CAAC,GAAG60G,GAAG,CAAC/wH,MAAM,GAAG,CAAC,EAAEkc,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UACpCotG,WAAW,GAAGyH,GAAG,CAAC70G,CAAC,CAAC;UACpBq2G,QAAQ,GAAGV,SAAS,CAACvI,WAAW,CAAC;UACjC,IAAIiJ,QAAQ,KAAKxpH,SAAS,EAAE;YAC1B8/B,MAAM,GAAG0pF,QAAQ,CAAC1B,mBAAmB,CACnC54E,OAAO,EACPztB,SAAS,EACTxH,QAAQ,EACRwrG,eAAe,EACfC,SACF,CAAC;YACD,IAAI5lF,MAAM,EAAE;cACV,OAAOA,MAAM;YACf;UACF;QACF;MACF;MACA,OAAO9/B,SAAS;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAA5J,GAAA;IAAAC,KAAA,EAIA,SAAAwyH,aAAaA,CAACpnG,SAAS,EAAE;MACvB,IAAM6d,SAAS,GAAG,IAAI,CAACwgF,UAAU;MACjC,IAAI,CAACxgF,SAAS,EAAE;QACd,OAAO,IAAI;MACb;MACA,IAAMjqB,IAAI,GAAGiqB,SAAS,CAAC,CAAC,CAAC;MACzB,IAAM/pB,IAAI,GAAG+pB,SAAS,CAAC,CAAC,CAAC;MACzB,IAAMhqB,IAAI,GAAGgqB,SAAS,CAAC,CAAC,CAAC;MACzB,IAAM9pB,IAAI,GAAG8pB,SAAS,CAAC,CAAC,CAAC;MACzB,IAAMspF,cAAc,GAAG,CAACvzG,IAAI,EAAEE,IAAI,EAAEF,IAAI,EAAEG,IAAI,EAAEF,IAAI,EAAEE,IAAI,EAAEF,IAAI,EAAEC,IAAI,CAAC;MACvE,IAAA8d,sBAAW,EAACu1F,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEnnG,SAAS,EAAEmnG,cAAc,CAAC;MAC/D,OAAOA,cAAc;IACvB;;IAEA;AACF;AACA;EAFE;IAAAxyH,GAAA;IAAAC,KAAA,EAGA,SAAA+E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAAA,YAAO,EAAC,IAAI,CAACktH,kBAAkB,CAAC;IACzC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAlyH,GAAA;IAAAC,KAAA,EAWA,SAAAwxH,OAAOA,CACL4B,aAAa,EACbxE,gBAAgB,EAChBxjG,SAAS,EACT6kG,YAAY,EACZhC,WAAW,EACXoF,YAAY,EACZ/D,aAAa,EACb;MAAA,IAAAlnH,KAAA;MACA,IAAMunG,EAAE,GAAGjpG,MAAM,CAACmD,IAAI,CAAC,IAAI,CAACooH,kBAAkB,CAAC,CAACziH,GAAG,CAACxI,MAAM,CAAC;MAC3D2oG,EAAE,CAAC/sG,IAAI,CAAC0sH,aAAa,GAAGtuH,iBAAU,GAAGP,gBAAS,CAAC;MAE/C4yH,YAAY,GAAGA,YAAY,GAAGA,YAAY,GAAG1B,GAAG;MAChD,IAAM2B,eAAe,GAAG3B,GAAG,CAAC/wH,MAAM;MAClC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGqmG,EAAE,CAAC/uG,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC3C,IAAM6oH,SAAS,GAAGxa,EAAE,CAACruG,CAAC,CAAC,CAAC6e,QAAQ,CAAC,CAAC;QAClC,IAAMiqG,OAAO,GAAG,IAAI,CAAC6H,kBAAkB,CAAC9H,SAAS,CAAC;QAAC,IAAAoJ,KAAA,YAAAA,MAAA,EACI;UACrD,IAAMrJ,WAAW,GAAGmJ,YAAY,CAACv2G,CAAC,CAAC;UACnC,IAAMutG,MAAM,GAAGD,OAAO,CAACF,WAAW,CAAC;UACnC,IAAIG,MAAM,KAAK1gH,SAAS,EAAE;YACxB,IAAM4lH,aAAa,GACjBD,aAAa,KAAK,IAAI,GAAG3lH,SAAS,GAAG0gH,MAAM,CAAC2C,gBAAgB,CAAC,CAAC;YAChE,IAAMn0E,OAAO,GAAG02E,aAAa,GACzBA,aAAa,CAAC92E,UAAU,CAAC,CAAC,GAC1B26E,aAAa;YACjB,IAAMI,WAAW,GACfprH,KAAI,CAACqhH,UAAU,IACfS,WAAW,KAAK,OAAO,IACvBA,WAAW,KAAK,MAAM;YACxB,IAAIsJ,WAAW,EAAE;cACf36E,OAAO,CAACohC,IAAI,CAAC,CAAC;cACd;cACA;cACA7xE,KAAI,CAACq1F,IAAI,CAAC5kD,OAAO,EAAEztB,SAAS,CAAC;YAC/B;YACA,IACE,CAACmkG,aAAa,IACdrF,WAAW,KAAK,MAAM,IACtBA,WAAW,KAAK,OAAO,EACvB;cACAG,MAAM,CAACmH,OAAO,CACZ34E,OAAO,EACP+1E,gBAAgB,EAChBxjG,SAAS,EACT6kG,YAAY,EACZhC,WAAW,EACXqB,aACF,CAAC;YACH,CAAC,MAAM;cACLC,aAAa,CAACrnB,YAAY,CAAC,UAACrvD,OAAO;gBAAA,OACjCwxE,MAAM,CAACmH,OAAO,CACZ34E,OAAO,EACP+1E,gBAAgB,EAChBxjG,SAAS,EACT6kG,YAAY,EACZhC,WAAW,EACXqB,aACF,CAAC;cAAA,CACH,CAAC;YACH;YACA,IAAIkE,WAAW,EAAE;cACf36E,OAAO,CAACwhC,OAAO,CAAC,CAAC;YACnB;YACA,IAAIk1C,aAAa,EAAE;cACjBA,aAAa,CAACptG,MAAM,CAAC,CAAC;cACtB,IAAMxf,KAAK,GAAGgtG,EAAE,CAACruG,CAAC,CAAC,GAAGgyH,eAAe,GAAGx2G,CAAC;cACzC,IAAI,CAAC1U,KAAI,CAACiqH,uBAAuB,CAAC1vH,KAAK,CAAC,EAAE;gBACxCyF,KAAI,CAACiqH,uBAAuB,CAAC1vH,KAAK,CAAC,GAAG,EAAE;cAC1C;cACAyF,KAAI,CAACiqH,uBAAuB,CAAC1vH,KAAK,CAAC,CAACmG,IAAI,CAACymH,aAAa,CAAC;YACzD;UACF;QACF,CAAC;QAxDD,KAAK,IAAIzyG,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG+nG,YAAY,CAACzyH,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC;UAAAy2G,KAAA;QAAA;MAyDvD;MAEA,IAAI,CAACnB,gBAAgB,GAAGgB,aAAa;IACvC;EAAC;IAAArzH,GAAA;IAAAC,KAAA,EAED,SAAAyzH,yBAAyBA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAACpB,uBAAuB;IACrC;EAAC;IAAAtyH,GAAA;IAAAC,KAAA,EAED,SAAA0zH,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACtB,gBAAgB;IAC9B;EAAC;IAAAryH,GAAA;IAAAC,KAAA,EAED,SAAAq4D,cAAcA,CAAA,EAAG;MAAA,IAAA/rD,MAAA;MACf,IAAMqnH,sBAAsB,GAAG,IAAI,CAACtB,uBAAuB;MAC3D,IAAM1iB,EAAE,GAAGjpG,MAAM,CAACmD,IAAI,CAAC8pH,sBAAsB,CAAC,CAACnkH,GAAG,CAACxI,MAAM,CAAC,CAACpE,IAAI,CAACnC,gBAAS,CAAC;MAC1E,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGqmG,EAAE,CAAC/uG,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC3CqyH,sBAAsB,CAAChkB,EAAE,CAACruG,CAAC,CAAC,CAAC,CAACsN,OAAO,CAAC,UAAC2gH,aAAa,EAAK;UACvDA,aAAa,CAACpnB,IAAI,CAAC77F,MAAI,CAAC8lH,gBAAgB,CAAC,CAAC,CAAC;UAC3C7C,aAAa,CAAC3qH,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC;QACF+uH,sBAAsB,CAAChkB,EAAE,CAACruG,CAAC,CAAC,CAAC,CAACV,MAAM,GAAG,CAAC;MAC1C;IACF;EAAC;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,IAAMgzH,0BAA0B,GAAG,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASX,kBAAkBA,CAACtoG,MAAM,EAAE;EACzC,IAAIipG,0BAA0B,CAACjpG,MAAM,CAAC,KAAKhhB,SAAS,EAAE;IACpD,OAAOiqH,0BAA0B,CAACjpG,MAAM,CAAC;EAC3C;EAEA,IAAMlM,IAAI,GAAGkM,MAAM,GAAG,CAAC,GAAG,CAAC;EAC3B,IAAMkpG,aAAa,GAAGlpG,MAAM,GAAGA,MAAM;EACrC,IAAMmpG,SAAS,GAAG,IAAI/xH,KAAK,CAAC8xH,aAAa,GAAG,CAAC,CAAC;EAC9C,KAAK,IAAIvyH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqpB,MAAM,EAAE,EAAErpB,CAAC,EAAE;IAChC,KAAK,IAAIwb,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6N,MAAM,EAAE,EAAE7N,CAAC,EAAE;MAChC,IAAMq0E,UAAU,GAAG7vF,CAAC,GAAGA,CAAC,GAAGwb,CAAC,GAAGA,CAAC;MAChC,IAAIq0E,UAAU,GAAG0iC,aAAa,EAAE;QAC9B;MACF;MACA,IAAIhqG,QAAQ,GAAGiqG,SAAS,CAAC3iC,UAAU,CAAC;MACpC,IAAI,CAACtnE,QAAQ,EAAE;QACbA,QAAQ,GAAG,EAAE;QACbiqG,SAAS,CAAC3iC,UAAU,CAAC,GAAGtnE,QAAQ;MAClC;MACAA,QAAQ,CAAC/gB,IAAI,CAAC,CAAC,CAAC6hB,MAAM,GAAGrpB,CAAC,IAAImd,IAAI,IAAIkM,MAAM,GAAG7N,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC3D,IAAIxb,CAAC,GAAG,CAAC,EAAE;QACTuoB,QAAQ,CAAC/gB,IAAI,CAAC,CAAC,CAAC6hB,MAAM,GAAGrpB,CAAC,IAAImd,IAAI,IAAIkM,MAAM,GAAG7N,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC7D;MACA,IAAIA,CAAC,GAAG,CAAC,EAAE;QACT+M,QAAQ,CAAC/gB,IAAI,CAAC,CAAC,CAAC6hB,MAAM,GAAGrpB,CAAC,IAAImd,IAAI,IAAIkM,MAAM,GAAG7N,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAIxb,CAAC,GAAG,CAAC,EAAE;UACTuoB,QAAQ,CAAC/gB,IAAI,CAAC,CAAC,CAAC6hB,MAAM,GAAGrpB,CAAC,IAAImd,IAAI,IAAIkM,MAAM,GAAG7N,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7D;MACF;IACF;EACF;EAEA,IAAMi3G,UAAU,GAAG,EAAE;EACrB,KAAK,IAAIzyH,GAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGwqH,SAAS,CAAClzH,MAAM,EAAEU,GAAC,GAAGgI,EAAE,EAAE,EAAEhI,GAAC,EAAE;IAClD,IAAIwyH,SAAS,CAACxyH,GAAC,CAAC,EAAE;MAChByyH,UAAU,CAACjrH,IAAI,CAAA1E,KAAA,CAAf2vH,UAAU,EAAAxtD,kBAAA,CAASutD,SAAS,CAACxyH,GAAC,CAAC,EAAC;IAClC;EACF;EAEAsyH,0BAA0B,CAACjpG,MAAM,CAAC,GAAGopG,UAAU;EAC/C,OAAOA,UAAU;AACnB;AAAC,IAAA31H,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcwzH,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5f5B,IAAAjvC,OAAA,GAAAr9E,sBAAA,CAAAnC,OAAA;AACA,IAAAy/E,KAAA,GAAAt9E,sBAAA,CAAAnC,OAAA;AACA,IAAAwkF,KAAA,GAAAriF,sBAAA,CAAAnC,OAAA;AACA,IAAAsyE,UAAA,GAAAnwE,sBAAA,CAAAnC,OAAA;AACA,IAAAqwE,MAAA,GAAAluE,sBAAA,CAAAnC,OAAA;AACA,IAAA+8E,aAAA,GAAA56E,sBAAA,CAAAnC,OAAA;AACA,IAAA0/E,OAAA,GAAAv9E,sBAAA,CAAAnC,OAAA;AACA,IAAAykF,MAAA,GAAAtiF,sBAAA,CAAAnC,OAAA;AACA,IAAA0kF,KAAA,GAAAviF,sBAAA,CAAAnC,OAAA;AAAgD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;;;;;;;;ACLhD,IAAAxC,MAAA,GAAAC,OAAA;AACA,IAAAw4E,UAAA,GAAAx4E,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA4gC,eAAA,GAAA5gC,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAm6B,WAAA,GAAAn6B,OAAA;AAIA,IAAA+7G,eAAA,GAAA55G,sBAAA,CAAAnC,OAAA;AACA,IAAAy4E,OAAA,GAAAz4E,OAAA;AAYsB,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA9BtB;AACA;AACA,GAFA,CAGA;AACA;AACA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMouH,uBAAuB,0BAAAzU,cAAA;EAC3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAyU,wBACEn7E,OAAO,EACP83B,UAAU,EACVtyD,MAAM,EACN+M,SAAS,EACT6kG,YAAY,EACZ9xF,gBAAgB,EAChB81F,aAAa,EACb;IAAA,IAAA7rH,KAAA;IAAAxI,eAAA,OAAAo0H,uBAAA;IACA5rH,KAAA,GAAAnB,UAAA,OAAA+sH,uBAAA;;IAEA;AACJ;AACA;AACA;IACI5rH,KAAA,CAAK2/F,QAAQ,GAAGlvD,OAAO;;IAEvB;AACJ;AACA;AACA;IACIzwC,KAAA,CAAKyoE,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACIvoE,KAAA,CAAKglB,OAAO,GAAG/O,MAAM;;IAErB;AACJ;AACA;AACA;IACIjW,KAAA,CAAK8rH,UAAU,GAAG9oG,SAAS;;IAE3B;AACJ;AACA;AACA;IACIhjB,KAAA,CAAK+rH,kBAAkB,GAAG/oG,SAAS,GAC/B,IAAA1N,aAAO,EAAC/H,IAAI,CAACqV,KAAK,CAACI,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GACnD,CAAC;;IAEL;AACJ;AACA;AACA;IACIhjB,KAAA,CAAKykH,aAAa,GAAGoD,YAAY;;IAEjC;AACJ;AACA;AACA;IACI7nH,KAAA,CAAKgsH,iBAAiB,GAAGj2F,gBAAgB;;IAEzC;AACJ;AACA;AACA;IACI/1B,KAAA,CAAKisH,cAAc,GAAGJ,aAAa;;IAEnC;AACJ;AACA;AACA;IACI7rH,KAAA,CAAKksH,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACIlsH,KAAA,CAAKmsH,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACInsH,KAAA,CAAKosH,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACIpsH,KAAA,CAAKqsH,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACIrsH,KAAA,CAAKssH,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACItsH,KAAA,CAAK2oE,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI3oE,KAAA,CAAKusH,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACIvsH,KAAA,CAAKwsH,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACIxsH,KAAA,CAAKysH,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACIzsH,KAAA,CAAK0sH,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI1sH,KAAA,CAAK2sH,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI3sH,KAAA,CAAK4sH,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI5sH,KAAA,CAAK6sH,oBAAoB,GAAG,KAAK;;IAEjC;AACJ;AACA;AACA;IACI7sH,KAAA,CAAK8sH,cAAc,GAAG,CAAC;;IAEvB;AACJ;AACA;AACA;IACI9sH,KAAA,CAAK+sH,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEzB;AACJ;AACA;AACA;IACI/sH,KAAA,CAAKgtH,WAAW,GAAG,CAAC;;IAEpB;AACJ;AACA;AACA;IACIhtH,KAAA,CAAKm7E,KAAK,GAAG,EAAE;;IAEf;AACJ;AACA;AACA;IACIn7E,KAAA,CAAK49G,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI59G,KAAA,CAAK69G,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI79G,KAAA,CAAK89G,mBAAmB,GAAG,KAAK;;IAEhC;AACJ;AACA;AACA;IACI99G,KAAA,CAAKg+G,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACIh+G,KAAA,CAAKitH,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAExB;AACJ;AACA;AACA;IACIjtH,KAAA,CAAKi+G,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACIj+G,KAAA,CAAKm+G,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACIn+G,KAAA,CAAKq+G,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACIr+G,KAAA,CAAKwkH,iBAAiB,GAAG,EAAE;;IAE3B;AACJ;AACA;AACA;IACIxkH,KAAA,CAAKktH,kBAAkB,GAAG,IAAA53F,kBAAe,EAAC,CAAC;IAAC,OAAAt1B,KAAA;EAC9C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEL,SAAA,CAAAisH,uBAAA,EAAAzU,cAAA;EAAA,OAAAz/G,YAAA,CAAAk0H,uBAAA;IAAAj0H,GAAA;IAAAC,KAAA,EAOA,SAAAu1H,WAAWA,CAACrzG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;MAChD,IAAI,CAAC,IAAI,CAAC2uD,MAAM,EAAE;QAChB;MACF;MACA,IAAMy+C,gBAAgB,GAAG,IAAAxyF,sBAAW,EAClC9a,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,IAAI,CAAC8xG,UAAU,EACf,IAAI,CAACtH,iBACP,CAAC;MACD,IAAM/zE,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAMytB,cAAc,GAAG,IAAI,CAACF,kBAAkB;MAC9C,IAAMjzD,KAAK,GAAGxpB,OAAO,CAACqhC,WAAW;MACjC,IAAI,IAAI,CAAC46C,aAAa,IAAI,CAAC,EAAE;QAC3Bj8E,OAAO,CAACqhC,WAAW,GAAG7X,KAAK,GAAG,IAAI,CAACyyD,aAAa;MAClD;MACA,IAAIlxG,QAAQ,GAAG,IAAI,CAACsxG,cAAc;MAClC,IAAI,IAAI,CAACf,kBAAkB,KAAK,CAAC,EAAE;QACjCvwG,QAAQ,IAAI,IAAI,CAACipG,aAAa;MAChC;MACA,IAAI,IAAI,CAACoI,oBAAoB,EAAE;QAC7BrxG,QAAQ,IAAI,IAAI,CAACipG,aAAa;MAChC;MACA,KAAK,IAAIvrH,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkmH,gBAAgB,CAAC5uH,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI,CAAC,EAAE;QAC5D,IAAM0a,CAAC,GAAGwzG,gBAAgB,CAACluH,CAAC,CAAC,GAAG,IAAI,CAACqzH,aAAa;QAClD,IAAM14G,CAAC,GAAGuzG,gBAAgB,CAACluH,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACszH,aAAa;QACtD,IACEhxG,QAAQ,KAAK,CAAC,IACd,IAAI,CAACuxG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IACxB,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EACxB;UACA,IAAM7gF,OAAO,GAAGt4B,CAAC,GAAG,IAAI,CAAC24G,aAAa;UACtC,IAAMpgF,OAAO,GAAGt4B,CAAC,GAAG,IAAI,CAAC24G,aAAa;UACtC,IAAAv1F,mBAAgB,EACdm2F,cAAc,EACdlhF,OAAO,EACPC,OAAO,EACP,CAAC,EACD,CAAC,EACD3wB,QAAQ,EACR,CAAC0wB,OAAO,EACR,CAACC,OACH,CAAC;UACDsE,OAAO,CAACohC,IAAI,CAAC,CAAC;UACdphC,OAAO,CAACztB,SAAS,CAAChnB,KAAK,CAACy0C,OAAO,EAAE28E,cAAc,CAAC;UAChD38E,OAAO,CAAC5c,SAAS,CAACqY,OAAO,EAAEC,OAAO,CAAC;UACnCsE,OAAO,CAACnvB,KAAK,CAAC,IAAI,CAACyrG,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;UACvDt8E,OAAO,CAAC87B,SAAS,CACf,IAAI,CAAC5D,MAAM,EACX,IAAI,CAACgkD,aAAa,EAClB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACI,WAAW,EAChB,IAAI,CAACP,YAAY,EACjB,CAAC,IAAI,CAACF,aAAa,EACnB,CAAC,IAAI,CAACC,aAAa,EACnB,IAAI,CAACQ,WAAW,EAChB,IAAI,CAACP,YACP,CAAC;UACDh8E,OAAO,CAACwhC,OAAO,CAAC,CAAC;QACnB,CAAC,MAAM;UACLxhC,OAAO,CAAC87B,SAAS,CACf,IAAI,CAAC5D,MAAM,EACX,IAAI,CAACgkD,aAAa,EAClB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACI,WAAW,EAChB,IAAI,CAACP,YAAY,EACjB74G,CAAC,EACDC,CAAC,EACD,IAAI,CAACm5G,WAAW,EAChB,IAAI,CAACP,YACP,CAAC;QACH;MACF;MACA,IAAI,IAAI,CAACC,aAAa,IAAI,CAAC,EAAE;QAC3Bj8E,OAAO,CAACqhC,WAAW,GAAG7X,KAAK;MAC7B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAtiE,GAAA;IAAAC,KAAA,EAOA,SAAAy1H,SAASA,CAACvzG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE;MAC9C,IAAI,CAAC,IAAI,CAACqkG,UAAU,IAAI,IAAI,CAACljC,KAAK,KAAK,EAAE,EAAE;QACzC;MACF;MACA,IAAI,IAAI,CAAC8iC,cAAc,EAAE;QACvB,IAAI,CAACqP,oBAAoB,CAAC,IAAI,CAACrP,cAAc,CAAC;MAChD;MACA,IAAI,IAAI,CAACE,gBAAgB,EAAE;QACzB,IAAI,CAACoP,sBAAsB,CAAC,IAAI,CAACpP,gBAAgB,CAAC;MACpD;MACA,IAAI,CAACqP,oBAAoB,CAAC,IAAI,CAACnP,UAAU,CAAC;MAC1C,IAAM+I,gBAAgB,GAAG,IAAAxyF,sBAAW,EAClC9a,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,IAAI,CAAC8xG,UAAU,EACf,IAAI,CAACtH,iBACP,CAAC;MACD,IAAM/zE,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAInkF,QAAQ,GAAG,IAAI,CAACwiG,aAAa;MACjC,IAAI,IAAI,CAAC+N,kBAAkB,KAAK,CAAC,EAAE;QACjCvwG,QAAQ,IAAI,IAAI,CAACipG,aAAa;MAChC;MACA,IAAI,IAAI,CAAC3G,mBAAmB,EAAE;QAC5BtiG,QAAQ,IAAI,IAAI,CAACipG,aAAa;MAChC;MACA,OAAO1qG,MAAM,GAAGzgB,GAAG,EAAEygB,MAAM,IAAIC,MAAM,EAAE;QACrC,IAAMpG,CAAC,GAAGwzG,gBAAgB,CAACrtG,MAAM,CAAC,GAAG,IAAI,CAAC6jG,YAAY;QACtD,IAAM/pG,CAAC,GAAGuzG,gBAAgB,CAACrtG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC8jG,YAAY;QAC1D,IACEriG,QAAQ,KAAK,CAAC,IACd,IAAI,CAACyxG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IACvB,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EACvB;UACAx8E,OAAO,CAACohC,IAAI,CAAC,CAAC;UACdphC,OAAO,CAAC5c,SAAS,CAACjgB,CAAC,GAAG,IAAI,CAACgqG,YAAY,EAAE/pG,CAAC,GAAG,IAAI,CAACgqG,YAAY,CAAC;UAC/DptE,OAAO,CAACvvB,MAAM,CAAC1F,QAAQ,CAAC;UACxBi1B,OAAO,CAAC5c,SAAS,CAAC,IAAI,CAAC+pF,YAAY,EAAE,IAAI,CAACC,YAAY,CAAC;UACvDptE,OAAO,CAACnvB,KAAK,CAAC,IAAI,CAAC2rG,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC,CAAC;UACrD,IAAI,IAAI,CAAC9O,gBAAgB,EAAE;YACzB1tE,OAAO,CAACg9E,UAAU,CAAC,IAAI,CAACtyC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;UACtC;UACA,IAAI,IAAI,CAAC8iC,cAAc,EAAE;YACvBxtE,OAAO,CAACi9E,QAAQ,CAAC,IAAI,CAACvyC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;UACpC;UACA1qC,OAAO,CAACwhC,OAAO,CAAC,CAAC;QACnB,CAAC,MAAM;UACL,IAAI,IAAI,CAACksC,gBAAgB,EAAE;YACzB1tE,OAAO,CAACg9E,UAAU,CAAC,IAAI,CAACtyC,KAAK,EAAEvnE,CAAC,EAAEC,CAAC,CAAC;UACtC;UACA,IAAI,IAAI,CAACoqG,cAAc,EAAE;YACvBxtE,OAAO,CAACi9E,QAAQ,CAAC,IAAI,CAACvyC,KAAK,EAAEvnE,CAAC,EAAEC,CAAC,CAAC;UACpC;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAlc,GAAA;IAAAC,KAAA,EASA,SAAA+1H,aAAaA,CAAC7zG,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE0gB,MAAM,EAAE4zG,KAAK,EAAE;MACzD,IAAMn9E,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAMynB,gBAAgB,GAAG,IAAAxyF,sBAAW,EAClC9a,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,IAAI,CAAC8xG,UAAU,EACf,IAAI,CAACtH,iBACP,CAAC;MACD/zE,OAAO,CAAC2kD,MAAM,CAACgyB,gBAAgB,CAAC,CAAC,CAAC,EAAEA,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACxD,IAAI5uH,MAAM,GAAG4uH,gBAAgB,CAAC5uH,MAAM;MACpC,IAAIo1H,KAAK,EAAE;QACTp1H,MAAM,IAAI,CAAC;MACb;MACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,IAAI,CAAC,EAAE;QAClCu3C,OAAO,CAACmnC,MAAM,CAACwvC,gBAAgB,CAACluH,CAAC,CAAC,EAAEkuH,gBAAgB,CAACluH,CAAC,GAAG,CAAC,CAAC,CAAC;MAC9D;MACA,IAAI00H,KAAK,EAAE;QACTn9E,OAAO,CAAConC,SAAS,CAAC,CAAC;MACrB;MACA,OAAOv+E,GAAG;IACZ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3B,GAAA;IAAAC,KAAA,EAQA,SAAAi2H,UAAUA,CAAC/zG,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,EAAE;MAChD,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C6gB,MAAM,GAAG,IAAI,CAAC4zG,aAAa,CACzB7zG,eAAe,EACfC,MAAM,EACN4e,IAAI,CAACz/B,CAAC,CAAC,EACP8gB,MAAM,EACN,IACF,CAAC;MACH;MACA,OAAOD,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApiB,GAAA;IAAAC,KAAA,EAQA,SAAA08G,UAAUA,CAACxxF,QAAQ,EAAE;MACnB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAI,CAAC,IAAAtvG,kBAAU,EAAC,IAAI,CAACqI,OAAO,EAAElC,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;QACnD;MACF;MACA,IAAI,IAAI,CAACouG,UAAU,IAAI,IAAI,CAACC,YAAY,EAAE;QACxC,IAAI,IAAI,CAACD,UAAU,EAAE;UACnB,IAAI,CAACiB,oBAAoB,CAAC,IAAI,CAACjB,UAAU,CAAC;QAC5C;QACA,IAAI,IAAI,CAACC,YAAY,EAAE;UACrB,IAAI,CAACiB,sBAAsB,CAAC,IAAI,CAACjB,YAAY,CAAC;QAChD;QACA,IAAMlF,gBAAgB,GAAG,IAAA9uF,+BAAe,EACtCxV,QAAQ,EACR,IAAI,CAACgpG,UAAU,EACf,IAAI,CAACtH,iBACP,CAAC;QACD,IAAMtwG,EAAE,GAAGkzG,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;QACpD,IAAMjzG,EAAE,GAAGizG,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;QACpD,IAAM7kG,MAAM,GAAGhV,IAAI,CAAC2F,IAAI,CAACgB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;QAC3C,IAAMs8B,OAAO,GAAG,IAAI,CAACkvD,QAAQ;QAC7BlvD,OAAO,CAAC0kD,SAAS,CAAC,CAAC;QACnB1kD,OAAO,CAAC+mC,GAAG,CACT4vC,gBAAgB,CAAC,CAAC,CAAC,EACnBA,gBAAgB,CAAC,CAAC,CAAC,EACnB7kG,MAAM,EACN,CAAC,EACD,CAAC,GAAGhV,IAAI,CAAC0H,EACX,CAAC;QACD,IAAI,IAAI,CAACo3G,UAAU,EAAE;UACnB57E,OAAO,CAACsjC,IAAI,CAAC,CAAC;QAChB;QACA,IAAI,IAAI,CAACu4C,YAAY,EAAE;UACrB77E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;QAClB;MACF;MACA,IAAI,IAAI,CAAC8G,KAAK,KAAK,EAAE,EAAE;QACrB,IAAI,CAACkyC,SAAS,CAACvqG,QAAQ,CAAC3H,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAxjB,GAAA;IAAAC,KAAA,EAQA,SAAA8uF,QAAQA,CAACl3C,KAAK,EAAE;MACd,IAAI,CAACgmE,kBAAkB,CAAChmE,KAAK,CAACglC,OAAO,CAAC,CAAC,EAAEhlC,KAAK,CAACmlC,SAAS,CAAC,CAAC,CAAC;MAC3D,IAAI,CAAC8gC,aAAa,CAACjmE,KAAK,CAACq5B,QAAQ,CAAC,CAAC,CAAC;MACpC,IAAI,CAAC+sC,YAAY,CAACpmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC,CAAC;IACpC;;IAEA;AACF;AACA;EAFE;IAAA3jF,GAAA;IAAAC,KAAA,EAGA,SAAAk2H,YAAYA,CAAC9qG,SAAS,EAAE;MACtB,IAAI,CAAC8oG,UAAU,GAAG9oG,SAAS;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAArrB,GAAA;IAAAC,KAAA,EAQA,SAAAy8G,YAAYA,CAACvxF,QAAQ,EAAE;MACrB,IAAMjmB,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;MAC/B,QAAQlmB,IAAI;QACV,KAAK,OAAO;UACV,IAAI,CAACs4G,SAAS,CACZ,oDAAsDryF,QACxD,CAAC;UACD;QACF,KAAK,YAAY;UACf,IAAI,CAAC6xF,cAAc,CACjB,yDAA2D7xF,QAC7D,CAAC;UACD;QACF,KAAK,SAAS;UACZ,IAAI,CAACuyF,WAAW,CACd,sDAAwDvyF,QAC1D,CAAC;UACD;QACF,KAAK,YAAY;UACf,IAAI,CAACiyF,cAAc,CACjB,yDAA2DjyF,QAC7D,CAAC;UACD;QACF,KAAK,iBAAiB;UACpB,IAAI,CAAC+xF,mBAAmB,CACtB;UACE/xF,QAEJ,CAAC;UACD;QACF,KAAK,cAAc;UACjB,IAAI,CAACmyF,gBAAgB,CACnB;UACEnyF,QAEJ,CAAC;UACD;QACF,KAAK,oBAAoB;UACvB,IAAI,CAAC2xF,sBAAsB,CACzB;UACE3xF,QAEJ,CAAC;UACD;QACF,KAAK,QAAQ;UACX,IAAI,CAACwxF,UAAU,CACb,qDAAuDxxF,QACzD,CAAC;UACD;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAnrB,GAAA;IAAAC,KAAA,EAWA,SAAA48G,WAAWA,CAAC54B,OAAO,EAAEpsC,KAAK,EAAE;MAC1B,IAAM1sB,QAAQ,GAAG0sB,KAAK,CAACksC,mBAAmB,CAAC,CAAC,CAACE,OAAO,CAAC;MACrD,IAAI,CAAC94D,QAAQ,EAAE;QACb;MACF;MACA,IAAI,CAAC4jE,QAAQ,CAACl3C,KAAK,CAAC;MACpB,IAAI,CAAC6kE,YAAY,CAACvxF,QAAQ,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnrB,GAAA;IAAAC,KAAA,EAOA,SAAA68G,sBAAsBA,CAAC3xF,QAAQ,EAAE;MAC/B,IAAMM,UAAU,GAAGN,QAAQ,CAACirG,kBAAkB,CAAC,CAAC;MAChD,KAAK,IAAI70H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAI,CAACm7G,YAAY,CAACjxF,UAAU,CAAClqB,CAAC,CAAC,CAAC;MAClC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAvB,GAAA;IAAAC,KAAA,EAOA,SAAAu9G,SAASA,CAACryF,QAAQ,EAAE;MAClB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAMnyG,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;MACrD,IAAMxd,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;MACnC,IAAI,IAAI,CAAC6wC,MAAM,EAAE;QACf,IAAI,CAACwkD,WAAW,CAACrzG,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACthB,MAAM,EAAEwhB,MAAM,CAAC;MACtE;MACA,IAAI,IAAI,CAACmhE,KAAK,KAAK,EAAE,EAAE;QACrB,IAAI,CAACkyC,SAAS,CAACvzG,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACthB,MAAM,EAAEwhB,MAAM,CAAC;MACpE;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAriB,GAAA;IAAAC,KAAA,EAOA,SAAAm9G,cAAcA,CAACjyF,QAAQ,EAAE;MACvB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAMnyG,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;MACrD,IAAMxd,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;MACnC,IAAI,IAAI,CAAC6wC,MAAM,EAAE;QACf,IAAI,CAACwkD,WAAW,CAACrzG,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACthB,MAAM,EAAEwhB,MAAM,CAAC;MACtE;MACA,IAAI,IAAI,CAACmhE,KAAK,KAAK,EAAE,EAAE;QACrB,IAAI,CAACkyC,SAAS,CAACvzG,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACthB,MAAM,EAAEwhB,MAAM,CAAC;MACpE;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAriB,GAAA;IAAAC,KAAA,EAOA,SAAA+8G,cAAcA,CAAC7xF,QAAQ,EAAE;MACvB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAI,CAAC,IAAAtvG,kBAAU,EAAC,IAAI,CAACqI,OAAO,EAAElC,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;QACnD;MACF;MACA,IAAI,IAAI,CAACquG,YAAY,EAAE;QACrB,IAAI,CAACiB,sBAAsB,CAAC,IAAI,CAACjB,YAAY,CAAC;QAC9C,IAAM77E,OAAO,GAAG,IAAI,CAACkvD,QAAQ;QAC7B,IAAM7lF,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;QACrDiZ,OAAO,CAAC0kD,SAAS,CAAC,CAAC;QACnB,IAAI,CAACw4B,aAAa,CAChB7zG,eAAe,EACf,CAAC,EACDA,eAAe,CAACthB,MAAM,EACtBsqB,QAAQ,CAACgV,SAAS,CAAC,CAAC,EACpB,KACF,CAAC;QACD2Y,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;MACA,IAAI,IAAI,CAAC8G,KAAK,KAAK,EAAE,EAAE;QACrB,IAAM6yC,YAAY,GAAGlrG,QAAQ,CAACs8F,eAAe,CAAC,CAAC;QAC/C,IAAI,CAACiO,SAAS,CAACW,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACvC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAr2H,GAAA;IAAAC,KAAA,EAOA,SAAAi9G,mBAAmBA,CAAC/xF,QAAQ,EAAE;MAC5B,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GACN;QACEA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACL;MACA,IAAMgC,cAAc,GAAGnrG,QAAQ,CAAC7E,SAAS,CAAC,CAAC;MAC3C,IAAI,CAAC,IAAAtB,kBAAU,EAAC,IAAI,CAACqI,OAAO,EAAEipG,cAAc,CAAC,EAAE;QAC7C;MACF;MACA,IAAI,IAAI,CAAC3B,YAAY,EAAE;QACrB,IAAI,CAACiB,sBAAsB,CAAC,IAAI,CAACjB,YAAY,CAAC;QAC9C,IAAM77E,OAAO,GAAG,IAAI,CAACkvD,QAAQ;QAC7B,IAAM7lF,eAAe,GAAGgJ,QAAQ,CAAC0U,kBAAkB,CAAC,CAAC;QACrD,IAAIzd,MAAM,GAAG,CAAC;QACd,IAAM4e,IAAI,GAAG,4BAA8B7V,QAAQ,CAAC8c,OAAO,CAAC,CAAE;QAC9D,IAAM5lB,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;QACnC2Y,OAAO,CAAC0kD,SAAS,CAAC,CAAC;QACnB,KAAK,IAAIj8F,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC7C6gB,MAAM,GAAG,IAAI,CAAC4zG,aAAa,CACzB7zG,eAAe,EACfC,MAAM,EACN4e,IAAI,CAACz/B,CAAC,CAAC,EACP8gB,MAAM,EACN,KACF,CAAC;QACH;QACAy2B,OAAO,CAAC4jC,MAAM,CAAC,CAAC;MAClB;MACA,IAAI,IAAI,CAAC8G,KAAK,KAAK,EAAE,EAAE;QACrB,IAAM+yC,aAAa,GAAGprG,QAAQ,CAACu8F,gBAAgB,CAAC,CAAC;QACjD,IAAI,CAACgO,SAAS,CAACa,aAAa,EAAE,CAAC,EAAEA,aAAa,CAAC11H,MAAM,EAAE,CAAC,CAAC;MAC3D;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAb,GAAA;IAAAC,KAAA,EAOA,SAAAy9G,WAAWA,CAACvyF,QAAQ,EAAE;MACpB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAI,CAAC,IAAAtvG,kBAAU,EAAC,IAAI,CAACqI,OAAO,EAAElC,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;QACnD;MACF;MACA,IAAI,IAAI,CAACquG,YAAY,IAAI,IAAI,CAACD,UAAU,EAAE;QACxC,IAAI,IAAI,CAACA,UAAU,EAAE;UACnB,IAAI,CAACiB,oBAAoB,CAAC,IAAI,CAACjB,UAAU,CAAC;QAC5C;QACA,IAAI,IAAI,CAACC,YAAY,EAAE;UACrB,IAAI,CAACiB,sBAAsB,CAAC,IAAI,CAACjB,YAAY,CAAC;QAChD;QACA,IAAM77E,OAAO,GAAG,IAAI,CAACkvD,QAAQ;QAC7BlvD,OAAO,CAAC0kD,SAAS,CAAC,CAAC;QACnB,IAAI,CAAC04B,UAAU,CACb/qG,QAAQ,CAAC4c,0BAA0B,CAAC,CAAC,EACrC,CAAC,EACD,4BAA8B5c,QAAQ,CAAC8c,OAAO,CAAC,CAAC,EAChD9c,QAAQ,CAACgV,SAAS,CAAC,CACrB,CAAC;QACD,IAAI,IAAI,CAACu0F,UAAU,EAAE;UACnB57E,OAAO,CAACsjC,IAAI,CAAC,CAAC;QAChB;QACA,IAAI,IAAI,CAACu4C,YAAY,EAAE;UACrB77E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;QAClB;MACF;MACA,IAAI,IAAI,CAAC8G,KAAK,KAAK,EAAE,EAAE;QACrB,IAAMgzC,iBAAiB,GAAGrrG,QAAQ,CAAC+c,oBAAoB,CAAC,CAAC;QACzD,IAAI,CAACwtF,SAAS,CAACc,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAx2H,GAAA;IAAAC,KAAA,EAMA,SAAAq9G,gBAAgBA,CAACnyF,QAAQ,EAAE;MACzB,IAAI,IAAI,CAACkpG,iBAAiB,EAAE;QAC1BlpG,QAAQ,GAAG;QACTA,QAAQ,CAACmT,mBAAmB,CAC1B,IAAI,CAAC+1F,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;MACH;MACA,IAAI,CAAC,IAAAtvG,kBAAU,EAAC,IAAI,CAACqI,OAAO,EAAElC,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;QACnD;MACF;MACA,IAAI,IAAI,CAACquG,YAAY,IAAI,IAAI,CAACD,UAAU,EAAE;QACxC,IAAI,IAAI,CAACA,UAAU,EAAE;UACnB,IAAI,CAACiB,oBAAoB,CAAC,IAAI,CAACjB,UAAU,CAAC;QAC5C;QACA,IAAI,IAAI,CAACC,YAAY,EAAE;UACrB,IAAI,CAACiB,sBAAsB,CAAC,IAAI,CAACjB,YAAY,CAAC;QAChD;QACA,IAAM77E,OAAO,GAAG,IAAI,CAACkvD,QAAQ;QAC7B,IAAM7lF,eAAe,GAAGgJ,QAAQ,CAAC4c,0BAA0B,CAAC,CAAC;QAC7D,IAAI3lB,MAAM,GAAG,CAAC;QACd,IAAM8e,KAAK,GAAG/V,QAAQ,CAACk2F,QAAQ,CAAC,CAAC;QACjC,IAAMh/F,MAAM,GAAG8I,QAAQ,CAACgV,SAAS,CAAC,CAAC;QACnC2Y,OAAO,CAAC0kD,SAAS,CAAC,CAAC;QACnB,KAAK,IAAIj8F,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;UACrB6gB,MAAM,GAAG,IAAI,CAAC8zG,UAAU,CAAC/zG,eAAe,EAAEC,MAAM,EAAE4e,IAAI,EAAE3e,MAAM,CAAC;QACjE;QACA,IAAI,IAAI,CAACqyG,UAAU,EAAE;UACnB57E,OAAO,CAACsjC,IAAI,CAAC,CAAC;QAChB;QACA,IAAI,IAAI,CAACu4C,YAAY,EAAE;UACrB77E,OAAO,CAAC4jC,MAAM,CAAC,CAAC;QAClB;MACF;MACA,IAAI,IAAI,CAAC8G,KAAK,KAAK,EAAE,EAAE;QACrB,IAAMizC,kBAAkB,GAAGtrG,QAAQ,CAACw8F,qBAAqB,CAAC,CAAC;QAC3D,IAAI,CAAC+N,SAAS,CAACe,kBAAkB,EAAE,CAAC,EAAEA,kBAAkB,CAAC51H,MAAM,EAAE,CAAC,CAAC;MACrE;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAA01H,oBAAoBA,CAAC5O,SAAS,EAAE;MAC9B,IAAMjuE,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAM0uB,gBAAgB,GAAG,IAAI,CAACnC,iBAAiB;MAC/C,IAAI,CAACmC,gBAAgB,EAAE;QACrB59E,OAAO,CAAC08B,SAAS,GAAGuxC,SAAS,CAACvxC,SAAS;QACvC,IAAI,CAAC++C,iBAAiB,GAAG;UACvB/+C,SAAS,EAAEuxC,SAAS,CAACvxC;QACvB,CAAC;MACH,CAAC,MAAM;QACL,IAAIkhD,gBAAgB,CAAClhD,SAAS,IAAIuxC,SAAS,CAACvxC,SAAS,EAAE;UACrDkhD,gBAAgB,CAAClhD,SAAS,GAAGuxC,SAAS,CAACvxC,SAAS;UAChD18B,OAAO,CAAC08B,SAAS,GAAGuxC,SAAS,CAACvxC,SAAS;QACzC;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAx1E,GAAA;IAAAC,KAAA,EAIA,SAAA21H,sBAAsBA,CAAC5O,WAAW,EAAE;MAClC,IAAMluE,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAM2uB,kBAAkB,GAAG,IAAI,CAACnC,mBAAmB;MACnD,IAAI,CAACmC,kBAAkB,EAAE;QACvB79E,OAAO,CAAC2lC,OAAO,GAAGuoC,WAAW,CAACvoC,OAAO;QACrC3lC,OAAO,CAAC6mC,WAAW,CAACqnC,WAAW,CAACtoC,QAAQ,CAAC;QACzC5lC,OAAO,CAAC6lC,cAAc,GAAGqoC,WAAW,CAACroC,cAAc;QACnD7lC,OAAO,CAAC4kC,QAAQ,GAAGspC,WAAW,CAACtpC,QAAQ;QACvC5kC,OAAO,CAAC4gC,SAAS,GAAGstC,WAAW,CAACttC,SAAS;QACzC5gC,OAAO,CAAC8kC,UAAU,GAAGopC,WAAW,CAACppC,UAAU;QAC3C9kC,OAAO,CAAC8lC,WAAW,GAAGooC,WAAW,CAACpoC,WAAW;QAC7C,IAAI,CAAC41C,mBAAmB,GAAG;UACzB/1C,OAAO,EAAEuoC,WAAW,CAACvoC,OAAO;UAC5BC,QAAQ,EAAEsoC,WAAW,CAACtoC,QAAQ;UAC9BC,cAAc,EAAEqoC,WAAW,CAACroC,cAAc;UAC1CjB,QAAQ,EAAEspC,WAAW,CAACtpC,QAAQ;UAC9BhE,SAAS,EAAEstC,WAAW,CAACttC,SAAS;UAChCkE,UAAU,EAAEopC,WAAW,CAACppC,UAAU;UAClCgB,WAAW,EAAEooC,WAAW,CAACpoC;QAC3B,CAAC;MACH,CAAC,MAAM;QACL,IAAI+3C,kBAAkB,CAACl4C,OAAO,IAAIuoC,WAAW,CAACvoC,OAAO,EAAE;UACrDk4C,kBAAkB,CAACl4C,OAAO,GAAGuoC,WAAW,CAACvoC,OAAO;UAChD3lC,OAAO,CAAC2lC,OAAO,GAAGuoC,WAAW,CAACvoC,OAAO;QACvC;QACA,IAAI,CAAC,IAAAn8E,aAAM,EAACq0H,kBAAkB,CAACj4C,QAAQ,EAAEsoC,WAAW,CAACtoC,QAAQ,CAAC,EAAE;UAC9D5lC,OAAO,CAAC6mC,WAAW,CAChBg3C,kBAAkB,CAACj4C,QAAQ,GAAGsoC,WAAW,CAACtoC,QAC7C,CAAC;QACH;QACA,IAAIi4C,kBAAkB,CAACh4C,cAAc,IAAIqoC,WAAW,CAACroC,cAAc,EAAE;UACnEg4C,kBAAkB,CAACh4C,cAAc,GAAGqoC,WAAW,CAACroC,cAAc;UAC9D7lC,OAAO,CAAC6lC,cAAc,GAAGqoC,WAAW,CAACroC,cAAc;QACrD;QACA,IAAIg4C,kBAAkB,CAACj5C,QAAQ,IAAIspC,WAAW,CAACtpC,QAAQ,EAAE;UACvDi5C,kBAAkB,CAACj5C,QAAQ,GAAGspC,WAAW,CAACtpC,QAAQ;UAClD5kC,OAAO,CAAC4kC,QAAQ,GAAGspC,WAAW,CAACtpC,QAAQ;QACzC;QACA,IAAIi5C,kBAAkB,CAACj9C,SAAS,IAAIstC,WAAW,CAACttC,SAAS,EAAE;UACzDi9C,kBAAkB,CAACj9C,SAAS,GAAGstC,WAAW,CAACttC,SAAS;UACpD5gC,OAAO,CAAC4gC,SAAS,GAAGstC,WAAW,CAACttC,SAAS;QAC3C;QACA,IAAIi9C,kBAAkB,CAAC/4C,UAAU,IAAIopC,WAAW,CAACppC,UAAU,EAAE;UAC3D+4C,kBAAkB,CAAC/4C,UAAU,GAAGopC,WAAW,CAACppC,UAAU;UACtD9kC,OAAO,CAAC8kC,UAAU,GAAGopC,WAAW,CAACppC,UAAU;QAC7C;QACA,IAAI+4C,kBAAkB,CAAC/3C,WAAW,IAAIooC,WAAW,CAACpoC,WAAW,EAAE;UAC7D+3C,kBAAkB,CAAC/3C,WAAW,GAAGooC,WAAW,CAACpoC,WAAW;UACxD9lC,OAAO,CAAC8lC,WAAW,GAAGooC,WAAW,CAACpoC,WAAW;QAC/C;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA5+E,GAAA;IAAAC,KAAA,EAIA,SAAA41H,oBAAoBA,CAAC5O,SAAS,EAAE;MAC9B,IAAMnuE,OAAO,GAAG,IAAI,CAACkvD,QAAQ;MAC7B,IAAM4uB,gBAAgB,GAAG,IAAI,CAACnC,iBAAiB;MAC/C,IAAM3vC,SAAS,GAAGmiC,SAAS,CAACniC,SAAS,GACjCmiC,SAAS,CAACniC,SAAS,GACnBnO,wBAAgB;MACpB,IAAI,CAACigD,gBAAgB,EAAE;QACrB99E,OAAO,CAACo/B,IAAI,GAAG+uC,SAAS,CAAC/uC,IAAI;QAC7Bp/B,OAAO,CAACgsC,SAAS,GAAGA,SAAS;QAC7BhsC,OAAO,CAACssC,YAAY,GAAG6hC,SAAS,CAAC7hC,YAAY;QAC7C,IAAI,CAACqvC,iBAAiB,GAAG;UACvBv8C,IAAI,EAAE+uC,SAAS,CAAC/uC,IAAI;UACpB4M,SAAS,EAAEA,SAAS;UACpBM,YAAY,EAAE6hC,SAAS,CAAC7hC;QAC1B,CAAC;MACH,CAAC,MAAM;QACL,IAAIwxC,gBAAgB,CAAC1+C,IAAI,IAAI+uC,SAAS,CAAC/uC,IAAI,EAAE;UAC3C0+C,gBAAgB,CAAC1+C,IAAI,GAAG+uC,SAAS,CAAC/uC,IAAI;UACtCp/B,OAAO,CAACo/B,IAAI,GAAG+uC,SAAS,CAAC/uC,IAAI;QAC/B;QACA,IAAI0+C,gBAAgB,CAAC9xC,SAAS,IAAIA,SAAS,EAAE;UAC3C8xC,gBAAgB,CAAC9xC,SAAS,GAAGA,SAAS;UACtChsC,OAAO,CAACgsC,SAAS,GAAGA,SAAS;QAC/B;QACA,IAAI8xC,gBAAgB,CAACxxC,YAAY,IAAI6hC,SAAS,CAAC7hC,YAAY,EAAE;UAC3DwxC,gBAAgB,CAACxxC,YAAY,GAAG6hC,SAAS,CAAC7hC,YAAY;UACtDtsC,OAAO,CAACssC,YAAY,GAAG6hC,SAAS,CAAC7hC,YAAY;QAC/C;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAplF,GAAA;IAAAC,KAAA,EAQA,SAAA49G,kBAAkBA,CAACroC,SAAS,EAAEoJ,WAAW,EAAE;MAAA,IAAAryE,MAAA;MACzC,IAAI,CAACipE,SAAS,EAAE;QACd,IAAI,CAACk/C,UAAU,GAAG,IAAI;MACxB,CAAC,MAAM;QACL,IAAM9S,cAAc,GAAGpsC,SAAS,CAAC2J,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAACu1C,UAAU,GAAG;UAChBl/C,SAAS,EAAE,IAAAK,sBAAW,EACpB+rC,cAAc,GAAGA,cAAc,GAAGxrC,wBACpC;QACF,CAAC;MACH;MACA,IAAI,CAACwI,WAAW,EAAE;QAChB,IAAI,CAAC+1C,YAAY,GAAG,IAAI;MAC1B,CAAC,MAAM;QACL,IAAM5S,gBAAgB,GAAGnjC,WAAW,CAACO,QAAQ,CAAC,CAAC;QAC/C,IAAM6iC,kBAAkB,GAAGpjC,WAAW,CAACW,UAAU,CAAC,CAAC;QACnD,IAAM0iC,mBAAmB,GAAGrjC,WAAW,CAACQ,WAAW,CAAC,CAAC;QACrD,IAAM8iC,yBAAyB,GAAGtjC,WAAW,CAACS,iBAAiB,CAAC,CAAC;QACjE,IAAM8iC,mBAAmB,GAAGvjC,WAAW,CAACU,WAAW,CAAC,CAAC;QACrD,IAAM8iC,gBAAgB,GAAGxjC,WAAW,CAACt7D,QAAQ,CAAC,CAAC;QAC/C,IAAM++F,qBAAqB,GAAGzjC,WAAW,CAACY,aAAa,CAAC,CAAC;QACzD,IAAMd,QAAQ,GAAGujC,mBAAmB,GAChCA,mBAAmB,GACnB3rC,uBAAe;QACnB,IAAI,CAACq+C,YAAY,GAAG;UAClBl2C,OAAO,EACLujC,kBAAkB,KAAKp4G,SAAS,GAC5Bo4G,kBAAkB,GAClB3rC,sBAAc;UACpBqI,QAAQ,EACN,IAAI,CAAC5N,WAAW,KAAK,CAAC,GAClB4N,QAAQ,GACRA,QAAQ,CAACjvE,GAAG,CAAC,UAACnO,CAAC;YAAA,OAAKA,CAAC,GAAGiL,MAAI,CAACukE,WAAW;UAAA,EAAC;UAC/C6N,cAAc,EACZ,CAACujC,yBAAyB,GACtBA,yBAAyB,GACzB3rC,6BAAqB,IAAI,IAAI,CAACzF,WAAW;UAC/C4M,QAAQ,EACNykC,mBAAmB,KAAKv4G,SAAS,GAC7Bu4G,mBAAmB,GACnB3rC,uBAAe;UACrBkD,SAAS,EACP,CAAC0oC,gBAAgB,KAAKx4G,SAAS,GAC3Bw4G,gBAAgB,GAChBtrC,wBAAgB,IAAI,IAAI,CAAChG,WAAW;UAC1C8M,UAAU,EACRykC,qBAAqB,KAAKz4G,SAAS,GAC/By4G,qBAAqB,GACrB5rC,yBAAiB;UACvBmI,WAAW,EAAE,IAAA/I,sBAAW,EACtBksC,gBAAgB,GAAGA,gBAAgB,GAAGrrC,0BACxC;QACF,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA12E,GAAA;IAAAC,KAAA,EAOA,SAAA69G,aAAaA,CAACC,UAAU,EAAE;MACxB,IAAIh8B,SAAS;MACb,IAAI,CAACg8B,UAAU,IAAI,EAAEh8B,SAAS,GAAGg8B,UAAU,CAAC74F,OAAO,CAAC,CAAC,CAAC,EAAE;QACtD,IAAI,CAAC8rD,MAAM,GAAG,IAAI;QAClB;MACF;MACA,IAAM6lD,eAAe,GAAG9Y,UAAU,CAAC5sC,aAAa,CAAC,IAAI,CAACL,WAAW,CAAC;MAClE,IAAMgmD,WAAW,GAAG/Y,UAAU,CAACziC,SAAS,CAAC,CAAC;MAC1C,IAAMy7C,WAAW,GAAGhZ,UAAU,CAACviC,SAAS,CAAC,CAAC;MAC1C,IAAI,CAACxK,MAAM,GAAG+sC,UAAU,CAAC7sC,QAAQ,CAAC,IAAI,CAACJ,WAAW,CAAC;MACnD,IAAI,CAAC8jD,aAAa,GAAGkC,WAAW,CAAC,CAAC,CAAC,GAAGD,eAAe;MACrD,IAAI,CAAChC,aAAa,GAAGiC,WAAW,CAAC,CAAC,CAAC,GAAGD,eAAe;MACrD,IAAI,CAAC/B,YAAY,GAAG/yC,SAAS,CAAC,CAAC,CAAC,GAAG80C,eAAe;MAClD,IAAI,CAAC9B,aAAa,GAAGhX,UAAU,CAACnqD,UAAU,CAAC,CAAC;MAC5C,IAAI,CAACohE,aAAa,GAAG+B,WAAW,CAAC,CAAC,CAAC;MACnC,IAAI,CAAC9B,aAAa,GAAG8B,WAAW,CAAC,CAAC,CAAC;MACnC,IAAI,CAAC7B,oBAAoB,GAAGnX,UAAU,CAAC7iC,iBAAiB,CAAC,CAAC;MAC1D,IAAI,CAACi6C,cAAc,GAAGpX,UAAU,CAAC1vE,WAAW,CAAC,CAAC;MAC9C,IAAM2oF,UAAU,GAAGjZ,UAAU,CAAC1iC,aAAa,CAAC,CAAC;MAC7C,IAAI,CAAC+5C,WAAW,GAAG,CAChB4B,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAClmD,WAAW,GAAI+lD,eAAe,EACnDG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAClmD,WAAW,GAAI+lD,eAAe,CACrD;MACD,IAAI,CAACxB,WAAW,GAAGtzC,SAAS,CAAC,CAAC,CAAC,GAAG80C,eAAe;IACnD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA72H,GAAA;IAAAC,KAAA,EAOA,SAAAg+G,YAAYA,CAACC,SAAS,EAAE;MACtB,IAAI,CAACA,SAAS,EAAE;QACd,IAAI,CAAC16B,KAAK,GAAG,EAAE;MACjB,CAAC,MAAM;QACL,IAAM8kC,aAAa,GAAGpK,SAAS,CAACrhC,OAAO,CAAC,CAAC;QACzC,IAAI,CAACyrC,aAAa,EAAE;UAClB,IAAI,CAAChC,cAAc,GAAG,IAAI;QAC5B,CAAC,MAAM;UACL,IAAM2Q,kBAAkB,GAAG3O,aAAa,CAACnpC,QAAQ,CAAC,CAAC;UACnD,IAAI,CAACmnC,cAAc,GAAG;YACpB9wC,SAAS,EAAE,IAAAK,sBAAW,EACpBohD,kBAAkB,GAAGA,kBAAkB,GAAG7gD,wBAC5C;UACF,CAAC;QACH;QACA,IAAMmyC,eAAe,GAAGrK,SAAS,CAAClhC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAACurC,eAAe,EAAE;UACpB,IAAI,CAAC/B,gBAAgB,GAAG,IAAI;QAC9B,CAAC,MAAM;UACL,IAAM0Q,oBAAoB,GAAG3O,eAAe,CAACppC,QAAQ,CAAC,CAAC;UACvD,IAAMg4C,sBAAsB,GAAG5O,eAAe,CAAChpC,UAAU,CAAC,CAAC;UAC3D,IAAM63C,uBAAuB,GAAG7O,eAAe,CAACnpC,WAAW,CAAC,CAAC;UAC7D,IAAMi4C,6BAA6B,GACjC9O,eAAe,CAAClpC,iBAAiB,CAAC,CAAC;UACrC,IAAMi4C,uBAAuB,GAAG/O,eAAe,CAACjpC,WAAW,CAAC,CAAC;UAC7D,IAAMi4C,oBAAoB,GAAGhP,eAAe,CAACjlG,QAAQ,CAAC,CAAC;UACvD,IAAMk0G,yBAAyB,GAAGjP,eAAe,CAAC/oC,aAAa,CAAC,CAAC;UACjE,IAAI,CAACgnC,gBAAgB,GAAG;YACtB/nC,OAAO,EACL04C,sBAAsB,KAAKvtH,SAAS,GAChCutH,sBAAsB,GACtB9gD,sBAAc;YACpBqI,QAAQ,EAAE04C,uBAAuB,GAC7BA,uBAAuB,GACvB9gD,uBAAe;YACnBqI,cAAc,EAAE04C,6BAA6B,GACzCA,6BAA6B,GAC7B9gD,6BAAqB;YACzBmH,QAAQ,EACN45C,uBAAuB,KAAK1tH,SAAS,GACjC0tH,uBAAuB,GACvB9gD,uBAAe;YACrBkD,SAAS,EACP69C,oBAAoB,KAAK3tH,SAAS,GAC9B2tH,oBAAoB,GACpBzgD,wBAAgB;YACtB8G,UAAU,EACR45C,yBAAyB,KAAK5tH,SAAS,GACnC4tH,yBAAyB,GACzB/gD,yBAAiB;YACvBmI,WAAW,EAAE,IAAA/I,sBAAW,EACtBqhD,oBAAoB,GAAGA,oBAAoB,GAAGxgD,0BAChD;UACF,CAAC;QACH;QACA,IAAM+gD,QAAQ,GAAGvZ,SAAS,CAACj4B,OAAO,CAAC,CAAC;QACpC,IAAMwiC,WAAW,GAAGvK,SAAS,CAACx3B,UAAU,CAAC,CAAC;QAC1C,IAAMgiC,WAAW,GAAGxK,SAAS,CAACv3B,UAAU,CAAC,CAAC;QAC1C,IAAMgiC,kBAAkB,GAAGzK,SAAS,CAAChjC,iBAAiB,CAAC,CAAC;QACxD,IAAM2tC,YAAY,GAAG3K,SAAS,CAAC7vE,WAAW,CAAC,CAAC;QAC5C,IAAMm6E,SAAS,GAAGtK,SAAS,CAAC7iC,aAAa,CAAC,CAAC;QAC3C,IAAMq8C,QAAQ,GAAGxZ,SAAS,CAACv6B,OAAO,CAAC,CAAC;QACpC,IAAMg0C,aAAa,GAAGzZ,SAAS,CAAC33B,YAAY,CAAC,CAAC;QAC9C,IAAMqxC,gBAAgB,GAAG1Z,SAAS,CAACz3B,eAAe,CAAC,CAAC;QACpD,IAAI,CAACigC,UAAU,GAAG;UAChBxuC,IAAI,EAAEu/C,QAAQ,KAAK7tH,SAAS,GAAG6tH,QAAQ,GAAGthD,mBAAW;UACrD2O,SAAS,EACP6yC,aAAa,KAAK/tH,SAAS,GAAG+tH,aAAa,GAAGhhD,wBAAgB;UAChEyO,YAAY,EACVwyC,gBAAgB,KAAKhuH,SAAS,GAC1BguH,gBAAgB,GAChBhhD;QACR,CAAC;QACD,IAAI,CAAC4M,KAAK,GACRk0C,QAAQ,KAAK9tH,SAAS,GAClB5H,KAAK,CAACC,OAAO,CAACy1H,QAAQ,CAAC,GACrBA,QAAQ,CAACx+C,MAAM,CAAC,UAACmzC,GAAG,EAAE9lH,CAAC,EAAEhF,CAAC;UAAA,OAAM8qH,GAAG,IAAI9qH,CAAC,GAAG,CAAC,GAAG,GAAG,GAAGgF,CAAC;QAAA,CAAC,EAAE,EAAE,CAAC,GAC5DmxH,QAAQ,GACV,EAAE;QACR,IAAI,CAACzR,YAAY,GACfwC,WAAW,KAAK7+G,SAAS,GAAG,IAAI,CAACknE,WAAW,GAAG23C,WAAW,GAAG,CAAC;QAChE,IAAI,CAACvC,YAAY,GACfwC,WAAW,KAAK9+G,SAAS,GAAG,IAAI,CAACknE,WAAW,GAAG43C,WAAW,GAAG,CAAC;QAChE,IAAI,CAACvC,mBAAmB,GACtBwC,kBAAkB,KAAK/+G,SAAS,GAAG++G,kBAAkB,GAAG,KAAK;QAC/D,IAAI,CAACtC,aAAa,GAAGwC,YAAY,KAAKj/G,SAAS,GAAGi/G,YAAY,GAAG,CAAC;QAClE,IAAI,CAACyM,UAAU,GAAG,CAChB,IAAI,CAACxkD,WAAW,GAAG03C,SAAS,CAAC,CAAC,CAAC,EAC/B,IAAI,CAAC13C,WAAW,GAAG03C,SAAS,CAAC,CAAC,CAAC,CAChC;MACH;IACF;EAAC;AAAA,EA/nCmChM,uBAAa;AAAA,IAAAn+G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkoCpC01H,uBAAuB;;;;;;;;;;ACvqCtC,IAAA5wH,MAAA,GAAAC,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAKA,IAAA4qF,MAAA,GAAA5qF,OAAA;AACA,IAAAu0H,UAAA,GAAApyH,sBAAA,CAAAnC,OAAA;AAAqD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAdrD;AACA;AACA;;AAcO,IAAMiyH,qBAAqB,GAAAx5H,OAAA,CAAAw5H,qBAAA,GAAG,GAAG;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,2BAA2BA,CACzCr5G,IAAI,EACJ2R,UAAU,EACVymE,QAAQ,EACR3S,aAAa,EACb7lE,MAAM,EACNG,UAAU,EACVoF,QAAQ,EACRua,gBAAgB,EAChBhY,UAAU,EACV;EACA,IAAM4xG,UAAU,GAAG5xG,UAAU,GAAG,IAAAkU,kBAAY,EAAChc,MAAM,EAAE8H,UAAU,CAAC,GAAG9H,MAAM;EACzE,IAAM2H,KAAK,GAAGvH,IAAI,CAAC,CAAC,CAAC,GAAGo5G,qBAAqB;EAC7C,IAAM5xG,MAAM,GAAGxH,IAAI,CAAC,CAAC,CAAC,GAAGo5G,qBAAqB;EAC9C,IAAMh/E,OAAO,GAAG,IAAAX,0BAAqB,EAAClyB,KAAK,EAAEC,MAAM,CAAC;EACpD4yB,OAAO,CAAC2lD,qBAAqB,GAAG,KAAK;EACrC,IAAMnmD,MAAM,GAAGQ,OAAO,CAACR,MAAM;EAC7B,IAAM+qC,QAAQ,GAAG,IAAI4wC,kBAAuB,CAC1Cn7E,OAAO,EACPg/E,qBAAqB,EACrBx5G,MAAM,EACN,IAAI,EACJuF,QAAQ,EACRua,gBAAgB,EAChBhY,UAAU,GACN,IAAAgR,iCAA2B,EAAC,IAAA6C,uBAAiB,EAAC,CAAC,EAAE7T,UAAU,CAAC,GAC5D,IACN,CAAC;EACD,IAAM6xG,YAAY,GAAGnhC,QAAQ,CAACj2F,MAAM;EACpC;EACA,IAAMq3H,WAAW,GAAGtiH,IAAI,CAACoI,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,IAAIi6G,YAAY,CAAC;EACpE,IAAME,gBAAgB,GAAG,CAAC,CAAC;EAC3B,KAAK,IAAI52H,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI02H,YAAY,EAAE,EAAE12H,CAAC,EAAE;IACtC,IAAM0iF,OAAO,GAAG6S,QAAQ,CAACv1F,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAM62H,oBAAoB,GAAGn0C,OAAO,CAACoL,gBAAgB,CAAC,CAAC,IAAIlL,aAAa;IACxE,IAAI,CAACi0C,oBAAoB,EAAE;MACzB;IACF;IACA,IAAIh0C,MAAM,GAAGg0C,oBAAoB,CAACn0C,OAAO,EAAExlE,UAAU,CAAC;IACtD,IAAI,CAAC2lE,MAAM,EAAE;MACX;IACF;IACA,IAAI,CAACpiF,KAAK,CAACC,OAAO,CAACmiF,MAAM,CAAC,EAAE;MAC1BA,MAAM,GAAG,CAACA,MAAM,CAAC;IACnB;IACA,IAAMxhF,KAAK,GAAGrB,CAAC,GAAG22H,WAAW;IAC7B,IAAMz0D,KAAK,GAAG7gE,KAAK,CAACwd,QAAQ,CAAC,EAAE,CAAC,CAACi4G,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC;IACtD,KAAK,IAAIt7G,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAG64D,MAAM,CAACvjF,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;MAC/C,IAAMu7G,aAAa,GAAGl0C,MAAM,CAACrnE,CAAC,CAAC;MAC/B,IAAMoO,QAAQ,GAAGmtG,aAAa,CAACv0C,mBAAmB,CAAC,CAAC,CAACE,OAAO,CAAC;MAC7D,IAAI,CAAC94D,QAAQ,IAAI,CAAC,IAAAnG,kBAAU,EAACgzG,UAAU,EAAE7sG,QAAQ,CAAC7E,SAAS,CAAC,CAAC,CAAC,EAAE;QAC9D;MACF;MACA,IAAMuxB,KAAK,GAAGygF,aAAa,CAACl3G,KAAK,CAAC,CAAC;MACnC,IAAMg7D,IAAI,GAAGvkC,KAAK,CAACglC,OAAO,CAAC,CAAC;MAC5B,IAAIT,IAAI,EAAE;QACRA,IAAI,CAACqE,QAAQ,CAAChd,KAAK,CAAC;MACtB;MACA,IAAMiZ,MAAM,GAAG7kC,KAAK,CAACmlC,SAAS,CAAC,CAAC;MAChC,IAAIN,MAAM,EAAE;QACVA,MAAM,CAAC+D,QAAQ,CAAChd,KAAK,CAAC;QACtBiZ,MAAM,CAACiD,WAAW,CAAC,IAAI,CAAC;MAC1B;MACA9nC,KAAK,CAACmsC,OAAO,CAACp6E,SAAS,CAAC;MACxB,IAAMynE,KAAK,GAAGinD,aAAa,CAACpnD,QAAQ,CAAC,CAAC;MACtC,IAAIG,KAAK,EAAE;QACT,IAAMknD,OAAO,GAAGlnD,KAAK,CAACkK,YAAY,CAAC,CAAC;QACpC,IAAI,CAACg9C,OAAO,EAAE;UACZ;QACF;QAEA,IAAMC,UAAU,GAAG,IAAArgF,0BAAqB,EACtCogF,OAAO,CAAC,CAAC,CAAC,EACVA,OAAO,CAAC,CAAC,CAAC,EACV3uH,SAAS,EACT;UAAC04D,KAAK,EAAE;QAAK,CACf,CAAC;QACD,IAAMyP,GAAG,GAAGymD,UAAU,CAAClgF,MAAM;QAC7BkgF,UAAU,CAAChjD,SAAS,GAAG/R,KAAK;QAC5B+0D,UAAU,CAACrjD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEpD,GAAG,CAAC9rD,KAAK,EAAE8rD,GAAG,CAAC7rD,MAAM,CAAC;QAChD2xB,KAAK,CAAC85B,QAAQ,CACZ,IAAIqP,WAAI,CAAC;UACPjP,GAAG,EAAEA,GAAG;UACR50C,MAAM,EAAEk0C,KAAK,CAACiK,SAAS,CAAC,CAAC;UACzB+F,YAAY,EAAE,QAAQ;UACtBE,YAAY,EAAE,QAAQ;UACtBn/D,MAAM,EAAEivD,KAAK,CAACmK,SAAS,CAAC,CAAC;UACzBroB,OAAO,EAAE,CAAC;UACVz0C,IAAI,EAAE2yD,KAAK,CAACnsD,OAAO,CAAC,CAAC;UACrByE,KAAK,EAAE0nD,KAAK,CAAC4J,QAAQ,CAAC,CAAC;UACvBp3D,QAAQ,EAAEwtD,KAAK,CAAChjC,WAAW,CAAC,CAAC;UAC7BqsC,cAAc,EAAErJ,KAAK,CAAC6J,iBAAiB,CAAC;QAC1C,CAAC,CACH,CAAC;MACH;MACA,IAAM9nB,MAAM,GAAGvb,KAAK,CAAC8b,SAAS,CAAC,CAAC,IAAI,CAAC;MACrC,IAAI8kE,cAAc,GAAGN,gBAAgB,CAAC/kE,MAAM,CAAC;MAC7C,IAAI,CAACqlE,cAAc,EAAE;QACnBA,cAAc,GAAG,CAAC,CAAC;QACnBN,gBAAgB,CAAC/kE,MAAM,CAAC,GAAGqlE,cAAc;QACzCA,cAAc,CAAC,SAAS,CAAC,GAAG,EAAE;QAC9BA,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE;QAC7BA,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE;QACjCA,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE;MAC9B;MACA,IAAMvzH,IAAI,GAAGimB,QAAQ,CAACC,OAAO,CAAC,CAAC;MAC/B,IAAIlmB,IAAI,KAAK,oBAAoB,EAAE;QACjC,IAAMumB,UAAU,GACd,iEACEN,QAAQ,CACRutG,2BAA2B,CAAC,CAAC;QACjC,KAAK,IAAIn3H,EAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,EAAC,GAAGgI,EAAE,EAAE,EAAEhI,EAAC,EAAE;UACnD,IAAM4pB,SAAQ,GAAGM,UAAU,CAAClqB,EAAC,CAAC;UAC9Bk3H,cAAc,CAACttG,SAAQ,CAACC,OAAO,CAAC,CAAC,CAAChC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAACrgB,IAAI,CAC1DoiB,SAAQ,EACR0sB,KACF,CAAC;QACH;MACF,CAAC,MAAM;QACL4gF,cAAc,CAACvzH,IAAI,CAACkkB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAACrgB,IAAI,CAACoiB,QAAQ,EAAE0sB,KAAK,CAAC;MACjE;IACF;EACF;EAEA,IAAM8gF,UAAU,GAAGhyH,MAAM,CAACmD,IAAI,CAACquH,gBAAgB,CAAC,CAAC1oH,GAAG,CAACxI,MAAM,CAAC,CAACpE,IAAI,CAACnC,gBAAS,CAAC;EAC5E,KAAK,IAAIa,GAAC,GAAG,CAAC,EAAEgI,GAAE,GAAGovH,UAAU,CAAC93H,MAAM,EAAEU,GAAC,GAAGgI,GAAE,EAAE,EAAEhI,GAAC,EAAE;IACnD,IAAMk3H,eAAc,GAAGN,gBAAgB,CAACQ,UAAU,CAACp3H,GAAC,CAAC,CAAC;IACtD,KAAK,IAAM2D,KAAI,IAAIuzH,eAAc,EAAE;MACjC,IAAMG,YAAY,GAAGH,eAAc,CAACvzH,KAAI,CAAC;MACzC,KAAK,IAAI6X,EAAC,GAAG,CAAC,EAAEwO,GAAE,GAAGqtG,YAAY,CAAC/3H,MAAM,EAAEkc,EAAC,GAAGwO,GAAE,EAAExO,EAAC,IAAI,CAAC,EAAE;QACxDsmE,QAAQ,CAAC0L,QAAQ,CAAC6pC,YAAY,CAAC77G,EAAC,GAAG,CAAC,CAAC,CAAC;QACtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAE47G,EAAE,GAAGxoG,UAAU,CAACxvB,MAAM,EAAEoc,CAAC,GAAG47G,EAAE,EAAE,EAAE57G,CAAC,EAAE;UACnDomE,QAAQ,CAAC8yC,YAAY,CAAC9lG,UAAU,CAACpT,CAAC,CAAC,CAAC;UACpComE,QAAQ,CAACq5B,YAAY,CAACkc,YAAY,CAAC77G,EAAC,CAAC,CAAC;QACxC;MACF;IACF;EACF;EACA,OAAO+7B,OAAO,CAAC+7B,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEv8B,MAAM,CAACryB,KAAK,EAAEqyB,MAAM,CAACpyB,MAAM,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4yG,SAASA,CAACroH,KAAK,EAAEqmF,QAAQ,EAAEwF,SAAS,EAAE;EACpD;EACA,IAAMy8B,cAAc,GAAG,EAAE;EACzB,IAAIz8B,SAAS,EAAE;IACb,IAAMrgF,CAAC,GAAGrG,IAAI,CAACoI,KAAK,CAACpI,IAAI,CAACmI,KAAK,CAACtN,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGqnH,qBAAqB,CAAC;IAClE,IAAM57G,CAAC,GAAGtG,IAAI,CAACoI,KAAK,CAACpI,IAAI,CAACmI,KAAK,CAACtN,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGqnH,qBAAqB,CAAC;IAClE;IACA;IACA;IACA,IAAMl1H,KAAK,GACT,CAAC,IAAAiZ,WAAK,EAACI,CAAC,EAAE,CAAC,EAAEqgF,SAAS,CAACr2E,KAAK,GAAG,CAAC,CAAC,GAC/B,IAAApK,WAAK,EAACK,CAAC,EAAE,CAAC,EAAEogF,SAAS,CAACp2E,MAAM,GAAG,CAAC,CAAC,GAAGo2E,SAAS,CAACr2E,KAAK,IACrD,CAAC;IACH,IAAM3f,CAAC,GAAGg2F,SAAS,CAACx6F,IAAI,CAACc,KAAK,CAAC;IAC/B,IAAM85C,CAAC,GAAG4/C,SAAS,CAACx6F,IAAI,CAACc,KAAK,GAAG,CAAC,CAAC;IACnC,IAAM5B,CAAC,GAAGs7F,SAAS,CAACx6F,IAAI,CAACc,KAAK,GAAG,CAAC,CAAC;IACnC,IAAMrB,CAAC,GAAGP,CAAC,GAAG,GAAG,IAAI07C,CAAC,GAAG,GAAG,GAAGp2C,CAAC,CAAC;IACjC,IAAM4xH,WAAW,GAAGtiH,IAAI,CAACoI,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI84E,QAAQ,CAACj2F,MAAM,CAAC;IACvE,IAAIU,CAAC,IAAIA,CAAC,GAAG22H,WAAW,KAAK,CAAC,EAAE;MAC9Ba,cAAc,CAAChwH,IAAI,CAAC+tF,QAAQ,CAACv1F,CAAC,GAAG22H,WAAW,GAAG,CAAC,CAAC,CAAC;IACpD;EACF;EACA,OAAOa,cAAc;AACvB;;;;;;;;;;;AC7MA,IAAAroD,WAAA,GAAAjrE,sBAAA,CAAAnC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAkC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAJlC;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMmzH,kBAAkB,GAAG,GAAG;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,kBAAkB,GAAG;EACzB,OAAO,EAAEC,mBAAmB;EAC5B,YAAY,EAAEC,wBAAwB;EACtC,SAAS,EAAEC,qBAAqB;EAChC,YAAY,EAAEC,wBAAwB;EACtC,iBAAiB,EAAEC,6BAA6B;EAChD,cAAc,EAAEC,0BAA0B;EAC1C,oBAAoB,EAAEC,gCAAgC;EACtD,QAAQ,EAAEC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC/C,OAAOlyG,QAAQ,CAAC,IAAA/b,YAAM,EAACguH,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAGjyG,QAAQ,CAAC,IAAA/b,YAAM,EAACiuH,QAAQ,CAAC,EAAE,EAAE,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,mBAAmBA,CAACp7G,UAAU,EAAEmyD,UAAU,EAAE;EAC1D,IAAMjuD,SAAS,GAAGm3G,YAAY,CAACr7G,UAAU,EAAEmyD,UAAU,CAAC;EACtD,OAAOjuD,SAAS,GAAGA,SAAS;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASm3G,YAAYA,CAACr7G,UAAU,EAAEmyD,UAAU,EAAE;EACnD,OAAQooD,kBAAkB,GAAGv6G,UAAU,GAAImyD,UAAU;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6oD,oBAAoBA,CAACM,YAAY,EAAE5uG,QAAQ,EAAE0sB,KAAK,EAAEosC,OAAO,EAAErhF,KAAK,EAAE;EAC3E,IAAM4yE,SAAS,GAAG39B,KAAK,CAACglC,OAAO,CAAC,CAAC;EACjC,IAAM+B,WAAW,GAAG/mC,KAAK,CAACmlC,SAAS,CAAC,CAAC;EACrC,IAAIxH,SAAS,IAAIoJ,WAAW,EAAE;IAC5B,IAAMo7C,YAAY,GAAGD,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC;IACzEqmE,YAAY,CAACnc,kBAAkB,CAACroC,SAAS,EAAEoJ,WAAW,CAAC;IACvDo7C,YAAY,CAACrd,UAAU,CAACxxF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EACnD;EACA,IAAMs7G,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAIu6B,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC,EAAE;IACpC,IAAMs2C,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,CAAC;IAClC+b,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,CAAC;EACxC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASi2C,aAAaA,CAC3BC,WAAW,EACXl2C,OAAO,EACPpsC,KAAK,EACLzZ,gBAAgB,EAChBz1B,QAAQ,EACR0iB,SAAS,EACTsjE,SAAS,EACT/rF,KAAK,EACL;EACA,IAAMw3H,eAAe,GAAG,EAAE;EAC1B,IAAMrc,UAAU,GAAGlmE,KAAK,CAACq5B,QAAQ,CAAC,CAAC;EACnC,IAAI6sC,UAAU,EAAE;IACd,IAAInhC,QAAO,GAAG,IAAI;IAClB,IAAM7I,UAAU,GAAGgqC,UAAU,CAAC3qC,aAAa,CAAC,CAAC;IAC7C,IAAIW,UAAU,IAAIhD,mBAAU,CAACp6D,MAAM,IAAIo9D,UAAU,IAAIhD,mBAAU,CAACnyE,KAAK,EAAE;MACrEg+E,QAAO,GAAG,KAAK;IACjB,CAAC,MAAM;MACL,IAAI7I,UAAU,IAAIhD,mBAAU,CAACt6D,IAAI,EAAE;QACjCsnG,UAAU,CAACnjG,IAAI,CAAC,CAAC;MACnB;IACF;IACA,IAAIgiE,QAAO,EAAE;MACXw9C,eAAe,CAACrxH,IAAI,CAACg1G,UAAU,CAAC1qC,KAAK,CAAC,CAAC,CAAC;IAC1C;EACF;EACA,IAAMmC,SAAS,GAAG39B,KAAK,CAACglC,OAAO,CAAC,CAAC;EACjC,IAAIrH,SAAS,IAAIA,SAAS,CAACoH,OAAO,CAAC,CAAC,EAAE;IACpCw9C,eAAe,CAACrxH,IAAI,CAACysE,SAAS,CAACnC,KAAK,CAAC,CAAC,CAAC;EACzC;EACA,IAAMuJ,OAAO,GAAGw9C,eAAe,CAACv5H,MAAM,GAAG,CAAC;EAC1C,IAAI+7E,OAAO,EAAE;IACXl4E,OAAO,CAACw9C,GAAG,CAACk4E,eAAe,CAAC,CAACp9E,IAAI,CAAC;MAAA,OAAMr0C,QAAQ,CAAC,IAAI,CAAC;IAAA,EAAC;EACzD;EACA0xH,qBAAqB,CACnBF,WAAW,EACXl2C,OAAO,EACPpsC,KAAK,EACLzZ,gBAAgB,EAChB/S,SAAS,EACTsjE,SAAS,EACT/rF,KACF,CAAC;EAED,OAAOg6E,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASy9C,qBAAqBA,CAC5BF,WAAW,EACXl2C,OAAO,EACPpsC,KAAK,EACLzZ,gBAAgB,EAChB/S,SAAS,EACTsjE,SAAS,EACT/rF,KAAK,EACL;EACA,IAAMuoB,QAAQ,GAAG0sB,KAAK,CAACksC,mBAAmB,CAAC,CAAC,CAACE,OAAO,CAAC;EACrD,IAAI,CAAC94D,QAAQ,EAAE;IACb;EACF;EACA,IAAM6U,kBAAkB,GAAG7U,QAAQ,CAACmT,mBAAmB,CACrDF,gBAAgB,EAChB/S,SACF,CAAC;EACD,IAAMg4D,QAAQ,GAAGxrC,KAAK,CAACmgB,WAAW,CAAC,CAAC;EACpC,IAAIqrB,QAAQ,EAAE;IACZi3C,cAAc,CAACH,WAAW,EAAEn6F,kBAAkB,EAAE6X,KAAK,EAAEosC,OAAO,EAAErhF,KAAK,CAAC;EACxE,CAAC,MAAM;IACL,IAAM23H,gBAAgB,GAAGtB,kBAAkB,CAACj5F,kBAAkB,CAAC5U,OAAO,CAAC,CAAC,CAAC;IACzEmvG,gBAAgB,CACdJ,WAAW,EACXn6F,kBAAkB,EAClB6X,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL+rF,SACF,CAAC;EACH;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2rC,cAAcA,CAACH,WAAW,EAAEhvG,QAAQ,EAAE0sB,KAAK,EAAEosC,OAAO,EAAErhF,KAAK,EAAE;EACpE,IAAIuoB,QAAQ,CAACC,OAAO,CAAC,CAAC,IAAI,oBAAoB,EAAE;IAC9C,IAAMK,UAAU,GACd,8DACEN,QAAQ,CACRO,aAAa,CAAC,CAAC;IACnB,KAAK,IAAInqB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;MACnD+4H,cAAc,CAACH,WAAW,EAAE1uG,UAAU,CAAClqB,CAAC,CAAC,EAAEs2C,KAAK,EAAEosC,OAAO,EAAErhF,KAAK,CAAC;IACnE;IACA;EACF;EACA,IAAM0nH,MAAM,GAAG6P,WAAW,CAACjQ,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;EACnE22D,MAAM,CAAC7N,UAAU,CACf,0DAA4DtxF,QAAQ,EACpE84D,OAAO,EACPpsC,KAAK,CAACmgB,WAAW,CAAC,CAAC,EACnBngB,KAAK,CAACisC,uBAAuB,CAAC,CAAC,EAC/BlhF,KACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS42H,gCAAgCA,CACvCW,WAAW,EACXhvG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPu2C,qBAAqB,EACrB53H,KAAK,EACL;EACA,IAAM6oB,UAAU,GAAGN,QAAQ,CAACirG,kBAAkB,CAAC,CAAC;EAChD,IAAI70H,CAAC,EAAEgI,EAAE;EACT,KAAKhI,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC/C,IAAMg5H,gBAAgB,GAAGtB,kBAAkB,CAACxtG,UAAU,CAAClqB,CAAC,CAAC,CAAC6pB,OAAO,CAAC,CAAC,CAAC;IACpEmvG,gBAAgB,CACdJ,WAAW,EACX1uG,UAAU,CAAClqB,CAAC,CAAC,EACbs2C,KAAK,EACLosC,OAAO,EACPu2C,qBAAqB,EACrB53H,KACF,CAAC;EACH;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASu2H,wBAAwBA,CAC/BY,YAAY,EACZ5uG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL;EACA,IAAMg8E,WAAW,GAAG/mC,KAAK,CAACmlC,SAAS,CAAC,CAAC;EACrC,IAAI4B,WAAW,EAAE;IACf,IAAM67C,gBAAgB,GAAGV,YAAY,CAAC7P,UAAU,CAC9CryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EACjB,YACF,CAAC;IACD8mE,gBAAgB,CAAC5c,kBAAkB,CAAC,IAAI,EAAEj/B,WAAW,CAAC;IACtD67C,gBAAgB,CAACzd,cAAc,CAAC7xF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC3D;EACA,IAAMs7G,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAIu6B,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC,EAAE;IACpC,IAAMs2C,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,CAAC;IAClC+b,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS02H,6BAA6BA,CACpCS,YAAY,EACZ5uG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL;EACA,IAAMg8E,WAAW,GAAG/mC,KAAK,CAACmlC,SAAS,CAAC,CAAC;EACrC,IAAI4B,WAAW,EAAE;IACf,IAAM67C,gBAAgB,GAAGV,YAAY,CAAC7P,UAAU,CAC9CryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EACjB,YACF,CAAC;IACD8mE,gBAAgB,CAAC5c,kBAAkB,CAAC,IAAI,EAAEj/B,WAAW,CAAC;IACtD67C,gBAAgB,CAACvd,mBAAmB,CAAC/xF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAChE;EACA,IAAMs7G,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAIu6B,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC,EAAE;IACpC,IAAMs2C,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,CAAC;IAClC+b,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS22H,0BAA0BA,CACjCQ,YAAY,EACZ5uG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL;EACA,IAAM4yE,SAAS,GAAG39B,KAAK,CAACglC,OAAO,CAAC,CAAC;EACjC,IAAM+B,WAAW,GAAG/mC,KAAK,CAACmlC,SAAS,CAAC,CAAC;EACrC,IAAI4B,WAAW,IAAIpJ,SAAS,EAAE;IAC5B,IAAMklD,aAAa,GAAGX,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;IAC3E+mE,aAAa,CAAC7c,kBAAkB,CAACroC,SAAS,EAAEoJ,WAAW,CAAC;IACxD87C,aAAa,CAACpd,gBAAgB,CAACnyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC1D;EACA,IAAMs7G,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAIu6B,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC,EAAE;IACpC,IAAMs2C,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,CAAC;IAClC+b,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASs2H,mBAAmBA,CAC1Ba,YAAY,EACZ5uG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL+rF,SAAS,EACT;EACA,IAAMovB,UAAU,GAAGlmE,KAAK,CAACq5B,QAAQ,CAAC,CAAC;EACnC,IAAMgtC,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAMg3C,OAAO,GAAGzc,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC;EAChD;EACA,IAAMq6B,sBAAsB,GAC1BrvB,SAAS,IAAIovB,UAAU,IAAI4c,OAAO,GAAG,CAAC,CAAC,GAAG/wH,SAAS;EACrD,IAAIm0G,UAAU,EAAE;IACd,IAAIA,UAAU,CAAC3qC,aAAa,CAAC,CAAC,IAAIrC,mBAAU,CAACp6D,MAAM,EAAE;MACnD;IACF;IACA,IAAMikH,WAAW,GAAGb,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC;IACvEinE,WAAW,CAAC9c,aAAa,CAACC,UAAU,EAAEC,sBAAsB,CAAC;IAC7D4c,WAAW,CAACpd,SAAS,CAACryF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EACjD;EACA,IAAI+3H,OAAO,EAAE;IACX,IAAMV,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,EAAEF,sBAAsB,CAAC;IAC1Dic,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASy2H,wBAAwBA,CAC/BU,YAAY,EACZ5uG,QAAQ,EACR0sB,KAAK,EACLosC,OAAO,EACPrhF,KAAK,EACL+rF,SAAS,EACT;EACA,IAAMovB,UAAU,GAAGlmE,KAAK,CAACq5B,QAAQ,CAAC,CAAC;EACnC,IAAM2pD,QAAQ,GAAG9c,UAAU,IAAIA,UAAU,CAACnqD,UAAU,CAAC,CAAC,KAAK,CAAC;EAC5D,IAAMsqD,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAMg3C,OAAO,GAAGzc,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC;EAChD;EACA,IAAMq6B,sBAAsB,GAC1BrvB,SAAS,IAAIksC,QAAQ,IAAIF,OAAO,GAAG,CAAC,CAAC,GAAG/wH,SAAS;EACnD,IAAIixH,QAAQ,EAAE;IACZ,IAAI9c,UAAU,CAAC3qC,aAAa,CAAC,CAAC,IAAIrC,mBAAU,CAACp6D,MAAM,EAAE;MACnD;IACF;IACA,IAAMikH,WAAW,GAAGb,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC;IACvEinE,WAAW,CAAC9c,aAAa,CAACC,UAAU,EAAEC,sBAAsB,CAAC;IAC7D4c,WAAW,CAACxd,cAAc,CAACjyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EACtD;EACA,IAAI+3H,OAAO,EAAE;IACX,IAAMV,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,EAAEF,sBAAsB,CAAC;IAC1Dic,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASw2H,qBAAqBA,CAACW,YAAY,EAAE5uG,QAAQ,EAAE0sB,KAAK,EAAEosC,OAAO,EAAErhF,KAAK,EAAE;EAC5E,IAAM4yE,SAAS,GAAG39B,KAAK,CAACglC,OAAO,CAAC,CAAC;EACjC,IAAM+B,WAAW,GAAG/mC,KAAK,CAACmlC,SAAS,CAAC,CAAC;EACrC,IAAIxH,SAAS,IAAIoJ,WAAW,EAAE;IAC5B,IAAM87C,aAAa,GAAGX,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;IAC3E+mE,aAAa,CAAC7c,kBAAkB,CAACroC,SAAS,EAAEoJ,WAAW,CAAC;IACxD87C,aAAa,CAAChd,WAAW,CAACvyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EACrD;EACA,IAAMs7G,SAAS,GAAGrmE,KAAK,CAAC8rC,OAAO,CAAC,CAAC;EACjC,IAAIu6B,SAAS,IAAIA,SAAS,CAACv6B,OAAO,CAAC,CAAC,EAAE;IACpC,IAAMs2C,UAAU,GAAGF,YAAY,CAAC7P,UAAU,CAACryE,KAAK,CAAC8b,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC;IACrEsmE,UAAU,CAAChc,YAAY,CAACC,SAAS,CAAC;IAClC+b,UAAU,CAACrc,QAAQ,CAACzyF,QAAQ,EAAE84D,OAAO,EAAErhF,KAAK,CAAC;EAC/C;AACF;;;;;;;;ACjbA,IAAAgoC,SAAA,GAAAnlC,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAAoyB,WAAA,GAAApyB,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAg6B,QAAA,GAAAh6B,OAAA;AASA,IAAAi6B,KAAA,GAAAj6B,OAAA;AAOA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAw3H,aAAA,GAAAr1H,sBAAA,CAAAnC,OAAA;AACA,IAAAy3H,cAAA,GAAA7hH,uBAAA,CAAA5V,OAAA;AAKA,IAAA03H,UAAA,GAAA13H,OAAA;AAKA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAA23H,OAAA,GAAA33H,OAAA;AAMA,IAAAgrF,MAAA,GAAAp1E,uBAAA,CAAA5V,OAAA;AAA2D,SAAA6V,yBAAAtT,CAAA,6BAAAuT,OAAA,mBAAA9S,CAAA,OAAA8S,OAAA,IAAA7S,CAAA,OAAA6S,OAAA,YAAAD,wBAAA,YAAAA,CAAAtT,CAAA,WAAAA,CAAA,GAAAU,CAAA,GAAAD,CAAA,KAAAT,CAAA;AAAA,SAAAqT,wBAAArT,CAAA,EAAAS,CAAA,SAAAA,CAAA,IAAAT,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAtH,OAAA,EAAAsH,CAAA,QAAAU,CAAA,GAAA4S,wBAAA,CAAA7S,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAA8S,GAAA,CAAAxT,CAAA,UAAAU,CAAA,CAAAmG,GAAA,CAAA7G,CAAA,OAAAvE,CAAA,KAAAyG,SAAA,UAAAhH,CAAA,GAAA4F,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAqJ,wBAAA,WAAAsJ,CAAA,IAAAzT,CAAA,oBAAAyT,CAAA,OAAA3M,cAAA,CAAAzI,IAAA,CAAA2B,CAAA,EAAAyT,CAAA,SAAA/X,CAAA,GAAAR,CAAA,GAAA4F,MAAA,CAAAqJ,wBAAA,CAAAnK,CAAA,EAAAyT,CAAA,UAAA/X,CAAA,KAAAA,CAAA,CAAAmL,GAAA,IAAAnL,CAAA,CAAAgM,GAAA,IAAA5G,MAAA,CAAAC,cAAA,CAAAtF,CAAA,EAAAgY,CAAA,EAAA/X,CAAA,IAAAD,CAAA,CAAAgY,CAAA,IAAAzT,CAAA,CAAAyT,CAAA,YAAAhY,CAAA,CAAA/C,OAAA,GAAAsH,CAAA,EAAAU,CAAA,IAAAA,CAAA,CAAAgH,GAAA,CAAA1H,CAAA,EAAAvE,CAAA,GAAAA,CAAA;AAAA,SAAAmE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KA1C3D;AACA;AACA;AA0CA;AACA;AACA;AACA;AACA;AAJA,IAKMq1H,yBAAyB,0BAAAhvB,oBAAA;EAC7B;AACF;AACA;EACE,SAAAgvB,0BAAYC,WAAW,EAAE;IAAA,IAAA9yH,KAAA;IAAAxI,eAAA,OAAAq7H,yBAAA;IACvB7yH,KAAA,GAAAnB,UAAA,OAAAg0H,yBAAA,GAAMC,WAAW;;IAEjB;IACA9yH,KAAA,CAAK+yH,4BAA4B,GAAG/yH,KAAA,CAAKgzH,uBAAuB,CAACvzH,IAAI,CAAAO,KAAK,CAAC;;IAE3E;AACJ;AACA;AACA;IACIA,KAAA,CAAKizH,uBAAuB;;IAE5B;AACJ;AACA;AACA;IACIjzH,KAAA,CAAKkzH,sBAAsB,GAAG,IAAI;;IAElC;AACJ;AACA;AACA;IACIlzH,KAAA,CAAKmzH,QAAQ,GAAG,KAAK;;IAErB;AACJ;AACA;AACA;IACInzH,KAAA,CAAKozH,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACIpzH,KAAA,CAAKokG,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;AACA;IACIpkG,KAAA,CAAKqzH,mBAAmB,GAAG79F,GAAG;;IAE9B;AACJ;AACA;AACA;IACIx1B,KAAA,CAAKikG,eAAe,GAAG,IAAA1rF,oBAAW,EAAC,CAAC;;IAEpC;AACJ;AACA;AACA;IACIvY,KAAA,CAAKszH,sBAAsB,GAAG,IAAA/6G,oBAAW,EAAC,CAAC;;IAE3C;AACJ;AACA;AACA;IACIvY,KAAA,CAAKuzH,iBAAiB;;IAEtB;AACJ;AACA;AACA;IACIvzH,KAAA,CAAKwzH,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACIxzH,KAAA,CAAKyzH,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACIzzH,KAAA,CAAK0zH,mBAAmB,GAAG,CAAC;;IAE5B;AACJ;AACA;AACA;IACI1zH,KAAA,CAAK2zH,oBAAoB,GAAG,IAAI;;IAEhC;AACJ;AACA;AACA;IACI3zH,KAAA,CAAK4zH,uBAAuB;;IAE5B;AACJ;AACA;AACA;IACI5zH,KAAA,CAAK6zH,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACI7zH,KAAA,CAAK8zH,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACI9zH,KAAA,CAAK+zH,QAAQ,GAAG,IAAI;;IAEpB;AACJ;AACA;AACA;IACI/zH,KAAA,CAAKg0H,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACIh0H,KAAA,CAAKmyE,QAAQ,GAAG,CAAC;IAAC,OAAAnyE,KAAA;EACpB;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAkzH,yBAAA,EAAAhvB,oBAAA;EAAA,OAAAnsG,YAAA,CAAAm7H,yBAAA;IAAAl7H,GAAA;IAAAC,KAAA,EAMA,SAAAq8H,YAAYA,CAACC,aAAa,EAAE7sH,UAAU,EAAE8sH,aAAa,EAAE;MACrD,IAAMl+G,MAAM,GAAG5O,UAAU,CAAC4O,MAAM;MAChC,IAAMnD,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMD,MAAM,GAAGC,SAAS,CAACD,MAAM;MAC/B,IAAMuD,UAAU,GAAGtD,SAAS,CAACsD,UAAU;MACvC,IAAM2H,UAAU,GAAGjL,SAAS,CAACiL,UAAU;MACvC,IAAMvC,QAAQ,GAAG1I,SAAS,CAAC0I,QAAQ;MACnC,IAAMwC,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;MAC/C,IAAMm2G,YAAY,GAAG,IAAI,CAACzzB,QAAQ,CAAC,CAAC,CAACvnD,SAAS,CAAC,CAAC;MAChD,IAAMktC,SAAS,GAAG,IAAI,CAACqa,QAAQ,CAAC,CAAC,CAAC5wC,YAAY,CAAC,CAAC;MAChD,IAAMwY,UAAU,GAAGlhE,UAAU,CAACkhE,UAAU;MACxC,IAAM6nB,SAAS,GAAG/oF,UAAU,CAAC+oF,SAAS;MACtC,IAAMy1B,WAAW,GAAG,EAClBz1B,SAAS,CAAC1oD,iBAAQ,CAACv0B,SAAS,CAAC,IAAIi9E,SAAS,CAAC1oD,iBAAQ,CAACt0B,WAAW,CAAC,CACjE;MACD,IAAMq9B,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAM7yB,KAAK,GAAGrQ,IAAI,CAACmI,KAAK,CAAE,IAAAuF,iBAAQ,EAAChF,MAAM,CAAC,GAAGG,UAAU,GAAImyD,UAAU,CAAC;MACtE,IAAM1qD,MAAM,GAAGtQ,IAAI,CAACmI,KAAK,CAAE,IAAAwF,kBAAS,EAACjF,MAAM,CAAC,GAAGG,UAAU,GAAImyD,UAAU,CAAC;MAExE,IAAMjqD,UAAU,GAAG81G,YAAY,CAACvrC,QAAQ,CAAC,CAAC,IAAI9qE,UAAU,CAACG,QAAQ,CAAC,CAAC;MACnE,IAAMC,UAAU,GAAGG,UAAU,GAAG,IAAArD,iBAAQ,EAAC+C,gBAAgB,CAAC,GAAG,IAAI;MACjE,IAAMq2G,QAAQ,GAAG/1G,UAAU,GACvB/Q,IAAI,CAACqI,IAAI,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,IAAIG,UAAU,CAAC,GAAG,CAAC,GAC7D,CAAC;MACL,IAAIm2G,KAAK,GAAGh2G,UAAU,GAClB/Q,IAAI,CAACoI,KAAK,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,IAAIG,UAAU,CAAC,GAC1D,CAAC;MACL,GAAG;QACD,IAAI6E,SAAS,GAAG,IAAI,CAAC6/E,kBAAkB,CACrChwF,MAAM,EACNuD,UAAU,EACV,CAAC,EACDmyD,UAAU,EACV3qD,KAAK,EACLC,MAAM,EACNy2G,KAAK,GAAGn2G,UACV,CAAC;QACD,IAAI9W,UAAU,CAACi/E,SAAS,EAAE;UACxBtjE,SAAS,GAAGA,SAAS,CAACpnB,KAAK,CAAC,CAAC,CAAC;QAChC;QACAs4H,aAAa,CAAC9K,OAAO,CACnB34E,OAAO,EACP,CAACA,OAAO,CAACR,MAAM,CAACryB,KAAK,EAAE6yB,OAAO,CAACR,MAAM,CAACpyB,MAAM,CAAC,EAC7CmF,SAAS,EACTxH,QAAQ,EACRqqG,WAAW,EACXsO,aAAa,KAAK5yH,SAAS,GACvBgoH,kBAAG,GACH4K,aAAa,GACX3K,wBAAS,GACTC,4BAAa,EACnB0K,aAAa,GACT7tC,SAAS,IAAIj/E,UAAU,CAACi/E,SAAS,CAACA,SAAS,CAAC,GAC5C/kF,SACN,CAAC;MACH,CAAC,QAAQ,EAAE+yH,KAAK,GAAGD,QAAQ;IAC7B;;IAEA;AACF;AACA;EAFE;IAAA18H,GAAA;IAAAC,KAAA,EAGA,SAAA28H,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACpiD,QAAQ,KAAK,CAAC,EAAE;QACvB,IAAI,CAAC6hD,cAAc,GAAG,IAAI,CAACvjF,OAAO;QAClC,IAAI,CAACA,OAAO,GAAG,IAAAX,0BAAqB,EAClC,IAAI,CAACW,OAAO,CAACR,MAAM,CAACryB,KAAK,EACzB,IAAI,CAAC6yB,OAAO,CAACR,MAAM,CAACpyB,MAAM,EAC1BkyB,iBACF,CAAC;MACH;IACF;;IAEA;AACF;AACA;EAFE;IAAAp4C,GAAA;IAAAC,KAAA,EAGA,SAAA48H,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACriD,QAAQ,KAAK,CAAC,EAAE;QACvB,IAAMlY,KAAK,GAAG,IAAI,CAAC+5D,cAAc,CAACliD,WAAW;QAC7C,IAAI,CAACkiD,cAAc,CAACliD,WAAW,GAAG,IAAI,CAACK,QAAQ;QAC/C,IAAI,CAAC6hD,cAAc,CAACznD,SAAS,CAAC,IAAI,CAAC97B,OAAO,CAACR,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC+jF,cAAc,CAACliD,WAAW,GAAG7X,KAAK;QACvC,IAAAzpB,kBAAa,EAAC,IAAI,CAACC,OAAO,CAAC;QAC3BV,iBAAU,CAACrvC,IAAI,CAAC,IAAI,CAAC+vC,OAAO,CAACR,MAAM,CAAC;QACpC,IAAI,CAACQ,OAAO,GAAG,IAAI,CAACujF,cAAc;QAClC,IAAI,CAACA,cAAc,GAAG,IAAI;MAC5B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAr8H,GAAA;IAAAC,KAAA,EAIA,SAAAo4D,eAAeA,CAAC3oD,UAAU,EAAE;MAC1B,IAAI,CAAC,IAAI,CAACwsH,YAAY,IAAI,CAAC,IAAI,CAAClzB,QAAQ,CAAC,CAAC,CAAC5wC,YAAY,CAAC,CAAC,EAAE;QACzD;MACF;MACA,IAAI,CAACkkE,YAAY,CAAC,IAAI,CAACJ,YAAY,EAAExsH,UAAU,EAAE,IAAI,CAAC;IACxD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1P,GAAA;IAAAC,KAAA,EAKA,SAAA+qG,sBAAsBA,CAACt7F,UAAU,EAAE;MACjC,IAAI,CAAC,IAAI,CAACwsH,YAAY,EAAE;QACtB;MACF;MACA,IAAI,CAACA,YAAY,CAAC5jE,cAAc,CAAC,CAAC;MAClC,IAAI,IAAI,CAACkjE,QAAQ,EAAE;QACjB,IAAI,CAAC1iF,OAAO,CAACwhC,OAAO,CAAC,CAAC;MACxB;MACA,IAAI,CAACuiD,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA78H,GAAA;IAAAC,KAAA,EAOA,SAAAi4D,WAAWA,CAACxoD,UAAU,EAAEtO,MAAM,EAAE;MAC9B,IAAM60D,UAAU,GAAGvmD,UAAU,CAAC+nD,gBAAgB,CAAC/nD,UAAU,CAAC2iF,UAAU,CAAC;MACrE,IAAI,CAAC7X,QAAQ,GAAGvkB,UAAU,CAAC9C,OAAO;MAClC,IAAMh4C,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MAEtC,IAAI,CAACuvF,gBAAgB,CAACh7F,UAAU,EAAEtO,MAAM,CAAC;MACzC,IAAM03C,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B,IAAMqhF,WAAW,GAAG,IAAI,CAAC+B,YAAY;MACrC,IAAIlhF,MAAM,GAAGm/E,WAAW,IAAI,CAACA,WAAW,CAACn1H,OAAO,CAAC,CAAC;MAClD,IAAI,CAACg2C,MAAM,EAAE;QACX,IAAM8hF,kBAAkB,GACtB,IAAI,CAAC9zB,QAAQ,CAAC,CAAC,CAACn/F,WAAW,CAAC2uD,kBAAe,CAACtC,SAAS,CAAC,IACtD,IAAI,CAAC8yC,QAAQ,CAAC,CAAC,CAACn/F,WAAW,CAAC2uD,kBAAe,CAACxiD,UAAU,CAAC;QACzD,IAAI,CAAC8mH,kBAAkB,EAAE;UACvB,OAAO,IAAI;QACb;MACF;MAEA,IAAI,CAACF,eAAe,CAAC,CAAC;MAEtB,IAAI,CAAC9xB,SAAS,CAAChyD,OAAO,EAAEppC,UAAU,CAAC;MAEnC,IAAM0W,UAAU,GAAGjL,SAAS,CAACiL,UAAU;;MAEvC;MACA,IAAI,CAACo1G,QAAQ,GAAG,KAAK;MACrB,IAAIxgF,MAAM,IAAIib,UAAU,CAAC33C,MAAM,IAAI,IAAI,CAAC89G,QAAQ,EAAE;QAChD,IAAMxkE,WAAW,GAAG,IAAAr9B,oBAAc,EAAC07B,UAAU,CAAC33C,MAAM,EAAE8H,UAAU,CAAC;QACjE40B,MAAM,GAAG,IAAAhc,mBAAgB,EAAC44B,WAAW,EAAEloD,UAAU,CAAC4O,MAAM,CAAC;QACzD,IAAI,CAACk9G,QAAQ,GAAGxgF,MAAM,IAAI,CAAC,IAAAx5B,uBAAc,EAACo2C,WAAW,EAAEloD,UAAU,CAAC4O,MAAM,CAAC;QACzE,IAAI,IAAI,CAACk9G,QAAQ,EAAE;UACjB,IAAI,CAACpxB,aAAa,CAACtxD,OAAO,EAAEppC,UAAU,EAAEkoD,WAAW,CAAC;QACtD;MACF;MAEA,IAAI5c,MAAM,EAAE;QACV,IAAI,CAACshF,YAAY,CACfnC,WAAW,EACXzqH,UAAU,EACV,IAAI,CAACs5F,QAAQ,CAAC,CAAC,CAAC5wC,YAAY,CAAC,CAAC,GAAG,KAAK,GAAGxuD,SAC3C,CAAC;MACH;MAEA,IAAI,CAAC8F,UAAU,CAACi/E,SAAS,IAAI,IAAI,CAAC6sC,QAAQ,EAAE;QAC1C1iF,OAAO,CAACwhC,OAAO,CAAC,CAAC;MACnB;MAEA,IAAI,CAACywB,UAAU,CAACjyD,OAAO,EAAEppC,UAAU,CAAC;MAEpC,IAAI,IAAI,CAACksH,iBAAiB,KAAKzgH,SAAS,CAAC0I,QAAQ,EAAE;QACjD,IAAI,CAAC+3G,iBAAiB,GAAGzgH,SAAS,CAAC0I,QAAQ;QAC3C,IAAI,CAAC03G,sBAAsB,GAAG,IAAI;MACpC;MACA,IAAI,CAAC7rH,UAAU,CAACi/E,SAAS,EAAE;QACzB,IAAI,CAACkuC,iBAAiB,CAAC,CAAC;MAC1B;MACA,OAAO,IAAI,CAAC7qC,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhyF,GAAA;IAAAC,KAAA,EAOA,SAAAm3D,WAAWA,CAAC3mD,KAAK,EAAE;MAAA,IAAAlE,MAAA;MACjB,OAAO,IAAI7H,OAAO,CAAC,UAACE,OAAO,EAAK;QAC9B,IACE2H,MAAI,CAACmD,UAAU,IACf,CAACnD,MAAI,CAACgvH,sBAAsB,IAC5B,CAAChvH,MAAI,CAAC+uH,uBAAuB,EAC7B;UACA,IAAM58G,IAAI,GAAGnS,MAAI,CAACmD,UAAU,CAACgP,IAAI,CAACza,KAAK,CAAC,CAAC;UACzC,IAAMiX,MAAM,GAAG3O,MAAI,CAACsvH,eAAe;UACnC,IAAMp9G,UAAU,GAAGlS,MAAI,CAACmvH,mBAAmB;UAC3C,IAAM73G,QAAQ,GAAGtX,MAAI,CAACqvH,iBAAiB;UACvC,IAAMx1G,UAAU,GAAG7Z,MAAI,CAACuvH,mBAAmB;UAC3C,IAAMx9G,MAAM,GAAG/R,MAAI,CAACovH,sBAAsB;UAC1C,IAAMt6E,KAAK,GAAG90C,MAAI,CAACy8F,QAAQ,CAAC,CAAC;UAC7B,IAAM34E,UAAU,GAAG,EAAE;UACrB,IAAMpK,KAAK,GAAGvH,IAAI,CAAC,CAAC,CAAC,GAAGo5G,gCAAqB;UAC7C,IAAM5xG,MAAM,GAAGxH,IAAI,CAAC,CAAC,CAAC,GAAGo5G,gCAAqB;UAC9CznG,UAAU,CAACtnB,IAAI,CACbwD,MAAI,CAAC2+F,kBAAkB,CACrBhwF,MAAM,EACNuD,UAAU,EACVoF,QAAQ,EACRi0G,gCAAqB,EACrB7xG,KAAK,EACLC,MAAM,EACN,CACF,CAAC,CAACjiB,KAAK,CAAC,CACV,CAAC;UACD,IAAMyJ,MAAM,GAAG2zC,KAAK,CAACI,SAAS,CAAC,CAAC;UAChC,IAAMp7B,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;UAC/C,IACE5Y,MAAM,CAACwjF,QAAQ,CAAC,CAAC,IACjB9qE,UAAU,CAACG,QAAQ,CAAC,CAAC,IACrB,CAAC,IAAA/E,uBAAc,EAAC6E,gBAAgB,EAAE/H,MAAM,CAAC,EACzC;YACA,IAAImH,MAAM,GAAGnH,MAAM,CAAC,CAAC,CAAC;YACtB,IAAMkI,UAAU,GAAG,IAAAlD,iBAAQ,EAAC+C,gBAAgB,CAAC;YAC7C,IAAIs2G,KAAK,GAAG,CAAC;YACb,IAAI3uF,OAAO;YACX,OAAOvoB,MAAM,GAAGY,gBAAgB,CAAC,CAAC,CAAC,EAAE;cACnC,EAAEs2G,KAAK;cACP3uF,OAAO,GAAGxnB,UAAU,GAAGm2G,KAAK;cAC5BtsG,UAAU,CAACtnB,IAAI,CACbwD,MAAI,CAAC2+F,kBAAkB,CACrBhwF,MAAM,EACNuD,UAAU,EACVoF,QAAQ,EACRi0G,gCAAqB,EACrB7xG,KAAK,EACLC,MAAM,EACN8nB,OACF,CAAC,CAAC/pC,KAAK,CAAC,CACV,CAAC;cACDwhB,MAAM,IAAIe,UAAU;YACtB;YACAm2G,KAAK,GAAG,CAAC;YACTl3G,MAAM,GAAGnH,MAAM,CAAC,CAAC,CAAC;YAClB,OAAOmH,MAAM,GAAGY,gBAAgB,CAAC,CAAC,CAAC,EAAE;cACnC,EAAEs2G,KAAK;cACP3uF,OAAO,GAAGxnB,UAAU,GAAGm2G,KAAK;cAC5BtsG,UAAU,CAACtnB,IAAI,CACbwD,MAAI,CAAC2+F,kBAAkB,CACrBhwF,MAAM,EACNuD,UAAU,EACVoF,QAAQ,EACRi0G,gCAAqB,EACrB7xG,KAAK,EACLC,MAAM,EACN8nB,OACF,CAAC,CAAC/pC,KAAK,CAAC,CACV,CAAC;cACDwhB,MAAM,IAAIe,UAAU;YACtB;UACF;UACA,IAAMsT,cAAc,GAAG,IAAAG,uBAAiB,EAAC,CAAC;UAC1C1tB,MAAI,CAACgvH,sBAAsB,GAAG,IAAAxD,sCAA2B,EACvDr5G,IAAI,EACJ2R,UAAU,EACV9jB,MAAI,CAACkvH,iBAAiB,EACtBp6E,KAAK,CAACguC,gBAAgB,CAAC,CAAC,EACxB/wE,MAAM,EACNG,UAAU,EACVoF,QAAQ,EACR,IAAAk5G,2BAAyB,EAACt+G,UAAU,EAAElS,MAAI,CAACwvH,mBAAmB,CAAC,EAC/DjiG,cAAc,GAAG1T,UAAU,GAAG,IAChC,CAAC;QACH;QACAxhB,OAAO,CACL,IAAAk0H,oBAAS,EAACroH,KAAK,EAAElE,MAAI,CAACkvH,iBAAiB,EAAElvH,MAAI,CAACgvH,sBAAsB,CACtE,CAAC;MACH,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAv7H,GAAA;IAAAC,KAAA,EAUA,SAAAswF,0BAA0BA,CACxB5/E,UAAU,EACVjB,UAAU,EACV8gF,YAAY,EACZ1tE,QAAQ,EACRkuE,OAAO,EACP;MAAA,IAAAgsC,qBAAA;MACA,IAAI,CAAC,IAAI,CAACd,YAAY,EAAE;QACtB,OAAOtyH,SAAS;MAClB;MACA,IAAM6U,UAAU,GAAG/O,UAAU,CAACyL,SAAS,CAACsD,UAAU;MAClD,IAAMoF,QAAQ,GAAGnU,UAAU,CAACyL,SAAS,CAAC0I,QAAQ;MAC9C,IAAMw9B,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;;MAE7B;MACA,IAAMlS,QAAQ,GAAG,CAAC,CAAC;;MAEnB;AACJ;AACA;AACA;AACA;AACA;MACI,IAAMu4B,eAAe,GAAG,SAAlBA,eAAeA,CAAaprC,OAAO,EAAE94D,QAAQ,EAAEimE,UAAU,EAAE;QAC/D,IAAMpxF,GAAG,GAAG,IAAA2L,YAAM,EAACs4E,OAAO,CAAC;QAC3B,IAAM/uD,KAAK,GAAG4hE,QAAQ,CAAC92F,GAAG,CAAC;QAC3B,IAAI,CAACk1B,KAAK,EAAE;UACV,IAAIk8D,UAAU,KAAK,CAAC,EAAE;YACpB0F,QAAQ,CAAC92F,GAAG,CAAC,GAAG,IAAI;YACpB,OAAO8iB,QAAQ,CAACmhE,OAAO,EAAE5iC,KAAK,EAAEl2B,QAAQ,CAAC;UAC3C;UACA6lE,OAAO,CAACjoF,IAAI,CACT+tF,QAAQ,CAAC92F,GAAG,CAAC,GAAG;YACfikF,OAAO,EAAEA,OAAO;YAChB5iC,KAAK,EAAEA,KAAK;YACZl2B,QAAQ,EAAEA,QAAQ;YAClBimE,UAAU,EAAEA,UAAU;YACtBtuE,QAAQ,EAAEA;UACZ,CACF,CAAC;QACH,CAAC,MAAM,IAAIoS,KAAK,KAAK,IAAI,IAAIk8D,UAAU,GAAGl8D,KAAK,CAACk8D,UAAU,EAAE;UAC1D,IAAIA,UAAU,KAAK,CAAC,EAAE;YACpB0F,QAAQ,CAAC92F,GAAG,CAAC,GAAG,IAAI;YACpBgxF,OAAO,CAAC3uF,MAAM,CAAC2uF,OAAO,CAACuW,WAAW,CAACryE,KAAK,CAAC,EAAE,CAAC,CAAC;YAC7C,OAAOpS,QAAQ,CAACmhE,OAAO,EAAE5iC,KAAK,EAAEl2B,QAAQ,CAAC;UAC3C;UACA+J,KAAK,CAAC/J,QAAQ,GAAGA,QAAQ;UACzB+J,KAAK,CAACk8D,UAAU,GAAGA,UAAU;QAC/B;QACA,OAAOxnF,SAAS;MAClB,CAAC;MAED,IAAM+kF,SAAS,GAAG,IAAI,CAACqa,QAAQ,CAAC,CAAC,CAAC5wC,YAAY,CAAC,CAAC;MAChD,OAAO,IAAI,CAAC8jE,YAAY,CAAC3rC,0BAA0B,CACjD5/E,UAAU,EACV8N,UAAU,EACVoF,QAAQ,EACR2sE,YAAY,EACZ6+B,eAAe,EACf1gC,SAAS,IAAAquC,qBAAA,GACLttH,UAAU,CAACi/E,SAAS,cAAAquC,qBAAA,gBAAAA,qBAAA,GAApBA,qBAAA,CAAuBruC,SAAS,CAAC,cAAAquC,qBAAA,uBAAjCA,qBAAA,CAAmC96E,GAAG,CAAC,CAAC,CAACzyC,GAAG,CAAC,UAACT,IAAI;QAAA,OAAKA,IAAI,CAAC/O,KAAK;MAAA,EAAC,GAClE,IACN,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAC,KAAA,EAIA,SAAAq5F,kBAAkBA,CAAA,EAAG;MACnB,IAAMj4C,KAAK,GAAG,IAAI,CAAC2nD,QAAQ,CAAC,CAAC;MAC7B,IAAI3nD,KAAK,CAACwS,UAAU,CAAC,CAAC,IAAI,IAAI,CAACqoE,YAAY,EAAE;QAC3C76E,KAAK,CAACp2C,OAAO,CAAC,CAAC;MACjB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAo7H,uBAAuBA,CAACpyH,KAAK,EAAE;MAC7B,IAAI,CAACggG,uBAAuB,CAAC,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjpG,GAAA;IAAAC,KAAA,EAMA,SAAAg4D,YAAYA,CAACvoD,UAAU,EAAE;MAAA,IAAA6nD,MAAA;MACvB,IAAM4jE,WAAW,GAAG,IAAI,CAACnyB,QAAQ,CAAC,CAAC;MACnC,IAAMyzB,YAAY,GAAGtB,WAAW,CAAC15E,SAAS,CAAC,CAAC;MAC5C,IAAI,CAACg7E,YAAY,EAAE;QACjB,OAAO,KAAK;MACd;MAEA,IAAMQ,SAAS,GAAGvtH,UAAU,CAAC+oF,SAAS,CAAC1oD,iBAAQ,CAACv0B,SAAS,CAAC;MAC1D,IAAM0hH,WAAW,GAAGxtH,UAAU,CAAC+oF,SAAS,CAAC1oD,iBAAQ,CAACt0B,WAAW,CAAC;MAC9D,IAAM+yE,oBAAoB,GAAG2sC,WAAW,CAAC7rC,uBAAuB,CAAC,CAAC;MAClE,IAAMb,sBAAsB,GAAG0sC,WAAW,CAAC5rC,yBAAyB,CAAC,CAAC;MAEtE,IACG,IAAI,CAAClc,KAAK,IAAI,CAACmb,oBAAoB,IAAIyuC,SAAS,IAChD,CAACxuC,sBAAsB,IAAIyuC,WAAY,EACxC;QACA,IAAI,CAAC5B,uBAAuB,GAAG,IAAI;QACnC,OAAO,IAAI;MACb;MACA,IAAI,CAACA,uBAAuB,GAAG,KAAK;MAEpC,IAAM6B,gBAAgB,GAAGztH,UAAU,CAAC4O,MAAM;MAC1C,IAAMnD,SAAS,GAAGzL,UAAU,CAACyL,SAAS;MACtC,IAAMiL,UAAU,GAAGjL,SAAS,CAACiL,UAAU;MACvC,IAAM3H,UAAU,GAAGtD,SAAS,CAACsD,UAAU;MACvC,IAAMmyD,UAAU,GAAGlhE,UAAU,CAACkhE,UAAU;MACxC,IAAMwsD,mBAAmB,GAAGjC,WAAW,CAAChwH,WAAW,CAAC,CAAC;MACrD,IAAMkyH,uBAAuB,GAAGlC,WAAW,CAACjsC,eAAe,CAAC,CAAC;MAC7D,IAAIouC,sBAAsB,GAAGnC,WAAW,CAAChsC,cAAc,CAAC,CAAC;MAEzD,IAAImuC,sBAAsB,KAAK1zH,SAAS,EAAE;QACxC0zH,sBAAsB,GAAGC,oBAAkB;MAC7C;MAEA,IAAMriH,MAAM,GAAGC,SAAS,CAACD,MAAM,CAACjX,KAAK,CAAC,CAAC;MACvC,IAAMqa,MAAM,GAAG,IAAA6C,eAAM,EACnBg8G,gBAAgB,EAChBE,uBAAuB,GAAG5+G,UAC5B,CAAC;MACD,IAAM++G,cAAc,GAAGl/G,MAAM,CAACra,KAAK,CAAC,CAAC;MACrC,IAAMw5H,WAAW,GAAG,CAACn/G,MAAM,CAACra,KAAK,CAAC,CAAC,CAAC;MACpC,IAAMoiB,gBAAgB,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC;MAE/C,IACEm2G,YAAY,CAACvrC,QAAQ,CAAC,CAAC,IACvB9qE,UAAU,CAACG,QAAQ,CAAC,CAAC,IACrB,CAAC,IAAA/E,uBAAc,EAAC6E,gBAAgB,EAAE3W,UAAU,CAAC4O,MAAM,CAAC,EACpD;QACA;QACA;QACA;QACA;QACA;QACA,IAAMkI,UAAU,GAAG,IAAAlD,iBAAQ,EAAC+C,gBAAgB,CAAC;QAC7C,IAAMg4E,MAAM,GAAGzoF,IAAI,CAACmG,GAAG,CAAC,IAAAuH,iBAAQ,EAAChF,MAAM,CAAC,GAAG,CAAC,EAAEkI,UAAU,CAAC;QACzDlI,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,GAAGg4E,MAAM;QACxC//E,MAAM,CAAC,CAAC,CAAC,GAAG+H,gBAAgB,CAAC,CAAC,CAAC,GAAGg4E,MAAM;QACxC,IAAAq/B,iBAAe,EAACxiH,MAAM,EAAEkL,UAAU,CAAC;QACnC,IAAMu3G,UAAU,GAAG,IAAAC,cAAW,EAACH,WAAW,CAAC,CAAC,CAAC,EAAEr3G,UAAU,CAAC;QAC1D;QACA,IACEu3G,UAAU,CAAC,CAAC,CAAC,GAAGt3G,gBAAgB,CAAC,CAAC,CAAC,IACnCs3G,UAAU,CAAC,CAAC,CAAC,GAAGt3G,gBAAgB,CAAC,CAAC,CAAC,EACnC;UACAo3G,WAAW,CAAC10H,IAAI,CAAC,CACf40H,UAAU,CAAC,CAAC,CAAC,GAAGn3G,UAAU,EAC1Bm3G,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,GAAGn3G,UAAU,EAC1Bm3G,UAAU,CAAC,CAAC,CAAC,CACd,CAAC;QACJ,CAAC,MAAM,IACLA,UAAU,CAAC,CAAC,CAAC,GAAGt3G,gBAAgB,CAAC,CAAC,CAAC,IACnCs3G,UAAU,CAAC,CAAC,CAAC,GAAGt3G,gBAAgB,CAAC,CAAC,CAAC,EACnC;UACAo3G,WAAW,CAAC10H,IAAI,CAAC,CACf40H,UAAU,CAAC,CAAC,CAAC,GAAGn3G,UAAU,EAC1Bm3G,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,GAAGn3G,UAAU,EAC1Bm3G,UAAU,CAAC,CAAC,CAAC,CACd,CAAC;QACJ;MACF;MAEA,IACE,IAAI,CAACtqD,KAAK,IACV,IAAI,CAACqoD,mBAAmB,IAAIj9G,UAAU,IACtC,IAAI,CAACguF,iBAAiB,IAAI2wB,mBAAmB,IAC7C,IAAI,CAACpB,oBAAoB,IAAIsB,sBAAsB,IACnD,IAAI,CAACrB,uBAAuB,KAAK,CAAC,CAACvsH,UAAU,CAACi/E,SAAS,IACvD,IAAAntE,uBAAc,EAAC,IAAI,CAACm6G,sBAAsB,EAAEr9G,MAAM,CAAC,EACnD;QACA,IAAI,CAAC,IAAAhc,aAAM,EAAC,IAAI,CAACgqG,eAAe,EAAEkxB,cAAc,CAAC,EAAE;UACjD,IAAI,CAACjC,sBAAsB,GAAG,IAAI;UAClC,IAAI,CAACjvB,eAAe,GAAGkxB,cAAc;QACvC;QACA,IAAI,CAAC3B,eAAe,GAAG3gH,MAAM;QAC7B,IAAI,CAACihH,kBAAkB,GAAG,KAAK;QAC/B,OAAO,IAAI;MACb;MAEA,IAAI,CAACD,YAAY,GAAG,IAAI;MAExB,IAAM/B,WAAW,GAAG,IAAI0D,qBAAkB,CACxC,IAAAC,oBAAkB,EAACr/G,UAAU,EAAEmyD,UAAU,CAAC,EAC1CtyD,MAAM,EACNG,UAAU,EACVmyD,UACF,CAAC;MAED,IAAM92C,cAAc,GAAG,IAAAG,uBAAiB,EAAC,CAAC;MAC1C,IAAIi6F,aAAa;MACjB,IAAIp6F,cAAc,EAAE;QAClB,KAAK,IAAIv4B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGk0H,WAAW,CAAC58H,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UACpD,IAAM+c,OAAM,GAAGm/G,WAAW,CAACl8H,CAAC,CAAC;UAC7B,IAAMy2H,WAAU,GAAG,IAAA19F,kBAAY,EAAChc,OAAM,EAAE8H,UAAU,CAAC;UACnDq2G,YAAY,CAACsB,YAAY,CACvB/F,WAAU,EACV,IAAAx9F,sBAAgB,EAAC/b,UAAU,EAAE2H,UAAU,CAAC,EACxC0T,cACF,CAAC;QACH;QACAo6F,aAAa,GAAG,IAAA98F,iCAA2B,EAAC0C,cAAc,EAAE1T,UAAU,CAAC;MACzE,CAAC,MAAM;QACL,KAAK,IAAI7kB,EAAC,GAAG,CAAC,EAAEgI,GAAE,GAAGk0H,WAAW,CAAC58H,MAAM,EAAEU,EAAC,GAAGgI,GAAE,EAAE,EAAEhI,EAAC,EAAE;UACpDk7H,YAAY,CAACsB,YAAY,CAACN,WAAW,CAACl8H,EAAC,CAAC,EAAEkd,UAAU,EAAE2H,UAAU,CAAC;QACnE;MACF;MAEA,IAAMgY,gBAAgB,GAAG,IAAA2+F,2BAAyB,EAACt+G,UAAU,EAAEmyD,UAAU,CAAC;MAC1E,IAAIyC,KAAK,GAAG,IAAI;MAChB,IAAMr4B,MAAM;MACV;AACN;AACA;AACA;MACM,SALIA,MAAMA,CAKTipC,OAAO,EAAErhF,KAAK,EAAK;QAClB,IAAIwhF,MAAM;QACV,IAAMD,aAAa,GACjBF,OAAO,CAACoL,gBAAgB,CAAC,CAAC,IAAI8rC,WAAW,CAAC9rC,gBAAgB,CAAC,CAAC;QAC9D,IAAIlL,aAAa,EAAE;UACjBC,MAAM,GAAGD,aAAa,CAACF,OAAO,EAAExlE,UAAU,CAAC;QAC7C;QACA,IAAI2lE,MAAM,EAAE;UACV,IAAM45C,KAAK,GAAGzmE,MAAI,CAAC2iE,aAAa,CAC9Bj2C,OAAO,EACP7lD,gBAAgB,EAChBgmD,MAAM,EACN+1C,WAAW,EACXjG,aAAa,EACb38D,MAAI,CAACyxC,QAAQ,CAAC,CAAC,CAAC5wC,YAAY,CAAC,CAAC,EAC9Bx1D,KACF,CAAC;UACDywE,KAAK,GAAGA,KAAK,IAAI,CAAC2qD,KAAK;QACzB;MACF,CAAC;MAEH,IAAMhG,UAAU,GAAG,IAAA19F,kBAAY,EAAChc,MAAM,EAAE8H,UAAU,CAAC;MACnD;MACA,IAAM0wE,QAAQ,GAAG2lC,YAAY,CAACwB,mBAAmB,CAACjG,UAAU,CAAC;MAC7D,IAAIsF,sBAAsB,EAAE;QAC1BxmC,QAAQ,CAACj0F,IAAI,CAACy6H,sBAAsB,CAAC;MACvC;MACA,KAAK,IAAI/7H,GAAC,GAAG,CAAC,EAAEgI,IAAE,GAAGutF,QAAQ,CAACj2F,MAAM,EAAEU,GAAC,GAAGgI,IAAE,EAAE,EAAEhI,GAAC,EAAE;QACjDy5C,MAAM,CAAC87C,QAAQ,CAACv1F,GAAC,CAAC,EAAEA,GAAC,CAAC;MACxB;MACA,IAAI,CAACk6H,iBAAiB,GAAG3kC,QAAQ;MACjC,IAAI,CAACzjB,KAAK,GAAGA,KAAK;MAElB,IAAM6qD,uBAAuB,GAAG/D,WAAW,CAACx7E,MAAM,CAAC,CAAC;MACpD,IAAM49E,aAAa,GAAG,IAAIxK,sBAAa,CACrCzzG,MAAM,EACNG,UAAU,EACVmyD,UAAU,EACV6rD,YAAY,CAAC0B,WAAW,CAAC,CAAC,EAC1BD,uBAAuB,EACvB/C,WAAW,CAACjsC,eAAe,CAAC,CAAC,EAC7B,CAAC,CAACx/E,UAAU,CAACi/E,SACf,CAAC;MAED,IAAI,CAAC+sC,mBAAmB,GAAGj9G,UAAU;MACrC,IAAI,CAACguF,iBAAiB,GAAG2wB,mBAAmB;MAC5C,IAAI,CAACpB,oBAAoB,GAAGsB,sBAAsB;MAClD,IAAI,CAACrB,uBAAuB,GAAG,CAAC,CAACvsH,UAAU,CAACi/E,SAAS;MACrD,IAAI,CAAC2d,eAAe,GAAGkxB,cAAc;MACrC,IAAI,CAAC7B,sBAAsB,GAAGr9G,MAAM;MACpC,IAAI,CAACu9G,eAAe,GAAG3gH,MAAM;MAC7B,IAAI,CAAC4gH,mBAAmB,GAAG11G,UAAU;MACrC,IAAI,CAAC21G,mBAAmB,GAAGnrD,UAAU;MACrC,IAAI,CAACsrD,YAAY,GAAGK,aAAa;MACjC,IAAI,CAAChB,sBAAsB,GAAG,IAAI;MAElC,IAAI,CAACY,kBAAkB,GAAG,IAAI;MAC9B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAn8H,GAAA;IAAAC,KAAA,EAUA,SAAAi6H,aAAaA,CACXj2C,OAAO,EACP7lD,gBAAgB,EAChBgmD,MAAM,EACN21C,YAAY,EACZ1uG,SAAS,EACTsjE,SAAS,EACT/rF,KAAK,EACL;MACA,IAAI,CAACwhF,MAAM,EAAE;QACX,OAAO,KAAK;MACd;MACA,IAAIxH,OAAO,GAAG,KAAK;MACnB,IAAI56E,KAAK,CAACC,OAAO,CAACmiF,MAAM,CAAC,EAAE;QACzB,KAAK,IAAI7iF,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG66E,MAAM,CAACvjF,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC/Cq7E,OAAO,GACL,IAAAs9C,qBAAa,EACXH,YAAY,EACZ91C,OAAO,EACPG,MAAM,CAAC7iF,CAAC,CAAC,EACT68B,gBAAgB,EAChB,IAAI,CAACg9F,4BAA4B,EACjC/vG,SAAS,EACTsjE,SAAS,EACT/rF,KACF,CAAC,IAAIg6E,OAAO;QAChB;MACF,CAAC,MAAM;QACLA,OAAO,GAAG,IAAAs9C,qBAAa,EACrBH,YAAY,EACZ91C,OAAO,EACPG,MAAM,EACNhmD,gBAAgB,EAChB,IAAI,CAACg9F,4BAA4B,EACjC/vG,SAAS,EACTsjE,SAAS,EACT/rF,KACF,CAAC;MACH;MACA,OAAOg6E,OAAO;IAChB;EAAC;AAAA,EAvvBqC0sB,cAAmB;AAAA,IAAAjrG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA0vB5C28H,yBAAyB;;;;;;;;ACxyBxC,IAAAkD,YAAA,GAAA34H,sBAAA,CAAAnC,OAAA;AACA,IAAAouF,WAAA,GAAAjsF,sBAAA,CAAAnC,OAAA;AAA8C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAJ9C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,IAgBMw4H,WAAW,0BAAAC,gBAAA;EACf;AACF;AACA;EACE,SAAAD,YAAYhwH,OAAO,EAAE;IAAAxO,eAAA,OAAAw+H,WAAA;IAAA,OAAAn3H,UAAA,OAAAm3H,WAAA,GACbhwH,OAAO;EACf;;EAEA;AACF;AACA;EAFErG,SAAA,CAAAq2H,WAAA,EAAAC,gBAAA;EAAA,OAAAv+H,YAAA,CAAAs+H,WAAA;IAAAr+H,GAAA;IAAAC,KAAA,EAGA,SAAA24D,cAAcA,CAAA,EAAG;MACf,OAAO,IAAIsiE,oBAAyB,CAAC,IAAI,CAAC;IAC5C;EAAC;AAAA,EAbuB7sC,mBAAe;AAAA,IAAAhwF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAgB1B8/H,WAAW;;;;;;;;;;ACtF1B,IAAA34H,UAAA,GAAApC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAIi7H,eAAe,GAAG,KAAK;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAC7BtnB,GAAG,EACHhuF,MAAM,EACN5K,MAAM,EACNG,UAAU,EACV2H,UAAU,EACVq4G,OAAO,EACPC,OAAO,EACP;EACA,IAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;EAChCD,GAAG,CAACE,IAAI,CACN,KAAK,EACL,OAAO3nB,GAAG,KAAK,UAAU,GAAGA,GAAG,CAAC54F,MAAM,EAAEG,UAAU,EAAE2H,UAAU,CAAC,GAAG8wF,GAAG,EACrE,IACF,CAAC;EACD,IAAIhuF,MAAM,CAACkC,OAAO,CAAC,CAAC,IAAI,aAAa,EAAE;IACrCuzG,GAAG,CAACG,YAAY,GAAG,aAAa;EAClC;EACAH,GAAG,CAACJ,eAAe,GAAGA,eAAe;EACrC;AACF;AACA;AACA;EACEI,GAAG,CAAC78C,MAAM,GAAG,UAAU74E,KAAK,EAAE;IAC5B;IACA,IAAI,CAAC01H,GAAG,CAACI,MAAM,IAAKJ,GAAG,CAACI,MAAM,IAAI,GAAG,IAAIJ,GAAG,CAACI,MAAM,GAAG,GAAI,EAAE;MAC1D,IAAM75H,IAAI,GAAGgkB,MAAM,CAACkC,OAAO,CAAC,CAAC;MAC7B,IAAI;QACF;QACA,IAAI1d,MAAM;QACV,IAAIxI,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM,EAAE;UACpCwI,MAAM,GAAGixH,GAAG,CAACK,YAAY;QAC3B,CAAC,MAAM,IAAI95H,IAAI,IAAI,KAAK,EAAE;UACxBwI,MAAM,GAAGixH,GAAG,CAACM,WAAW,IAAIN,GAAG,CAACK,YAAY;QAC9C,CAAC,MAAM,IAAI95H,IAAI,IAAI,aAAa,EAAE;UAChCwI,MAAM,GAAG,0BAA4BixH,GAAG,CAACO,QAAS;QACpD;QACA,IAAIxxH,MAAM,EAAE;UACV+wH,OAAO,CACL;;UAEEv1G,MAAM,CAACi2G,YAAY,CAACzxH,MAAM,EAAE;YAC1B4Q,MAAM,EAAEA,MAAM;YACd8gH,iBAAiB,EAAEh5G;UACrB,CAAC,CAAC,EAEJ8C,MAAM,CAACm2G,cAAc,CAAC3xH,MAAM,CAC9B,CAAC;QACH,CAAC,MAAM;UACLgxH,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC,OAAA5rH,OAAA,EAAM;QACN4rH,OAAO,CAAC,CAAC;MACX;IACF,CAAC,MAAM;MACLA,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EACD;AACF;AACA;EACEC,GAAG,CAACW,OAAO,GAAGZ,OAAO;EACrBC,GAAG,CAACY,IAAI,CAAC,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASZ,GAAGA,CAACznB,GAAG,EAAEhuF,MAAM,EAAE;EAC/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAO,UAAU5K,MAAM,EAAEG,UAAU,EAAE2H,UAAU,EAAEq4G,OAAO,EAAEC,OAAO,EAAE;IAAA,IAAAr2H,KAAA;IACjEm2H,eAAe,CACbtnB,GAAG,EACHhuF,MAAM,EACN5K,MAAM,EACNG,UAAU,EACV2H,UAAU;IACV;AACN;AACA;AACA;AACA;IACM,UAAC0wE,QAAQ,EAAE0oC,cAAc,EAAK;MAC5Bn3H,KAAI,CAACo3H,WAAW,CAAC3oC,QAAQ,CAAC;MAC1B,IAAI2nC,OAAO,KAAK70H,SAAS,EAAE;QACzB60H,OAAO,CAAC3nC,QAAQ,CAAC;MACnB;IACF,CAAC,EACD,wBAAyB4nC,OAAO,GAAGA,OAAO,GAAGj7H,eAC/C,CAAC;EACH,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASi8H,kBAAkBA,CAACC,kBAAkB,EAAE;EACrDpB,eAAe,GAAGoB,kBAAkB;AACtC;;;;;;;;;;AChLA,IAAApiG,KAAA,GAAAj6B,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4+C,GAAGA,CAAC5jC,MAAM,EAAEG,UAAU,EAAE;EACtC,OAAO,CAAC,CAAC,CAACxH,QAAQ,EAAE,CAACA,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ,CAAC,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2oH,IAAIA,CAACthH,MAAM,EAAEG,UAAU,EAAE;EACvC,OAAO,CAACH,MAAM,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASpE,IAAIA,CAACyU,QAAQ,EAAE;EAC7B;IACE;AACJ;AACA;AACA;AACA;AACA;IACI,UAAUrQ,MAAM,EAAEG,UAAU,EAAE2H,UAAU,EAAE;MACxC,IAAM2jB,CAAC,GAAGpb,QAAQ,CAACs2E,iBAAiB,CAClC,IAAAtqE,wBAAkB,EAAClc,UAAU,EAAE2H,UAAU,CAC3C,CAAC;MACD,IAAM+2E,SAAS,GAAGxuE,QAAQ,CAACy2E,yBAAyB,CAClD,IAAA7qE,oBAAc,EAACjc,MAAM,EAAE8H,UAAU,CAAC,EAClC2jB,CACF,CAAC;MACD;MACA,IAAM81F,OAAO,GAAG,EAAE;MAClB;MACA,IAAMplC,SAAS,GAAG,CAAC1wD,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC3B,KACE0wD,SAAS,CAAC,CAAC,CAAC,GAAG0C,SAAS,CAACl+E,IAAI,EAC7Bw7E,SAAS,CAAC,CAAC,CAAC,IAAI0C,SAAS,CAACj+E,IAAI,EAC9B,EAAEu7E,SAAS,CAAC,CAAC,CAAC,EACd;QACA,KACEA,SAAS,CAAC,CAAC,CAAC,GAAG0C,SAAS,CAACh+E,IAAI,EAC7Bs7E,SAAS,CAAC,CAAC,CAAC,IAAI0C,SAAS,CAAC/9E,IAAI,EAC9B,EAAEq7E,SAAS,CAAC,CAAC,CAAC,EACd;UACAolC,OAAO,CAAC92H,IAAI,CACV,IAAAuxB,kBAAY,EAAC3L,QAAQ,CAACg2E,kBAAkB,CAAClK,SAAS,CAAC,EAAEr0E,UAAU,CACjE,CAAC;QACH;MACF;MACA,OAAOy5G,OAAO;IAChB;EAAC;AAEL;;;;;;;;;ACtEA,IAAAhyH,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AAAkD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAuwD,eAAAjwD,CAAA,cAAAF,SAAA,OAAAE,CAAA;AAAA,SAAAzG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KANlD;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA,IA6CMi6H,OAAO,0BAAA3xH,WAAA;EACX;AACF;AACA;AACA;AACA;AACA;EACE,SAAA2xH,QAAYC,oBAAoB,EAAE;IAAA,IAAA13H,KAAA;IAAAxI,eAAA,OAAAigI,OAAA;IAChCz3H,KAAA,GAAAnB,UAAA,OAAA44H,OAAA;;IAEA;AACJ;AACA;IACIz3H,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAK23H,GAAG,GAAGp2H,SAAS;;IAEpB;AACJ;AACA;AACA;IACIvB,KAAA,CAAK43H,aAAa,GAAG,UAAU;;IAE/B;AACJ;AACA;AACA;AACA;IACI53H,KAAA,CAAKwmF,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACIxmF,KAAA,CAAKymF,cAAc,GAAGllF,SAAS;;IAE/B;AACJ;AACA;AACA;IACIvB,KAAA,CAAK63H,kBAAkB,GAAG,IAAI;IAE9B73H,KAAA,CAAKgF,iBAAiB,CAAChF,KAAA,CAAK43H,aAAa,EAAE53H,KAAA,CAAK83H,sBAAsB,CAAC;IAEvE,IAAIJ,oBAAoB,EAAE;MACxB,IACE,QACE,gBAAkBA,oBAAoB,CAAE1hG,qBAAqB,CAC9D,KAAK,UAAU,EAChB;QACA,IAAMlT,QAAQ,GAAG,uBAAyB40G,oBAAqB;QAC/D13H,KAAA,CAAK+6E,WAAW,CAACj4D,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACL;QACA,IAAMghB,UAAU,GAAG4zF,oBAAoB;QACvC13H,KAAA,CAAKoE,aAAa,CAAC0/B,UAAU,CAAC;MAChC;IACF;IAAC,OAAA9jC,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAA83H,OAAA,EAAA3xH,WAAA;EAAA,OAAApO,YAAA,CAAA+/H,OAAA;IAAA9/H,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMA,KAAK,GAAG;MACZ,IAAI0+G,OAAO,CAAC,IAAI,CAAC9yH,aAAa,CAAC,CAAC,GAAG,IAAI,CAACH,aAAa,CAAC,CAAC,GAAG,IAAI,CAC/D;MACDuU,KAAK,CAACg/G,eAAe,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;MAC7C,IAAMl1G,QAAQ,GAAG,IAAI,CAACmhC,WAAW,CAAC,CAAC;MACnC,IAAInhC,QAAQ,EAAE;QACZ/J,KAAK,CAACgiE,WAAW,CAAC,uBAAyBj4D,QAAQ,CAAC/J,KAAK,CAAC,CAAE,CAAC;MAC/D;MACA,IAAMy2B,KAAK,GAAG,IAAI,CAACu3C,QAAQ,CAAC,CAAC;MAC7B,IAAIv3C,KAAK,EAAE;QACTz2B,KAAK,CAAC2tE,QAAQ,CAACl3C,KAAK,CAAC;MACvB;MACA,OAAOz2B,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAphB,GAAA;IAAAC,KAAA,EAQA,SAAAqsD,WAAWA,CAAA,EAAG;MACZ,OAAO,iCAAmC,IAAI,CAAC5/C,GAAG,CAAC,IAAI,CAACuzH,aAAa,CAAC;IACxE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjgI,GAAA;IAAAC,KAAA,EAOA,SAAAsoF,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACy3C,GAAG;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhgI,GAAA;IAAAC,KAAA,EAOA,SAAAogI,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACJ,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjgI,GAAA;IAAAC,KAAA,EAMA,SAAAmvF,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7uF,GAAA;IAAAC,KAAA,EAMA,SAAAovF,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACP,cAAc;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA9uF,GAAA;IAAAC,KAAA,EAGA,SAAAqgI,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACr1H,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAAkgI,sBAAsBA,CAAA,EAAG;MACvB,IAAI,IAAI,CAACD,kBAAkB,EAAE;QAC3B,IAAA71H,qBAAa,EAAC,IAAI,CAAC61H,kBAAkB,CAAC;QACtC,IAAI,CAACA,kBAAkB,GAAG,IAAI;MAChC;MACA,IAAM/0G,QAAQ,GAAG,IAAI,CAACmhC,WAAW,CAAC,CAAC;MACnC,IAAInhC,QAAQ,EAAE;QACZ,IAAI,CAAC+0G,kBAAkB,GAAG,IAAAn2H,cAAM,EAC9BohB,QAAQ,EACRjgB,kBAAS,CAACvM,MAAM,EAChB,IAAI,CAAC2hI,qBAAqB,EAC1B,IACF,CAAC;MACH;MACA,IAAI,CAACr1H,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAAmjF,WAAWA,CAACj4D,QAAQ,EAAE;MACpB,IAAI,CAAC5d,GAAG,CAAC,IAAI,CAAC0yH,aAAa,EAAE90G,QAAQ,CAAC;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAnrB,GAAA;IAAAC,KAAA,EASA,SAAA8uF,QAAQA,CAACl3C,KAAK,EAAE;MACd,IAAI,CAACg3C,MAAM,GAAGh3C,KAAK;MACnB,IAAI,CAACi3C,cAAc,GAAG,CAACj3C,KAAK,GAAGjuC,SAAS,GAAG22H,mBAAmB,CAAC1oF,KAAK,CAAC;MACrE,IAAI,CAAC5sC,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAjL,GAAA;IAAAC,KAAA,EASA,SAAAugI,KAAKA,CAACxrH,EAAE,EAAE;MACR,IAAI,CAACgrH,GAAG,GAAGhrH,EAAE;MACb,IAAI,CAAC/J,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAAmgI,eAAeA,CAAC//G,IAAI,EAAE;MACpB,IAAI,CAAC/S,oBAAoB,CAAC,IAAI,CAAC2yH,aAAa,EAAE,IAAI,CAACE,sBAAsB,CAAC;MAC1E,IAAI,CAACF,aAAa,GAAG5/G,IAAI;MACzB,IAAI,CAAChT,iBAAiB,CAAC,IAAI,CAAC4yH,aAAa,EAAE,IAAI,CAACE,sBAAsB,CAAC;MACvE,IAAI,CAACA,sBAAsB,CAAC,CAAC;IAC/B;EAAC;AAAA,EArOmB/zH,eAAU;AAwOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASm0H,mBAAmBA,CAACp+H,GAAG,EAAE;EACvC,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAC7B,OAAOA,GAAG;EACZ;EACA;AACF;AACA;EACE,IAAIiiF,MAAM;EACV,IAAIpiF,KAAK,CAACC,OAAO,CAACE,GAAG,CAAC,EAAE;IACtBiiF,MAAM,GAAGjiF,GAAG;EACd,CAAC,MAAM;IACL,IAAA0U,eAAM,EACJ,QAAQ,gBAAkB1U,GAAG,CAAEwxD,SAAS,CAAC,KAAK,UAAU,EACxD,iEACF,CAAC;IACD,IAAM9b,KAAK,GAAG,iDAAmD11C,GAAI;IACrEiiF,MAAM,GAAG,CAACvsC,KAAK,CAAC;EAClB;EACA,OAAO,YAAY;IACjB,OAAOusC,MAAM;EACf,CAAC;AACH;AAAC,IAAA/lF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACcuhI,OAAO;;;;;;;;AC7UtB,IAAAl4G,OAAA,GAAAtkB,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS29B,YAAYA,CAAC9e,eAAe,EAAEC,MAAM,EAAE8e,KAAK,EAAE7e,MAAM,EAAE;EACnE,IAAM0iB,WAAW,GAAG,EAAE;EACtB,IAAIzmB,MAAM,GAAG,IAAAsC,mBAAW,EAAC,CAAC;EAC1B,KAAK,IAAIrf,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC;IACrB+c,MAAM,GAAG,IAAA4D,yCAAiC,EACxCC,eAAe,EACfC,MAAM,EACN4e,IAAI,CAAC,CAAC,CAAC,EACP3e,MACF,CAAC;IACD0iB,WAAW,CAACh8B,IAAI,CAAC,CAACuV,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC1E8D,MAAM,GAAG4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAOkkC,WAAW;AACpB;;;;;;;;;;ACxBA,IAAA1hC,MAAA,GAAAC,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASm9H,gBAAgBA,CAC9Bt+G,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNkuB,QAAQ,EACRtvB,IAAI,EACJ8O,SAAS,EACT;EACA,IAAI/pB,CAAC,EAAEO,CAAC;EACR,IAAMjF,CAAC,GAAG,CAACK,GAAG,GAAGygB,MAAM,IAAIC,MAAM;EACjC,IAAI/gB,CAAC,KAAK,CAAC,EAAE;IACX0E,CAAC,GAAGoc,MAAM;EACZ,CAAC,MAAM,IAAI9gB,CAAC,KAAK,CAAC,EAAE;IAClB0E,CAAC,GAAGoc,MAAM;IACV7b,CAAC,GAAGgqC,QAAQ;EACd,CAAC,MAAM,IAAIjvC,CAAC,KAAK,CAAC,EAAE;IAClB,IAAI6a,EAAE,GAAGgG,eAAe,CAACC,MAAM,CAAC;IAChC,IAAIhG,EAAE,GAAG+F,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC;IACpC,IAAIvhB,MAAM,GAAG,CAAC;IACd,IAAM6/H,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAC7B,KAAK,IAAIn/H,CAAC,GAAG6gB,MAAM,GAAGC,MAAM,EAAE9gB,CAAC,GAAGI,GAAG,EAAEJ,CAAC,IAAI8gB,MAAM,EAAE;MAClD,IAAMhG,EAAE,GAAG8F,eAAe,CAAC5gB,CAAC,CAAC;MAC7B,IAAM+a,EAAE,GAAG6F,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;MACjCV,MAAM,IAAI+U,IAAI,CAAC2F,IAAI,CAAC,CAACc,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,GAAG,CAACG,EAAE,GAAGF,EAAE,KAAKE,EAAE,GAAGF,EAAE,CAAC,CAAC;MAClEskH,iBAAiB,CAAC33H,IAAI,CAAClI,MAAM,CAAC;MAC9Bsb,EAAE,GAAGE,EAAE;MACPD,EAAE,GAAGE,EAAE;IACT;IACA,IAAMlb,MAAM,GAAGmvC,QAAQ,GAAG1vC,MAAM;IAChC,IAAM+B,KAAK,GAAG,IAAAxC,mBAAY,EAACsgI,iBAAiB,EAAEt/H,MAAM,CAAC;IACrD,IAAIwB,KAAK,GAAG,CAAC,EAAE;MACb2D,CAAC,GACC,CAACnF,MAAM,GAAGs/H,iBAAiB,CAAC,CAAC99H,KAAK,GAAG,CAAC,CAAC,KACtC89H,iBAAiB,CAAC,CAAC99H,KAAK,GAAG,CAAC,CAAC,GAAG89H,iBAAiB,CAAC,CAAC99H,KAAK,GAAG,CAAC,CAAC,CAAC;MACjEoD,CAAC,GAAGoc,MAAM,GAAG,CAAC,CAACxf,KAAK,GAAG,CAAC,IAAIyf,MAAM;IACpC,CAAC,MAAM;MACLrc,CAAC,GAAGoc,MAAM,GAAGxf,KAAK,GAAGyf,MAAM;IAC7B;EACF;EACA0N,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC;EACzC9O,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,IAAIjf,KAAK,CAAC+tB,SAAS,CAAC;EACzC,KAAK,IAAIxuB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGwuB,SAAS,EAAE,EAAExuB,EAAC,EAAE;IAClC0f,IAAI,CAAC1f,EAAC,CAAC,GACLyE,CAAC,KAAK4D,SAAS,GACXi0B,GAAG,GACHt3B,CAAC,KAAKqD,SAAS,GACbuY,eAAe,CAACnc,CAAC,GAAGzE,EAAC,CAAC,GACtB,IAAAmc,UAAI,EAACyE,eAAe,CAACnc,CAAC,GAAGzE,EAAC,CAAC,EAAE4gB,eAAe,CAACnc,CAAC,GAAGqc,MAAM,GAAG9gB,EAAC,CAAC,EAAEgF,CAAC,CAAC;EAC1E;EACA,OAAO0a,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0/G,uBAAuBA,CACrCx+G,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNlF,CAAC,EACDyjH,WAAW,EACX;EACA,IAAIj/H,GAAG,IAAIygB,MAAM,EAAE;IACjB,OAAO,IAAI;EACb;EACA,IAAIzR,UAAU;EACd,IAAIwM,CAAC,GAAGgF,eAAe,CAACC,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC5C,IAAIu+G,WAAW,EAAE;MACfjwH,UAAU,GAAGwR,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEA,MAAM,GAAGC,MAAM,CAAC;MAC3D1R,UAAU,CAAC0R,MAAM,GAAG,CAAC,CAAC,GAAGlF,CAAC;MAC1B,OAAOxM,UAAU;IACnB;IACA,OAAO,IAAI;EACb;EACA,IAAIwR,eAAe,CAACxgB,GAAG,GAAG,CAAC,CAAC,GAAGwb,CAAC,EAAE;IAChC,IAAIyjH,WAAW,EAAE;MACfjwH,UAAU,GAAGwR,eAAe,CAACle,KAAK,CAACtC,GAAG,GAAG0gB,MAAM,EAAE1gB,GAAG,CAAC;MACrDgP,UAAU,CAAC0R,MAAM,GAAG,CAAC,CAAC,GAAGlF,CAAC;MAC1B,OAAOxM,UAAU;IACnB;IACA,OAAO,IAAI;EACb;EACA;EACA,IAAIwM,CAAC,IAAIgF,eAAe,CAACC,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC7C,OAAOF,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEA,MAAM,GAAGC,MAAM,CAAC;EACvD;EACA,IAAIw+G,EAAE,GAAGz+G,MAAM,GAAGC,MAAM;EACxB,IAAIy+G,EAAE,GAAGn/H,GAAG,GAAG0gB,MAAM;EACrB,OAAOw+G,EAAE,GAAGC,EAAE,EAAE;IACd,IAAMtgI,GAAG,GAAIqgI,EAAE,GAAGC,EAAE,IAAK,CAAC;IAC1B,IAAI3jH,CAAC,GAAGgF,eAAe,CAAC,CAAC3hB,GAAG,GAAG,CAAC,IAAI6hB,MAAM,GAAG,CAAC,CAAC,EAAE;MAC/Cy+G,EAAE,GAAGtgI,GAAG;IACV,CAAC,MAAM;MACLqgI,EAAE,GAAGrgI,GAAG,GAAG,CAAC;IACd;EACF;EACA,IAAMugI,EAAE,GAAG5+G,eAAe,CAAC0+G,EAAE,GAAGx+G,MAAM,GAAG,CAAC,CAAC;EAC3C,IAAIlF,CAAC,IAAI4jH,EAAE,EAAE;IACX,OAAO5+G,eAAe,CAACle,KAAK,CAAC,CAAC48H,EAAE,GAAG,CAAC,IAAIx+G,MAAM,EAAE,CAACw+G,EAAE,GAAG,CAAC,IAAIx+G,MAAM,GAAGA,MAAM,CAAC;EAC7E;EACA,IAAM2+G,EAAE,GAAG7+G,eAAe,CAAC,CAAC0+G,EAAE,GAAG,CAAC,IAAIx+G,MAAM,GAAG,CAAC,CAAC;EACjD,IAAM9b,CAAC,GAAG,CAAC4W,CAAC,GAAG4jH,EAAE,KAAKC,EAAE,GAAGD,EAAE,CAAC;EAC9BpwH,UAAU,GAAG,EAAE;EACf,KAAK,IAAIpP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,GAAG,CAAC,EAAE,EAAE9gB,CAAC,EAAE;IACnCoP,UAAU,CAAC5H,IAAI,CACb,IAAA2U,UAAI,EACFyE,eAAe,CAAC,CAAC0+G,EAAE,GAAG,CAAC,IAAIx+G,MAAM,GAAG9gB,CAAC,CAAC,EACtC4gB,eAAe,CAAC0+G,EAAE,GAAGx+G,MAAM,GAAG9gB,CAAC,CAAC,EAChCgF,CACF,CACF,CAAC;EACH;EACAoK,UAAU,CAAC5H,IAAI,CAACoU,CAAC,CAAC;EAClB,OAAOxM,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASswH,wBAAwBA,CACtC9+G,eAAe,EACfC,MAAM,EACN4e,IAAI,EACJ3e,MAAM,EACNlF,CAAC,EACDyjH,WAAW,EACX/lC,WAAW,EACX;EACA,IAAIA,WAAW,EAAE;IACf,OAAO8lC,uBAAuB,CAC5Bx+G,eAAe,EACfC,MAAM,EACN4e,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC,EACrBwhB,MAAM,EACNlF,CAAC,EACDyjH,WACF,CAAC;EACH;EACA,IAAIjwH,UAAU;EACd,IAAIwM,CAAC,GAAGgF,eAAe,CAACE,MAAM,GAAG,CAAC,CAAC,EAAE;IACnC,IAAIu+G,WAAW,EAAE;MACfjwH,UAAU,GAAGwR,eAAe,CAACle,KAAK,CAAC,CAAC,EAAEoe,MAAM,CAAC;MAC7C1R,UAAU,CAAC0R,MAAM,GAAG,CAAC,CAAC,GAAGlF,CAAC;MAC1B,OAAOxM,UAAU;IACnB;IACA,OAAO,IAAI;EACb;EACA,IAAIwR,eAAe,CAACA,eAAe,CAACthB,MAAM,GAAG,CAAC,CAAC,GAAGsc,CAAC,EAAE;IACnD,IAAIyjH,WAAW,EAAE;MACfjwH,UAAU,GAAGwR,eAAe,CAACle,KAAK,CAACke,eAAe,CAACthB,MAAM,GAAGwhB,MAAM,CAAC;MACnE1R,UAAU,CAAC0R,MAAM,GAAG,CAAC,CAAC,GAAGlF,CAAC;MAC1B,OAAOxM,UAAU;IACnB;IACA,OAAO,IAAI;EACb;EACA,KAAK,IAAIpP,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;IAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;IACnB,IAAI6gB,MAAM,IAAIzgB,GAAG,EAAE;MACjB;IACF;IACA,IAAIwb,CAAC,GAAGgF,eAAe,CAACC,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC,EAAE;MAC5C,OAAO,IAAI;IACb;IACA,IAAIlF,CAAC,IAAIgF,eAAe,CAACxgB,GAAG,GAAG,CAAC,CAAC,EAAE;MACjC,OAAOg/H,uBAAuB,CAC5Bx+G,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACNlF,CAAC,EACD,KACF,CAAC;IACH;IACAiF,MAAM,GAAGzgB,GAAG;EACd;EACA,OAAO,IAAI;AACb;;;;;;;;AC5MA,IAAAimB,OAAA,GAAAtkB,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAk6B,UAAA,GAAAl6B,OAAA;AAA2C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAN3C;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM0nF,MAAM,0BAAArpD,eAAA;EACV;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAqpD,OAAYryE,MAAM,EAAE0P,MAAM,EAAE+U,MAAM,EAAE;IAAA,IAAAt3B,KAAA;IAAAxI,eAAA,OAAA0tF,MAAA;IAClCllF,KAAA,GAAAnB,UAAA,OAAAqmF,MAAA;IACA,IAAI5tD,MAAM,KAAK/1B,SAAS,IAAIghB,MAAM,KAAKhhB,SAAS,EAAE;MAChDvB,KAAA,CAAK+3B,kBAAkB,CAACT,MAAM,EAAEzkB,MAAM,CAAC;IACzC,CAAC,MAAM;MACL0P,MAAM,GAAGA,MAAM,GAAGA,MAAM,GAAG,CAAC;MAC5BviB,KAAA,CAAK64H,kBAAkB,CAAChmH,MAAM,EAAE0P,MAAM,EAAE+U,MAAM,CAAC;IACjD;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAulF,MAAA,EAAArpD,eAAA;EAAA,OAAAnkC,YAAA,CAAAwtF,MAAA;IAAAvtF,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAM6G,MAAM,GAAG,IAAIslE,MAAM,CACvB,IAAI,CAACprE,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B2F,SAAS,EACT,IAAI,CAAC+1B,MACP,CAAC;MACD1X,MAAM,CAACxa,eAAe,CAAC,IAAI,CAAC;MAC5B,OAAOwa,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjoB,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAMtc,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM5F,EAAE,GAAGN,CAAC,GAAGkG,eAAe,CAAC,CAAC,CAAC;MACjC,IAAM3F,EAAE,GAAGN,CAAC,GAAGiG,eAAe,CAAC,CAAC,CAAC;MACjC,IAAM1F,eAAe,GAAGF,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;MACzC,IAAIC,eAAe,GAAGgiB,kBAAkB,EAAE;QACxC,IAAIhiB,eAAe,KAAK,CAAC,EAAE;UACzB,KAAK,IAAIlb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;YACpCi9B,YAAY,CAACj9B,CAAC,CAAC,GAAG4gB,eAAe,CAAC5gB,CAAC,CAAC;UACtC;QACF,CAAC,MAAM;UACL,IAAMwmB,KAAK,GAAG,IAAI,CAACG,SAAS,CAAC,CAAC,GAAGtS,IAAI,CAAC2F,IAAI,CAACkB,eAAe,CAAC;UAC3D+hB,YAAY,CAAC,CAAC,CAAC,GAAGrc,eAAe,CAAC,CAAC,CAAC,GAAG4F,KAAK,GAAGxL,EAAE;UACjDiiB,YAAY,CAAC,CAAC,CAAC,GAAGrc,eAAe,CAAC,CAAC,CAAC,GAAG4F,KAAK,GAAGvL,EAAE;UACjD,KAAK,IAAIjb,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAAC8gB,MAAM,EAAE,EAAE9gB,EAAC,EAAE;YACpCi9B,YAAY,CAACj9B,EAAC,CAAC,GAAG4gB,eAAe,CAAC5gB,EAAC,CAAC;UACtC;QACF;QACAi9B,YAAY,CAAC39B,MAAM,GAAG,IAAI,CAACwhB,MAAM;QACjC,OAAO5F,eAAe;MACxB;MACA,OAAOgiB,kBAAkB;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,IAAMiG,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM5F,EAAE,GAAGN,CAAC,GAAGkG,eAAe,CAAC,CAAC,CAAC;MACjC,IAAM3F,EAAE,GAAGN,CAAC,GAAGiG,eAAe,CAAC,CAAC,CAAC;MACjC,OAAO5F,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,IAAI,IAAI,CAAC2kH,iBAAiB,CAAC,CAAC;IACtD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnhI,GAAA;IAAAC,KAAA,EAKA,SAAAujB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACrB,eAAe,CAACle,KAAK,CAAC,CAAC,EAAE,IAAI,CAACoe,MAAM,CAAC;IACnD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAriB,GAAA;IAAAC,KAAA,EAMA,SAAA4+B,aAAaA,CAACvgB,MAAM,EAAE;MACpB,IAAM6D,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAMyI,MAAM,GAAGzI,eAAe,CAAC,IAAI,CAACE,MAAM,CAAC,GAAGF,eAAe,CAAC,CAAC,CAAC;MAChE,OAAO,IAAAjB,sBAAc,EACnBiB,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM,EAC3BzI,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM,EAC3BzI,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM,EAC3BzI,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM,EAC3BtM,MACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAte,GAAA;IAAAC,KAAA,EAKA,SAAAioB,SAASA,CAAA,EAAG;MACV,OAAOtS,IAAI,CAAC2F,IAAI,CAAC,IAAI,CAAC4lH,iBAAiB,CAAC,CAAC,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;EAHE;IAAAnhI,GAAA;IAAAC,KAAA,EAIA,SAAAkhI,iBAAiBA,CAAA,EAAG;MAClB,IAAM5kH,EAAE,GAAG,IAAI,CAAC4F,eAAe,CAAC,IAAI,CAACE,MAAM,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC;MACtE,IAAM3F,EAAE,GAAG,IAAI,CAAC2F,eAAe,CAAC,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC;MAC1E,OAAO5F,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxc,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,IAAM8iH,YAAY,GAAG,IAAI,CAAC96G,SAAS,CAAC,CAAC;MACrC,IAAI,IAAAtB,kBAAU,EAAC1G,MAAM,EAAE8iH,YAAY,CAAC,EAAE;QACpC,IAAMlmH,MAAM,GAAG,IAAI,CAACsI,SAAS,CAAC,CAAC;QAE/B,IAAIlF,MAAM,CAAC,CAAC,CAAC,IAAIpD,MAAM,CAAC,CAAC,CAAC,IAAIoD,MAAM,CAAC,CAAC,CAAC,IAAIpD,MAAM,CAAC,CAAC,CAAC,EAAE;UACpD,OAAO,IAAI;QACb;QACA,IAAIoD,MAAM,CAAC,CAAC,CAAC,IAAIpD,MAAM,CAAC,CAAC,CAAC,IAAIoD,MAAM,CAAC,CAAC,CAAC,IAAIpD,MAAM,CAAC,CAAC,CAAC,EAAE;UACpD,OAAO,IAAI;QACb;QAEA,OAAO,IAAA2H,qBAAa,EAACvE,MAAM,EAAE,IAAI,CAACsgB,oBAAoB,CAAC92B,IAAI,CAAC,IAAI,CAAC,CAAC;MACpE;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA9H,GAAA;IAAAC,KAAA,EAKA,SAAAg1C,SAASA,CAAC/5B,MAAM,EAAE;MAChB,IAAMmH,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMuI,MAAM,GAAG,IAAI,CAACzI,eAAe,CAACE,MAAM,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC;MACrE,IAAMA,eAAe,GAAGjH,MAAM,CAACjX,KAAK,CAAC,CAAC;MACtCke,eAAe,CAACE,MAAM,CAAC,GAAGF,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM;MACrD,KAAK,IAAIrpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,EAAE,EAAE9gB,CAAC,EAAE;QAC/B4gB,eAAe,CAACE,MAAM,GAAG9gB,CAAC,CAAC,GAAG2Z,MAAM,CAAC3Z,CAAC,CAAC;MACzC;MACA,IAAI,CAAC6+B,kBAAkB,CAAC,IAAI,CAACT,MAAM,EAAExd,eAAe,CAAC;MACrD,IAAI,CAAClX,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAihI,kBAAkBA,CAAChmH,MAAM,EAAE0P,MAAM,EAAE+U,MAAM,EAAE;MACzC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEzkB,MAAM,EAAE,CAAC,CAAC;MACjC,IAAI,CAAC,IAAI,CAACiH,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA;MACA,IAAMA,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAIC,MAAM,GAAG,IAAA4f,0BAAiB,EAAC7f,eAAe,EAAE,CAAC,EAAEjH,MAAM,EAAE,IAAI,CAACmH,MAAM,CAAC;MACvEF,eAAe,CAACC,MAAM,EAAE,CAAC,GAAGD,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM;MACvD,KAAK,IAAIrpB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG,IAAI,CAAC8Y,MAAM,EAAE9gB,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C4gB,eAAe,CAACC,MAAM,EAAE,CAAC,GAAGD,eAAe,CAAC5gB,CAAC,CAAC;MAChD;MACA4gB,eAAe,CAACthB,MAAM,GAAGuhB,MAAM;MAC/B,IAAI,CAACnX,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAAjL,GAAA;IAAAC,KAAA,EAGA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAAxrB,GAAA;IAAAC,KAAA,EAGA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE,CAAC;;IAErC;AACF;AACA;AACA;AACA;EAJE;IAAA3/B,GAAA;IAAAC,KAAA,EAKA,SAAAqgF,SAASA,CAAC11D,MAAM,EAAE;MAChB,IAAI,CAACzI,eAAe,CAAC,IAAI,CAACE,MAAM,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC,GAAGyI,MAAM;MACpE,IAAI,CAAC3f,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAspB,MAAMA,CAACC,KAAK,EAAE2T,MAAM,EAAE;MACpB,IAAMjiB,MAAM,GAAG,IAAI,CAACsI,SAAS,CAAC,CAAC;MAC/B,IAAMnB,MAAM,GAAG,IAAI,CAAC8d,SAAS,CAAC,CAAC;MAC/B,IAAI,CAAC8U,SAAS,CACZ,IAAA1rB,iBAAM,EAACrO,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACra,MAAM,EAAEwhB,MAAM,EAAEmH,KAAK,EAAE2T,MAAM,EAAEjiB,MAAM,CAChE,CAAC;MACD,IAAI,CAACjQ,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EA7OkBw0B,wBAAc;AAgPnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA8tD,MAAM,CAACvpF,SAAS,CAACqnB,SAAS;AAAC,IAAAhtB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACZgvF,MAAM;;;;;;;;AClRrB,IAAAjjF,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAMA,IAAAk8B,UAAA,GAAA/5B,sBAAA,CAAAnC,OAAA;AAAqC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAqJ,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAXrC;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMw7H,kBAAkB,0BAAA3hG,SAAA;EACtB;AACF;AACA;EACE,SAAA2hG,mBAAY51G,UAAU,EAAE;IAAA,IAAApjB,KAAA;IAAAxI,eAAA,OAAAwhI,kBAAA;IACtBh5H,KAAA,GAAAnB,UAAA,OAAAm6H,kBAAA;;IAEA;AACJ;AACA;AACA;IACIh5H,KAAA,CAAKi5H,WAAW,GAAG71G,UAAU;;IAE7B;AACJ;AACA;AACA;IACIpjB,KAAA,CAAKk5H,iBAAiB,GAAG,EAAE;IAE3Bl5H,KAAA,CAAKm5H,uBAAuB,CAAC,CAAC;IAAC,OAAAn5H,KAAA;EACjC;;EAEA;AACF;AACA;EAFEL,SAAA,CAAAq5H,kBAAA,EAAA3hG,SAAA;EAAA,OAAA3/B,YAAA,CAAAshI,kBAAA;IAAArhI,GAAA;IAAAC,KAAA,EAGA,SAAAwhI,yBAAyBA,CAAA,EAAG;MAC1B,IAAI,CAACF,iBAAiB,CAAC1yH,OAAO,CAACxE,qBAAa,CAAC;MAC7C,IAAI,CAACk3H,iBAAiB,CAAC1gI,MAAM,GAAG,CAAC;IACnC;;IAEA;AACF;AACA;EAFE;IAAAb,GAAA;IAAAC,KAAA,EAGA,SAAAuhI,uBAAuBA,CAAA,EAAG;MACxB,IAAM/1G,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAI,CAACggI,iBAAiB,CAACx4H,IAAI,CACzB,IAAAgB,cAAM,EAAC0hB,UAAU,CAAClqB,CAAC,CAAC,EAAE2J,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAACsM,OAAO,EAAE,IAAI,CAC5D,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMsgH,kBAAkB,GAAG,IAAIL,kBAAkB,CAC/CM,eAAe,CAAC,IAAI,CAACL,WAAW,CAClC,CAAC;MACDI,kBAAkB,CAACj0H,eAAe,CAAC,IAAI,CAAC;MACxC,OAAOi0H,kBAAkB;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1hI,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAMhT,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnDk9B,kBAAkB,GAAGhT,UAAU,CAAClqB,CAAC,CAAC,CAACg9B,cAAc,CAC/CtiB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;MACH;MACA,OAAOA,kBAAkB;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,IAAMuP,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAIkqB,UAAU,CAAClqB,CAAC,CAAC,CAACggB,UAAU,CAACtF,CAAC,EAAEC,CAAC,CAAC,EAAE;UAClC,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlc,GAAA;IAAAC,KAAA,EAMA,SAAA4+B,aAAaA,CAACvgB,MAAM,EAAE;MACpB,IAAAwD,2BAAmB,EAACxD,MAAM,CAAC;MAC3B,IAAMmN,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAAM,cAAM,EAACyc,MAAM,EAAEmN,UAAU,CAAClqB,CAAC,CAAC,CAAC+kB,SAAS,CAAC,CAAC,CAAC;MAC3C;MACA,OAAOhI,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAte,GAAA;IAAAC,KAAA,EAKA,SAAAyrB,aAAaA,CAAA,EAAG;MACd,OAAOi2G,eAAe,CAAC,IAAI,CAACL,WAAW,CAAC;IAC1C;;IAEA;AACF;AACA;EAFE;IAAAthI,GAAA;IAAAC,KAAA,EAGA,SAAAm2H,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACkL,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAAthI,GAAA;IAAAC,KAAA,EAGA,SAAAy4H,2BAA2BA,CAAA,EAAG;MAC5B;MACA,IAAIkJ,eAAe,GAAG,EAAE;MACxB,IAAMn2G,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAIkqB,UAAU,CAAClqB,CAAC,CAAC,CAAC6pB,OAAO,CAAC,CAAC,KAAK,IAAI,CAACA,OAAO,CAAC,CAAC,EAAE;UAC9Cw2G,eAAe,GAAGA,eAAe,CAACz0H,MAAM,CACtC,iCACEse,UAAU,CAAClqB,CAAC,CAAC,CACbm3H,2BAA2B,CAAC,CAChC,CAAC;QACH,CAAC,MAAM;UACLkJ,eAAe,CAAC74H,IAAI,CAAC0iB,UAAU,CAAClqB,CAAC,CAAC,CAAC;QACrC;MACF;MACA,OAAOqgI,eAAe;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5hI,GAAA;IAAAC,KAAA,EAMA,SAAAo+B,qBAAqBA,CAACD,gBAAgB,EAAE;MACtC,IAAI,IAAI,CAACH,0BAA0B,KAAK,IAAI,CAAC9yB,WAAW,CAAC,CAAC,EAAE;QAC1D,IAAI,CAAC6yB,wCAAwC,GAAG,CAAC;QACjD,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAAC9yB,WAAW,CAAC,CAAC;MACtD;MACA,IACEizB,gBAAgB,GAAG,CAAC,IACnB,IAAI,CAACJ,wCAAwC,KAAK,CAAC,IAClDI,gBAAgB,GAAG,IAAI,CAACJ,wCAAyC,EACnE;QACA,OAAO,IAAI;MACb;MAEA,IAAM6jG,oBAAoB,GAAG,EAAE;MAC/B,IAAMp2G,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,IAAIQ,UAAU,GAAG,KAAK;MACtB,KAAK,IAAIvgI,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAM4pB,QAAQ,GAAGM,UAAU,CAAClqB,CAAC,CAAC;QAC9B,IAAMy+B,kBAAkB,GACtB7U,QAAQ,CAACkT,qBAAqB,CAACD,gBAAgB,CAAC;QAClDyjG,oBAAoB,CAAC94H,IAAI,CAACi3B,kBAAkB,CAAC;QAC7C,IAAIA,kBAAkB,KAAK7U,QAAQ,EAAE;UACnC22G,UAAU,GAAG,IAAI;QACnB;MACF;MACA,IAAIA,UAAU,EAAE;QACd,IAAMC,4BAA4B,GAAG,IAAIV,kBAAkB,CACzDQ,oBACF,CAAC;QACD,OAAOE,4BAA4B;MACrC;MACA,IAAI,CAAC/jG,wCAAwC,GAAGI,gBAAgB;MAChE,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp+B,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,oBAAoB;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,IAAMmN,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnD,IAAIkqB,UAAU,CAAClqB,CAAC,CAAC,CAACy9B,gBAAgB,CAAC1gB,MAAM,CAAC,EAAE;UAC1C,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAAte,GAAA;IAAAC,KAAA,EAGA,SAAA+E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACs8H,WAAW,CAACzgI,MAAM,KAAK,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAb,GAAA;IAAAC,KAAA,EAQA,SAAAspB,MAAMA,CAACC,KAAK,EAAE2T,MAAM,EAAE;MACpB,IAAM1R,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnDkqB,UAAU,CAAClqB,CAAC,CAAC,CAACgoB,MAAM,CAACC,KAAK,EAAE2T,MAAM,CAAC;MACrC;MACA,IAAI,CAAClyB,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAjL,GAAA;IAAAC,KAAA,EAWA,SAAA0pB,KAAKA,CAAC2S,EAAE,EAAEC,EAAE,EAAEY,MAAM,EAAE;MACpB,IAAI,CAACA,MAAM,EAAE;QACXA,MAAM,GAAG,IAAA3Z,iBAAS,EAAC,IAAI,CAAC8C,SAAS,CAAC,CAAC,CAAC;MACtC;MACA,IAAMmF,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnDkqB,UAAU,CAAClqB,CAAC,CAAC,CAACooB,KAAK,CAAC2S,EAAE,EAAEC,EAAE,EAAEY,MAAM,CAAC;MACrC;MACA,IAAI,CAAClyB,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAA+hI,aAAaA,CAACv2G,UAAU,EAAE;MACxB,IAAI,CAACw2G,kBAAkB,CAACN,eAAe,CAACl2G,UAAU,CAAC,CAAC;IACtD;;IAEA;AACF;AACA;EAFE;IAAAzrB,GAAA;IAAAC,KAAA,EAGA,SAAAgiI,kBAAkBA,CAACx2G,UAAU,EAAE;MAC7B,IAAI,CAACg2G,yBAAyB,CAAC,CAAC;MAChC,IAAI,CAACH,WAAW,GAAG71G,UAAU;MAC7B,IAAI,CAAC+1G,uBAAuB,CAAC,CAAC;MAC9B,IAAI,CAACv2H,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAjL,GAAA;IAAAC,KAAA,EAUA,SAAA6lB,cAAcA,CAACC,WAAW,EAAE;MAC1B,IAAM0F,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnDkqB,UAAU,CAAClqB,CAAC,CAAC,CAACukB,cAAc,CAACC,WAAW,CAAC;MAC3C;MACA,IAAI,CAAC9a,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAjL,GAAA;IAAAC,KAAA,EAQA,SAAAi8B,SAASA,CAAC9gB,MAAM,EAAEC,MAAM,EAAE;MACxB,IAAMoQ,UAAU,GAAG,IAAI,CAAC61G,WAAW;MACnC,KAAK,IAAI//H,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGkiB,UAAU,CAAC5qB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACnDkqB,UAAU,CAAClqB,CAAC,CAAC,CAAC26B,SAAS,CAAC9gB,MAAM,EAAEC,MAAM,CAAC;MACzC;MACA,IAAI,CAACpQ,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAAjL,GAAA;IAAAC,KAAA,EAIA,SAAAE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACshI,yBAAyB,CAAC,CAAC;MAChC7xH,aAAA,CAAAyxH,kBAAA;IACF;EAAC;AAAA,EAjU8BvjG,kBAAQ;AAoUzC;AACA;AACA;AACA;AACA,SAAS6jG,eAAeA,CAACl2G,UAAU,EAAE;EACnC,OAAOA,UAAU,CAAChc,GAAG,CAAC,UAAC0b,QAAQ;IAAA,OAAKA,QAAQ,CAAC/J,KAAK,CAAC,CAAC;EAAA,EAAC;AACvD;AAAC,IAAA/iB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc8iI,kBAAkB;;;;;;;;AC5VjC,IAAAh+H,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAugC,QAAA,GAAAvgC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AACA,IAAA4+H,YAAA,GAAA5+H,OAAA;AACA,IAAA+jC,iBAAA,GAAA/jC,OAAA;AACA,IAAAooH,OAAA,GAAApoH,OAAA;AACA,IAAAmiC,SAAA,GAAAniC,OAAA;AACA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAAkD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAblD;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMs8H,UAAU,0BAAAj+F,eAAA;EACd;AACF;AACA;AACA;AACA;EACE,SAAAi+F,WAAYxhH,WAAW,EAAEgf,MAAM,EAAE;IAAA,IAAAt3B,KAAA;IAAAxI,eAAA,OAAAsiI,UAAA;IAC/B95H,KAAA,GAAAnB,UAAA,OAAAi7H,UAAA;;IAEA;AACJ;AACA;AACA;IACI95H,KAAA,CAAK+5H,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACI/5H,KAAA,CAAKg6H,qBAAqB,GAAG,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;IACIh6H,KAAA,CAAK87B,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACI97B,KAAA,CAAK+7B,iBAAiB,GAAG,CAAC,CAAC;IAE3B,IAAIzE,MAAM,KAAK/1B,SAAS,IAAI,CAAC5H,KAAK,CAACC,OAAO,CAAC0e,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1DtY,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;IACH,CAAC,MAAM;MACLtY,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAm6H,UAAA,EAAAj+F,eAAA;EAAA,OAAAnkC,YAAA,CAAAoiI,UAAA;IAAAniI,GAAA;IAAAC,KAAA,EAKA,SAAAqiI,gBAAgBA,CAAC3xH,UAAU,EAAE;MAC3B,IAAA9O,aAAM,EAAC,IAAI,CAACsgB,eAAe,EAAExR,UAAU,CAAC;MACxC,IAAI,CAAC1F,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMmhH,UAAU,GAAG,IAAIJ,UAAU,CAC/B,IAAI,CAAChgH,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC07B,MACP,CAAC;MACD4iG,UAAU,CAAC90H,eAAe,CAAC,IAAI,CAAC;MAChC,OAAO80H,UAAU;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAviI,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAI,IAAI,CAAC2F,iBAAiB,IAAI,IAAI,CAACj5B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAI,CAACg5B,SAAS,GAAGvuB,IAAI,CAAC2F,IAAI,CACxB,IAAA+lB,wBAAe,EACb,IAAI,CAACnf,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX,CACF,CACF,CAAC;QACD,IAAI,CAAC+hB,iBAAiB,GAAG,IAAI,CAACj5B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,IAAAw2B,2BAAkB,EACvB,IAAI,CAACxf,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX,IAAI,CAAC8hB,SAAS,EACd,KAAK,EACLloB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAz+B,GAAA;IAAAC,KAAA,EAWA,SAAA2lC,cAAcA,CAAC9iB,QAAQ,EAAE;MACvB,OAAO,IAAA8iB,iBAAc,EACnB,IAAI,CAACzjB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACXS,QACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAA9iB,GAAA;IAAAC,KAAA,EAcA,SAAAuiI,gBAAgBA,CAACrlH,CAAC,EAAEyjH,WAAW,EAAE;MAC/B,IAAI,IAAI,CAACjhG,MAAM,IAAI,KAAK,IAAI,IAAI,CAACA,MAAM,IAAI,MAAM,EAAE;QACjD,OAAO,IAAI;MACb;MACAihG,WAAW,GAAGA,WAAW,KAAKh3H,SAAS,GAAGg3H,WAAW,GAAG,KAAK;MAC7D,OAAO,IAAAD,oCAAuB,EAC5B,IAAI,CAACx+G,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACXlF,CAAC,EACDyjH,WACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5gI,GAAA;IAAAC,KAAA,EAMA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAA8W,2BAAkB,EACvB,IAAI,CAACngB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAriB,GAAA;IAAAC,KAAA,EAUA,SAAAwiI,eAAeA,CAAClyF,QAAQ,EAAEtvB,IAAI,EAAE;MAC9B,OAAO,IAAAw/G,6BAAgB,EACrB,IAAI,CAACt+G,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACXkuB,QAAQ,EACRtvB,IAAI,EACJ,IAAI,CAACoB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAriB,GAAA;IAAAC,KAAA,EAKA,SAAA0O,SAASA,CAAA,EAAG;MACV,OAAO,IAAA67G,wBAAgB,EACrB,IAAI,CAACroG,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MACP,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAAriB,GAAA;IAAAC,KAAA,EAGA,SAAAwnH,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAC4a,qBAAqB,IAAI,IAAI,CAACl3H,WAAW,CAAC,CAAC,EAAE;QAAA,IAAAu3H,mBAAA;QACpD,IAAI,CAACN,aAAa,GAAG,IAAI,CAACK,eAAe,CACvC,GAAG,GAAAC,mBAAA,GACH,IAAI,CAACN,aAAa,cAAAM,mBAAA,cAAAA,mBAAA,GAAI94H,SACxB,CAAC;QACD,IAAI,CAACy4H,qBAAqB,GAAG,IAAI,CAACl3H,WAAW,CAAC,CAAC;MACjD;MACA,OAAO,4BAA8B,IAAI,CAACi3H,aAAa;IACzD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApiI,GAAA;IAAAC,KAAA,EAMA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C;MACA,IAAM8B,yBAAyB,GAAG,EAAE;MACpCA,yBAAyB,CAACr/B,MAAM,GAAG,IAAA+hC,wBAAc,EAC/C,IAAI,CAACzgB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX+b,gBAAgB,EAChB8B,yBAAyB,EACzB,CACF,CAAC;MACD,OAAO,IAAIiiG,UAAU,CAACjiG,yBAAyB,EAAE,IAAI,CAAC;IACxD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlgC,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAAonB,sCAAoB,EACzB,IAAI,CAACvjB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MAAM,EACX/D,MAAM,EACN,IAAI,CAACgI,SAAS,CAAC,CACjB,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAtmB,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAI,CAACA,eAAe,CAACthB,MAAM,GAAG,IAAAohC,2BAAkB,EAC9C,IAAI,CAAC9f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MACP,CAAC;MACD,IAAI,CAACpX,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EAtSsBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAySxB4jI,UAAU;;;;;;;;AC3TzB,IAAA9+H,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAq/H,WAAA,GAAAl9H,sBAAA,CAAAnC,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAugC,QAAA,GAAAvgC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AACA,IAAA4+H,YAAA,GAAA5+H,OAAA;AAIA,IAAA+jC,iBAAA,GAAA/jC,OAAA;AACA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAAuD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAfvD;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM+8H,eAAe,0BAAA1+F,eAAA;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAA0+F,gBAAYjiH,WAAW,EAAEgf,MAAM,EAAEqB,IAAI,EAAE;IAAA,IAAA34B,KAAA;IAAAxI,eAAA,OAAA+iI,eAAA;IACrCv6H,KAAA,GAAAnB,UAAA,OAAA07H,eAAA;;IAEA;AACJ;AACA;AACA;IACIv6H,KAAA,CAAKm/B,KAAK,GAAG,EAAE;;IAEf;AACJ;AACA;AACA;IACIn/B,KAAA,CAAK87B,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACI97B,KAAA,CAAK+7B,iBAAiB,GAAG,CAAC,CAAC;IAE3B,IAAIpiC,KAAK,CAACC,OAAO,CAAC0e,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MACjCtY,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH,CAAC,MAAM,IAAIA,MAAM,KAAK/1B,SAAS,IAAIo3B,IAAI,EAAE;MACvC34B,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;MACDtY,KAAA,CAAKm/B,KAAK,GAAGxG,IAAI;IACnB,CAAC,MAAM;MACL,IAAM6hG,WAAW,GAAG,gCAAkCliH,WAAY;MAClE;MACA,IAAMwB,eAAe,GAAG,EAAE;MAC1B,IAAM6e,KAAI,GAAG,EAAE;MACf,KAAK,IAAIz/B,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGs5H,WAAW,CAAChiI,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACpD,IAAMghI,UAAU,GAAGM,WAAW,CAACthI,CAAC,CAAC;QACjC,IAAAM,aAAM,EAACsgB,eAAe,EAAEogH,UAAU,CAAC1iG,kBAAkB,CAAC,CAAC,CAAC;QACxDmB,KAAI,CAACj4B,IAAI,CAACoZ,eAAe,CAACthB,MAAM,CAAC;MACnC;MACA,IAAM8+B,OAAM,GACVkjG,WAAW,CAAChiI,MAAM,KAAK,CAAC,GACpBwH,KAAA,CAAK03B,SAAS,CAAC,CAAC,GAChB8iG,WAAW,CAAC,CAAC,CAAC,CAAC9iG,SAAS,CAAC,CAAC;MAChC13B,KAAA,CAAK+3B,kBAAkB,CAACT,OAAM,EAAExd,eAAe,CAAC;MAChD9Z,KAAA,CAAKm/B,KAAK,GAAGxG,KAAI;IACnB;IAAC,OAAA34B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA46H,eAAA,EAAA1+F,eAAA;EAAA,OAAAnkC,YAAA,CAAA6iI,eAAA;IAAA5iI,GAAA;IAAAC,KAAA,EAKA,SAAA6iI,gBAAgBA,CAACP,UAAU,EAAE;MAC3B,IAAA1gI,aAAM,EAAC,IAAI,CAACsgB,eAAe,EAAEogH,UAAU,CAAC1iG,kBAAkB,CAAC,CAAC,CAAC57B,KAAK,CAAC,CAAC,CAAC;MACrE,IAAI,CAACujC,KAAK,CAACz+B,IAAI,CAAC,IAAI,CAACoZ,eAAe,CAACthB,MAAM,CAAC;MAC5C,IAAI,CAACoK,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAM2hH,eAAe,GAAG,IAAIH,eAAe,CACzC,IAAI,CAACzgH,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC07B,MAAM,EACX,IAAI,CAAC6H,KAAK,CAACvjC,KAAK,CAAC,CACnB,CAAC;MACD8+H,eAAe,CAACt1H,eAAe,CAAC,IAAI,CAAC;MACrC,OAAOs1H,eAAe;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA/iI,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAI,IAAI,CAAC2F,iBAAiB,IAAI,IAAI,CAACj5B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAI,CAACg5B,SAAS,GAAGvuB,IAAI,CAAC2F,IAAI,CACxB,IAAAkmB,6BAAoB,EAClB,IAAI,CAACtf,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX,CACF,CACF,CAAC;QACD,IAAI,CAAC+hB,iBAAiB,GAAG,IAAI,CAACj5B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,IAAA22B,gCAAuB,EAC5B,IAAI,CAAC3f,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX,IAAI,CAAC8hB,SAAS,EACd,KAAK,EACLloB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EArBE;IAAAz+B,GAAA;IAAAC,KAAA,EAsBA,SAAAuiI,gBAAgBA,CAACrlH,CAAC,EAAEyjH,WAAW,EAAE/lC,WAAW,EAAE;MAC5C,IACG,IAAI,CAACl7D,MAAM,IAAI,KAAK,IAAI,IAAI,CAACA,MAAM,IAAI,MAAM,IAC9C,IAAI,CAACxd,eAAe,CAACthB,MAAM,KAAK,CAAC,EACjC;QACA,OAAO,IAAI;MACb;MACA+/H,WAAW,GAAGA,WAAW,KAAKh3H,SAAS,GAAGg3H,WAAW,GAAG,KAAK;MAC7D/lC,WAAW,GAAGA,WAAW,KAAKjxF,SAAS,GAAGixF,WAAW,GAAG,KAAK;MAC7D,OAAO,IAAAomC,qCAAwB,EAC7B,IAAI,CAAC9+G,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACXlF,CAAC,EACDyjH,WAAW,EACX/lC,WACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA76F,GAAA;IAAAC,KAAA,EAMA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAA+W,gCAAuB,EAC5B,IAAI,CAACpgB,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MACP,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAAriB,GAAA;IAAAC,KAAA,EAGA,SAAAgoC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACT,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxnC,GAAA;IAAAC,KAAA,EAMA,SAAA+iI,aAAaA,CAACpgI,KAAK,EAAE;MACnB,IAAIA,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC4kC,KAAK,CAAC3mC,MAAM,IAAI+B,KAAK,EAAE;QAC3C,OAAO,IAAI;MACb;MACA,OAAO,IAAIu/H,mBAAU,CACnB,IAAI,CAAChgH,eAAe,CAACle,KAAK,CACxBrB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC4kC,KAAK,CAAC5kC,KAAK,GAAG,CAAC,CAAC,EACvC,IAAI,CAAC4kC,KAAK,CAAC5kC,KAAK,CAClB,CAAC,EACD,IAAI,CAAC+8B,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3/B,GAAA;IAAAC,KAAA,EAKA,SAAAgjI,cAAcA,CAAA,EAAG;MACf,IAAM9gH,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM6e,IAAI,GAAG,IAAI,CAACwG,KAAK;MACvB,IAAM7H,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B;MACA,IAAMkjG,WAAW,GAAG,EAAE;MACtB,IAAIzgH,MAAM,GAAG,CAAC;MACd,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;QACnB,IAAMghI,UAAU,GAAG,IAAIJ,mBAAU,CAC/BhgH,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEzgB,GAAG,CAAC,EAClCg+B,MACF,CAAC;QACDkjG,WAAW,CAAC95H,IAAI,CAACw5H,UAAU,CAAC;QAC5BngH,MAAM,GAAGzgB,GAAG;MACd;MACA,OAAOkhI,WAAW;IACpB;;IAEA;AACF;AACA;EAFE;IAAA7iI,GAAA;IAAAC,KAAA,EAGA,SAAAynH,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAMwb,SAAS,GAAG,EAAE;MACpB,IAAM/gH,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAIC,MAAM,GAAG,CAAC;MACd,IAAM4e,IAAI,GAAG,IAAI,CAACwG,KAAK;MACvB,IAAMnlB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;QACnB,IAAM4hI,QAAQ,GAAG,IAAA1C,6BAAgB,EAC/Bt+G,eAAe,EACfC,MAAM,EACNzgB,GAAG,EACH0gB,MAAM,EACN,GACF,CAAC;QACD,IAAAxgB,aAAM,EAACqhI,SAAS,EAAEC,QAAQ,CAAC;QAC3B/gH,MAAM,GAAGzgB,GAAG;MACd;MACA,OAAOuhI,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAljI,GAAA;IAAAC,KAAA,EAMA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C;MACA,IAAM8B,yBAAyB,GAAG,EAAE;MACpC;MACA,IAAMkD,cAAc,GAAG,EAAE;MACzBlD,yBAAyB,CAACr/B,MAAM,GAAG,IAAAsiC,6BAAmB,EACpD,IAAI,CAAChhB,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX+b,gBAAgB,EAChB8B,yBAAyB,EACzB,CAAC,EACDkD,cACF,CAAC;MACD,OAAO,IAAIw/F,eAAe,CAAC1iG,yBAAyB,EAAE,IAAI,EAAEkD,cAAc,CAAC;IAC7E;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApjC,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,iBAAiB;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAAynB,2CAAyB,EAC9B,IAAI,CAAC5jB,eAAe,EACpB,CAAC,EACD,IAAI,CAACqlB,KAAK,EACV,IAAI,CAACnlB,MAAM,EACX/D,MACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAte,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAM6e,IAAI,GAAG,IAAAkB,gCAAuB,EAClC,IAAI,CAAC/f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MAAM,EACX,IAAI,CAACmlB,KACP,CAAC;MACD,IAAI,CAACrlB,eAAe,CAACthB,MAAM,GAAGmgC,IAAI,CAACngC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGmgC,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;MAC3E,IAAI,CAACoK,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EA1U2Bw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA6U7BqkI,eAAe;;;;;;;;ACjW9B,IAAAv/H,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAA8a,KAAA,GAAA9a,OAAA;AACA,IAAA6jC,MAAA,GAAA1hC,sBAAA,CAAAnC,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AAAqD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KATrD;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMu9H,UAAU,0BAAAl/F,eAAA;EACd;AACF;AACA;AACA;AACA;EACE,SAAAk/F,WAAYziH,WAAW,EAAEgf,MAAM,EAAE;IAAA,IAAAt3B,KAAA;IAAAxI,eAAA,OAAAujI,UAAA;IAC/B/6H,KAAA,GAAAnB,UAAA,OAAAk8H,UAAA;IACA,IAAIzjG,MAAM,IAAI,CAAC39B,KAAK,CAACC,OAAO,CAAC0e,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5CtY,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;IACH,CAAC,MAAM;MACLtY,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAAo7H,UAAA,EAAAl/F,eAAA;EAAA,OAAAnkC,YAAA,CAAAqjI,UAAA;IAAApjI,GAAA;IAAAC,KAAA,EAKA,SAAAojI,WAAWA,CAAC5zG,KAAK,EAAE;MACjB,IAAA5tB,aAAM,EAAC,IAAI,CAACsgB,eAAe,EAAEsN,KAAK,CAACoQ,kBAAkB,CAAC,CAAC,CAAC;MACxD,IAAI,CAAC50B,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMkiH,UAAU,GAAG,IAAIF,UAAU,CAC/B,IAAI,CAACjhH,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC07B,MACP,CAAC;MACD2jG,UAAU,CAAC71H,eAAe,CAAC,IAAI,CAAC;MAChC,OAAO61H,UAAU;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAtjI,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAMtc,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAME,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG4Y,eAAe,CAACthB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI8gB,MAAM,EAAE;QAChE,IAAM5F,eAAe,GAAG,IAAA+kB,qBAAS,EAC/BvlB,CAAC,EACDC,CAAC,EACDiG,eAAe,CAAC5gB,CAAC,CAAC,EAClB4gB,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CACvB,CAAC;QACD,IAAIkb,eAAe,GAAGgiB,kBAAkB,EAAE;UACxCA,kBAAkB,GAAGhiB,eAAe;UACpC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,MAAM,EAAE,EAAEtF,CAAC,EAAE;YAC/ByhB,YAAY,CAACzhB,CAAC,CAAC,GAAGoF,eAAe,CAAC5gB,CAAC,GAAGwb,CAAC,CAAC;UAC1C;UACAyhB,YAAY,CAAC39B,MAAM,GAAGwhB,MAAM;QAC9B;MACF;MACA,OAAOoc,kBAAkB;IAC3B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAurB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAA8W,2BAAkB,EACvB,IAAI,CAACngB,eAAe,EACpB,CAAC,EACD,IAAI,CAACA,eAAe,CAACthB,MAAM,EAC3B,IAAI,CAACwhB,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAriB,GAAA;IAAAC,KAAA,EAMA,SAAAsjI,QAAQA,CAAC3gI,KAAK,EAAE;MACd,IAAMtB,CAAC,GAAG,IAAI,CAAC6gB,eAAe,CAACthB,MAAM,GAAG,IAAI,CAACwhB,MAAM;MACnD,IAAIzf,KAAK,GAAG,CAAC,IAAItB,CAAC,IAAIsB,KAAK,EAAE;QAC3B,OAAO,IAAI;MACb;MACA,OAAO,IAAI0hC,cAAK,CACd,IAAI,CAACniB,eAAe,CAACle,KAAK,CACxBrB,KAAK,GAAG,IAAI,CAACyf,MAAM,EACnB,CAACzf,KAAK,GAAG,CAAC,IAAI,IAAI,CAACyf,MACrB,CAAC,EACD,IAAI,CAACsd,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3/B,GAAA;IAAAC,KAAA,EAKA,SAAA68E,SAASA,CAAA,EAAG;MACV,IAAM36D,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAMwd,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMtd,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B;MACA,IAAMi6D,MAAM,GAAG,EAAE;MACjB,KAAK,IAAI/6E,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG4Y,eAAe,CAACthB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI8gB,MAAM,EAAE;QAChE,IAAMoN,KAAK,GAAG,IAAI6U,cAAK,CAACniB,eAAe,CAACle,KAAK,CAAC1C,CAAC,EAAEA,CAAC,GAAG8gB,MAAM,CAAC,EAAEsd,MAAM,CAAC;QACrE28C,MAAM,CAACvzE,IAAI,CAAC0mB,KAAK,CAAC;MACpB;MACA,OAAO6sD,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAt8E,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,IAAM6D,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAME,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,KAAK,IAAI9gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG4Y,eAAe,CAACthB,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAEhI,CAAC,IAAI8gB,MAAM,EAAE;QAChE,IAAMpG,CAAC,GAAGkG,eAAe,CAAC5gB,CAAC,CAAC;QAC5B,IAAM2a,CAAC,GAAGiG,eAAe,CAAC5gB,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,IAAAggB,kBAAU,EAACjD,MAAM,EAAErC,CAAC,EAAEC,CAAC,CAAC,EAAE;UAC5B,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAlc,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAI,CAACA,eAAe,CAACthB,MAAM,GAAG,IAAAohC,2BAAkB,EAC9C,IAAI,CAAC9f,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MACP,CAAC;MACD,IAAI,CAACpX,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EAtLsBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAyLxB6kI,UAAU;;;;;;;;ACvMzB,IAAA//H,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAkgI,WAAA,GAAA/9H,sBAAA,CAAAnC,OAAA;AACA,IAAA0nC,QAAA,GAAAvlC,sBAAA,CAAAnC,OAAA;AACA,IAAAqgC,gBAAA,GAAAl+B,sBAAA,CAAAnC,OAAA;AACA,IAAAsgC,KAAA,GAAAtgC,OAAA;AACA,IAAAmgI,OAAA,GAAAngI,OAAA;AACA,IAAAugC,QAAA,GAAAvgC,OAAA;AAIA,IAAAuhC,SAAA,GAAAvhC,OAAA;AACA,IAAAwgC,QAAA,GAAAxgC,OAAA;AACA,IAAAygC,QAAA,GAAAzgC,OAAA;AACA,IAAA8jC,cAAA,GAAA9jC,OAAA;AACA,IAAA+jC,iBAAA,GAAA/jC,OAAA;AACA,IAAAgkC,OAAA,GAAAhkC,OAAA;AAIA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAAsD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAvBtD;AACA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM69H,YAAY,0BAAAx/F,eAAA;EAChB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAw/F,aAAY/iH,WAAW,EAAEgf,MAAM,EAAEuB,KAAK,EAAE;IAAA,IAAA74B,KAAA;IAAAxI,eAAA,OAAA6jI,YAAA;IACtCr7H,KAAA,GAAAnB,UAAA,OAAAw8H,YAAA;;IAEA;AACJ;AACA;AACA;IACIr7H,KAAA,CAAKs7H,MAAM,GAAG,EAAE;;IAEhB;AACJ;AACA;AACA;IACIt7H,KAAA,CAAKu7H,2BAA2B,GAAG,CAAC,CAAC;;IAErC;AACJ;AACA;AACA;IACIv7H,KAAA,CAAKw7H,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACIx7H,KAAA,CAAK87B,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACI97B,KAAA,CAAK+7B,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;AACA;IACI/7B,KAAA,CAAKs/B,iBAAiB,GAAG,CAAC,CAAC;;IAE3B;AACJ;AACA;AACA;IACIt/B,KAAA,CAAKu/B,wBAAwB,GAAG,IAAI;IAEpC,IAAI,CAAC1G,KAAK,IAAI,CAACl/B,KAAK,CAACC,OAAO,CAAC0e,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5C,IAAMmjH,QAAQ,GAAG,6BAA+BnjH,WAAY;MAC5D;MACA,IAAMwB,eAAe,GAAG,EAAE;MAC1B,IAAM4hH,SAAS,GAAG,EAAE;MACpB,KAAK,IAAIxiI,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGu6H,QAAQ,CAACjjI,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACjD,IAAMumC,OAAO,GAAGg8F,QAAQ,CAACviI,CAAC,CAAC;QAC3B,IAAM6gB,MAAM,GAAGD,eAAe,CAACthB,MAAM;QACrC,IAAMmgC,IAAI,GAAG8G,OAAO,CAACG,OAAO,CAAC,CAAC;QAC9B,KAAK,IAAIlrB,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGyV,IAAI,CAACngC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;UAC7CikB,IAAI,CAACjkB,CAAC,CAAC,IAAIqF,MAAM;QACnB;QACA,IAAAvgB,aAAM,EAACsgB,eAAe,EAAE2lB,OAAO,CAACjI,kBAAkB,CAAC,CAAC,CAAC;QACrDkkG,SAAS,CAACh7H,IAAI,CAACi4B,IAAI,CAAC;MACtB;MACArB,MAAM,GACJmkG,QAAQ,CAACjjI,MAAM,KAAK,CAAC,GAAGwH,KAAA,CAAK03B,SAAS,CAAC,CAAC,GAAG+jG,QAAQ,CAAC,CAAC,CAAC,CAAC/jG,SAAS,CAAC,CAAC;MACpEpf,WAAW,GAAGwB,eAAe;MAC7B+e,KAAK,GAAG6iG,SAAS;IACnB;IACA,IAAIpkG,MAAM,KAAK/1B,SAAS,IAAIs3B,KAAK,EAAE;MACjC74B,KAAA,CAAK+3B,kBAAkB,CACrBT,MAAM,EACN,4BAA8Bhf,WAChC,CAAC;MACDtY,KAAA,CAAKs7H,MAAM,GAAGziG,KAAK;IACrB,CAAC,MAAM;MACL74B,KAAA,CAAKi4B,cAAc,CACjB;MACE3f,WAAW,EAEbgf,MACF,CAAC;IACH;IAAC,OAAAt3B,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEL,SAAA,CAAA07H,YAAA,EAAAx/F,eAAA;EAAA,OAAAnkC,YAAA,CAAA2jI,YAAA;IAAA1jI,GAAA;IAAAC,KAAA,EAKA,SAAA+jI,aAAaA,CAACl8F,OAAO,EAAE;MACrB;MACA,IAAI9G,IAAI;MACR,IAAI,CAAC,IAAI,CAAC7e,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG2lB,OAAO,CAACjI,kBAAkB,CAAC,CAAC,CAAC57B,KAAK,CAAC,CAAC;QAC3D+8B,IAAI,GAAG8G,OAAO,CAACG,OAAO,CAAC,CAAC,CAAChkC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC0/H,MAAM,CAAC56H,IAAI,CAAC,CAAC;MACpB,CAAC,MAAM;QACL,IAAMqZ,MAAM,GAAG,IAAI,CAACD,eAAe,CAACthB,MAAM;QAC1C,IAAAgB,aAAM,EAAC,IAAI,CAACsgB,eAAe,EAAE2lB,OAAO,CAACjI,kBAAkB,CAAC,CAAC,CAAC;QAC1DmB,IAAI,GAAG8G,OAAO,CAACG,OAAO,CAAC,CAAC,CAAChkC,KAAK,CAAC,CAAC;QAChC,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC7Cy/B,IAAI,CAACz/B,CAAC,CAAC,IAAI6gB,MAAM;QACnB;MACF;MACA,IAAI,CAACuhH,MAAM,CAAC56H,IAAI,CAACi4B,IAAI,CAAC;MACtB,IAAI,CAAC/1B,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAmhB,KAAKA,CAAA,EAAG;MACN,IAAMhW,GAAG,GAAG,IAAI,CAACu4H,MAAM,CAAC9iI,MAAM;MAC9B,IAAMojI,QAAQ,GAAG,IAAIjiI,KAAK,CAACoJ,GAAG,CAAC;MAC/B,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6J,GAAG,EAAE,EAAE7J,CAAC,EAAE;QAC5B0iI,QAAQ,CAAC1iI,CAAC,CAAC,GAAG,IAAI,CAACoiI,MAAM,CAACpiI,CAAC,CAAC,CAAC0C,KAAK,CAAC,CAAC;MACtC;MAEA,IAAMigI,YAAY,GAAG,IAAIR,YAAY,CACnC,IAAI,CAACvhH,eAAe,CAACle,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC07B,MAAM,EACXskG,QACF,CAAC;MACDC,YAAY,CAACz2H,eAAe,CAAC,IAAI,CAAC;MAElC,OAAOy2H,YAAY;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAlkI,GAAA;IAAAC,KAAA,EAQA,SAAAs+B,cAAcA,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,EAAE;MACrD,IAAIA,kBAAkB,GAAG,IAAApd,gCAAwB,EAAC,IAAI,CAACiF,SAAS,CAAC,CAAC,EAAErK,CAAC,EAAEC,CAAC,CAAC,EAAE;QACzE,OAAOuiB,kBAAkB;MAC3B;MACA,IAAI,IAAI,CAAC2F,iBAAiB,IAAI,IAAI,CAACj5B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAI,CAACg5B,SAAS,GAAGvuB,IAAI,CAAC2F,IAAI,CACxB,IAAAmmB,kCAAyB,EACvB,IAAI,CAACvf,eAAe,EACpB,CAAC,EACD,IAAI,CAACwhH,MAAM,EACX,IAAI,CAACthH,MAAM,EACX,CACF,CACF,CAAC;QACD,IAAI,CAAC+hB,iBAAiB,GAAG,IAAI,CAACj5B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,IAAA42B,qCAA4B,EACjC,IAAI,CAACgG,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAAC47F,MAAM,EACX,IAAI,CAACthH,MAAM,EACX,IAAI,CAAC8hB,SAAS,EACd,IAAI,EACJloB,CAAC,EACDC,CAAC,EACDsiB,YAAY,EACZC,kBACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz+B,GAAA;IAAAC,KAAA,EAMA,SAAAshB,UAAUA,CAACtF,CAAC,EAAEC,CAAC,EAAE;MACf,OAAO,IAAA0oB,gCAAsB,EAC3B,IAAI,CAACmD,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAAC47F,MAAM,EACX,IAAI,CAACthH,MAAM,EACXpG,CAAC,EACDC,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlc,GAAA;IAAAC,KAAA,EAKA,SAAAmjB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAA+gH,kBAAgB,EACrB,IAAI,CAACp8F,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAAC47F,MAAM,EACX,IAAI,CAACthH,MACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAAriB,GAAA;IAAAC,KAAA,EAcA,SAAAurB,cAAcA,CAAC+a,KAAK,EAAE;MACpB,IAAIpkB,eAAe;MACnB,IAAIokB,KAAK,KAAK38B,SAAS,EAAE;QACvBuY,eAAe,GAAG,IAAI,CAAC4lB,0BAA0B,CAAC,CAAC,CAAC9jC,KAAK,CAAC,CAAC;QAC3D,IAAA4iC,8BAAsB,EACpB1kB,eAAe,EACf,CAAC,EACD,IAAI,CAACwhH,MAAM,EACX,IAAI,CAACthH,MAAM,EACXkkB,KACF,CAAC;MACH,CAAC,MAAM;QACLpkB,eAAe,GAAG,IAAI,CAACA,eAAe;MACxC;MAEA,OAAO,IAAAqgB,qCAA4B,EACjCrgB,eAAe,EACf,CAAC,EACD,IAAI,CAACwhH,MAAM,EACX,IAAI,CAACthH,MACP,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAAriB,GAAA;IAAAC,KAAA,EAGA,SAAAohH,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACsiB,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAA3jI,GAAA;IAAAC,KAAA,EAGA,SAAA0nH,qBAAqBA,CAAA,EAAG;MACtB,IAAI,IAAI,CAACic,2BAA2B,IAAI,IAAI,CAACz4H,WAAW,CAAC,CAAC,EAAE;QAC1D,IAAM45B,WAAW,GAAG,IAAAq/F,oBAAkB,EACpC,IAAI,CAACjiH,eAAe,EACpB,CAAC,EACD,IAAI,CAACwhH,MAAM,EACX,IAAI,CAACthH,MACP,CAAC;QACD,IAAI,CAACwhH,mBAAmB,GAAG,IAAAv+F,4CAA6B,EACtD,IAAI,CAACyC,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAAC47F,MAAM,EACX,IAAI,CAACthH,MAAM,EACX0iB,WACF,CAAC;QACD,IAAI,CAAC6+F,2BAA2B,GAAG,IAAI,CAACz4H,WAAW,CAAC,CAAC;MACvD;MACA,OAAO,4BAA8B,IAAI,CAAC04H,mBAAmB;IAC/D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7jI,GAAA;IAAAC,KAAA,EAMA,SAAAokI,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAIjB,mBAAU,CAAC,IAAI,CAACzb,qBAAqB,CAAC,CAAC,CAAC1jH,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;IACpE;;IAEA;AACF;AACA;EAFE;IAAAjE,GAAA;IAAAC,KAAA,EAGA,SAAA8nC,0BAA0BA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAACJ,iBAAiB,IAAI,IAAI,CAACx8B,WAAW,CAAC,CAAC,EAAE;QAChD,IAAMgX,eAAe,GAAG,IAAI,CAACA,eAAe;QAC5C,IACE,IAAAskB,+BAAuB,EAACtkB,eAAe,EAAE,CAAC,EAAE,IAAI,CAACwhH,MAAM,EAAE,IAAI,CAACthH,MAAM,CAAC,EACrE;UACA,IAAI,CAACulB,wBAAwB,GAAGzlB,eAAe;QACjD,CAAC,MAAM;UACL,IAAI,CAACylB,wBAAwB,GAAGzlB,eAAe,CAACle,KAAK,CAAC,CAAC;UACvD,IAAI,CAAC2jC,wBAAwB,CAAC/mC,MAAM,GAAG,IAAAgmC,8BAAsB,EAC3D,IAAI,CAACe,wBAAwB,EAC7B,CAAC,EACD,IAAI,CAAC+7F,MAAM,EACX,IAAI,CAACthH,MACP,CAAC;QACH;QACA,IAAI,CAACslB,iBAAiB,GAAG,IAAI,CAACx8B,WAAW,CAAC,CAAC;MAC7C;MACA,OAAO,4BAA8B,IAAI,CAACy8B,wBAAwB;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5nC,GAAA;IAAAC,KAAA,EAMA,SAAAggC,6BAA6BA,CAAC7B,gBAAgB,EAAE;MAC9C;MACA,IAAM8B,yBAAyB,GAAG,EAAE;MACpC;MACA,IAAMoD,eAAe,GAAG,EAAE;MAC1BpD,yBAAyB,CAACr/B,MAAM,GAAG,IAAA6iC,4BAAkB,EACnD,IAAI,CAACvhB,eAAe,EACpB,CAAC,EACD,IAAI,CAACwhH,MAAM,EACX,IAAI,CAACthH,MAAM,EACXzM,IAAI,CAAC2F,IAAI,CAAC6iB,gBAAgB,CAAC,EAC3B8B,yBAAyB,EACzB,CAAC,EACDoD,eACF,CAAC;MACD,OAAO,IAAIogG,YAAY,CAACxjG,yBAAyB,EAAE,IAAI,EAAEoD,eAAe,CAAC;IAC3E;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtjC,GAAA;IAAAC,KAAA,EAMA,SAAAqkI,UAAUA,CAAC1hI,KAAK,EAAE;MAChB,IAAIA,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC+gI,MAAM,CAAC9iI,MAAM,IAAI+B,KAAK,EAAE;QAC5C,OAAO,IAAI;MACb;MACA,IAAIwf,MAAM;MACV,IAAIxf,KAAK,KAAK,CAAC,EAAE;QACfwf,MAAM,GAAG,CAAC;MACZ,CAAC,MAAM;QACL,IAAMmiH,QAAQ,GAAG,IAAI,CAACZ,MAAM,CAAC/gI,KAAK,GAAG,CAAC,CAAC;QACvCwf,MAAM,GAAGmiH,QAAQ,CAACA,QAAQ,CAAC1jI,MAAM,GAAG,CAAC,CAAC;MACxC;MACA,IAAMmgC,IAAI,GAAG,IAAI,CAAC2iG,MAAM,CAAC/gI,KAAK,CAAC,CAACqB,KAAK,CAAC,CAAC;MACvC,IAAMtC,GAAG,GAAGq/B,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;MACjC,IAAIuhB,MAAM,KAAK,CAAC,EAAE;QAChB,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC7Cy/B,IAAI,CAACz/B,CAAC,CAAC,IAAI6gB,MAAM;QACnB;MACF;MACA,OAAO,IAAImlB,gBAAO,CAChB,IAAI,CAACplB,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEzgB,GAAG,CAAC,EACvC,IAAI,CAACg+B,MAAM,EACXqB,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhhC,GAAA;IAAAC,KAAA,EAKA,SAAAukI,WAAWA,CAAA,EAAG;MACZ,IAAM7kG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMxd,eAAe,GAAG,IAAI,CAACA,eAAe;MAC5C,IAAM+e,KAAK,GAAG,IAAI,CAACyiG,MAAM;MACzB,IAAMG,QAAQ,GAAG,EAAE;MACnB,IAAI1hH,MAAM,GAAG,CAAC;MACd,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAG23B,KAAK,CAACrgC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QAC9C,IAAMy/B,IAAI,GAAGE,KAAK,CAAC3/B,CAAC,CAAC,CAAC0C,KAAK,CAAC,CAAC;QAC7B,IAAMtC,GAAG,GAAGq/B,IAAI,CAACA,IAAI,CAACngC,MAAM,GAAG,CAAC,CAAC;QACjC,IAAIuhB,MAAM,KAAK,CAAC,EAAE;UAChB,KAAK,IAAIrF,CAAC,GAAG,CAAC,EAAEwO,EAAE,GAAGyV,IAAI,CAACngC,MAAM,EAAEkc,CAAC,GAAGwO,EAAE,EAAE,EAAExO,CAAC,EAAE;YAC7CikB,IAAI,CAACjkB,CAAC,CAAC,IAAIqF,MAAM;UACnB;QACF;QACA,IAAM0lB,OAAO,GAAG,IAAIP,gBAAO,CACzBplB,eAAe,CAACle,KAAK,CAACme,MAAM,EAAEzgB,GAAG,CAAC,EAClCg+B,MAAM,EACNqB,IACF,CAAC;QACD8iG,QAAQ,CAAC/6H,IAAI,CAAC++B,OAAO,CAAC;QACtB1lB,MAAM,GAAGzgB,GAAG;MACd;MACA,OAAOmiI,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA9jI,GAAA;IAAAC,KAAA,EAMA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,cAAc;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprB,GAAA;IAAAC,KAAA,EAOA,SAAA++B,gBAAgBA,CAAC1gB,MAAM,EAAE;MACvB,OAAO,IAAA4nB,gDAA8B,EACnC,IAAI,CAAC6B,0BAA0B,CAAC,CAAC,EACjC,CAAC,EACD,IAAI,CAAC47F,MAAM,EACX,IAAI,CAACthH,MAAM,EACX/D,MACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAte,GAAA;IAAAC,KAAA,EAOA,SAAAqgC,cAAcA,CAAC3f,WAAW,EAAEgf,MAAM,EAAE;MAClC,IAAI,CAACY,SAAS,CAACZ,MAAM,EAAEhf,WAAW,EAAE,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACwB,eAAe,EAAE;QACzB,IAAI,CAACA,eAAe,GAAG,EAAE;MAC3B;MACA,IAAM+e,KAAK,GAAG,IAAAkB,qCAA4B,EACxC,IAAI,CAACjgB,eAAe,EACpB,CAAC,EACDxB,WAAW,EACX,IAAI,CAAC0B,MAAM,EACX,IAAI,CAACshH,MACP,CAAC;MACD,IAAIziG,KAAK,CAACrgC,MAAM,KAAK,CAAC,EAAE;QACtB,IAAI,CAACshB,eAAe,CAACthB,MAAM,GAAG,CAAC;MACjC,CAAC,MAAM;QACL,IAAM4jI,QAAQ,GAAGvjG,KAAK,CAACA,KAAK,CAACrgC,MAAM,GAAG,CAAC,CAAC;QACxC,IAAI,CAACshB,eAAe,CAACthB,MAAM,GACzB4jI,QAAQ,CAAC5jI,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG4jI,QAAQ,CAACA,QAAQ,CAAC5jI,MAAM,GAAG,CAAC,CAAC;MAC7D;MACA,IAAI,CAACoK,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EA5bwBw0B,wBAAc;AAAA,IAAAphC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA+b1BmlI,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1d3B,IAAA5gD,OAAA,GAAAr9E,sBAAA,CAAAnC,OAAA;AACA,IAAAo8B,SAAA,GAAAj6B,sBAAA,CAAAnC,OAAA;AACA,IAAAohI,mBAAA,GAAAj/H,sBAAA,CAAAnC,OAAA;AACA,IAAA4jC,WAAA,GAAAzhC,sBAAA,CAAAnC,OAAA;AACA,IAAAq/H,WAAA,GAAAl9H,sBAAA,CAAAnC,OAAA;AACA,IAAAqhI,gBAAA,GAAAl/H,sBAAA,CAAAnC,OAAA;AACA,IAAAkgI,WAAA,GAAA/9H,sBAAA,CAAAnC,OAAA;AACA,IAAAshI,aAAA,GAAAn/H,sBAAA,CAAAnC,OAAA;AACA,IAAA6jC,MAAA,GAAA1hC,sBAAA,CAAAnC,OAAA;AACA,IAAA0nC,QAAA,GAAAvlC,sBAAA,CAAAnC,OAAA;AACA,IAAA4gC,eAAA,GAAAz+B,sBAAA,CAAAnC,OAAA;AAAmE,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;;;;;;;;;;ACXnE,IAAAg/H,QAAA,GAAAp/H,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAMA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAmgI,OAAA,GAAAngI,OAAA;AACA,IAAA8jC,cAAA,GAAA9jC,OAAA;AAIA,IAAA4+H,YAAA,GAAA5+H,OAAA;AACA,IAAAgkC,OAAA,GAAAhkC,OAAA;AACA,IAAA0gC,SAAA,GAAA1gC,OAAA;AAKA,IAAAk6B,UAAA,GAAAl6B,OAAA;AACA,IAAAwhI,KAAA,GAAAxhI,OAAA;AAQA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAAm6B,WAAA,GAAAn6B,OAAA;AAGyB,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KArCzB;AACA;AACA;AAqCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMm3B,YAAY,GAAG,IAAAC,kBAAe,EAAC,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AAJA,IAKMonG,aAAa;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,cAAY7/H,IAAI,EAAEid,eAAe,EAAE6e,IAAI,EAAE3e,MAAM,EAAE8pB,UAAU,EAAEn3B,EAAE,EAAE;IAAAnV,eAAA,OAAAklI,aAAA;IAC/D;AACJ;AACA;IACI,IAAI,CAAC5gD,aAAa;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAAC92D,OAAO;;IAEZ;AACJ;AACA;AACA;IACI,IAAI,CAAC2yG,GAAG,GAAGhrH,EAAE;;IAEb;AACJ;AACA;AACA;IACI,IAAI,CAACgwH,KAAK,GAAG9/H,IAAI;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAAC+/H,gBAAgB,GAAG9iH,eAAe;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAAC0hH,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACqB,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACI,IAAI,CAAC19F,KAAK,GAAGxG,IAAI,IAAI,IAAI;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACmkG,WAAW,GAAGh5F,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACkoF,iBAAiB;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAAC+Q,OAAO,GAAG/iH,MAAM;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACgjH,mBAAmB;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;EALE,OAAAtlI,YAAA,CAAAglI,aAAA;IAAA/kI,GAAA;IAAAC,KAAA,EAMA,SAAAyM,GAAGA,CAAC1M,GAAG,EAAE;MACP,OAAO,IAAI,CAACmlI,WAAW,CAACnlI,GAAG,CAAC;IAC9B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAA,GAAA;IAAAC,KAAA,EAKA,SAAAqmB,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAAC+G,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,GACV,IAAI,CAAC23G,KAAK,KAAK,OAAO,GAClB,IAAAjjH,oCAA4B,EAAC,IAAI,CAACkjH,gBAAgB,CAAC,GACnD,IAAA/iH,yCAAiC,EAC/B,IAAI,CAAC+iH,gBAAgB,EACrB,CAAC,EACD,IAAI,CAACA,gBAAgB,CAACpkI,MAAM,EAC5B,CACF,CAAC;MACT;MACA,OAAO,IAAI,CAACwsB,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAArtB,GAAA;IAAAC,KAAA,EAGA,SAAAioC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAAC27F,mBAAmB,EAAE;QAC7B,IAAM17F,UAAU,GAAG,IAAA3kB,iBAAS,EAAC,IAAI,CAAC8C,SAAS,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACu9G,mBAAmB,GAAG,IAAA/+F,sCAAuB,EAChD,IAAI,CAACmgG,gBAAgB,EACrB,CAAC,EACD,IAAI,CAACz9F,KAAK,EACV,CAAC,EACDW,UAAU,EACV,CACF,CAAC;MACH;MACA,OAAO,IAAI,CAAC07F,mBAAmB;IACjC;;IAEA;AACF;AACA;EAFE;IAAA7jI,GAAA;IAAAC,KAAA,EAGA,SAAA0nH,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAAC,IAAI,CAACkc,mBAAmB,EAAE;QAC7B,IAAM7iG,IAAI,GAAG,IAAA8F,mBAAW,EAAC,IAAI,CAACm+F,gBAAgB,EAAE,IAAI,CAACz9F,KAAK,CAAC;QAC3D,IAAMzC,WAAW,GAAG,IAAAq/F,oBAAkB,EAAC,IAAI,CAACa,gBAAgB,EAAE,CAAC,EAAEjkG,IAAI,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC6iG,mBAAmB,GAAG,IAAAv+F,4CAA6B,EACtD,IAAI,CAAC2/F,gBAAgB,EACrB,CAAC,EACDjkG,IAAI,EACJ,CAAC,EACD+D,WACF,CAAC;MACH;MACA,OAAO,IAAI,CAAC8+F,mBAAmB;IACjC;;IAEA;AACF;AACA;EAFE;IAAA7jI,GAAA;IAAAC,KAAA,EAGA,SAAAwnH,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACyd,cAAc,EAAE;QACxB,IAAI,CAACA,cAAc,GAAG,IAAAzE,6BAAgB,EACpC,IAAI,CAACwE,gBAAgB,EACrB,CAAC,EACD,IAAI,CAACA,gBAAgB,CAACpkI,MAAM,EAC5B,CAAC,EACD,GACF,CAAC;MACH;MACA,OAAO,IAAI,CAACqkI,cAAc;IAC5B;;IAEA;AACF;AACA;EAFE;IAAAllI,GAAA;IAAAC,KAAA,EAGA,SAAAynH,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACwd,cAAc,EAAE;QACxB,IAAI,CAACA,cAAc,GAAG,EAAE;QACxB,IAAM/iH,eAAe,GAAG,IAAI,CAAC8iH,gBAAgB;QAC7C,IAAI7iH,MAAM,GAAG,CAAC;QACd,IAAM4e,IAAI,GAAG,4BAA8B,IAAI,CAACwG,KAAM;QACtD,KAAK,IAAIjmC,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGy3B,IAAI,CAACngC,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;UAC7C,IAAMI,GAAG,GAAGq/B,IAAI,CAACz/B,CAAC,CAAC;UACnB,IAAM4hI,QAAQ,GAAG,IAAA1C,6BAAgB,EAACt+G,eAAe,EAAEC,MAAM,EAAEzgB,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;UACvE,IAAAE,aAAM,EAAC,IAAI,CAACqjI,cAAc,EAAE/B,QAAQ,CAAC;UACrC/gH,MAAM,GAAGzgB,GAAG;QACd;MACF;MACA,OAAO,IAAI,CAACujI,cAAc;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAllI,GAAA;IAAAC,KAAA,EAMA,SAAAsoF,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACy3C,GAAG;IACjB;;IAEA;AACF;AACA;EAFE;IAAAhgI,GAAA;IAAAC,KAAA,EAGA,SAAA8nC,0BAA0BA,CAAA,EAAG;MAC3B,OAAO,IAAI,CAACk9F,gBAAgB;IAC9B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjlI,GAAA;IAAAC,KAAA,EAMA,SAAAqsD,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAAtsD,GAAA;IAAAC,KAAA,EAIA,SAAAo+B,qBAAqBA,CAACD,gBAAgB,EAAE;MACtC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAp+B,GAAA;IAAAC,KAAA,EAMA,SAAAq+B,mBAAmBA,CAACF,gBAAgB,EAAE/S,SAAS,EAAE;MAC/C,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArrB,GAAA;IAAAC,KAAA,EAKA,SAAA4M,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACs4H,WAAW;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnlI,GAAA;IAAAC,KAAA,EAKA,SAAA8M,qBAAqBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAACo4H,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAAnlI,GAAA;IAAAC,KAAA,EAGA,SAAAkgC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACilG,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAAplI,GAAA;IAAAC,KAAA,EAGA,SAAAovF,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAAClL,aAAa;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnkF,GAAA;IAAAC,KAAA,EAKA,SAAAmrB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAC45G,KAAK;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhlI,GAAA;IAAAC,KAAA,EAKA,SAAAorB,SAASA,CAACjF,UAAU,EAAE;MACpBA,UAAU,GAAG,IAAA6Y,SAAa,EAAC7Y,UAAU,CAAC;MACtC,IAAMgZ,WAAW,GAAGhZ,UAAU,CAACE,SAAS,CAAC,CAAC;MAC1C,IAAM+Y,eAAe,GAAGjZ,UAAU,CAACiI,cAAc,CAAC,CAAC;MACnD,IAAI+Q,WAAW,IAAIC,eAAe,EAAE;QAClC,IAAM1V,KAAK,GAAG,IAAApG,iBAAS,EAAC8b,eAAe,CAAC,GAAG,IAAA9b,iBAAS,EAAC6b,WAAW,CAAC;QACjE,IAAAE,mBAAgB,EACd5B,YAAY,EACZ2B,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CAAC,EAClB1V,KAAK,EACL,CAACA,KAAK,EACN,CAAC,EACD,CAAC,EACD,CACF,CAAC;QACD,IAAAsT,sBAAW,EACT,IAAI,CAACgoG,gBAAgB,EACrB,CAAC,EACD,IAAI,CAACA,gBAAgB,CAACpkI,MAAM,EAC5B,CAAC,EACD68B,YAAY,EACZ,IAAI,CAACunG,gBACP,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjlI,GAAA;IAAAC,KAAA,EAOA,SAAA6lB,cAAcA,CAACC,WAAW,EAAE;MAC1BA,WAAW,CAAC,IAAI,CAACk/G,gBAAgB,EAAE,IAAI,CAACA,gBAAgB,EAAE,IAAI,CAACG,OAAO,CAAC;IACzE;;IAEA;AACF;AACA;EAFE;IAAAplI,GAAA;IAAAC,KAAA,EAGA,SAAAmhB,KAAKA,CAAA,EAAG;MAAA,IAAAkkH,WAAA;MACN,OAAO,IAAIP,aAAa,CACtB,IAAI,CAACC,KAAK,EACV,IAAI,CAACC,gBAAgB,CAAChhI,KAAK,CAAC,CAAC,GAAAqhI,WAAA,GAC7B,IAAI,CAAC99F,KAAK,cAAA89F,WAAA,uBAAVA,WAAA,CAAYrhI,KAAK,CAAC,CAAC,EACnB,IAAI,CAACmhI,OAAO,EACZz+H,MAAM,CAACmG,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACq4H,WAAW,CAAC,EACnC,IAAI,CAACnF,GACP,CAAC;IACH;;IAEA;AACF;AACA;EAFE;IAAAhgI,GAAA;IAAAC,KAAA,EAGA,SAAAgoC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACT,KAAK;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAxnC,GAAA;IAAAC,KAAA,EAIA,SAAAslI,yBAAyBA,CAAA,EAAG;MAAA,IAAAl9H,KAAA;MAC1B,IAAI,CAACi2B,mBAAmB,GAAG,IAAA56B,qBAAU,EAAC,UAAC06B,gBAAgB,EAAE/S,SAAS,EAAK;QACrE,IAAI+S,gBAAgB,KAAK/1B,KAAI,CAACgsH,iBAAiB,EAAE;UAC/C,OAAOhsH,KAAI,CAACg9H,mBAAmB;QACjC;QACAh9H,KAAI,CAACg9H,mBAAmB,GAAGh9H,KAAI,CAAC+Y,KAAK,CAAC,CAAC;QACvC,IAAIiK,SAAS,EAAE;UACbhjB,KAAI,CAACg9H,mBAAmB,CAACv/G,cAAc,CAACuF,SAAS,CAAC;QACpD;QACA,IAAM6U,yBAAyB,GAC7B73B,KAAI,CAACg9H,mBAAmB,CAACxlG,kBAAkB,CAAC,CAAC;QAC/C,IAAIuD,cAAc;QAClB,QAAQ/6B,KAAI,CAAC28H,KAAK;UAChB,KAAK,YAAY;YACf9kG,yBAAyB,CAACr/B,MAAM,GAAG,IAAA+hC,wBAAc,EAC/C1C,yBAAyB,EACzB,CAAC,EACD73B,KAAI,CAACg9H,mBAAmB,CAACJ,gBAAgB,CAACpkI,MAAM,EAChDwH,KAAI,CAACg9H,mBAAmB,CAACD,OAAO,EAChChnG,gBAAgB,EAChB8B,yBAAyB,EACzB,CACF,CAAC;YACDkD,cAAc,GAAG,CAAClD,yBAAyB,CAACr/B,MAAM,CAAC;YACnD;UACF,KAAK,iBAAiB;YACpBuiC,cAAc,GAAG,EAAE;YACnBlD,yBAAyB,CAACr/B,MAAM,GAAG,IAAAsiC,6BAAmB,EACpDjD,yBAAyB,EACzB,CAAC,EACD73B,KAAI,CAACg9H,mBAAmB,CAAC79F,KAAK,EAC9Bn/B,KAAI,CAACg9H,mBAAmB,CAACD,OAAO,EAChChnG,gBAAgB,EAChB8B,yBAAyB,EACzB,CAAC,EACDkD,cACF,CAAC;YACD;UACF,KAAK,SAAS;YACZA,cAAc,GAAG,EAAE;YACnBlD,yBAAyB,CAACr/B,MAAM,GAAG,IAAA4iC,uBAAa,EAC9CvD,yBAAyB,EACzB,CAAC,EACD73B,KAAI,CAACg9H,mBAAmB,CAAC79F,KAAK,EAC9Bn/B,KAAI,CAACg9H,mBAAmB,CAACD,OAAO,EAChCxvH,IAAI,CAAC2F,IAAI,CAAC6iB,gBAAgB,CAAC,EAC3B8B,yBAAyB,EACzB,CAAC,EACDkD,cACF,CAAC;YACD;UACF;QACF;QACA,IAAIA,cAAc,EAAE;UAClB/6B,KAAI,CAACg9H,mBAAmB,GAAG,IAAIN,aAAa,CAC1C18H,KAAI,CAAC28H,KAAK,EACV9kG,yBAAyB,EACzBkD,cAAc,EACd,CAAC,EACD/6B,KAAI,CAAC88H,WAAW,EAChB98H,KAAI,CAAC23H,GACP,CAAC;QACH;QACA33H,KAAI,CAACgsH,iBAAiB,GAAGj2F,gBAAgB;QACzC,OAAO/1B,KAAI,CAACg9H,mBAAmB;MACjC,CAAC,CAAC;MACF,OAAO,IAAI;IACb;EAAC;AAAA;AAGH;AACA;AACA;AACAN,aAAa,CAAC/gI,SAAS,CAAC67B,kBAAkB,GACxCklG,aAAa,CAAC/gI,SAAS,CAAC+jC,0BAA0B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASy9F,UAAUA,CAACtL,aAAa,EAAE;EACxC,IAAMvxD,YAAY,GAAGuxD,aAAa,CAAC9uG,OAAO,CAAC,CAAC;EAC5C,QAAQu9C,YAAY;IAClB,KAAK,OAAO;MACV,OAAO,IAAIrkC,WAAK,CAAC41F,aAAa,CAACr6F,kBAAkB,CAAC,CAAC,CAAC;IACtD,KAAK,YAAY;MACf,OAAO,IAAIujG,gBAAU,CAAClJ,aAAa,CAACr6F,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC;IACjE,KAAK,YAAY;MACf,OAAO,IAAIsiG,gBAAU,CAACjI,aAAa,CAACr6F,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC;IACjE,KAAK,iBAAiB;MACpB,OAAO,IAAI+iG,qBAAe,CACxB1I,aAAa,CAACr6F,kBAAkB,CAAC,CAAC,EAClC,IAAI,EACJ,4BAA8Bq6F,aAAa,CAACjyF,OAAO,CAAC,CACtD,CAAC;IACH,KAAK,SAAS;MACZ,IAAM9lB,eAAe,GAAG+3G,aAAa,CAACr6F,kBAAkB,CAAC,CAAC;MAC1D,IAAMmB,IAAI,GAAGk5F,aAAa,CAACjyF,OAAO,CAAC,CAAC;MACpC,IAAM/G,KAAK,GAAG,IAAA4F,mBAAW,EAAC3kB,eAAe,EAAE6e,IAAI,CAAC;MAChD,OAAOE,KAAK,CAACrgC,MAAM,GAAG,CAAC,GACnB,IAAI6iI,kBAAY,CAACvhH,eAAe,EAAE,IAAI,EAAE+e,KAAK,CAAC,GAC9C,IAAIqG,aAAO,CAACplB,eAAe,EAAE,IAAI,EAAE6e,IAAI,CAAC;IAC9C;MACE,MAAM,IAAIv1B,KAAK,CAAC,wBAAwB,GAAGk9D,YAAY,CAAC;EAC5D;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS88D,SAASA,CAACvL,aAAa,EAAEwL,YAAY,EAAE;EACrD,IAAM1wH,EAAE,GAAGklH,aAAa,CAAC3xC,KAAK,CAAC,CAAC;EAChC,IAAMp9D,QAAQ,GAAGq6G,UAAU,CAACtL,aAAa,CAAC;EAC1C,IAAM/tF,UAAU,GAAG+tF,aAAa,CAACrtH,aAAa,CAAC,CAAC;EAChD,IAAMo3E,OAAO,GAAG,IAAI67C,gBAAO,CAAC,CAAC;EAC7B,IAAI4F,YAAY,KAAK97H,SAAS,EAAE;IAC9Bq6E,OAAO,CAACm8C,eAAe,CAACsF,YAAY,CAAC;EACvC;EACAzhD,OAAO,CAACb,WAAW,CAACj4D,QAAQ,CAAC;EAC7B,IAAInW,EAAE,KAAKpL,SAAS,EAAE;IACpBq6E,OAAO,CAACu8C,KAAK,CAACxrH,EAAE,CAAC;EACnB;EACAivE,OAAO,CAACx3E,aAAa,CAAC0/B,UAAU,EAAE,IAAI,CAAC;EACvC,OAAO83C,OAAO;AAChB;AAAC,IAAA5lF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcwmI,aAAa;;;;;;;;AC9gB5B,IAAA92C,MAAA,GAAAxoF,sBAAA,CAAAnC,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AAAkC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA,KANlC;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMkpF,KAAK;EACT;AACF;AACA;EACE,SAAAA,MAAYk2C,UAAU,EAAE;IAAA9lI,eAAA,OAAA4vF,KAAA;IACtB;AACJ;AACA;AACA;IACI,IAAI,CAACm2C,MAAM,GAAG,IAAIC,cAAM,CAACF,UAAU,CAAC;;IAEpC;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;EAClB;;EAEA;AACF;AACA;AACA;AACA;EAJE,OAAA/lI,YAAA,CAAA0vF,KAAA;IAAAzvF,GAAA;IAAAC,KAAA,EAKA,SAAAgxH,MAAMA,CAAC3yG,MAAM,EAAEre,KAAK,EAAE;MACpB;MACA,IAAM+O,IAAI,GAAG;QACXiQ,IAAI,EAAEX,MAAM,CAAC,CAAC,CAAC;QACfa,IAAI,EAAEb,MAAM,CAAC,CAAC,CAAC;QACfY,IAAI,EAAEZ,MAAM,CAAC,CAAC,CAAC;QACfc,IAAI,EAAEd,MAAM,CAAC,CAAC,CAAC;QACfre,KAAK,EAAEA;MACT,CAAC;MAED,IAAI,CAAC2lI,MAAM,CAAC3U,MAAM,CAACjiH,IAAI,CAAC;MACxB,IAAI,CAAC82H,MAAM,CAAC,IAAAn6H,YAAM,EAAC1L,KAAK,CAAC,CAAC,GAAG+O,IAAI;IACnC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhP,GAAA;IAAAC,KAAA,EAKA,SAAA2a,IAAIA,CAACilH,OAAO,EAAEvzH,MAAM,EAAE;MACpB,IAAMy5H,KAAK,GAAG,IAAI/jI,KAAK,CAACsK,MAAM,CAACzL,MAAM,CAAC;MACtC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAE2b,CAAC,GAAG5Q,MAAM,CAACzL,MAAM,EAAEU,CAAC,GAAG2b,CAAC,EAAE3b,CAAC,EAAE,EAAE;QAC7C,IAAM+c,MAAM,GAAGuhH,OAAO,CAACt+H,CAAC,CAAC;QACzB,IAAMtB,KAAK,GAAGqM,MAAM,CAAC/K,CAAC,CAAC;;QAEvB;QACA,IAAMyN,IAAI,GAAG;UACXiQ,IAAI,EAAEX,MAAM,CAAC,CAAC,CAAC;UACfa,IAAI,EAAEb,MAAM,CAAC,CAAC,CAAC;UACfY,IAAI,EAAEZ,MAAM,CAAC,CAAC,CAAC;UACfc,IAAI,EAAEd,MAAM,CAAC,CAAC,CAAC;UACfre,KAAK,EAAEA;QACT,CAAC;QACD8lI,KAAK,CAACxkI,CAAC,CAAC,GAAGyN,IAAI;QACf,IAAI,CAAC82H,MAAM,CAAC,IAAAn6H,YAAM,EAAC1L,KAAK,CAAC,CAAC,GAAG+O,IAAI;MACnC;MACA,IAAI,CAAC42H,MAAM,CAAChrH,IAAI,CAACmrH,KAAK,CAAC;IACzB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/lI,GAAA;IAAAC,KAAA,EAKA,SAAAiC,MAAMA,CAACjC,KAAK,EAAE;MACZ,IAAMmvG,GAAG,GAAG,IAAAzjG,YAAM,EAAC1L,KAAK,CAAC;;MAEzB;MACA;MACA,IAAM+O,IAAI,GAAG,IAAI,CAAC82H,MAAM,CAAC12B,GAAG,CAAC;MAC7B,OAAO,IAAI,CAAC02B,MAAM,CAAC12B,GAAG,CAAC;MACvB,OAAO,IAAI,CAACw2B,MAAM,CAAC1jI,MAAM,CAAC8M,IAAI,CAAC,KAAK,IAAI;IAC1C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAhP,GAAA;IAAAC,KAAA,EAKA,SAAA2lD,MAAMA,CAACtnC,MAAM,EAAEre,KAAK,EAAE;MACpB,IAAM+O,IAAI,GAAG,IAAI,CAAC82H,MAAM,CAAC,IAAAn6H,YAAM,EAAC1L,KAAK,CAAC,CAAC;MACvC,IAAM2/H,IAAI,GAAG,CAAC5wH,IAAI,CAACiQ,IAAI,EAAEjQ,IAAI,CAACmQ,IAAI,EAAEnQ,IAAI,CAACkQ,IAAI,EAAElQ,IAAI,CAACoQ,IAAI,CAAC;MACzD,IAAI,CAAC,IAAA9c,cAAM,EAACs9H,IAAI,EAAEthH,MAAM,CAAC,EAAE;QACzB,IAAI,CAACpc,MAAM,CAACjC,KAAK,CAAC;QAClB,IAAI,CAACgxH,MAAM,CAAC3yG,MAAM,EAAEre,KAAK,CAAC;MAC5B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAC,KAAA,EAIA,SAAA+lI,MAAMA,CAAA,EAAG;MACP,IAAMD,KAAK,GAAG,IAAI,CAACH,MAAM,CAAC1jF,GAAG,CAAC,CAAC;MAC/B,OAAO6jF,KAAK,CAACt2H,GAAG,CAAC,UAAUT,IAAI,EAAE;QAC/B,OAAOA,IAAI,CAAC/O,KAAK;MACnB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAD,GAAA;IAAAC,KAAA,EAKA,SAAAgmI,WAAWA,CAAC3nH,MAAM,EAAE;MAClB;MACA,IAAMshH,IAAI,GAAG;QACX3gH,IAAI,EAAEX,MAAM,CAAC,CAAC,CAAC;QACfa,IAAI,EAAEb,MAAM,CAAC,CAAC,CAAC;QACfY,IAAI,EAAEZ,MAAM,CAAC,CAAC,CAAC;QACfc,IAAI,EAAEd,MAAM,CAAC,CAAC;MAChB,CAAC;MACD,IAAMynH,KAAK,GAAG,IAAI,CAACH,MAAM,CAACM,MAAM,CAACtG,IAAI,CAAC;MACtC,OAAOmG,KAAK,CAACt2H,GAAG,CAAC,UAAUT,IAAI,EAAE;QAC/B,OAAOA,IAAI,CAAC/O,KAAK;MACnB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAD,GAAA;IAAAC,KAAA,EAQA,SAAA4O,OAAOA,CAACiU,QAAQ,EAAE;MAChB,OAAO,IAAI,CAACqjH,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC,CAAC,EAAEljH,QAAQ,CAAC;IAC/C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA9iB,GAAA;IAAAC,KAAA,EAOA,SAAAmmI,eAAeA,CAAC9nH,MAAM,EAAEwE,QAAQ,EAAE;MAChC,OAAO,IAAI,CAACqjH,QAAQ,CAAC,IAAI,CAACF,WAAW,CAAC3nH,MAAM,CAAC,EAAEwE,QAAQ,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA9iB,GAAA;IAAAC,KAAA,EAOA,SAAAkmI,QAAQA,CAAC75H,MAAM,EAAEwW,QAAQ,EAAE;MACzB,IAAI4mB,MAAM;MACV,KAAK,IAAInoC,CAAC,GAAG,CAAC,EAAE2b,CAAC,GAAG5Q,MAAM,CAACzL,MAAM,EAAEU,CAAC,GAAG2b,CAAC,EAAE3b,CAAC,EAAE,EAAE;QAC7CmoC,MAAM,GAAG5mB,QAAQ,CAACxW,MAAM,CAAC/K,CAAC,CAAC,CAAC;QAC5B,IAAImoC,MAAM,EAAE;UACV,OAAOA,MAAM;QACf;MACF;MACA,OAAOA,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAA1pC,GAAA;IAAAC,KAAA,EAGA,SAAA+E,OAAOA,CAAA,EAAG;MACR,OAAO,IAAAA,YAAO,EAAC,IAAI,CAAC8gI,MAAM,CAAC;IAC7B;;IAEA;AACF;AACA;EAFE;IAAA9lI,GAAA;IAAAC,KAAA,EAGA,SAAA4E,KAAKA,CAAA,EAAG;MACN,IAAI,CAAC+gI,MAAM,CAAC/gI,KAAK,CAAC,CAAC;MACnB,IAAI,CAACihI,MAAM,GAAG,CAAC,CAAC;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAA9lI,GAAA;IAAAC,KAAA,EAIA,SAAAqmB,SAASA,CAAChI,MAAM,EAAE;MAChB,IAAMxc,IAAI,GAAG,IAAI,CAAC8jI,MAAM,CAACS,MAAM,CAAC,CAAC;MACjC,OAAO,IAAAnlH,sBAAc,EAACpf,IAAI,CAACmd,IAAI,EAAEnd,IAAI,CAACqd,IAAI,EAAErd,IAAI,CAACod,IAAI,EAAEpd,IAAI,CAACsd,IAAI,EAAEd,MAAM,CAAC;IAC3E;;IAEA;AACF;AACA;EAFE;IAAAte,GAAA;IAAAC,KAAA,EAGA,SAAAkN,MAAMA,CAACm5H,KAAK,EAAE;MACZ,IAAI,CAACV,MAAM,CAAChrH,IAAI,CAAC0rH,KAAK,CAACV,MAAM,CAAC1jF,GAAG,CAAC,CAAC,CAAC;MACpC,KAAK,IAAM3gD,CAAC,IAAI+kI,KAAK,CAACR,MAAM,EAAE;QAC5B,IAAI,CAACA,MAAM,CAACvkI,CAAC,CAAC,GAAG+kI,KAAK,CAACR,MAAM,CAACvkI,CAAC,CAAC;MAClC;IACF;EAAC;AAAA;AAAA,IAAAlD,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYkxF,KAAK;;;;;;;;AC3NpB;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAApxF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACEgoI,UAAU,EAAE,YAAY;EAExB;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,eAAe;EAE9B;AACF;AACA;AACA;AACA;EACE1nI,KAAK,EAAE,OAAO;EAEd;AACF;AACA;AACA;AACA;AACA;EACE2nI,aAAa,EAAE,eAAe;EAE9B;AACF;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,mBAAmB;EAEtC;AACF;AACA;AACA;AACA;EACEC,eAAe,EAAE,iBAAiB;EAElC;AACF;AACA;AACA;AACA;EACEC,iBAAiB,EAAE;AACrB,CAAC;AAED;AACA;AACA;;;;;;;;ACzDA,IAAAtiF,WAAA,GAAA7+C,sBAAA,CAAAnC,OAAA;AACA,IAAAsK,oBAAA,GAAAnI,sBAAA,CAAAnC,OAAA;AACA,IAAAwI,gBAAA,GAAArG,sBAAA,CAAAnC,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAA0T,QAAA,GAAA1T,OAAA;AACA,IAAA0I,OAAA,GAAAvG,sBAAA,CAAAnC,OAAA;AACA,IAAAgH,UAAA,GAAA7E,sBAAA,CAAAnC,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AACA,IAAAujI,cAAA,GAAAvjI,OAAA;AACA,IAAAoC,UAAA,GAAApC,OAAA;AACA,IAAAwjI,gBAAA,GAAAxjI,OAAA;AACA,IAAAqC,IAAA,GAAArC,OAAA;AACA,IAAAuhI,QAAA,GAAAp/H,sBAAA,CAAAnC,OAAA;AACA,IAAAyjI,MAAA,GAAAthI,sBAAA,CAAAnC,OAAA;AACA,IAAA2I,KAAA,GAAA3I,OAAA;AACA,IAAAw1G,QAAA,GAAArzG,sBAAA,CAAAnC,OAAA;AACA,IAAA0jI,gBAAA,GAAAvhI,sBAAA,CAAAnC,OAAA;AAAmD,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAwgE,mBAAAlgE,CAAA,WAAAmgE,kBAAA,CAAAngE,CAAA,KAAAogE,gBAAA,CAAApgE,CAAA,KAAA2Z,2BAAA,CAAA3Z,CAAA,KAAAqgE,kBAAA;AAAA,SAAAA,mBAAA,cAAAvgE,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAA2lE,iBAAApgE,CAAA,8BAAAL,MAAA,YAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,aAAAI,CAAA,uBAAAtE,KAAA,CAAAse,IAAA,CAAAha,CAAA;AAAA,SAAAmgE,mBAAAngE,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAA6Z,iBAAA,CAAA7Z,CAAA;AAAA,SAAA6Z,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAAsO,cAAArJ,CAAA,EAAAP,CAAA,EAAAH,CAAA,EAAAS,CAAA,QAAAuJ,CAAA,GAAAC,IAAA,CAAA3I,eAAA,KAAAb,CAAA,GAAAC,CAAA,CAAAvC,SAAA,GAAAuC,CAAA,GAAAP,CAAA,EAAAH,CAAA,cAAAS,CAAA,yBAAAuJ,CAAA,aAAAtJ,CAAA,WAAAsJ,CAAA,CAAAxL,KAAA,CAAAwB,CAAA,EAAAU,CAAA,OAAAsJ,CAAA;AAAA,SAAAC,KAAA,WAAAA,IAAA,yBAAAxI,OAAA,IAAAA,OAAA,CAAAoF,GAAA,GAAApF,OAAA,CAAAoF,GAAA,CAAA5E,IAAA,eAAAjC,CAAA,EAAAU,CAAA,EAAAD,CAAA,QAAAuJ,CAAA,GAAAE,cAAA,CAAAlK,CAAA,EAAAU,CAAA,OAAAsJ,CAAA,QAAAvO,CAAA,GAAAqF,MAAA,CAAAqJ,wBAAA,CAAAH,CAAA,EAAAtJ,CAAA,UAAAjF,CAAA,CAAAoL,GAAA,GAAApL,CAAA,CAAAoL,GAAA,CAAAxI,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAgF,CAAA,GAAAS,CAAA,IAAAhF,CAAA,CAAArB,KAAA,OAAA6P,IAAA,CAAAzL,KAAA,OAAAF,SAAA;AAAA,SAAA4L,eAAAxJ,CAAA,EAAAP,CAAA,eAAA2G,cAAA,CAAAzI,IAAA,CAAAqC,CAAA,EAAAP,CAAA,eAAAO,CAAA,GAAAY,eAAA,CAAAZ,CAAA,aAAAA,CAAA;AAAA,SAAAF,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAA1G,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAc,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KArBnD;AACA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMaohI,iBAAiB,GAAA3oI,OAAA,CAAA2oI,iBAAA,0BAAArhI,MAAA;EAC5B;AACF;AACA;AACA;AACA;EACE,SAAAqhI,kBAAY/hI,IAAI,EAAE++E,OAAO,EAAE6S,QAAQ,EAAE;IAAA,IAAAzuF,KAAA;IAAAxI,eAAA,OAAAonI,iBAAA;IACnC5+H,KAAA,GAAAnB,UAAA,OAAA+/H,iBAAA,GAAM/hI,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACImD,KAAA,CAAK47E,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;AACA;IACI57E,KAAA,CAAKyuF,QAAQ,GAAGA,QAAQ;IAAC,OAAAzuF,KAAA;EAC3B;EAACL,SAAA,CAAAi/H,iBAAA,EAAArhI,MAAA;EAAA,OAAA7F,YAAA,CAAAknI,iBAAA;AAAA,EAtBoC99H,eAAK;AAyluB,OAAA;EAChB;AACF;AACA;EACE,SAAAkuB,aAAY74H,OAAO,EAAE;IAAA,IAAA9B,MAAA;IAAA1M,eAAA,OAAAqnI,YAAA;IACnB74H,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB9B,MAAA,GAAArF,UAAA,OAAAggI,YAAA,GAAM;MACJrnF,YAAY,EAAExxC,OAAO,CAACwxC,YAAY;MAClCg7C,WAAW,EAAE,IAAI;MACjBz0E,UAAU,EAAExc,SAAS;MACrBwQ,KAAK,EAAE,OAAO;MACd+L,KAAK,EAAE9X,OAAO,CAAC8X,KAAK,KAAKvc,SAAS,GAAGyE,OAAO,CAAC8X,KAAK,GAAG;IACvD,CAAC;;IAED;AACJ;AACA;IACI5Z,MAAA,CAAK5B,EAAE;;IAEP;AACJ;AACA;IACI4B,MAAA,CAAKtC,IAAI;;IAET;AACJ;AACA;IACIsC,MAAA,CAAKzB,EAAE;;IAEP;AACJ;AACA;AACA;IACIyB,MAAA,CAAK0vF,OAAO,GAAGx4F,eAAI;;IAEnB;AACJ;AACA;AACA;IACI8I,MAAA,CAAK46H,OAAO,GAAG94H,OAAO,CAAC6a,MAAM,IAAI,IAAI;;IAErC;AACJ;AACA;AACA;IACI3c,MAAA,CAAK0lH,SAAS,GAAG5jH,OAAO,CAACm+G,QAAQ,KAAK5iH,SAAS,GAAG,IAAI,GAAGyE,OAAO,CAACm+G,QAAQ;;IAEzE;AACJ;AACA;AACA;IACIjgH,MAAA,CAAK66H,IAAI,GAAG/4H,OAAO,CAAC6oG,GAAG;IAEvB,IAAI7oG,OAAO,CAAC4iE,MAAM,KAAKrnE,SAAS,EAAE;MAChC2C,MAAA,CAAK0vF,OAAO,GAAG5tF,OAAO,CAAC4iE,MAAM;IAC/B,CAAC,MAAM,IAAI1kE,MAAA,CAAK66H,IAAI,KAAKx9H,SAAS,EAAE;MAClC,IAAAiN,eAAM,EAACtK,MAAA,CAAK46H,OAAO,EAAE,wCAAwC,CAAC;MAC9D;MACA56H,MAAA,CAAK0vF,OAAO,GAAG,IAAA0iC,kBAAG,EAACpyH,MAAA,CAAK66H,IAAI,EAAE76H,MAAA,CAAK46H,OAAO,CAAC;IAC7C;;IAEA;AACJ;AACA;AACA;IACI56H,MAAA,CAAK86H,SAAS,GACZh5H,OAAO,CAACi5H,QAAQ,KAAK19H,SAAS,GAAGyE,OAAO,CAACi5H,QAAQ,GAAGC,oBAAW;IAEjE,IAAMC,eAAe,GACnBn5H,OAAO,CAACm5H,eAAe,KAAK59H,SAAS,GAAGyE,OAAO,CAACm5H,eAAe,GAAG,IAAI;;IAExE;AACJ;AACA;AACA;IACIj7H,MAAA,CAAKk7H,cAAc,GAAGD,eAAe,GAAG,IAAI/3C,cAAK,CAAC,CAAC,GAAG,IAAI;;IAE1D;AACJ;AACA;AACA;IACIljF,MAAA,CAAKm7H,mBAAmB,GAAG,IAAIj4C,cAAK,CAAC,CAAC;;IAEtC;AACJ;AACA;AACA;IACIljF,MAAA,CAAKo7H,oBAAoB,GAAG,CAAC;;IAE7B;AACJ;AACA;AACA;IACIp7H,MAAA,CAAKq7H,qBAAqB,GAAG,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;AACA;IACIr7H,MAAA,CAAKs7H,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACJ;AACA;AACA;AACA;IACIt7H,MAAA,CAAKu7H,SAAS,GAAG,CAAC,CAAC;;IAEnB;AACJ;AACA;AACA;IACIv7H,MAAA,CAAKw7H,kBAAkB,GAAG,CAAC,CAAC;;IAE5B;AACJ;AACA;AACA;IACIx7H,MAAA,CAAKy7H,mBAAmB,GAAG,IAAI;;IAE/B;IACA,IAAIpyE,UAAU;IACd;IACA,IAAIkhC,QAAQ;IACZ,IAAI90F,KAAK,CAACC,OAAO,CAACoM,OAAO,CAACyoF,QAAQ,CAAC,EAAE;MACnCA,QAAQ,GAAGzoF,OAAO,CAACyoF,QAAQ;IAC7B,CAAC,MAAM,IAAIzoF,OAAO,CAACyoF,QAAQ,EAAE;MAC3BlhC,UAAU,GAAGvnD,OAAO,CAACyoF,QAAQ;MAC7BA,QAAQ,GAAGlhC,UAAU,CAAC7mD,QAAQ,CAAC,CAAC;IAClC;IACA,IAAI,CAACy4H,eAAe,IAAI5xE,UAAU,KAAKhsD,SAAS,EAAE;MAChDgsD,UAAU,GAAG,IAAI1nD,mBAAU,CAAC4oF,QAAQ,CAAC;IACvC;IACA,IAAIA,QAAQ,KAAKltF,SAAS,EAAE;MAC1B2C,MAAA,CAAK07H,mBAAmB,CAACnxC,QAAQ,CAAC;IACpC;IACA,IAAIlhC,UAAU,KAAKhsD,SAAS,EAAE;MAC5B2C,MAAA,CAAK27H,uBAAuB,CAACtyE,UAAU,CAAC;IAC1C;IAAC,OAAArpD,MAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXEvE,SAAA,CAAAk/H,YAAA,EAAAluB,OAAA;EAAA,OAAAj5G,YAAA,CAAAmnI,YAAA;IAAAlnI,GAAA;IAAAC,KAAA,EAYA,SAAAkoI,UAAUA,CAAClkD,OAAO,EAAE;MAClB,IAAI,CAACmkD,kBAAkB,CAACnkD,OAAO,CAAC;MAChC,IAAI,CAACh5E,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAmoI,kBAAkBA,CAACnkD,OAAO,EAAE;MAC1B,IAAMokD,UAAU,GAAG,IAAA18H,YAAM,EAACs4E,OAAO,CAAC;MAElC,IAAI,CAAC,IAAI,CAACqkD,WAAW,CAACD,UAAU,EAAEpkD,OAAO,CAAC,EAAE;QAC1C,IAAI,IAAI,CAAC+jD,mBAAmB,EAAE;UAC5B,IAAI,CAACA,mBAAmB,CAAC9lI,MAAM,CAAC+hF,OAAO,CAAC;QAC1C;QACA;MACF;MAEA,IAAI,CAACskD,kBAAkB,CAACF,UAAU,EAAEpkD,OAAO,CAAC;MAE5C,IAAM94D,QAAQ,GAAG84D,OAAO,CAAC33B,WAAW,CAAC,CAAC;MACtC,IAAInhC,QAAQ,EAAE;QACZ,IAAM7M,MAAM,GAAG6M,QAAQ,CAAC7E,SAAS,CAAC,CAAC;QACnC,IAAI,IAAI,CAACmhH,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,CAACxW,MAAM,CAAC3yG,MAAM,EAAE2lE,OAAO,CAAC;QAC7C;MACF,CAAC,MAAM;QACL,IAAI,CAAC2jD,qBAAqB,CAACS,UAAU,CAAC,GAAGpkD,OAAO;MAClD;MAEA,IAAI,CAACj7E,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAACjC,UAAU,EAAEtiD,OAAO,CAC3D,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjkF,GAAA;IAAAC,KAAA,EAKA,SAAAsoI,kBAAkBA,CAACF,UAAU,EAAEpkD,OAAO,EAAE;MACtC,IAAIA,OAAO,YAAY8gD,gBAAa,EAAE;QACpC;MACF;MACA,IAAI,CAACgD,kBAAkB,CAACM,UAAU,CAAC,GAAG,CACpC,IAAAt+H,cAAM,EAACk6E,OAAO,EAAE/4E,kBAAS,CAACvM,MAAM,EAAE,IAAI,CAAC8pI,oBAAoB,EAAE,IAAI,CAAC,EAClE,IAAA1+H,cAAM,EACJk6E,OAAO,EACP72E,wBAAe,CAAC1O,cAAc,EAC9B,IAAI,CAAC+pI,oBAAoB,EACzB,IACF,CAAC,CACF;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAzoI,GAAA;IAAAC,KAAA,EAOA,SAAAqoI,WAAWA,CAACD,UAAU,EAAEpkD,OAAO,EAAE;MAC/B,IAAIykD,KAAK,GAAG,IAAI;MAChB,IAAIzkD,OAAO,CAACsE,KAAK,CAAC,CAAC,KAAK3+E,SAAS,EAAE;QACjC,IAAMoL,EAAE,GAAGhO,MAAM,CAACi9E,OAAO,CAACsE,KAAK,CAAC,CAAC,CAAC;QAClC,IAAI,EAAEvzE,EAAE,IAAI,IAAI,CAAC6yH,QAAQ,CAAC,EAAE;UAC1B,IAAI,CAACA,QAAQ,CAAC7yH,EAAE,CAAC,GAAGivE,OAAO;QAC7B,CAAC,MAAM,IAAIA,OAAO,YAAY8gD,gBAAa,EAAE;UAC3C,IAAM4D,cAAc,GAAG,IAAI,CAACd,QAAQ,CAAC7yH,EAAE,CAAC;UACxC,IAAI,EAAE2zH,cAAc,YAAY5D,gBAAa,CAAC,EAAE;YAC9C2D,KAAK,GAAG,KAAK;UACf,CAAC,MAAM,IAAI,CAAC1mI,KAAK,CAACC,OAAO,CAAC0mI,cAAc,CAAC,EAAE;YACzC,IAAI,CAACd,QAAQ,CAAC7yH,EAAE,CAAC,GAAG,CAAC2zH,cAAc,EAAE1kD,OAAO,CAAC;UAC/C,CAAC,MAAM;YACL0kD,cAAc,CAAC5/H,IAAI,CAACk7E,OAAO,CAAC;UAC9B;QACF,CAAC,MAAM;UACLykD,KAAK,GAAG,KAAK;QACf;MACF;MACA,IAAIA,KAAK,EAAE;QACT,IAAA7xH,eAAM,EACJ,EAAEwxH,UAAU,IAAI,IAAI,CAACP,SAAS,CAAC,EAC/B,sDACF,CAAC;QACD,IAAI,CAACA,SAAS,CAACO,UAAU,CAAC,GAAGpkD,OAAO;MACtC;MACA,OAAOykD,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1oI,GAAA;IAAAC,KAAA,EAKA,SAAAw/H,WAAWA,CAAC3oC,QAAQ,EAAE;MACpB,IAAI,CAACmxC,mBAAmB,CAACnxC,QAAQ,CAAC;MAClC,IAAI,CAAC7rF,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjL,GAAA;IAAAC,KAAA,EAKA,SAAAgoI,mBAAmBA,CAACnxC,QAAQ,EAAE;MAC5B,IAAM+oC,OAAO,GAAG,EAAE;MAClB;MACA,IAAM+I,WAAW,GAAG,EAAE;MACtB;MACA,IAAMC,gBAAgB,GAAG,EAAE;MAE3B,KAAK,IAAItnI,CAAC,GAAG,CAAC,EAAEV,MAAM,GAAGi2F,QAAQ,CAACj2F,MAAM,EAAEU,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;QACzD,IAAM0iF,OAAO,GAAG6S,QAAQ,CAACv1F,CAAC,CAAC;QAC3B,IAAM8mI,UAAU,GAAG,IAAA18H,YAAM,EAACs4E,OAAO,CAAC;QAClC,IAAI,IAAI,CAACqkD,WAAW,CAACD,UAAU,EAAEpkD,OAAO,CAAC,EAAE;UACzC2kD,WAAW,CAAC7/H,IAAI,CAACk7E,OAAO,CAAC;QAC3B;MACF;MAEA,KAAK,IAAI1iF,EAAC,GAAG,CAAC,EAAEV,OAAM,GAAG+nI,WAAW,CAAC/nI,MAAM,EAAEU,EAAC,GAAGV,OAAM,EAAEU,EAAC,EAAE,EAAE;QAC5D,IAAM0iF,QAAO,GAAG2kD,WAAW,CAACrnI,EAAC,CAAC;QAC9B,IAAM8mI,WAAU,GAAG,IAAA18H,YAAM,EAACs4E,QAAO,CAAC;QAClC,IAAI,CAACskD,kBAAkB,CAACF,WAAU,EAAEpkD,QAAO,CAAC;QAE5C,IAAM94D,QAAQ,GAAG84D,QAAO,CAAC33B,WAAW,CAAC,CAAC;QACtC,IAAInhC,QAAQ,EAAE;UACZ,IAAM7M,MAAM,GAAG6M,QAAQ,CAAC7E,SAAS,CAAC,CAAC;UACnCu5G,OAAO,CAAC92H,IAAI,CAACuV,MAAM,CAAC;UACpBuqH,gBAAgB,CAAC9/H,IAAI,CAACk7E,QAAO,CAAC;QAChC,CAAC,MAAM;UACL,IAAI,CAAC2jD,qBAAqB,CAACS,WAAU,CAAC,GAAGpkD,QAAO;QAClD;MACF;MACA,IAAI,IAAI,CAACwjD,cAAc,EAAE;QACvB,IAAI,CAACA,cAAc,CAAC7sH,IAAI,CAACilH,OAAO,EAAEgJ,gBAAgB,CAAC;MACrD;MAEA,IAAI,IAAI,CAACh/H,WAAW,CAAC2+H,wBAAe,CAACjC,UAAU,CAAC,EAAE;QAChD,KAAK,IAAIhlI,GAAC,GAAG,CAAC,EAAEV,QAAM,GAAG+nI,WAAW,CAAC/nI,MAAM,EAAEU,GAAC,GAAGV,QAAM,EAAEU,GAAC,EAAE,EAAE;UAC5D,IAAI,CAACyH,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAACjC,UAAU,EAAEqC,WAAW,CAACrnI,GAAC,CAAC,CAClE,CAAC;QACH;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAvB,GAAA;IAAAC,KAAA,EAIA,SAAAioI,uBAAuBA,CAACtyE,UAAU,EAAE;MAAA,IAAA2B,MAAA;MAClC,IAAIuxE,mBAAmB,GAAG,KAAK;MAC/B,IAAI,CAACpgI,gBAAgB,CACnB8/H,wBAAe,CAACjC,UAAU;MAC1B;AACN;AACA;MACM,UAAUhhI,GAAG,EAAE;QACb,IAAI,CAACujI,mBAAmB,EAAE;UACxBA,mBAAmB,GAAG,IAAI;UAC1BlzE,UAAU,CAAC7sD,IAAI,CAACxD,GAAG,CAAC0+E,OAAO,CAAC;UAC5B6kD,mBAAmB,GAAG,KAAK;QAC7B;MACF,CACF,CAAC;MACD,IAAI,CAACpgI,gBAAgB,CACnB8/H,wBAAe,CAAC/B,aAAa;MAC7B;AACN;AACA;MACM,UAAUlhI,GAAG,EAAE;QACb,IAAI,CAACujI,mBAAmB,EAAE;UACxBA,mBAAmB,GAAG,IAAI;UAC1BlzE,UAAU,CAAC1zD,MAAM,CAACqD,GAAG,CAAC0+E,OAAO,CAAC;UAC9B6kD,mBAAmB,GAAG,KAAK;QAC7B;MACF,CACF,CAAC;MACDlzE,UAAU,CAACltD,gBAAgB,CACzByG,4BAAmB,CAAC3Q,GAAG;MACvB;AACN;AACA;MACM,UAAC+G,GAAG,EAAK;QACP,IAAI,CAACujI,mBAAmB,EAAE;UACxBA,mBAAmB,GAAG,IAAI;UAC1BvxE,MAAI,CAAC4wE,UAAU,CAAC5iI,GAAG,CAAC0I,OAAO,CAAC;UAC5B66H,mBAAmB,GAAG,KAAK;QAC7B;MACF,CACF,CAAC;MACDlzE,UAAU,CAACltD,gBAAgB,CACzByG,4BAAmB,CAAC1Q,MAAM;MAC1B;AACN;AACA;MACM,UAAC8G,GAAG,EAAK;QACP,IAAI,CAACujI,mBAAmB,EAAE;UACxBA,mBAAmB,GAAG,IAAI;UAC1BvxE,MAAI,CAACwxE,aAAa,CAACxjI,GAAG,CAAC0I,OAAO,CAAC;UAC/B66H,mBAAmB,GAAG,KAAK;QAC7B;MACF,CACF,CAAC;MACD,IAAI,CAACd,mBAAmB,GAAGpyE,UAAU;IACvC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA51D,GAAA;IAAAC,KAAA,EAKA,SAAA4E,KAAKA,CAACmkI,IAAI,EAAE;MAAA,IAAAC,MAAA;MACV,IAAID,IAAI,EAAE;QACR,KAAK,IAAMtgE,SAAS,IAAI,IAAI,CAACq/D,kBAAkB,EAAE;UAC/C,IAAMj+H,IAAI,GAAG,IAAI,CAACi+H,kBAAkB,CAACr/D,SAAS,CAAC;UAC/C5+D,IAAI,CAAC+E,OAAO,CAACxE,qBAAa,CAAC;QAC7B;QACA,IAAI,CAAC,IAAI,CAAC29H,mBAAmB,EAAE;UAC7B,IAAI,CAACD,kBAAkB,GAAG,CAAC,CAAC;UAC5B,IAAI,CAACF,QAAQ,GAAG,CAAC,CAAC;UAClB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;QACrB;MACF,CAAC,MAAM;QACL,IAAI,IAAI,CAACL,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,CAAC54H,OAAO,CAAC,UAACo1E,OAAO,EAAK;YACvCglD,MAAI,CAACC,qBAAqB,CAACjlD,OAAO,CAAC;UACrC,CAAC,CAAC;UACF,KAAK,IAAMjvE,EAAE,IAAI,IAAI,CAAC4yH,qBAAqB,EAAE;YAC3C,IAAI,CAACsB,qBAAqB,CAAC,IAAI,CAACtB,qBAAqB,CAAC5yH,EAAE,CAAC,CAAC;UAC5D;QACF;MACF;MACA,IAAI,IAAI,CAACgzH,mBAAmB,EAAE;QAC5B,IAAI,CAACA,mBAAmB,CAACnjI,KAAK,CAAC,CAAC;MAClC;MAEA,IAAI,IAAI,CAAC4iI,cAAc,EAAE;QACvB,IAAI,CAACA,cAAc,CAAC5iI,KAAK,CAAC,CAAC;MAC7B;MACA,IAAI,CAAC+iI,qBAAqB,GAAG,CAAC,CAAC;MAE/B,IAAMuB,UAAU,GAAG,IAAIlC,iBAAiB,CAACuB,wBAAe,CAAC1pI,KAAK,CAAC;MAC/D,IAAI,CAACkK,aAAa,CAACmgI,UAAU,CAAC;MAC9B,IAAI,CAACl+H,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAAjL,GAAA;IAAAC,KAAA,EAYA,SAAAmpI,cAAcA,CAACtmH,QAAQ,EAAE;MACvB,IAAI,IAAI,CAAC2kH,cAAc,EAAE;QACvB,OAAO,IAAI,CAACA,cAAc,CAAC54H,OAAO,CAACiU,QAAQ,CAAC;MAC9C;MACA,IAAI,IAAI,CAACklH,mBAAmB,EAAE;QAC5B,IAAI,CAACA,mBAAmB,CAACn5H,OAAO,CAACiU,QAAQ,CAAC;MAC5C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAA9iB,GAAA;IAAAC,KAAA,EAeA,SAAAopI,gCAAgCA,CAAC14H,UAAU,EAAEmS,QAAQ,EAAE;MACrD,IAAMxE,MAAM,GAAG,CAAC3N,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;MAC3E,OAAO,IAAI,CAAC24H,sBAAsB,CAAChrH,MAAM,EAAE,UAAU2lE,OAAO,EAAE;QAC5D,IAAM94D,QAAQ,GAAG84D,OAAO,CAAC33B,WAAW,CAAC,CAAC;QACtC,IACEnhC,QAAQ,YAAY45G,gBAAa,IACjC55G,QAAQ,CAACyT,oBAAoB,CAACjuB,UAAU,CAAC,EACzC;UACA,OAAOmS,QAAQ,CAACmhE,OAAO,CAAC;QAC1B;QACA,OAAOr6E,SAAS;MAClB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlBE;IAAA5J,GAAA;IAAAC,KAAA,EAmBA,SAAAqpI,sBAAsBA,CAAChrH,MAAM,EAAEwE,QAAQ,EAAE;MACvC,IAAI,IAAI,CAAC2kH,cAAc,EAAE;QACvB,OAAO,IAAI,CAACA,cAAc,CAACrB,eAAe,CAAC9nH,MAAM,EAAEwE,QAAQ,CAAC;MAC9D;MACA,IAAI,IAAI,CAACklH,mBAAmB,EAAE;QAC5B,IAAI,CAACA,mBAAmB,CAACn5H,OAAO,CAACiU,QAAQ,CAAC;MAC5C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAA9iB,GAAA;IAAAC,KAAA,EAeA,SAAAspI,gCAAgCA,CAACjrH,MAAM,EAAEwE,QAAQ,EAAE;MACjD,OAAO,IAAI,CAACwmH,sBAAsB,CAChChrH,MAAM;MACN;AACN;AACA;AACA;MACM,UAAU2lE,OAAO,EAAE;QACjB,IAAM94D,QAAQ,GAAG84D,OAAO,CAAC33B,WAAW,CAAC,CAAC;QACtC,IACEnhC,QAAQ,YAAY45G,gBAAa,IACjC55G,QAAQ,CAAC6T,gBAAgB,CAAC1gB,MAAM,CAAC,EACjC;UACA,IAAMorB,MAAM,GAAG5mB,QAAQ,CAACmhE,OAAO,CAAC;UAChC,IAAIv6C,MAAM,EAAE;YACV,OAAOA,MAAM;UACf;QACF;MACF,CACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1pC,GAAA;IAAAC,KAAA,EAOA,SAAAupI,qBAAqBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAACxB,mBAAmB;IACjC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhoI,GAAA;IAAAC,KAAA,EAMA,SAAAm3D,WAAWA,CAAA,EAAG;MACZ,IAAI0/B,QAAQ;MACZ,IAAI,IAAI,CAACkxC,mBAAmB,EAAE;QAC5BlxC,QAAQ,GAAG,IAAI,CAACkxC,mBAAmB,CAACj5H,QAAQ,CAAC,CAAC,CAAC9K,KAAK,CAAC,CAAC,CAAC;MACzD,CAAC,MAAM,IAAI,IAAI,CAACwjI,cAAc,EAAE;QAC9B3wC,QAAQ,GAAG,IAAI,CAAC2wC,cAAc,CAACzB,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,IAAAhhI,YAAO,EAAC,IAAI,CAAC4iI,qBAAqB,CAAC,EAAE;UACxC,IAAA/lI,aAAM,EAACi1F,QAAQ,EAAEnwF,MAAM,CAAC2F,MAAM,CAAC,IAAI,CAACs7H,qBAAqB,CAAC,CAAC;QAC7D;MACF;MACA,OAAO9wC,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA92F,GAAA;IAAAC,KAAA,EAMA,SAAAwpI,uBAAuBA,CAAC94H,UAAU,EAAE;MAClC;MACA,IAAMmmF,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACuyC,gCAAgC,CAAC14H,UAAU,EAAE,UAAUszE,OAAO,EAAE;QACnE6S,QAAQ,CAAC/tF,IAAI,CAACk7E,OAAO,CAAC;MACxB,CAAC,CAAC;MACF,OAAO6S,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAA92F,GAAA;IAAAC,KAAA,EAcA,SAAAg+H,mBAAmBA,CAAC3/G,MAAM,EAAE8H,UAAU,EAAE;MAAA,IAAAsjH,MAAA;MACtC,IAAI,IAAI,CAACjC,cAAc,EAAE;QAAA,IAAA14D,IAAA;QACvB,IAAMpoD,UAAU,GAAGP,UAAU,IAAIA,UAAU,CAACG,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC2qE,QAAQ,CAAC,CAAC;QAEzE,IAAI,CAACvqE,UAAU,EAAE;UACf,OAAO,IAAI,CAAC8gH,cAAc,CAACxB,WAAW,CAAC3nH,MAAM,CAAC;QAChD;QAEA,IAAMuhH,OAAO,GAAG,IAAAn5G,qBAAa,EAACpI,MAAM,EAAE8H,UAAU,CAAC;QAEjD,OAAO,CAAA2oD,IAAA,KAAE,EAAC5hE,MAAM,CAAA9I,KAAA,CAAA0qE,IAAA,EAAAvI,kBAAA,CACXq5D,OAAO,CAACpwH,GAAG,CAAC,UAACk6H,QAAQ;UAAA,OAAKD,MAAI,CAACjC,cAAc,CAACxB,WAAW,CAAC0D,QAAQ,CAAC;QAAA,EAAC,CACzE,CAAC;MACH;MACA,IAAI,IAAI,CAAC3B,mBAAmB,EAAE;QAC5B,OAAO,IAAI,CAACA,mBAAmB,CAACj5H,QAAQ,CAAC,CAAC,CAAC9K,KAAK,CAAC,CAAC,CAAC;MACrD;MACA,OAAO,EAAE;IACX;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZE;IAAAjE,GAAA;IAAAC,KAAA,EAaA,SAAA2pI,6BAA6BA,CAACj5H,UAAU,EAAEogC,MAAM,EAAE;MAChD;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAM90B,CAAC,GAAGtL,UAAU,CAAC,CAAC,CAAC;MACvB,IAAMuL,CAAC,GAAGvL,UAAU,CAAC,CAAC,CAAC;MACvB,IAAIk5H,cAAc,GAAG,IAAI;MACzB,IAAMrrG,YAAY,GAAG,CAACX,GAAG,EAAEA,GAAG,CAAC;MAC/B,IAAIY,kBAAkB,GAAGxnB,QAAQ;MACjC,IAAMqH,MAAM,GAAG,CAAC,CAACrH,QAAQ,EAAE,CAACA,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ,CAAC;MACzD85B,MAAM,GAAGA,MAAM,GAAGA,MAAM,GAAGxtC,eAAI;MAC/B,IAAI,CAACkkI,cAAc,CAACrB,eAAe,CACjC9nH,MAAM;MACN;AACN;AACA;MACM,UAAU2lE,OAAO,EAAE;QACjB,IAAIlzC,MAAM,CAACkzC,OAAO,CAAC,EAAE;UACnB,IAAM94D,QAAQ,GAAG84D,OAAO,CAAC33B,WAAW,CAAC,CAAC;UACtC,IAAMw9E,0BAA0B,GAAGrrG,kBAAkB;UACrDA,kBAAkB,GAChBtT,QAAQ,YAAY45G,gBAAa,GAC7B,CAAC,GACD55G,QAAQ,CAACoT,cAAc,CAACtiB,CAAC,EAAEC,CAAC,EAAEsiB,YAAY,EAAEC,kBAAkB,CAAC;UACrE,IAAIA,kBAAkB,GAAGqrG,0BAA0B,EAAE;YACnDD,cAAc,GAAG5lD,OAAO;YACxB;YACA;YACA;YACA;YACA,IAAM8lD,WAAW,GAAGn0H,IAAI,CAAC2F,IAAI,CAACkjB,kBAAkB,CAAC;YACjDngB,MAAM,CAAC,CAAC,CAAC,GAAGrC,CAAC,GAAG8tH,WAAW;YAC3BzrH,MAAM,CAAC,CAAC,CAAC,GAAGpC,CAAC,GAAG6tH,WAAW;YAC3BzrH,MAAM,CAAC,CAAC,CAAC,GAAGrC,CAAC,GAAG8tH,WAAW;YAC3BzrH,MAAM,CAAC,CAAC,CAAC,GAAGpC,CAAC,GAAG6tH,WAAW;UAC7B;QACF;MACF,CACF,CAAC;MACD,OAAOF,cAAc;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA7pI,GAAA;IAAAC,KAAA,EAUA,SAAAqmB,SAASA,CAAChI,MAAM,EAAE;MAChB,OAAO,IAAI,CAACmpH,cAAc,CAACnhH,SAAS,CAAChI,MAAM,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAAte,GAAA;IAAAC,KAAA,EAYA,SAAA+pI,cAAcA,CAACh1H,EAAE,EAAE;MACjB,IAAMivE,OAAO,GAAG,IAAI,CAAC4jD,QAAQ,CAAC7yH,EAAE,CAACoL,QAAQ,CAAC,CAAC,CAAC;MAC5C,OAAO6jE,OAAO,KAAKr6E,SAAS,IACxB;MACEq6E,OAAO,IAET,IAAI;IACV;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAgqI,eAAeA,CAAC76B,GAAG,EAAE;MACnB,IAAMnrB,OAAO,GAAG,IAAI,CAAC6jD,SAAS,CAAC14B,GAAG,CAAC;MACnC,OAAOnrB,OAAO,KAAKr6E,SAAS,GAAGq6E,OAAO,GAAG,IAAI;IAC/C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAiqI,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC/C,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAAnnI,GAAA;IAAAC,KAAA,EAGA,SAAAk+H,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAClM,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjyH,GAAA;IAAAC,KAAA,EAMA,SAAAkqI,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC/C,IAAI;IAClB;;IAEA;AACF;AACA;AACA;EAHE;IAAApnI,GAAA;IAAAC,KAAA,EAIA,SAAAwoI,oBAAoBA,CAACx/H,KAAK,EAAE;MAC1B,IAAMg7E,OAAO,GAAG,0BAA4Bh7E,KAAK,CAAC7H,MAAO;MACzD,IAAMinI,UAAU,GAAG,IAAA18H,YAAM,EAACs4E,OAAO,CAAC;MAClC,IAAM94D,QAAQ,GAAG84D,OAAO,CAAC33B,WAAW,CAAC,CAAC;MACtC,IAAI,CAACnhC,QAAQ,EAAE;QACb,IAAI,EAAEk9G,UAAU,IAAI,IAAI,CAACT,qBAAqB,CAAC,EAAE;UAC/C,IAAI,IAAI,CAACH,cAAc,EAAE;YACvB,IAAI,CAACA,cAAc,CAACvlI,MAAM,CAAC+hF,OAAO,CAAC;UACrC;UACA,IAAI,CAAC2jD,qBAAqB,CAACS,UAAU,CAAC,GAAGpkD,OAAO;QAClD;MACF,CAAC,MAAM;QACL,IAAM3lE,MAAM,GAAG6M,QAAQ,CAAC7E,SAAS,CAAC,CAAC;QACnC,IAAI+hH,UAAU,IAAI,IAAI,CAACT,qBAAqB,EAAE;UAC5C,OAAO,IAAI,CAACA,qBAAqB,CAACS,UAAU,CAAC;UAC7C,IAAI,IAAI,CAACZ,cAAc,EAAE;YACvB,IAAI,CAACA,cAAc,CAACxW,MAAM,CAAC3yG,MAAM,EAAE2lE,OAAO,CAAC;UAC7C;QACF,CAAC,MAAM;UACL,IAAI,IAAI,CAACwjD,cAAc,EAAE;YACvB,IAAI,CAACA,cAAc,CAAC7hF,MAAM,CAACtnC,MAAM,EAAE2lE,OAAO,CAAC;UAC7C;QACF;MACF;MACA,IAAMjvE,EAAE,GAAGivE,OAAO,CAACsE,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB,IAAMwgI,GAAG,GAAGp1H,EAAE,CAACoL,QAAQ,CAAC,CAAC;QACzB,IAAI,IAAI,CAACynH,QAAQ,CAACuC,GAAG,CAAC,KAAKnmD,OAAO,EAAE;UAClC,IAAI,CAAComD,kBAAkB,CAACpmD,OAAO,CAAC;UAChC,IAAI,CAAC4jD,QAAQ,CAACuC,GAAG,CAAC,GAAGnmD,OAAO;QAC9B;MACF,CAAC,MAAM;QACL,IAAI,CAAComD,kBAAkB,CAACpmD,OAAO,CAAC;QAChC,IAAI,CAAC6jD,SAAS,CAACO,UAAU,CAAC,GAAGpkD,OAAO;MACtC;MACA,IAAI,CAACh5E,OAAO,CAAC,CAAC;MACd,IAAI,CAACjC,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAAChC,aAAa,EAAEviD,OAAO,CAC9D,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAqxF,UAAUA,CAACrN,OAAO,EAAE;MAClB,IAAMjvE,EAAE,GAAGivE,OAAO,CAACsE,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB,OAAOoL,EAAE,IAAI,IAAI,CAAC6yH,QAAQ;MAC5B;MACA,OAAO,IAAAl8H,YAAM,EAACs4E,OAAO,CAAC,IAAI,IAAI,CAAC6jD,SAAS;IAC1C;;IAEA;AACF;AACA;EAFE;IAAA9nI,GAAA;IAAAC,KAAA,EAGA,SAAA+E,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACyiI,cAAc,EAAE;QACvB,OACE,IAAI,CAACA,cAAc,CAACziI,OAAO,CAAC,CAAC,IAAI,IAAAA,YAAO,EAAC,IAAI,CAAC4iI,qBAAqB,CAAC;MAExE;MACA,IAAI,IAAI,CAACI,mBAAmB,EAAE;QAC5B,OAAO,IAAI,CAACA,mBAAmB,CAACr5H,SAAS,CAAC,CAAC,KAAK,CAAC;MACnD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3O,GAAA;IAAAC,KAAA,EAKA,SAAA89H,YAAYA,CAACz/G,MAAM,EAAEG,UAAU,EAAE2H,UAAU,EAAE;MAAA,IAAAkkH,MAAA;MAC3C,IAAMC,kBAAkB,GAAG,IAAI,CAAC7C,mBAAmB;MACnD,IAAM8C,aAAa,GAAG,IAAI,CAACnD,SAAS,CAAC/oH,MAAM,EAAEG,UAAU,EAAE2H,UAAU,CAAC;MAAC,IAAAotG,KAAA,YAAAA,MAAA,EACb;QACtD,IAAMiX,YAAY,GAAGD,aAAa,CAACjpI,CAAC,CAAC;QACrC,IAAMmpI,aAAa,GAAGH,kBAAkB,CAACnE,eAAe,CACtDqE,YAAY;QACZ;AACR;AACA;AACA;QACQ,UAAU3lI,MAAM,EAAE;UAChB,OAAO,IAAA0c,sBAAc,EAAC1c,MAAM,CAACwZ,MAAM,EAAEmsH,YAAY,CAAC;QACpD,CACF,CAAC;QACD,IAAI,CAACC,aAAa,EAAE;UAClB,EAAEJ,MAAI,CAAC3C,oBAAoB;UAC3B2C,MAAI,CAACthI,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAAC9B,iBAAiB,CACzD,CAAC;UACD4D,MAAI,CAACruC,OAAO,CAAC/3F,IAAI,CACfomI,MAAI,EACJG,YAAY,EACZhsH,UAAU,EACV2H,UAAU;UACV;AACV;AACA;UACU,UAAC0wE,QAAQ,EAAK;YACZ,EAAEwzC,MAAI,CAAC3C,oBAAoB;YAC3B2C,MAAI,CAACthI,aAAa,CAChB,IAAIi+H,iBAAiB,CACnBuB,wBAAe,CAAC7B,eAAe,EAC/B/8H,SAAS,EACTktF,QACF,CACF,CAAC;UACH,CAAC,EACD,YAAM;YACJ,EAAEwzC,MAAI,CAAC3C,oBAAoB;YAC3B2C,MAAI,CAACthI,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAAC5B,iBAAiB,CACzD,CAAC;UACH,CACF,CAAC;UACD2D,kBAAkB,CAACtZ,MAAM,CAACwZ,YAAY,EAAE;YAACnsH,MAAM,EAAEmsH,YAAY,CAACxmI,KAAK,CAAC;UAAC,CAAC,CAAC;QACzE;MACF,CAAC;MA5CD,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGihI,aAAa,CAAC3pI,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC;QAAAiyH,KAAA;MAAA;MA6CtD,IAAI,CAAC52C,OAAO,GACV,IAAI,CAACqf,OAAO,CAACp7F,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC8mI,oBAAoB,GAAG,CAAC;IACnE;;IAEA;AACF;AACA;EAFE;IAAA3nI,GAAA;IAAAC,KAAA,EAGA,SAAAy4G,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC7zG,KAAK,CAAC,IAAI,CAAC;MAChB,IAAI,CAAC6iI,mBAAmB,CAAC7iI,KAAK,CAAC,CAAC;MAChC+K,aAAA,CAAAs3H,YAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlnI,GAAA;IAAAC,KAAA,EAKA,SAAA0qI,kBAAkBA,CAACrsH,MAAM,EAAE;MACzB,IAAMisH,kBAAkB,GAAG,IAAI,CAAC7C,mBAAmB;MACnD,IAAMvlI,GAAG,GAAGooI,kBAAkB,CAACnE,eAAe,CAAC9nH,MAAM,EAAE,UAAUxZ,MAAM,EAAE;QACvE,IAAI,IAAAxC,cAAM,EAACwC,MAAM,CAACwZ,MAAM,EAAEA,MAAM,CAAC,EAAE;UACjC,OAAOxZ,MAAM;QACf;MACF,CAAC,CAAC;MACF,IAAI3C,GAAG,EAAE;QACPooI,kBAAkB,CAACroI,MAAM,CAACC,GAAG,CAAC;MAChC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnC,GAAA;IAAAC,KAAA,EAOA,SAAA2qI,cAAcA,CAAC9zC,QAAQ,EAAE;MACvB,IAAI+zC,OAAO,GAAG,KAAK;MACnB,KAAK,IAAItpI,CAAC,GAAG,CAAC,EAAEgI,EAAE,GAAGutF,QAAQ,CAACj2F,MAAM,EAAEU,CAAC,GAAGgI,EAAE,EAAE,EAAEhI,CAAC,EAAE;QACjDspI,OAAO,GAAG,IAAI,CAAC3B,qBAAqB,CAACpyC,QAAQ,CAACv1F,CAAC,CAAC,CAAC,IAAIspI,OAAO;MAC9D;MACA,IAAIA,OAAO,EAAE;QACX,IAAI,CAAC5/H,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjL,GAAA;IAAAC,KAAA,EAOA,SAAA8oI,aAAaA,CAAC9kD,OAAO,EAAE;MACrB,IAAI,CAACA,OAAO,EAAE;QACZ;MACF;MACA,IAAM4mD,OAAO,GAAG,IAAI,CAAC3B,qBAAqB,CAACjlD,OAAO,CAAC;MACnD,IAAI4mD,OAAO,EAAE;QACX,IAAI,CAAC5/H,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjL,GAAA;IAAAC,KAAA,EAMA,SAAAipI,qBAAqBA,CAACjlD,OAAO,EAAE;MAC7B,IAAMokD,UAAU,GAAG,IAAA18H,YAAM,EAACs4E,OAAO,CAAC;MAClC,IAAI,EAAEokD,UAAU,IAAI,IAAI,CAACP,SAAS,CAAC,EAAE;QACnC,OAAO,KAAK;MACd;MAEA,IAAIO,UAAU,IAAI,IAAI,CAACT,qBAAqB,EAAE;QAC5C,OAAO,IAAI,CAACA,qBAAqB,CAACS,UAAU,CAAC;MAC/C,CAAC,MAAM;QACL,IAAI,IAAI,CAACZ,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,CAACvlI,MAAM,CAAC+hF,OAAO,CAAC;QACrC;MACF;MAEA,IAAM6mD,iBAAiB,GAAG,IAAI,CAAC/C,kBAAkB,CAACM,UAAU,CAAC;MAC7DyC,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEj8H,OAAO,CAACxE,qBAAa,CAAC;MACzC,OAAO,IAAI,CAAC09H,kBAAkB,CAACM,UAAU,CAAC;MAE1C,IAAMrzH,EAAE,GAAGivE,OAAO,CAACsE,KAAK,CAAC,CAAC;MAC1B,IAAIvzE,EAAE,KAAKpL,SAAS,EAAE;QACpB,IAAMmhI,QAAQ,GAAG/1H,EAAE,CAACoL,QAAQ,CAAC,CAAC;QAC9B,IAAMuoH,cAAc,GAAG,IAAI,CAACd,QAAQ,CAACkD,QAAQ,CAAC;QAC9C,IAAIpC,cAAc,KAAK1kD,OAAO,EAAE;UAC9B,OAAO,IAAI,CAAC4jD,QAAQ,CAACkD,QAAQ,CAAC;QAChC,CAAC,MAAM,IAAI/oI,KAAK,CAACC,OAAO,CAAC0mI,cAAc,CAAC,EAAE;UACxCA,cAAc,CAACtmI,MAAM,CAACsmI,cAAc,CAACvmI,OAAO,CAAC6hF,OAAO,CAAC,EAAE,CAAC,CAAC;UACzD,IAAI0kD,cAAc,CAAC9nI,MAAM,KAAK,CAAC,EAAE;YAC/B,IAAI,CAACgnI,QAAQ,CAACkD,QAAQ,CAAC,GAAGpC,cAAc,CAAC,CAAC,CAAC;UAC7C;QACF;MACF;MACA,OAAO,IAAI,CAACb,SAAS,CAACO,UAAU,CAAC;MACjC,IAAI,IAAI,CAACx+H,WAAW,CAAC2+H,wBAAe,CAAC/B,aAAa,CAAC,EAAE;QACnD,IAAI,CAACz9H,aAAa,CAChB,IAAIi+H,iBAAiB,CAACuB,wBAAe,CAAC/B,aAAa,EAAExiD,OAAO,CAC9D,CAAC;MACH;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjkF,GAAA;IAAAC,KAAA,EAMA,SAAAoqI,kBAAkBA,CAACpmD,OAAO,EAAE;MAC1B,KAAK,IAAMjvE,EAAE,IAAI,IAAI,CAAC6yH,QAAQ,EAAE;QAC9B,IAAI,IAAI,CAACA,QAAQ,CAAC7yH,EAAE,CAAC,KAAKivE,OAAO,EAAE;UACjC,OAAO,IAAI,CAAC4jD,QAAQ,CAAC7yH,EAAE,CAAC;UACxB;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhV,GAAA;IAAAC,KAAA,EAMA,SAAA+qI,SAASA,CAAC/5D,MAAM,EAAE;MAChB,IAAI,CAACgrB,OAAO,GAAGhrB,MAAM;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjxE,GAAA;IAAAC,KAAA,EAKA,SAAAm6G,MAAMA,CAAClD,GAAG,EAAE;MACV,IAAArgG,eAAM,EAAC,IAAI,CAACswH,OAAO,EAAE,wCAAwC,CAAC;MAC9D,IAAI,CAACC,IAAI,GAAGlwB,GAAG;MACf,IAAI,CAAC8zB,SAAS,CAAC,IAAArM,kBAAG,EAACznB,GAAG,EAAE,IAAI,CAACiwB,OAAO,CAAC,CAAC;IACxC;;IAEA;AACF;AACA;EAFE;IAAAnnI,GAAA;IAAAC,KAAA,EAGA,SAAAgrI,WAAWA,CAACze,QAAQ,EAAE;MACpB,IAAI,CAACyF,SAAS,GAAGzF,QAAQ;MACzB,IAAI,CAACvhH,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EAn/BwB+sG,gBAAM;AAAA,IAAA35G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAs/BlB2oI,YAAY;;;;;;;;ACxqC3B,IAAAvsF,aAAA,GAAAl1C,sBAAA,CAAAnC,OAAA;AACA,IAAAuK,OAAA,GAAApI,sBAAA,CAAAnC,OAAA;AACA,IAAAq4C,IAAA,GAAAr4C,OAAA;AACA,IAAAs4C,IAAA,GAAAt4C,OAAA;AACA,IAAAkH,OAAA,GAAAlH,OAAA;AACA,IAAAskB,OAAA,GAAAtkB,OAAA;AAA2C,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAjC,SAAA,qBAAAgC,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAnG,gBAAAkB,CAAA,EAAAO,CAAA,UAAAP,CAAA,YAAAO,CAAA,aAAA8E,SAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAS,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAzF,MAAA,EAAA0F,CAAA,UAAAP,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,CAAAQ,UAAA,GAAAR,CAAA,CAAAQ,UAAA,QAAAR,CAAA,CAAAS,YAAA,kBAAAT,CAAA,KAAAA,CAAA,CAAAU,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAb,CAAA,CAAAhG,GAAA,GAAAgG,CAAA;AAAA,SAAAjG,aAAA8F,CAAA,EAAAS,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAR,CAAA,CAAA7B,SAAA,EAAAsC,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAR,CAAA,EAAAU,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAN,CAAA,QAAAhF,CAAA,GAAAuF,YAAA,CAAAP,CAAA,gCAAAR,OAAA,CAAAxE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAuF,aAAAP,CAAA,EAAAD,CAAA,oBAAAP,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAV,CAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAc,WAAA,kBAAAlB,CAAA,QAAAtE,CAAA,GAAAsE,CAAA,CAAA3B,IAAA,CAAAqC,CAAA,EAAAD,CAAA,gCAAAP,OAAA,CAAAxE,CAAA,UAAAA,CAAA,YAAA6E,SAAA,yEAAAE,CAAA,GAAAU,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA,SAAAW,WAAAX,CAAA,EAAAP,CAAA,EAAAH,CAAA,WAAAG,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAb,CAAA,EAAAc,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAH,CAAA,QAAAsB,eAAA,CAAAZ,CAAA,EAAAJ,WAAA,IAAAH,CAAA,CAAA3B,KAAA,CAAAkC,CAAA,EAAAV,CAAA;AAAA,SAAAuB,2BAAAb,CAAA,EAAAV,CAAA,QAAAA,CAAA,iBAAAE,OAAA,CAAAF,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAO,SAAA,qEAAAoB,sBAAA,CAAAjB,CAAA;AAAA,SAAAiB,uBAAA3B,CAAA,mBAAAA,CAAA,YAAA4B,cAAA,sEAAA5B,CAAA;AAAA,SAAAwB,0BAAA,cAAAd,CAAA,IAAAmB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAoD,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAnB,CAAA,aAAAc,yBAAA,YAAAA,0BAAA,aAAAd,CAAA;AAAA,SAAAY,gBAAAZ,CAAA,WAAAY,eAAA,GAAAR,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAkB,cAAA,CAAAC,IAAA,eAAAvB,CAAA,WAAAA,CAAA,CAAAwB,SAAA,IAAApB,MAAA,CAAAkB,cAAA,CAAAtB,CAAA,MAAAY,eAAA,CAAAZ,CAAA;AAAA,SAAAyB,UAAAzB,CAAA,EAAAV,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAO,SAAA,wDAAAG,CAAA,CAAAvC,SAAA,GAAA2C,MAAA,CAAAsB,MAAA,CAAApC,CAAA,IAAAA,CAAA,CAAA7B,SAAA,IAAAmC,WAAA,IAAAlG,KAAA,EAAAsG,CAAA,EAAAG,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAL,CAAA,iBAAAG,QAAA,SAAAb,CAAA,IAAAqC,eAAA,CAAA3B,CAAA,EAAAV,CAAA;AAAA,SAAAqC,gBAAA3B,CAAA,EAAAV,CAAA,WAAAqC,eAAA,GAAAvB,MAAA,CAAAiB,cAAA,GAAAjB,MAAA,CAAAiB,cAAA,CAAAE,IAAA,eAAAvB,CAAA,EAAAV,CAAA,WAAAU,CAAA,CAAAwB,SAAA,GAAAlC,CAAA,EAAAU,CAAA,KAAA2B,eAAA,CAAA3B,CAAA,EAAAV,CAAA,KAR3C;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMiI,QAAQ,GAAG;EACfo9H,OAAO,EAAE,SAAS;EAClBp4E,GAAG,EAAE,KAAK;EACVq4E,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAqBMC,OAAO,0BAAAn9H,WAAA;EACX;AACF;AACA;EACE,SAAAm9H,QAAYj9H,OAAO,EAAE;IAAA,IAAAhG,KAAA;IAAAxI,eAAA,OAAAyrI,OAAA;IACnBjjI,KAAA,GAAAnB,UAAA,OAAAokI,OAAA;;IAEA;AACJ;AACA;IACIjjI,KAAA,CAAKsC,EAAE;;IAEP;AACJ;AACA;IACItC,KAAA,CAAK4B,IAAI;;IAET;AACJ;AACA;IACI5B,KAAA,CAAKyC,EAAE;;IAEP;AACJ;AACA;AACA;IACIzC,KAAA,CAAKgG,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;IACIhG,KAAA,CAAK2M,EAAE,GAAG3G,OAAO,CAAC2G,EAAE;;IAEpB;AACJ;AACA;AACA;IACI3M,KAAA,CAAKkjI,WAAW,GACdl9H,OAAO,CAACk9H,WAAW,KAAK3hI,SAAS,GAAGyE,OAAO,CAACk9H,WAAW,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACIljI,KAAA,CAAKy+C,SAAS,GAAGz4C,OAAO,CAACy4C,SAAS,KAAKl9C,SAAS,GAAGyE,OAAO,CAACy4C,SAAS,GAAG,IAAI;;IAE3E;AACJ;AACA;AACA;IACIz+C,KAAA,CAAK4F,OAAO,GAAGuqC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CpwC,KAAA,CAAK4F,OAAO,CAAC6xC,SAAS,GACpBzxC,OAAO,CAACyxC,SAAS,KAAKl2C,SAAS,GAC3ByE,OAAO,CAACyxC,SAAS,GACjB,uBAAuB,GAAG3I,qBAAgB;IAChD9uC,KAAA,CAAK4F,OAAO,CAAC4pC,KAAK,CAAClD,QAAQ,GAAG,UAAU;IACxCtsC,KAAA,CAAK4F,OAAO,CAAC4pC,KAAK,CAACgD,aAAa,GAAG,MAAM;;IAEzC;AACJ;AACA;AACA;IACIxyC,KAAA,CAAKmjI,OAAO,GAAGn9H,OAAO,CAACm9H,OAAO,KAAK,IAAI,GAAG,CAAC,CAAC,GAAGn9H,OAAO,CAACm9H,OAAO,IAAI5hI,SAAS;;IAE3E;AACJ;AACA;AACA;AACA;IACIvB,KAAA,CAAKyuD,QAAQ,GAAG;MACdq9D,UAAU,EAAE,EAAE;MACdryE,OAAO,EAAE;IACX,CAAC;;IAED;AACJ;AACA;AACA;IACIz5C,KAAA,CAAKojI,wBAAwB,GAAG,IAAI;IAEpCpjI,KAAA,CAAKgF,iBAAiB,CAACS,QAAQ,CAACo9H,OAAO,EAAE7iI,KAAA,CAAKqjI,oBAAoB,CAAC;IACnErjI,KAAA,CAAKgF,iBAAiB,CAACS,QAAQ,CAACglD,GAAG,EAAEzqD,KAAA,CAAKsjI,gBAAgB,CAAC;IAC3DtjI,KAAA,CAAKgF,iBAAiB,CAACS,QAAQ,CAACq9H,MAAM,EAAE9iI,KAAA,CAAKujI,mBAAmB,CAAC;IACjEvjI,KAAA,CAAKgF,iBAAiB,CAACS,QAAQ,CAACs9H,QAAQ,EAAE/iI,KAAA,CAAKwjI,qBAAqB,CAAC;IACrExjI,KAAA,CAAKgF,iBAAiB,CAACS,QAAQ,CAACu9H,WAAW,EAAEhjI,KAAA,CAAKyjI,wBAAwB,CAAC;IAE3E,IAAIz9H,OAAO,CAACJ,OAAO,KAAKrE,SAAS,EAAE;MACjCvB,KAAA,CAAK0jI,UAAU,CAAC19H,OAAO,CAACJ,OAAO,CAAC;IAClC;IAEA5F,KAAA,CAAK2jI,SAAS,CAAC39H,OAAO,CAAC+T,MAAM,KAAKxY,SAAS,GAAGyE,OAAO,CAAC+T,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtE/Z,KAAA,CAAK4jI,cAAc,CAAC59H,OAAO,CAAC69H,WAAW,IAAI,UAAU,CAAC;IAEtD,IAAI79H,OAAO,CAACsmC,QAAQ,KAAK/qC,SAAS,EAAE;MAClCvB,KAAA,CAAK8jI,WAAW,CAAC99H,OAAO,CAACsmC,QAAQ,CAAC;IACpC;IAAC,OAAAtsC,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALEL,SAAA,CAAAsjI,OAAA,EAAAn9H,WAAA;EAAA,OAAApO,YAAA,CAAAurI,OAAA;IAAAtrI,GAAA;IAAAC,KAAA,EAMA,SAAAmsI,UAAUA,CAAA,EAAG;MACX,OAAO,oCAAsC,IAAI,CAAC1/H,GAAG,CAACoB,QAAQ,CAACo9H,OAAO,CAAC;IACzE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlrI,GAAA;IAAAC,KAAA,EAKA,SAAAsoF,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACvzE,EAAE;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhV,GAAA;IAAAC,KAAA,EAOA,SAAAk7C,MAAMA,CAAA,EAAG;MACP,OAAO,8CACL,IAAI,CAACzuC,GAAG,CAACoB,QAAQ,CAACglD,GAAG,CAAC,IAAI,IAAI;IAElC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA9yD,GAAA;IAAAC,KAAA,EAMA,SAAAosI,SAASA,CAAA,EAAG;MACV,OAAO,4BAA8B,IAAI,CAAC3/H,GAAG,CAACoB,QAAQ,CAACq9H,MAAM,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnrI,GAAA;IAAAC,KAAA,EAOA,SAAAqsI,WAAWA,CAAA,EAAG;MACZ,OAAO,6DACL,IAAI,CAAC5/H,GAAG,CAACoB,QAAQ,CAACs9H,QAAQ,CAAC;IAE/B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAprI,GAAA;IAAAC,KAAA,EAOA,SAAAssI,cAAcA,CAAA,EAAG;MACf,OAAO,0BAA4B,IAAI,CAAC7/H,GAAG,CAACoB,QAAQ,CAACu9H,WAAW,CAAC;IACnE;;IAEA;AACF;AACA;EAFE;IAAArrI,GAAA;IAAAC,KAAA,EAGA,SAAAyrI,oBAAoBA,CAAA,EAAG;MACrB,IAAA3xF,mBAAc,EAAC,IAAI,CAAC9rC,OAAO,CAAC;MAC5B,IAAMA,OAAO,GAAG,IAAI,CAACm+H,UAAU,CAAC,CAAC;MACjC,IAAIn+H,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAACusC,WAAW,CAACvsC,OAAO,CAAC;MACnC;IACF;;IAEA;AACF;AACA;EAFE;IAAAjO,GAAA;IAAAC,KAAA,EAGA,SAAA0rI,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACF,wBAAwB,EAAE;QAAA,IAAAvwF,aAAA;QACjC,CAAAA,aAAA,OAAI,CAACjtC,OAAO,cAAAitC,aAAA,eAAZA,aAAA,CAAch5C,MAAM,CAAC,CAAC;QACtB,IAAAmI,qBAAa,EAAC,IAAI,CAACohI,wBAAwB,CAAC;QAC5C,IAAI,CAACA,wBAAwB,GAAG,IAAI;MACtC;MACA,IAAMh8H,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAI1rC,GAAG,EAAE;QACP,IAAI,CAACg8H,wBAAwB,GAAG,IAAA1hI,cAAM,EACpC0F,GAAG,EACH+rC,qBAAY,CAACxlC,UAAU,EACvB,IAAI,CAACglC,MAAM,EACX,IACF,CAAC;QACD,IAAI,CAACwxF,mBAAmB,CAAC,CAAC;QAC1B,IAAMx6C,SAAS,GAAG,IAAI,CAAClrC,SAAS,GAC5Br3C,GAAG,CAAC8rC,4BAA4B,CAAC,CAAC,GAClC9rC,GAAG,CAACy8C,mBAAmB,CAAC,CAAC;QAC7B,IAAI,IAAI,CAACq/E,WAAW,EAAE;UACpBv5C,SAAS,CAACt3C,YAAY,CAAC,IAAI,CAACzsC,OAAO,EAAE+jF,SAAS,CAAC33C,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;QACvE,CAAC,MAAM;UACL23C,SAAS,CAACx3C,WAAW,CAAC,IAAI,CAACvsC,OAAO,CAAC;QACrC;QACA,IAAI,CAACw+H,cAAc,CAAC,CAAC;MACvB;IACF;;IAEA;AACF;AACA;EAFE;IAAAzsI,GAAA;IAAAC,KAAA,EAGA,SAAA+6C,MAAMA,CAAA,EAAG;MACP,IAAI,CAACwxF,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAAxsI,GAAA;IAAAC,KAAA,EAGA,SAAA2rI,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACY,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAAxsI,GAAA;IAAAC,KAAA,EAGA,SAAA4rI,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACW,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB;;IAEA;AACF;AACA;EAFE;IAAAzsI,GAAA;IAAAC,KAAA,EAGA,SAAA6rI,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACU,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxsI,GAAA;IAAAC,KAAA,EAMA,SAAA8rI,UAAUA,CAAC99H,OAAO,EAAE;MAClB,IAAI,CAACV,GAAG,CAACO,QAAQ,CAACo9H,OAAO,EAAEj9H,OAAO,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjO,GAAA;IAAAC,KAAA,EAOA,SAAAm7C,MAAMA,CAAC3rC,GAAG,EAAE;MACV,IAAI,CAAClC,GAAG,CAACO,QAAQ,CAACglD,GAAG,EAAErjD,GAAG,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzP,GAAA;IAAAC,KAAA,EAMA,SAAA+rI,SAASA,CAAC5pH,MAAM,EAAE;MAChB,IAAI,CAAC7U,GAAG,CAACO,QAAQ,CAACq9H,MAAM,EAAE/oH,MAAM,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApiB,GAAA;IAAAC,KAAA,EAQA,SAAAksI,WAAWA,CAACx3F,QAAQ,EAAE;MACpB,IAAI,CAACpnC,GAAG,CAACO,QAAQ,CAACs9H,QAAQ,EAAEz2F,QAAQ,CAAC;IACvC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA30C,GAAA;IAAAC,KAAA,EAKA,SAAAwsI,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACjB,OAAO,EAAE;QAChB,IAAI,CAACkB,WAAW,CAAC,IAAI,CAAClB,OAAO,CAAC;MAChC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxrI,GAAA;IAAAC,KAAA,EAMA,SAAAysI,WAAWA,CAACC,kBAAkB,EAAE;MAC9B,IAAMl9H,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MAEzB,IAAI,CAAC1rC,GAAG,IAAI,CAACA,GAAG,CAACi4C,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAACh7C,GAAG,CAACoB,QAAQ,CAACs9H,QAAQ,CAAC,EAAE;QACnE;MACF;MAEA,IAAMwB,OAAO,GAAG,IAAI,CAACC,OAAO,CAACp9H,GAAG,CAACi4C,gBAAgB,CAAC,CAAC,EAAEj4C,GAAG,CAACyV,OAAO,CAAC,CAAC,CAAC;MACnE,IAAMjX,OAAO,GAAG,IAAI,CAACm+H,UAAU,CAAC,CAAC;MACjC,IAAMU,WAAW,GAAG,IAAI,CAACD,OAAO,CAAC5+H,OAAO,EAAE,CACxC,IAAA+qC,eAAU,EAAC/qC,OAAO,CAAC,EACnB,IAAAorC,gBAAW,EAACprC,OAAO,CAAC,CACrB,CAAC;MAEF0+H,kBAAkB,GAAGA,kBAAkB,IAAI,CAAC,CAAC;MAE7C,IAAMI,QAAQ,GACZJ,kBAAkB,CAACK,MAAM,KAAKpjI,SAAS,GAAG,EAAE,GAAG+iI,kBAAkB,CAACK,MAAM;MAC1E,IAAI,CAAC,IAAAxrH,sBAAc,EAACorH,OAAO,EAAEE,WAAW,CAAC,EAAE;QACzC;QACA,IAAMG,UAAU,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;QAC9C,IAAMM,WAAW,GAAGN,OAAO,CAAC,CAAC,CAAC,GAAGE,WAAW,CAAC,CAAC,CAAC;QAC/C,IAAMK,SAAS,GAAGL,WAAW,CAAC,CAAC,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAMQ,YAAY,GAAGR,OAAO,CAAC,CAAC,CAAC,GAAGE,WAAW,CAAC,CAAC,CAAC;QAEhD,IAAM/kH,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACpB,IAAIklH,UAAU,GAAG,CAAC,EAAE;UAClB;UACAllH,KAAK,CAAC,CAAC,CAAC,GAAGklH,UAAU,GAAGF,QAAQ;QAClC,CAAC,MAAM,IAAIG,WAAW,GAAG,CAAC,EAAE;UAC1B;UACAnlH,KAAK,CAAC,CAAC,CAAC,GAAGnS,IAAI,CAACC,GAAG,CAACq3H,WAAW,CAAC,GAAGH,QAAQ;QAC7C;QACA,IAAII,SAAS,GAAG,CAAC,EAAE;UACjB;UACAplH,KAAK,CAAC,CAAC,CAAC,GAAGolH,SAAS,GAAGJ,QAAQ;QACjC,CAAC,MAAM,IAAIK,YAAY,GAAG,CAAC,EAAE;UAC3B;UACArlH,KAAK,CAAC,CAAC,CAAC,GAAGnS,IAAI,CAACC,GAAG,CAACu3H,YAAY,CAAC,GAAGL,QAAQ;QAC9C;QAEA,IAAIhlH,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;UACpC,IAAM7M,MAAM,GAAG;UACbzL,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAAC1V,iBAAiB,CAAC,CACjC;UACD,IAAMw/F,QAAQ,GAAG59H,GAAG,CAAC27C,8BAA8B,CAAClwC,MAAM,CAAC;UAC3D,IAAI,CAACmyH,QAAQ,EAAE;YACb;UACF;UACA,IAAMC,WAAW,GAAG,CAACD,QAAQ,CAAC,CAAC,CAAC,GAAGtlH,KAAK,CAAC,CAAC,CAAC,EAAEslH,QAAQ,CAAC,CAAC,CAAC,GAAGtlH,KAAK,CAAC,CAAC,CAAC,CAAC;UAEpE,IAAMwlH,UAAU,GAAGZ,kBAAkB,CAACz9F,SAAS,IAAI,CAAC,CAAC;UACrDz/B,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAAC3U,eAAe,CAAC;YAC5B1zB,MAAM,EAAEzL,GAAG,CAAC47C,8BAA8B,CAACiiF,WAAW,CAAC;YACvDl+F,QAAQ,EAAEm+F,UAAU,CAACn+F,QAAQ;YAC7BC,MAAM,EAAEk+F,UAAU,CAACl+F;UACrB,CAAC,CAAC;QACJ;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAArvC,GAAA;IAAAC,KAAA,EAOA,SAAA4sI,OAAOA,CAAC5+H,OAAO,EAAEyQ,IAAI,EAAE;MACrB,IAAMqwG,GAAG,GAAG9gH,OAAO,CAACqpF,qBAAqB,CAAC,CAAC;MAC3C,IAAMtpD,OAAO,GAAG+gF,GAAG,CAAC/iE,IAAI,GAAGn5C,MAAM,CAAC26H,WAAW;MAC7C,IAAMv/F,OAAO,GAAG8gF,GAAG,CAAC9iE,GAAG,GAAGp5C,MAAM,CAAC46H,WAAW;MAC5C,OAAO,CAACz/F,OAAO,EAAEC,OAAO,EAAED,OAAO,GAAGtvB,IAAI,CAAC,CAAC,CAAC,EAAEuvB,OAAO,GAAGvvB,IAAI,CAAC,CAAC,CAAC,CAAC;IACjE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1e,GAAA;IAAAC,KAAA,EAOA,SAAAgsI,cAAcA,CAACC,WAAW,EAAE;MAC1B,IAAI,CAAC3+H,GAAG,CAACO,QAAQ,CAACu9H,WAAW,EAAEa,WAAW,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlsI,GAAA;IAAAC,KAAA,EAKA,SAAAq0D,UAAUA,CAACxS,OAAO,EAAE;MAClB,IAAI,IAAI,CAACgV,QAAQ,CAAChV,OAAO,KAAKA,OAAO,EAAE;QACrC,IAAI,CAAC7zC,OAAO,CAAC4pC,KAAK,CAACoK,OAAO,GAAGH,OAAO,GAAG,EAAE,GAAG,MAAM;QAClD,IAAI,CAACgV,QAAQ,CAAChV,OAAO,GAAGA,OAAO;MACjC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA9hD,GAAA;IAAAC,KAAA,EAIA,SAAAusI,mBAAmBA,CAAA,EAAG;MACpB,IAAM/8H,GAAG,GAAG,IAAI,CAAC0rC,MAAM,CAAC,CAAC;MACzB,IAAMxG,QAAQ,GAAG,IAAI,CAAC23F,WAAW,CAAC,CAAC;MACnC,IAAI,CAAC78H,GAAG,IAAI,CAACA,GAAG,CAAC0pF,UAAU,CAAC,CAAC,IAAI,CAACxkD,QAAQ,EAAE;QAC1C,IAAI,CAAC2f,UAAU,CAAC,KAAK,CAAC;QACtB;MACF;MAEA,IAAM7jD,KAAK,GAAGhB,GAAG,CAACsoF,sBAAsB,CAACpjD,QAAQ,CAAC;MAClD,IAAM+4F,OAAO,GAAGj+H,GAAG,CAACyV,OAAO,CAAC,CAAC;MAC7B,IAAI,CAACyoH,sBAAsB,CAACl9H,KAAK,EAAEi9H,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1tI,GAAA;IAAAC,KAAA,EAKA,SAAA0tI,sBAAsBA,CAACl9H,KAAK,EAAEi9H,OAAO,EAAE;MACrC,IAAM71F,KAAK,GAAG,IAAI,CAAC5pC,OAAO,CAAC4pC,KAAK;MAChC,IAAMz1B,MAAM,GAAG,IAAI,CAACiqH,SAAS,CAAC,CAAC;MAE/B,IAAMH,WAAW,GAAG,IAAI,CAACK,cAAc,CAAC,CAAC;MAEzC,IAAI,CAACj4E,UAAU,CAAC,IAAI,CAAC;MAErB,IAAMr4C,CAAC,GAAGrG,IAAI,CAACmI,KAAK,CAACtN,KAAK,CAAC,CAAC,CAAC,GAAG2R,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MACjD,IAAMlG,CAAC,GAAGtG,IAAI,CAACmI,KAAK,CAACtN,KAAK,CAAC,CAAC,CAAC,GAAG2R,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MACjD,IAAIwrH,IAAI,GAAG,IAAI;MACf,IAAIC,IAAI,GAAG,IAAI;MACf,IACE3B,WAAW,IAAI,cAAc,IAC7BA,WAAW,IAAI,cAAc,IAC7BA,WAAW,IAAI,WAAW,EAC1B;QACA0B,IAAI,GAAG,OAAO;MAChB,CAAC,MAAM,IACL1B,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,YAAY,EAC3B;QACA0B,IAAI,GAAG,MAAM;MACf;MACA,IACE1B,WAAW,IAAI,aAAa,IAC5BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,cAAc,EAC7B;QACA2B,IAAI,GAAG,OAAO;MAChB,CAAC,MAAM,IACL3B,WAAW,IAAI,aAAa,IAC5BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,cAAc,EAC7B;QACA2B,IAAI,GAAG,MAAM;MACf;MACA,IAAMxiH,SAAS,gBAAAle,MAAA,CAAgBygI,IAAI,QAAAzgI,MAAA,CAAK0gI,IAAI,kBAAA1gI,MAAA,CAAe8O,CAAC,QAAA9O,MAAA,CAAK+O,CAAC,MAAG;MACrE,IAAI,IAAI,CAAC46C,QAAQ,CAACq9D,UAAU,IAAI9oG,SAAS,EAAE;QACzC,IAAI,CAACyrC,QAAQ,CAACq9D,UAAU,GAAG9oG,SAAS;QACpCwsB,KAAK,CAACxsB,SAAS,GAAGA,SAAS;MAC7B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAArrB,GAAA;IAAAC,KAAA,EAIA,SAAA6tI,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACz/H,OAAO;IACrB;EAAC;AAAA,EAndmBjC,eAAU;AAAA,IAAA/N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsdjB+sI,OAAO;;;;ACrkBtBhoI,OAAA;AACA,IAAAquF,IAAA,GAAAlsF,sBAAA,CAAAnC,OAAA;AACA,IAAAgzD,KAAA,GAAA7wD,sBAAA,CAAAnC,OAAA;AACA,IAAA04F,KAAA,GAAAv2F,sBAAA,CAAAnC,OAAA;AACA,IAAAyqI,IAAA,GAAAtoI,sBAAA,CAAAnC,OAAA;AACA,IAAAi6B,KAAA,GAAAj6B,OAAA;AACA,IAAA0qI,OAAA,GAAAvoI,sBAAA,CAAAnC,OAAA;AACA,IAAA2qI,QAAA,GAAAxoI,sBAAA,CAAAnC,OAAA;AACA,IAAAuhI,QAAA,GAAAp/H,sBAAA,CAAAnC,OAAA;AACA,IAAA6jC,MAAA,GAAA1hC,sBAAA,CAAAnC,OAAA;AACA,IAAAykF,MAAA,GAAAtiF,sBAAA,CAAAnC,OAAA;AACA,IAAAwkF,KAAA,GAAAriF,sBAAA,CAAAnC,OAAA;AACA,IAAA4qI,QAAA,GAAAzoI,sBAAA,CAAAnC,OAAA;AAAiC,SAAAmC,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAtH,OAAA,EAAAsH,CAAA;AAAA,SAAAia,eAAAxZ,CAAA,EAAAT,CAAA,WAAAka,eAAA,CAAAzZ,CAAA,KAAA0Z,qBAAA,CAAA1Z,CAAA,EAAAT,CAAA,KAAAoa,2BAAA,CAAA3Z,CAAA,EAAAT,CAAA,KAAAqa,gBAAA;AAAA,SAAAA,iBAAA,cAAA9Z,SAAA;AAAA,SAAA6Z,4BAAA3Z,CAAA,EAAAvF,CAAA,QAAAuF,CAAA,2BAAAA,CAAA,SAAA6Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA,OAAAwF,CAAA,MAAA6Z,QAAA,CAAAlc,IAAA,CAAAoC,CAAA,EAAArC,KAAA,6BAAAsC,CAAA,IAAAD,CAAA,CAAAH,WAAA,KAAAI,CAAA,GAAAD,CAAA,CAAAH,WAAA,CAAAka,IAAA,aAAA9Z,CAAA,cAAAA,CAAA,GAAAvE,KAAA,CAAAse,IAAA,CAAAha,CAAA,oBAAAC,CAAA,+CAAAsL,IAAA,CAAAtL,CAAA,IAAA4Z,iBAAA,CAAA7Z,CAAA,EAAAvF,CAAA;AAAA,SAAAof,kBAAA7Z,CAAA,EAAAvF,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,MAAAE,CAAA,GAAAuF,CAAA,CAAAzF,MAAA,YAAAgF,CAAA,MAAAvE,CAAA,GAAAU,KAAA,CAAAjB,CAAA,GAAA8E,CAAA,GAAA9E,CAAA,EAAA8E,CAAA,IAAAvE,CAAA,CAAAuE,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAAvE,CAAA;AAAA,SAAA0e,sBAAA1Z,CAAA,EAAA4W,CAAA,QAAA3W,CAAA,WAAAD,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAC,CAAA,QAAAV,CAAA,EAAAvE,CAAA,EAAAC,CAAA,EAAA+X,CAAA,EAAAvY,CAAA,OAAA+N,CAAA,OAAA9I,CAAA,iBAAAzE,CAAA,IAAAgF,CAAA,GAAAA,CAAA,CAAArC,IAAA,CAAAoC,CAAA,GAAAia,IAAA,QAAArD,CAAA,QAAAvW,MAAA,CAAAJ,CAAA,MAAAA,CAAA,UAAAuI,CAAA,uBAAAA,CAAA,IAAAjJ,CAAA,GAAAtE,CAAA,CAAA2C,IAAA,CAAAqC,CAAA,GAAAia,IAAA,MAAAzf,CAAA,CAAAgI,IAAA,CAAAlD,CAAA,CAAA5F,KAAA,GAAAc,CAAA,CAAAF,MAAA,KAAAqc,CAAA,GAAApO,CAAA,iBAAAxI,CAAA,IAAAN,CAAA,OAAA1E,CAAA,GAAAgF,CAAA,yBAAAwI,CAAA,YAAAvI,CAAA,CAAAka,MAAA,KAAAnH,CAAA,GAAA/S,CAAA,CAAAka,MAAA,IAAA9Z,MAAA,CAAA2S,CAAA,MAAAA,CAAA,2BAAAtT,CAAA,QAAA1E,CAAA,aAAAP,CAAA;AAAA,SAAAgf,gBAAAzZ,CAAA,QAAAtE,KAAA,CAAAC,OAAA,CAAAqE,CAAA,UAAAA,CAAA;AAGjC;AACA,IAAMmJ,GAAG,GAAG,IAAIwjF,YAAG,CAAC;EAChB7xF,MAAM,EAAE,KAAK;EACb4/C,MAAM,EAAE,CACJ,IAAIixD,aAAS,CAAC;IACVvkG,MAAM,EAAE,IAAI4uG,YAAG,CAAC;EACpB,CAAC,CAAC,CACL;EACDh5D,IAAI,EAAE,IAAIjY,aAAI,CAAC;IACXnwB,MAAM,EAAE,IAAA2Y,gBAAU,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAE;IAC5B6Z,IAAI,EAAE;EACV,CAAC;AACL,CAAC,CAAC;;AAEF;AACA,IAAMygG,SAAS,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;;AAEzC,IAAMC,UAAU,GAAG,IAAItO,gBAAO,CAAC;EAC3B30G,QAAQ,EAAE,IAAImZ,cAAK,CAAC,IAAAzQ,gBAAU,EAACs6G,SAAS,CAAC;AAC7C,CAAC,CAAC;AAEFC,UAAU,CAACr/C,QAAQ,CAAC,IAAI9L,cAAK,CAAC;EAC1B5R,KAAK,EAAE,IAAI2P,aAAI,CAAC;IACZ7O,GAAG,EAAE,uDAAuD;IAC5DxoD,KAAK,EAAE;EACX,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAM0kH,SAAS,GAAG,IAAInH,gBAAY,CAAC;EAC/BpwC,QAAQ,EAAE,CAACs3C,UAAU;AACzB,CAAC,CAAC;AAEF,IAAME,QAAQ,GAAG,IAAIjQ,eAAW,CAAC;EAC7B3wH,MAAM,EAAE2gI;AACZ,CAAC,CAAC;AAEF5+H,GAAG,CAAC6mF,QAAQ,CAACg4C,QAAQ,CAAC;;AAEtB;AACA,IAAMC,YAAY,GAAG/1F,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;AAClD81F,YAAY,CAACzuF,SAAS,GAAG,UAAU;AACnCyuF,YAAY,CAAC12F,KAAK,CAACob,UAAU,GAAG,OAAO;AACvCs7E,YAAY,CAAC12F,KAAK,CAAChL,OAAO,GAAG,MAAM;AACnC0hG,YAAY,CAAC12F,KAAK,CAAC22F,YAAY,GAAG,KAAK;AACvCD,YAAY,CAAC12F,KAAK,CAAC42F,SAAS,GAAG,2BAA2B;AAC1DF,YAAY,CAAC12F,KAAK,CAAClD,QAAQ,GAAG,UAAU;AAExC,IAAM+5F,YAAY,GAAG,IAAIpD,gBAAO,CAAC;EAC7Br9H,OAAO,EAAEsgI,YAAY;EACrBrC,WAAW,EAAE,eAAe;EAC5BplF,SAAS,EAAE,KAAK;EAChB1kC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACnB,CAAC,CAAC;AAEF3S,GAAG,CAAC+mF,UAAU,CAACk4C,YAAY,CAAC;;AAE5B;AACA,SAASC,iBAAiBA,CAAC/kH,MAAM,EAAEC,MAAM,EAAE;EACvC,IAAA+kH,MAAA,GAAA9uH,cAAA,CAAqB8J,MAAM;IAApBiC,IAAI,GAAA+iH,MAAA;IAAE/jH,IAAI,GAAA+jH,MAAA;EACjB,IAAAC,OAAA,GAAA/uH,cAAA,CAAqB+J,MAAM;IAApBilH,IAAI,GAAAD,OAAA;IAAE/jH,IAAI,GAAA+jH,OAAA;EAEjB,IAAM78G,CAAC,GAAG,OAAO,CAAC,CAAC;EACnB,IAAM+8G,KAAK,GAAG,SAARA,KAAKA,CAAI9yH,CAAC;IAAA,OAAKA,CAAC,GAAGrG,IAAI,CAAC0H,EAAE,GAAG,GAAG;EAAA;EAEtC,IAAM0xH,IAAI,GAAGD,KAAK,CAACjkH,IAAI,GAAGD,IAAI,CAAC;EAC/B,IAAMokH,IAAI,GAAGF,KAAK,CAACD,IAAI,GAAGjjH,IAAI,CAAC;EAE/B,IAAM9qB,CAAC,GAAG6U,IAAA,CAAAkI,GAAA,CAAAlI,IAAI,CAAC4O,GAAG,CAACwqH,IAAI,GAAG,CAAC,CAAC,EAAI,CAAC,IACvBp5H,IAAI,CAAC0O,GAAG,CAACyqH,KAAK,CAAClkH,IAAI,CAAC,CAAC,GAAGjV,IAAI,CAAC0O,GAAG,CAACyqH,KAAK,CAACjkH,IAAI,CAAC,CAAC,GAAAlV,IAAA,CAAAkI,GAAA,CAC7ClI,IAAI,CAAC4O,GAAG,CAACyqH,IAAI,GAAG,CAAC,CAAC,EAAI,CAAC;EAEjC,IAAMj8G,CAAC,GAAG,CAAC,GAAGpd,IAAI,CAACqV,KAAK,CAACrV,IAAI,CAAC2F,IAAI,CAACxa,CAAC,CAAC,EAAE6U,IAAI,CAAC2F,IAAI,CAAC,CAAC,GAAGxa,CAAC,CAAC,CAAC;EAExD,OAAOixB,CAAC,GAAGgB,CAAC,CAAC,CAAC;AAClB;;AAEA;AACA,IAAMk8G,kBAAkB,GAAG,IAAIhI,gBAAY,CAAC,CAAC;AAC7C,IAAMiI,iBAAiB,GAAG,IAAI9Q,eAAW,CAAC;EAAE3wH,MAAM,EAAEwhI;AAAmB,CAAC,CAAC;AACzEz/H,GAAG,CAAC6mF,QAAQ,CAAC64C,iBAAiB,CAAC;AAE/B,SAASC,kBAAkBA,CAAC9jH,MAAM,EAAE;EAChC4jH,kBAAkB,CAACrqI,KAAK,CAAC,CAAC;EAE1B,IAAMwqI,YAAY,GAAG,IAAIvP,gBAAO,CAAC;IAC7B30G,QAAQ,EAAE,IAAImZ,cAAK,CAAC,IAAAzQ,gBAAU,EAACvI,MAAM,CAAC;EAC1C,CAAC,CAAC;EAEF+jH,YAAY,CAACtgD,QAAQ,CAAC,IAAI9L,cAAK,CAAC;IAC5B5R,KAAK,EAAE,IAAI2P,aAAI,CAAC;MACZ7O,GAAG,EAAE,uDAAuD;MAC5DxoD,KAAK,EAAE;IACX,CAAC;EACL,CAAC,CAAC,CAAC;EAEHulH,kBAAkB,CAAC/G,UAAU,CAACkH,YAAY,CAAC;EAE3C5/H,GAAG,CAAC8zC,OAAO,CAAC,CAAC,CAACjV,OAAO,CAAC;IAClBpzB,MAAM,EAAE,IAAA2Y,gBAAU,EAACvI,MAAM,CAAC;IAC1B8jB,QAAQ,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,IAAMtlB,QAAQ,GAAG6kH,iBAAiB,CAACrjH,MAAM,EAAE6iH,SAAS,CAAC;EACrD31F,QAAQ,CAACkD,cAAc,CAAC,MAAM,CAAC,CAAC0G,SAAS,sBAAAj1C,MAAA,CAAsB2c,QAAQ,CAACnM,OAAO,CAAC,CAAC,CAAC,mBAAgB;EAClG8O,OAAO,CAACnR,GAAG,qBAAAnO,MAAA,CAAqB2c,QAAQ,CAACnM,OAAO,CAAC,CAAC,CAAC,YAAS,CAAC;EAE7D,IAAImM,QAAQ,IAAI,EAAE,EAAE;IAChBykH,YAAY,CAACnsF,SAAS,0KAIrB;IACDssF,YAAY,CAACvC,WAAW,CAAC,IAAAt4G,gBAAU,EAACs6G,SAAS,CAAC,CAAC;EACnD,CAAC,MAAM;IACHO,YAAY,CAACvC,WAAW,CAACviI,SAAS,CAAC,CAAC,CAAC;EACzC;AACJ;;AAEA;AACA,IAAI2H,SAAS,CAAC+9H,WAAW,EAAE;EACvB/9H,SAAS,CAAC+9H,WAAW,CAACC,aAAa,CAC/B,UAAC56F,QAAQ,EAAK;IACV,IAAMrpB,MAAM,GAAG,CAACqpB,QAAQ,CAACrpB,MAAM,CAACiI,SAAS,EAAEohB,QAAQ,CAACrpB,MAAM,CAACgI,QAAQ,CAAC;IACpE7G,OAAO,CAACnR,GAAG,CAAC,mBAAmB,EAAEgQ,MAAM,CAAC;IAExC8jH,kBAAkB,CAAC9jH,MAAM,CAAC;EAC9B,CAAC,EACD,UAACe,KAAK,EAAK;IACPI,OAAO,CAACJ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD,CAAC,EACD;IACImjH,kBAAkB,EAAE,IAAI;IAAE;IAC1BC,UAAU,EAAE,CAAC;IAAE;IACf1gF,OAAO,EAAE,IAAI,CAAC;EAClB,CACJ,CAAC;AACL,CAAC,MAAM;EACHtiC,OAAO,CAACJ,KAAK,CAAC,+CAA+C,CAAC;AAClE;;;AG1JA,IAAIqkH,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGF,MAAM,CAACX,MAAM,CAACc,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BF,SAAS,CAACzsI,IAAI,CAAC,IAAI,EAAE2sI,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACThvI,IAAI,EAAE2uI,MAAM,CAACX,MAAM,CAACiB,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUvtI,EAAE,EAAE;MACpB,IAAI,CAACqtI,gBAAgB,CAACjoI,IAAI,CAACpF,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDzD,OAAO,EAAE,SAAAA,CAAUyD,EAAE,EAAE;MACrB,IAAI,CAACstI,iBAAiB,CAACloI,IAAI,CAACpF,EAAE,CAAC;IACjC;EACF,CAAC;EAED8sI,MAAM,CAACX,MAAM,CAACiB,OAAO,GAAG,IAAI;AAC9B;AAEAN,MAAM,CAACX,MAAM,CAACc,MAAM,GAAGA,MAAM;AAC7B,IAAIO,aAAa,EAAEC,cAAc;AAEjC,IAAIx3F,MAAM,GAAG62F,MAAM,CAACX,MAAM,CAACl2F,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACy3F,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAAQ;EAC5D,IAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIJ,SAAS,CAACG,QAAQ,GAAG,KAAK,GAAGF,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFG,EAAE,CAACC,SAAS,GAAG,UAAS1oI,KAAK,EAAE;IAC7BkoI,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAItvI,IAAI,GAAG8rE,IAAI,CAAC1L,KAAK,CAACj5D,KAAK,CAACnH,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACoD,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIglD,OAAO,GAAG,KAAK;MACnBpoD,IAAI,CAAC8vI,MAAM,CAAC/iI,OAAO,CAAC,UAASgjI,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACrkH,MAAM,CAACskH,aAAa,EAAEJ,KAAK,CAAC78H,EAAE,CAAC;UAC9D,IAAI+8H,SAAS,EAAE;YACb7nF,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAIpoD,IAAI,CAAC8vI,MAAM,CAAC1uI,KAAK,CAAC,UAAS2uI,KAAK,EAAE;QACrD,OAAOA,KAAK,CAAC3sI,IAAI,KAAK,KAAK,IAAI2sI,KAAK,CAACK,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIjoF,OAAO,EAAE;QACXz9B,OAAO,CAAC5nB,KAAK,CAAC,CAAC;QAEf/C,IAAI,CAAC8vI,MAAM,CAAC/iI,OAAO,CAAC,UAAUgjI,KAAK,EAAE;UACnCO,QAAQ,CAACzkH,MAAM,CAACskH,aAAa,EAAEJ,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFT,cAAc,CAACviI,OAAO,CAAC,UAAU4tC,CAAC,EAAE;UAClC41F,YAAY,CAAC51F,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAI+0F,QAAQ,CAACc,MAAM,EAAE;QAAE;QAC5Bd,QAAQ,CAACc,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAIxwI,IAAI,CAACoD,IAAI,KAAK,QAAQ,EAAE;MAC1BwsI,EAAE,CAACzb,KAAK,CAAC,CAAC;MACVyb,EAAE,CAACa,OAAO,GAAG,YAAY;QACvBf,QAAQ,CAACc,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAIxwI,IAAI,CAACoD,IAAI,KAAK,gBAAgB,EAAE;MAClCunB,OAAO,CAACnR,GAAG,CAAC,2BAA2B,CAAC;MAExCk3H,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAI1wI,IAAI,CAACoD,IAAI,KAAK,OAAO,EAAE;MACzBunB,OAAO,CAACJ,KAAK,CAAC,eAAe,GAAGvqB,IAAI,CAACuqB,KAAK,CAACqhD,OAAO,GAAG,IAAI,GAAG5rE,IAAI,CAACuqB,KAAK,CAAC0W,KAAK,CAAC;MAE7EyvG,kBAAkB,CAAC,CAAC;MAEpB,IAAI/7C,OAAO,GAAGg8C,kBAAkB,CAAC3wI,IAAI,CAAC;MACtC02C,QAAQ,CAACwgC,IAAI,CAACx+B,WAAW,CAACi8C,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAAS+7C,kBAAkBA,CAAA,EAAG;EAC5B,IAAI/7C,OAAO,GAAGj+C,QAAQ,CAACkD,cAAc,CAACg1F,UAAU,CAAC;EACjD,IAAIj6C,OAAO,EAAE;IACXA,OAAO,CAACv0F,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAASuwI,kBAAkBA,CAAC3wI,IAAI,EAAE;EAChC,IAAI20F,OAAO,GAAGj+C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3Cg+C,OAAO,CAACzhF,EAAE,GAAG07H,UAAU;;EAEvB;EACA,IAAIhjE,OAAO,GAAGl1B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIi6F,UAAU,GAAGl6F,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC9Ci1B,OAAO,CAACilE,SAAS,GAAG7wI,IAAI,CAACuqB,KAAK,CAACqhD,OAAO;EACtCglE,UAAU,CAACC,SAAS,GAAG7wI,IAAI,CAACuqB,KAAK,CAAC0W,KAAK;EAEvC0zD,OAAO,CAACr0C,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAGsrB,OAAO,CAACtrB,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGswF,UAAU,CAACtwF,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAOq0C,OAAO;AAEhB;AAEA,SAASm8C,UAAUA,CAAC9C,MAAM,EAAE96H,EAAE,EAAE;EAC9B,IAAI69H,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAI71H,CAAC,EAAEkL,CAAC,EAAE4qH,GAAG;EAEb,KAAK91H,CAAC,IAAI41H,OAAO,EAAE;IACjB,KAAK1qH,CAAC,IAAI0qH,OAAO,CAAC51H,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvB81H,GAAG,GAAGF,OAAO,CAAC51H,CAAC,CAAC,CAAC,CAAC,CAAC,CAACkL,CAAC,CAAC;MACtB,IAAI4qH,GAAG,KAAK/9H,EAAE,IAAKhT,KAAK,CAACC,OAAO,CAAC8wI,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAAClyI,MAAM,GAAG,CAAC,CAAC,KAAKmU,EAAG,EAAE;QACpE89H,OAAO,CAAC/pI,IAAI,CAACkU,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAI6yH,MAAM,CAACl2F,MAAM,EAAE;IACjBk5F,OAAO,GAAGA,OAAO,CAAC3lI,MAAM,CAACylI,UAAU,CAAC9C,MAAM,CAACl2F,MAAM,EAAE5kC,EAAE,CAAC,CAAC;EACzD;EAEA,OAAO89H,OAAO;AAChB;AAEA,SAASV,QAAQA,CAACtC,MAAM,EAAE+B,KAAK,EAAE;EAC/B,IAAIgB,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAAChB,KAAK,CAAC78H,EAAE,CAAC,IAAI,CAAC86H,MAAM,CAACl2F,MAAM,EAAE;IACvC,IAAIj2C,EAAE,GAAG,IAAIqvI,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEnB,KAAK,CAACK,SAAS,CAACC,EAAE,CAAC;IACzEN,KAAK,CAACC,KAAK,GAAG,CAACe,OAAO,CAAChB,KAAK,CAAC78H,EAAE,CAAC;IAChC69H,OAAO,CAAChB,KAAK,CAAC78H,EAAE,CAAC,GAAG,CAACrR,EAAE,EAAEkuI,KAAK,CAACoB,IAAI,CAAC;EACtC,CAAC,MAAM,IAAInD,MAAM,CAACl2F,MAAM,EAAE;IACxBw4F,QAAQ,CAACtC,MAAM,CAACl2F,MAAM,EAAEi4F,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAAClC,MAAM,EAAE96H,EAAE,EAAE;EAClC,IAAI69H,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAAC79H,EAAE,CAAC,IAAI86H,MAAM,CAACl2F,MAAM,EAAE;IACjC,OAAOo4F,cAAc,CAAClC,MAAM,CAACl2F,MAAM,EAAE5kC,EAAE,CAAC;EAC1C;EAEA,IAAIm8H,aAAa,CAACn8H,EAAE,CAAC,EAAE;IACrB;EACF;EACAm8H,aAAa,CAACn8H,EAAE,CAAC,GAAG,IAAI;EAExB,IAAIk+H,MAAM,GAAGpD,MAAM,CAAC1/G,KAAK,CAACpb,EAAE,CAAC;EAE7Bo8H,cAAc,CAACroI,IAAI,CAAC,CAAC+mI,MAAM,EAAE96H,EAAE,CAAC,CAAC;EAEjC,IAAIk+H,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACnwI,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAO+xI,UAAU,CAACjlH,MAAM,CAACskH,aAAa,EAAEj9H,EAAE,CAAC,CAACusC,IAAI,CAAC,UAAUvsC,EAAE,EAAE;IAC7D,OAAOg9H,cAAc,CAACrkH,MAAM,CAACskH,aAAa,EAAEj9H,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASq9H,YAAYA,CAACvC,MAAM,EAAE96H,EAAE,EAAE;EAChC,IAAIk+H,MAAM,GAAGpD,MAAM,CAAC1/G,KAAK,CAACpb,EAAE,CAAC;EAC7B86H,MAAM,CAACiB,OAAO,GAAG,CAAC,CAAC;EACnB,IAAImC,MAAM,EAAE;IACVA,MAAM,CAACpC,GAAG,CAAChvI,IAAI,GAAGguI,MAAM,CAACiB,OAAO;EAClC;EAEA,IAAImC,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACG,iBAAiB,CAACpwI,MAAM,EAAE;IAC/DqyI,MAAM,CAACpC,GAAG,CAACG,iBAAiB,CAACpiI,OAAO,CAAC,UAAUskI,EAAE,EAAE;MACjDA,EAAE,CAACrD,MAAM,CAACiB,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOjB,MAAM,CAAC1/G,KAAK,CAACpb,EAAE,CAAC;EACvB86H,MAAM,CAAC96H,EAAE,CAAC;EAEVk+H,MAAM,GAAGpD,MAAM,CAAC1/G,KAAK,CAACpb,EAAE,CAAC;EACzB,IAAIk+H,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACnwI,MAAM,EAAE;IAC9DqyI,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACniI,OAAO,CAAC,UAAUskI,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"main.1f19ae8e.js","sourceRoot":"../public","sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).RBush=i()}(this,(function(){\"use strict\";function t(e,h,r=0,s=e.length-1,a=n){for(;s>r;){if(s-r>600){const i=s-r+1,n=h-r+1,o=Math.log(i),l=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*l*(i-l)/i)*(n-i/2<0?-1:1);t(e,h,Math.max(r,Math.floor(h-n*l/i+c)),Math.min(s,Math.floor(h+(i-n)*l/i+c)),a)}const n=e[h];let o=r,l=s;for(i(e,r,h),a(e[s],n)>0&&i(e,r,s);o<l;){for(i(e,o,l),o++,l--;a(e[o],n)<0;)o++;for(;a(e[l],n)>0;)l--}0===a(e[r],n)?i(e,r,l):(l++,i(e,l,s)),l<=h&&(r=l+1),h<=l&&(s=l-1)}}function i(t,i,n){const e=t[i];t[i]=t[n],t[n]=e}function n(t,i){return t<i?-1:t>i?1:0}function e(t,i,n){if(!n)return i.indexOf(t);for(let e=0;e<i.length;e++)if(n(t,i[e]))return e;return-1}function h(t,i){r(t,0,t.children.length,i,t)}function r(t,i,n,e,h){h||(h=d(null)),h.minX=1/0,h.minY=1/0,h.maxX=-1/0,h.maxY=-1/0;for(let r=i;r<n;r++){const i=t.children[r];s(h,t.leaf?e(i):i)}return h}function s(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function a(t,i){return t.minX-i.minX}function o(t,i){return t.minY-i.minY}function l(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function c(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){const n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),h=Math.min(t.maxX,i.maxX),r=Math.min(t.maxY,i.maxY);return Math.max(0,h-n)*Math.max(0,r-e)}function f(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function u(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function d(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function x(i,n,e,h,r){const s=[n,e];for(;s.length;){if((e=s.pop())-(n=s.pop())<=h)continue;const a=n+Math.ceil((e-n)/h/2)*h;t(i,a,n,e,r),s.push(n,a,a,e)}}return class{constructor(t=9){this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}all(){return this._all(this.data,[])}search(t){let i=this.data;const n=[];if(!u(t,i))return n;const e=this.toBBox,h=[];for(;i;){for(let r=0;r<i.children.length;r++){const s=i.children[r],a=i.leaf?e(s):s;u(t,a)&&(i.leaf?n.push(s):f(t,a)?this._all(s,n):h.push(s))}i=h.pop()}return n}collides(t){let i=this.data;if(!u(t,i))return!1;const n=[];for(;i;){for(let e=0;e<i.children.length;e++){const h=i.children[e],r=i.leaf?this.toBBox(h):h;if(u(t,r)){if(i.leaf||f(t,r))return!0;n.push(h)}}i=n.pop()}return!1}load(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return this}let i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){const t=this.data;this.data=i,i=t}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i;return this}insert(t){return t&&this._insert(t,this.data.height-1),this}clear(){return this.data=d([]),this}remove(t,i){if(!t)return this;let n=this.data;const h=this.toBBox(t),r=[],s=[];let a,o,l;for(;n||r.length;){if(n||(n=r.pop(),o=r[r.length-1],a=s.pop(),l=!0),n.leaf){const h=e(t,n.children,i);if(-1!==h)return n.children.splice(h,1),r.push(n),this._condense(r),this}l||n.leaf||!f(n,h)?o?(a++,n=o.children[a],l=!1):n=null:(r.push(n),s.push(a),a=0,o=n,n=n.children[0])}return this}toBBox(t){return t}compareMinX(t,i){return t.minX-i.minX}compareMinY(t,i){return t.minY-i.minY}toJSON(){return this.data}fromJSON(t){return this.data=t,this}_all(t,i){const n=[];for(;t;)t.leaf?i.push(...t.children):n.push(...t.children),t=n.pop();return i}_build(t,i,n,e){const r=n-i+1;let s,a=this._maxEntries;if(r<=a)return s=d(t.slice(i,n+1)),h(s,this.toBBox),s;e||(e=Math.ceil(Math.log(r)/Math.log(a)),a=Math.ceil(r/Math.pow(a,e-1))),s=d([]),s.leaf=!1,s.height=e;const o=Math.ceil(r/a),l=o*Math.ceil(Math.sqrt(a));x(t,i,n,l,this.compareMinX);for(let h=i;h<=n;h+=l){const i=Math.min(h+l-1,n);x(t,h,i,o,this.compareMinY);for(let n=h;n<=i;n+=o){const h=Math.min(n+o-1,i);s.children.push(this._build(t,n,h,e-1))}}return h(s,this.toBBox),s}_chooseSubtree(t,i,n,e){for(;e.push(i),!i.leaf&&e.length-1!==n;){let n,e=1/0,s=1/0;for(let a=0;a<i.children.length;a++){const o=i.children[a],c=l(o),m=(h=t,r=o,(Math.max(r.maxX,h.maxX)-Math.min(r.minX,h.minX))*(Math.max(r.maxY,h.maxY)-Math.min(r.minY,h.minY))-c);m<s?(s=m,e=c<e?c:e,n=o):m===s&&c<e&&(e=c,n=o)}i=n||i.children[0]}var h,r;return i}_insert(t,i,n){const e=n?t:this.toBBox(t),h=[],r=this._chooseSubtree(e,this.data,i,h);for(r.children.push(t),s(r,e);i>=0&&h[i].children.length>this._maxEntries;)this._split(h,i),i--;this._adjustParentBBoxes(e,h,i)}_split(t,i){const n=t[i],e=n.children.length,r=this._minEntries;this._chooseSplitAxis(n,r,e);const s=this._chooseSplitIndex(n,r,e),a=d(n.children.splice(s,n.children.length-s));a.height=n.height,a.leaf=n.leaf,h(n,this.toBBox),h(a,this.toBBox),i?t[i-1].children.push(a):this._splitRoot(n,a)}_splitRoot(t,i){this.data=d([t,i]),this.data.height=t.height+1,this.data.leaf=!1,h(this.data,this.toBBox)}_chooseSplitIndex(t,i,n){let e,h=1/0,s=1/0;for(let a=i;a<=n-i;a++){const i=r(t,0,a,this.toBBox),o=r(t,a,n,this.toBBox),c=m(i,o),f=l(i)+l(o);c<h?(h=c,e=a,s=f<s?f:s):c===h&&f<s&&(s=f,e=a)}return e||n-i}_chooseSplitAxis(t,i,n){const e=t.leaf?this.compareMinX:a,h=t.leaf?this.compareMinY:o;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,h)&&t.children.sort(e)}_allDistMargin(t,i,n,e){t.children.sort(e);const h=this.toBBox,a=r(t,0,i,h),o=r(t,n-i,n,h);let l=c(a)+c(o);for(let e=i;e<n-i;e++){const i=t.children[e];s(a,t.leaf?h(i):i),l+=c(a)}for(let e=n-i-1;e>=i;e--){const i=t.children[e];s(o,t.leaf?h(i):i),l+=c(o)}return l}_adjustParentBBoxes(t,i,n){for(let e=n;e>=0;e--)s(i[e],t)}_condense(t){for(let i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children,i.splice(i.indexOf(t[n]),1)):this.clear():h(t[n],this.toBBox)}}}));\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\nconst rgb = {\n\tname: 'rgb',\n\tmin: [0, 0, 0],\n\tmax: [255, 255, 255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n\nexport default rgb;\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nvar hsl = {\n\tname: 'hsl',\n\tmin: [0, 0, 0],\n\tmax: [360, 100, 100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function (hsl) {\n\t\tvar h = hsl[0] / 360, s = hsl[1] / 100, l = hsl[2] / 100, t1, t2, t3, rgb, val, i = 0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (; i < 3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t\t\t3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\t\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\nexport default (hsl);\n\n\n//extend rgb\nrgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tmin = Math.min(r, g, b),\n\t\tmax = Math.max(r, g, b),\n\t\tdelta = max - min,\n\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\t//FIXME h is possibly undefined\n\t//@ts-ignore\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nconst xyz = {\n\tname: 'xyz',\n\tmin: [0, 0, 0],\n\tchannel: ['X', 'Y', 'Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931'],\n\n\t// Whitepoint reference values with observer/illuminant\n\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\twhitepoint: {\n\t\t//1931 2°\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA: [109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100, 100, 100]\n\t\t},\n\n\t\t//1964  10°\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA: [111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100, 100, 100]\n\t\t}\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t// FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\n\nvar luv = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0, -134, -140],\n\tmax: [100, 224, 122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function (arg, i, o) {\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0, 0, 0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow((l + 16) / 116, 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\nexport default (luv);\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function (arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y / yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1 / 3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n// cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0, 0, 0],\n\tmax: [100, 100, 360],\n\n\tluv: function (luv) {\n\t\tvar l = luv[0],\n\t\t\tc = luv[1],\n\t\t\th = luv[2],\n\t\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function (arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default (lchuv);\n\nluv.lchuv = function (luv) {\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u * u + v * v);\n\tvar hr = Math.atan2(v, u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l, c, h]\n};\n\nxyz.lchuv = function (arg) {\n\treturn luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module ol/color\n */\nimport parseRgba from 'color-rgba';\nimport lchuv from 'color-space/lchuv.js';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\nimport Overlay from 'ol/Overlay';\nimport { toLonLat } from 'ol/proj';\n\n// Create map\nconst map = new Map({\n    target: 'map',\n    layers: [\n        new TileLayer({\n            source: new OSM()\n        })\n    ],\n    view: new View({\n        center: fromLonLat([0, 0]), // Default center\n        zoom: 2\n    })\n});\n\n// --- POINT OF INTEREST (POI) SETUP ---\nconst poiCoords = [5.134037, 52.080354]; // Example: Amsterdam center (lon, lat)\n\nconst poiFeature = new Feature({\n    geometry: new Point(fromLonLat(poiCoords))\n});\n\npoiFeature.setStyle(new Style({\n    image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',\n        scale: 0.05\n    })\n}));\n\nconst poiSource = new VectorSource({\n    features: [poiFeature]\n});\n\nconst poiLayer = new VectorLayer({\n    source: poiSource\n});\n\nmap.addLayer(poiLayer);\n\n// --- POPUP SETUP ---\nconst popupElement = document.createElement('div');\npopupElement.className = 'ol-popup';\npopupElement.style.background = 'white';\npopupElement.style.padding = '10px';\npopupElement.style.borderRadius = '8px';\npopupElement.style.boxShadow = '0 2px 8px rgba(0,0,0,0.3)';\npopupElement.style.position = 'absolute';\n\nconst popupOverlay = new Overlay({\n    element: popupElement,\n    positioning: 'bottom-center',\n    stopEvent: false,\n    offset: [0, -15],\n});\n\nmap.addOverlay(popupOverlay);\n\n// --- DISTANCE CHECK FUNCTION ---\nfunction getDistanceMeters(coord1, coord2) {\n    const [lon1, lat1] = coord1;\n    const [lon2, lat2] = coord2;\n\n    const R = 6371000; // Radius of the Earth in meters\n    const toRad = (x) => x * Math.PI / 180;\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a = Math.sin(dLat / 2) ** 2 +\n              Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n              Math.sin(dLon / 2) ** 2;\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c; // Distance in meters\n}\n\n// Create a vector source to store the user's location\nconst userLocationSource = new VectorSource();\nconst userLocationLayer = new VectorLayer({ source: userLocationSource });\nmap.addLayer(userLocationLayer);\n\nfunction updateUserLocation(coords) {\n    userLocationSource.clear();\n\n    const userLocation = new Feature({\n        geometry: new Point(fromLonLat(coords))\n    });\n\n    userLocation.setStyle(new Style({\n        image: new Icon({\n            src: 'https://cdn-icons-png.flaticon.com/512/447/447031.png',\n            scale: 0.05\n        })\n    }));\n\n    userLocationSource.addFeature(userLocation);\n\n    map.getView().animate({\n        center: fromLonLat(coords),\n        duration: 500\n    });\n\n    // Check distance to POI\n    const distance = getDistanceMeters(coords, poiCoords);\n    document.getElementById('info').innerHTML = `<span>distance: ${distance.toFixed(2)} meters</span>`\n    console.log(`Distance to POI: ${distance.toFixed(2)} meters`);\n\n    if (distance <= 10) {\n        popupElement.innerHTML = `\n            <strong>Point of Interest</strong><br>\n            You're within 10 meters! 🎉<br>\n            This is a cool place. 😎\n        `;\n        popupOverlay.setPosition(fromLonLat(poiCoords));\n    } else {\n        popupOverlay.setPosition(undefined); // Hide popup\n    }\n}\n\n// Watch the user's location continuously\nif (navigator.geolocation) {\n    navigator.geolocation.watchPosition(\n        (position) => {\n            const coords = [position.coords.longitude, position.coords.latitude];\n            console.log('Updated Location:', coords);\n\n            updateUserLocation(coords);\n        },\n        (error) => {\n            console.error('Error watching location:', error);\n        },\n        {\n            enableHighAccuracy: true, // More accurate location\n            maximumAge: 0, // No cached positions\n            timeout: 5000 // Timeout before error\n        }\n    );\n} else {\n    console.error('Geolocation is not supported by this browser.');\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}